
Klebot.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001e4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000c0a4  080001f0  080001f0  000101f0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000003ec  0800c298  0800c298  0001c298  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800c684  0800c684  0002023c  2**0
                  CONTENTS
  4 .ARM          00000008  0800c684  0800c684  0001c684  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800c68c  0800c68c  0002023c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800c68c  0800c68c  0001c68c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800c690  0800c690  0001c690  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000023c  20000000  0800c694  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000022cc  2000023c  0800c8d0  0002023c  2**2
                  ALLOC
 10 ._user_heap_stack 00001800  20002508  0800c8d0  00022508  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  0002023c  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00020265  2**0
                  CONTENTS, READONLY
 13 .debug_info   0001f64f  00000000  00000000  000202a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00004e46  00000000  00000000  0003f8f7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00001cc0  00000000  00000000  00044740  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00001640  00000000  00000000  00046400  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000247e2  00000000  00000000  00047a40  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0002381a  00000000  00000000  0006c222  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000cbb15  00000000  00000000  0008fa3c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  000089f0  00000000  00000000  0015b554  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000064  00000000  00000000  00163f44  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001f0 <__do_global_dtors_aux>:
 80001f0:	b510      	push	{r4, lr}
 80001f2:	4c05      	ldr	r4, [pc, #20]	; (8000208 <__do_global_dtors_aux+0x18>)
 80001f4:	7823      	ldrb	r3, [r4, #0]
 80001f6:	b933      	cbnz	r3, 8000206 <__do_global_dtors_aux+0x16>
 80001f8:	4b04      	ldr	r3, [pc, #16]	; (800020c <__do_global_dtors_aux+0x1c>)
 80001fa:	b113      	cbz	r3, 8000202 <__do_global_dtors_aux+0x12>
 80001fc:	4804      	ldr	r0, [pc, #16]	; (8000210 <__do_global_dtors_aux+0x20>)
 80001fe:	f3af 8000 	nop.w
 8000202:	2301      	movs	r3, #1
 8000204:	7023      	strb	r3, [r4, #0]
 8000206:	bd10      	pop	{r4, pc}
 8000208:	2000023c 	.word	0x2000023c
 800020c:	00000000 	.word	0x00000000
 8000210:	0800c27c 	.word	0x0800c27c

08000214 <frame_dummy>:
 8000214:	b508      	push	{r3, lr}
 8000216:	4b03      	ldr	r3, [pc, #12]	; (8000224 <frame_dummy+0x10>)
 8000218:	b11b      	cbz	r3, 8000222 <frame_dummy+0xe>
 800021a:	4903      	ldr	r1, [pc, #12]	; (8000228 <frame_dummy+0x14>)
 800021c:	4803      	ldr	r0, [pc, #12]	; (800022c <frame_dummy+0x18>)
 800021e:	f3af 8000 	nop.w
 8000222:	bd08      	pop	{r3, pc}
 8000224:	00000000 	.word	0x00000000
 8000228:	20000240 	.word	0x20000240
 800022c:	0800c27c 	.word	0x0800c27c

08000230 <strlen>:
 8000230:	4603      	mov	r3, r0
 8000232:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000236:	2a00      	cmp	r2, #0
 8000238:	d1fb      	bne.n	8000232 <strlen+0x2>
 800023a:	1a18      	subs	r0, r3, r0
 800023c:	3801      	subs	r0, #1
 800023e:	4770      	bx	lr

08000240 <__aeabi_drsub>:
 8000240:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000244:	e002      	b.n	800024c <__adddf3>
 8000246:	bf00      	nop

08000248 <__aeabi_dsub>:
 8000248:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800024c <__adddf3>:
 800024c:	b530      	push	{r4, r5, lr}
 800024e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000252:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000256:	ea94 0f05 	teq	r4, r5
 800025a:	bf08      	it	eq
 800025c:	ea90 0f02 	teqeq	r0, r2
 8000260:	bf1f      	itttt	ne
 8000262:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000266:	ea55 0c02 	orrsne.w	ip, r5, r2
 800026a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800026e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000272:	f000 80e2 	beq.w	800043a <__adddf3+0x1ee>
 8000276:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800027a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800027e:	bfb8      	it	lt
 8000280:	426d      	neglt	r5, r5
 8000282:	dd0c      	ble.n	800029e <__adddf3+0x52>
 8000284:	442c      	add	r4, r5
 8000286:	ea80 0202 	eor.w	r2, r0, r2
 800028a:	ea81 0303 	eor.w	r3, r1, r3
 800028e:	ea82 0000 	eor.w	r0, r2, r0
 8000292:	ea83 0101 	eor.w	r1, r3, r1
 8000296:	ea80 0202 	eor.w	r2, r0, r2
 800029a:	ea81 0303 	eor.w	r3, r1, r3
 800029e:	2d36      	cmp	r5, #54	; 0x36
 80002a0:	bf88      	it	hi
 80002a2:	bd30      	pophi	{r4, r5, pc}
 80002a4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002a8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002ac:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80002b0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002b4:	d002      	beq.n	80002bc <__adddf3+0x70>
 80002b6:	4240      	negs	r0, r0
 80002b8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002bc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 80002c0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80002c4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80002c8:	d002      	beq.n	80002d0 <__adddf3+0x84>
 80002ca:	4252      	negs	r2, r2
 80002cc:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80002d0:	ea94 0f05 	teq	r4, r5
 80002d4:	f000 80a7 	beq.w	8000426 <__adddf3+0x1da>
 80002d8:	f1a4 0401 	sub.w	r4, r4, #1
 80002dc:	f1d5 0e20 	rsbs	lr, r5, #32
 80002e0:	db0d      	blt.n	80002fe <__adddf3+0xb2>
 80002e2:	fa02 fc0e 	lsl.w	ip, r2, lr
 80002e6:	fa22 f205 	lsr.w	r2, r2, r5
 80002ea:	1880      	adds	r0, r0, r2
 80002ec:	f141 0100 	adc.w	r1, r1, #0
 80002f0:	fa03 f20e 	lsl.w	r2, r3, lr
 80002f4:	1880      	adds	r0, r0, r2
 80002f6:	fa43 f305 	asr.w	r3, r3, r5
 80002fa:	4159      	adcs	r1, r3
 80002fc:	e00e      	b.n	800031c <__adddf3+0xd0>
 80002fe:	f1a5 0520 	sub.w	r5, r5, #32
 8000302:	f10e 0e20 	add.w	lr, lr, #32
 8000306:	2a01      	cmp	r2, #1
 8000308:	fa03 fc0e 	lsl.w	ip, r3, lr
 800030c:	bf28      	it	cs
 800030e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000312:	fa43 f305 	asr.w	r3, r3, r5
 8000316:	18c0      	adds	r0, r0, r3
 8000318:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800031c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000320:	d507      	bpl.n	8000332 <__adddf3+0xe6>
 8000322:	f04f 0e00 	mov.w	lr, #0
 8000326:	f1dc 0c00 	rsbs	ip, ip, #0
 800032a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800032e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000332:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000336:	d31b      	bcc.n	8000370 <__adddf3+0x124>
 8000338:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800033c:	d30c      	bcc.n	8000358 <__adddf3+0x10c>
 800033e:	0849      	lsrs	r1, r1, #1
 8000340:	ea5f 0030 	movs.w	r0, r0, rrx
 8000344:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000348:	f104 0401 	add.w	r4, r4, #1
 800034c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000350:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000354:	f080 809a 	bcs.w	800048c <__adddf3+0x240>
 8000358:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800035c:	bf08      	it	eq
 800035e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000362:	f150 0000 	adcs.w	r0, r0, #0
 8000366:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800036a:	ea41 0105 	orr.w	r1, r1, r5
 800036e:	bd30      	pop	{r4, r5, pc}
 8000370:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000374:	4140      	adcs	r0, r0
 8000376:	eb41 0101 	adc.w	r1, r1, r1
 800037a:	3c01      	subs	r4, #1
 800037c:	bf28      	it	cs
 800037e:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8000382:	d2e9      	bcs.n	8000358 <__adddf3+0x10c>
 8000384:	f091 0f00 	teq	r1, #0
 8000388:	bf04      	itt	eq
 800038a:	4601      	moveq	r1, r0
 800038c:	2000      	moveq	r0, #0
 800038e:	fab1 f381 	clz	r3, r1
 8000392:	bf08      	it	eq
 8000394:	3320      	addeq	r3, #32
 8000396:	f1a3 030b 	sub.w	r3, r3, #11
 800039a:	f1b3 0220 	subs.w	r2, r3, #32
 800039e:	da0c      	bge.n	80003ba <__adddf3+0x16e>
 80003a0:	320c      	adds	r2, #12
 80003a2:	dd08      	ble.n	80003b6 <__adddf3+0x16a>
 80003a4:	f102 0c14 	add.w	ip, r2, #20
 80003a8:	f1c2 020c 	rsb	r2, r2, #12
 80003ac:	fa01 f00c 	lsl.w	r0, r1, ip
 80003b0:	fa21 f102 	lsr.w	r1, r1, r2
 80003b4:	e00c      	b.n	80003d0 <__adddf3+0x184>
 80003b6:	f102 0214 	add.w	r2, r2, #20
 80003ba:	bfd8      	it	le
 80003bc:	f1c2 0c20 	rsble	ip, r2, #32
 80003c0:	fa01 f102 	lsl.w	r1, r1, r2
 80003c4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80003c8:	bfdc      	itt	le
 80003ca:	ea41 010c 	orrle.w	r1, r1, ip
 80003ce:	4090      	lslle	r0, r2
 80003d0:	1ae4      	subs	r4, r4, r3
 80003d2:	bfa2      	ittt	ge
 80003d4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80003d8:	4329      	orrge	r1, r5
 80003da:	bd30      	popge	{r4, r5, pc}
 80003dc:	ea6f 0404 	mvn.w	r4, r4
 80003e0:	3c1f      	subs	r4, #31
 80003e2:	da1c      	bge.n	800041e <__adddf3+0x1d2>
 80003e4:	340c      	adds	r4, #12
 80003e6:	dc0e      	bgt.n	8000406 <__adddf3+0x1ba>
 80003e8:	f104 0414 	add.w	r4, r4, #20
 80003ec:	f1c4 0220 	rsb	r2, r4, #32
 80003f0:	fa20 f004 	lsr.w	r0, r0, r4
 80003f4:	fa01 f302 	lsl.w	r3, r1, r2
 80003f8:	ea40 0003 	orr.w	r0, r0, r3
 80003fc:	fa21 f304 	lsr.w	r3, r1, r4
 8000400:	ea45 0103 	orr.w	r1, r5, r3
 8000404:	bd30      	pop	{r4, r5, pc}
 8000406:	f1c4 040c 	rsb	r4, r4, #12
 800040a:	f1c4 0220 	rsb	r2, r4, #32
 800040e:	fa20 f002 	lsr.w	r0, r0, r2
 8000412:	fa01 f304 	lsl.w	r3, r1, r4
 8000416:	ea40 0003 	orr.w	r0, r0, r3
 800041a:	4629      	mov	r1, r5
 800041c:	bd30      	pop	{r4, r5, pc}
 800041e:	fa21 f004 	lsr.w	r0, r1, r4
 8000422:	4629      	mov	r1, r5
 8000424:	bd30      	pop	{r4, r5, pc}
 8000426:	f094 0f00 	teq	r4, #0
 800042a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800042e:	bf06      	itte	eq
 8000430:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000434:	3401      	addeq	r4, #1
 8000436:	3d01      	subne	r5, #1
 8000438:	e74e      	b.n	80002d8 <__adddf3+0x8c>
 800043a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800043e:	bf18      	it	ne
 8000440:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000444:	d029      	beq.n	800049a <__adddf3+0x24e>
 8000446:	ea94 0f05 	teq	r4, r5
 800044a:	bf08      	it	eq
 800044c:	ea90 0f02 	teqeq	r0, r2
 8000450:	d005      	beq.n	800045e <__adddf3+0x212>
 8000452:	ea54 0c00 	orrs.w	ip, r4, r0
 8000456:	bf04      	itt	eq
 8000458:	4619      	moveq	r1, r3
 800045a:	4610      	moveq	r0, r2
 800045c:	bd30      	pop	{r4, r5, pc}
 800045e:	ea91 0f03 	teq	r1, r3
 8000462:	bf1e      	ittt	ne
 8000464:	2100      	movne	r1, #0
 8000466:	2000      	movne	r0, #0
 8000468:	bd30      	popne	{r4, r5, pc}
 800046a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800046e:	d105      	bne.n	800047c <__adddf3+0x230>
 8000470:	0040      	lsls	r0, r0, #1
 8000472:	4149      	adcs	r1, r1
 8000474:	bf28      	it	cs
 8000476:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800047a:	bd30      	pop	{r4, r5, pc}
 800047c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000480:	bf3c      	itt	cc
 8000482:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000486:	bd30      	popcc	{r4, r5, pc}
 8000488:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800048c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000490:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000494:	f04f 0000 	mov.w	r0, #0
 8000498:	bd30      	pop	{r4, r5, pc}
 800049a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800049e:	bf1a      	itte	ne
 80004a0:	4619      	movne	r1, r3
 80004a2:	4610      	movne	r0, r2
 80004a4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004a8:	bf1c      	itt	ne
 80004aa:	460b      	movne	r3, r1
 80004ac:	4602      	movne	r2, r0
 80004ae:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004b2:	bf06      	itte	eq
 80004b4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004b8:	ea91 0f03 	teqeq	r1, r3
 80004bc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 80004c0:	bd30      	pop	{r4, r5, pc}
 80004c2:	bf00      	nop

080004c4 <__aeabi_ui2d>:
 80004c4:	f090 0f00 	teq	r0, #0
 80004c8:	bf04      	itt	eq
 80004ca:	2100      	moveq	r1, #0
 80004cc:	4770      	bxeq	lr
 80004ce:	b530      	push	{r4, r5, lr}
 80004d0:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80004d4:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80004d8:	f04f 0500 	mov.w	r5, #0
 80004dc:	f04f 0100 	mov.w	r1, #0
 80004e0:	e750      	b.n	8000384 <__adddf3+0x138>
 80004e2:	bf00      	nop

080004e4 <__aeabi_i2d>:
 80004e4:	f090 0f00 	teq	r0, #0
 80004e8:	bf04      	itt	eq
 80004ea:	2100      	moveq	r1, #0
 80004ec:	4770      	bxeq	lr
 80004ee:	b530      	push	{r4, r5, lr}
 80004f0:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80004f4:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80004f8:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 80004fc:	bf48      	it	mi
 80004fe:	4240      	negmi	r0, r0
 8000500:	f04f 0100 	mov.w	r1, #0
 8000504:	e73e      	b.n	8000384 <__adddf3+0x138>
 8000506:	bf00      	nop

08000508 <__aeabi_f2d>:
 8000508:	0042      	lsls	r2, r0, #1
 800050a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800050e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000512:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000516:	bf1f      	itttt	ne
 8000518:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800051c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000520:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000524:	4770      	bxne	lr
 8000526:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800052a:	bf08      	it	eq
 800052c:	4770      	bxeq	lr
 800052e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000532:	bf04      	itt	eq
 8000534:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000538:	4770      	bxeq	lr
 800053a:	b530      	push	{r4, r5, lr}
 800053c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000540:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000544:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000548:	e71c      	b.n	8000384 <__adddf3+0x138>
 800054a:	bf00      	nop

0800054c <__aeabi_ul2d>:
 800054c:	ea50 0201 	orrs.w	r2, r0, r1
 8000550:	bf08      	it	eq
 8000552:	4770      	bxeq	lr
 8000554:	b530      	push	{r4, r5, lr}
 8000556:	f04f 0500 	mov.w	r5, #0
 800055a:	e00a      	b.n	8000572 <__aeabi_l2d+0x16>

0800055c <__aeabi_l2d>:
 800055c:	ea50 0201 	orrs.w	r2, r0, r1
 8000560:	bf08      	it	eq
 8000562:	4770      	bxeq	lr
 8000564:	b530      	push	{r4, r5, lr}
 8000566:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 800056a:	d502      	bpl.n	8000572 <__aeabi_l2d+0x16>
 800056c:	4240      	negs	r0, r0
 800056e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000572:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000576:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800057a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800057e:	f43f aed8 	beq.w	8000332 <__adddf3+0xe6>
 8000582:	f04f 0203 	mov.w	r2, #3
 8000586:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800058a:	bf18      	it	ne
 800058c:	3203      	addne	r2, #3
 800058e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000592:	bf18      	it	ne
 8000594:	3203      	addne	r2, #3
 8000596:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800059a:	f1c2 0320 	rsb	r3, r2, #32
 800059e:	fa00 fc03 	lsl.w	ip, r0, r3
 80005a2:	fa20 f002 	lsr.w	r0, r0, r2
 80005a6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005aa:	ea40 000e 	orr.w	r0, r0, lr
 80005ae:	fa21 f102 	lsr.w	r1, r1, r2
 80005b2:	4414      	add	r4, r2
 80005b4:	e6bd      	b.n	8000332 <__adddf3+0xe6>
 80005b6:	bf00      	nop

080005b8 <__aeabi_dmul>:
 80005b8:	b570      	push	{r4, r5, r6, lr}
 80005ba:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80005be:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80005c2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80005c6:	bf1d      	ittte	ne
 80005c8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80005cc:	ea94 0f0c 	teqne	r4, ip
 80005d0:	ea95 0f0c 	teqne	r5, ip
 80005d4:	f000 f8de 	bleq	8000794 <__aeabi_dmul+0x1dc>
 80005d8:	442c      	add	r4, r5
 80005da:	ea81 0603 	eor.w	r6, r1, r3
 80005de:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80005e2:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80005e6:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80005ea:	bf18      	it	ne
 80005ec:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 80005f0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80005f4:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80005f8:	d038      	beq.n	800066c <__aeabi_dmul+0xb4>
 80005fa:	fba0 ce02 	umull	ip, lr, r0, r2
 80005fe:	f04f 0500 	mov.w	r5, #0
 8000602:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000606:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800060a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800060e:	f04f 0600 	mov.w	r6, #0
 8000612:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000616:	f09c 0f00 	teq	ip, #0
 800061a:	bf18      	it	ne
 800061c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000620:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000624:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000628:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800062c:	d204      	bcs.n	8000638 <__aeabi_dmul+0x80>
 800062e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000632:	416d      	adcs	r5, r5
 8000634:	eb46 0606 	adc.w	r6, r6, r6
 8000638:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800063c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000640:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000644:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000648:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800064c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000650:	bf88      	it	hi
 8000652:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000656:	d81e      	bhi.n	8000696 <__aeabi_dmul+0xde>
 8000658:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800065c:	bf08      	it	eq
 800065e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000662:	f150 0000 	adcs.w	r0, r0, #0
 8000666:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800066a:	bd70      	pop	{r4, r5, r6, pc}
 800066c:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000670:	ea46 0101 	orr.w	r1, r6, r1
 8000674:	ea40 0002 	orr.w	r0, r0, r2
 8000678:	ea81 0103 	eor.w	r1, r1, r3
 800067c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000680:	bfc2      	ittt	gt
 8000682:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000686:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800068a:	bd70      	popgt	{r4, r5, r6, pc}
 800068c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000690:	f04f 0e00 	mov.w	lr, #0
 8000694:	3c01      	subs	r4, #1
 8000696:	f300 80ab 	bgt.w	80007f0 <__aeabi_dmul+0x238>
 800069a:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800069e:	bfde      	ittt	le
 80006a0:	2000      	movle	r0, #0
 80006a2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006a6:	bd70      	pople	{r4, r5, r6, pc}
 80006a8:	f1c4 0400 	rsb	r4, r4, #0
 80006ac:	3c20      	subs	r4, #32
 80006ae:	da35      	bge.n	800071c <__aeabi_dmul+0x164>
 80006b0:	340c      	adds	r4, #12
 80006b2:	dc1b      	bgt.n	80006ec <__aeabi_dmul+0x134>
 80006b4:	f104 0414 	add.w	r4, r4, #20
 80006b8:	f1c4 0520 	rsb	r5, r4, #32
 80006bc:	fa00 f305 	lsl.w	r3, r0, r5
 80006c0:	fa20 f004 	lsr.w	r0, r0, r4
 80006c4:	fa01 f205 	lsl.w	r2, r1, r5
 80006c8:	ea40 0002 	orr.w	r0, r0, r2
 80006cc:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 80006d0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80006d4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006d8:	fa21 f604 	lsr.w	r6, r1, r4
 80006dc:	eb42 0106 	adc.w	r1, r2, r6
 80006e0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006e4:	bf08      	it	eq
 80006e6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f1c4 040c 	rsb	r4, r4, #12
 80006f0:	f1c4 0520 	rsb	r5, r4, #32
 80006f4:	fa00 f304 	lsl.w	r3, r0, r4
 80006f8:	fa20 f005 	lsr.w	r0, r0, r5
 80006fc:	fa01 f204 	lsl.w	r2, r1, r4
 8000700:	ea40 0002 	orr.w	r0, r0, r2
 8000704:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000708:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800070c:	f141 0100 	adc.w	r1, r1, #0
 8000710:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000714:	bf08      	it	eq
 8000716:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800071a:	bd70      	pop	{r4, r5, r6, pc}
 800071c:	f1c4 0520 	rsb	r5, r4, #32
 8000720:	fa00 f205 	lsl.w	r2, r0, r5
 8000724:	ea4e 0e02 	orr.w	lr, lr, r2
 8000728:	fa20 f304 	lsr.w	r3, r0, r4
 800072c:	fa01 f205 	lsl.w	r2, r1, r5
 8000730:	ea43 0302 	orr.w	r3, r3, r2
 8000734:	fa21 f004 	lsr.w	r0, r1, r4
 8000738:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800073c:	fa21 f204 	lsr.w	r2, r1, r4
 8000740:	ea20 0002 	bic.w	r0, r0, r2
 8000744:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000748:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800074c:	bf08      	it	eq
 800074e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000752:	bd70      	pop	{r4, r5, r6, pc}
 8000754:	f094 0f00 	teq	r4, #0
 8000758:	d10f      	bne.n	800077a <__aeabi_dmul+0x1c2>
 800075a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800075e:	0040      	lsls	r0, r0, #1
 8000760:	eb41 0101 	adc.w	r1, r1, r1
 8000764:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000768:	bf08      	it	eq
 800076a:	3c01      	subeq	r4, #1
 800076c:	d0f7      	beq.n	800075e <__aeabi_dmul+0x1a6>
 800076e:	ea41 0106 	orr.w	r1, r1, r6
 8000772:	f095 0f00 	teq	r5, #0
 8000776:	bf18      	it	ne
 8000778:	4770      	bxne	lr
 800077a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 800077e:	0052      	lsls	r2, r2, #1
 8000780:	eb43 0303 	adc.w	r3, r3, r3
 8000784:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000788:	bf08      	it	eq
 800078a:	3d01      	subeq	r5, #1
 800078c:	d0f7      	beq.n	800077e <__aeabi_dmul+0x1c6>
 800078e:	ea43 0306 	orr.w	r3, r3, r6
 8000792:	4770      	bx	lr
 8000794:	ea94 0f0c 	teq	r4, ip
 8000798:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800079c:	bf18      	it	ne
 800079e:	ea95 0f0c 	teqne	r5, ip
 80007a2:	d00c      	beq.n	80007be <__aeabi_dmul+0x206>
 80007a4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007a8:	bf18      	it	ne
 80007aa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007ae:	d1d1      	bne.n	8000754 <__aeabi_dmul+0x19c>
 80007b0:	ea81 0103 	eor.w	r1, r1, r3
 80007b4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007b8:	f04f 0000 	mov.w	r0, #0
 80007bc:	bd70      	pop	{r4, r5, r6, pc}
 80007be:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007c2:	bf06      	itte	eq
 80007c4:	4610      	moveq	r0, r2
 80007c6:	4619      	moveq	r1, r3
 80007c8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007cc:	d019      	beq.n	8000802 <__aeabi_dmul+0x24a>
 80007ce:	ea94 0f0c 	teq	r4, ip
 80007d2:	d102      	bne.n	80007da <__aeabi_dmul+0x222>
 80007d4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80007d8:	d113      	bne.n	8000802 <__aeabi_dmul+0x24a>
 80007da:	ea95 0f0c 	teq	r5, ip
 80007de:	d105      	bne.n	80007ec <__aeabi_dmul+0x234>
 80007e0:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80007e4:	bf1c      	itt	ne
 80007e6:	4610      	movne	r0, r2
 80007e8:	4619      	movne	r1, r3
 80007ea:	d10a      	bne.n	8000802 <__aeabi_dmul+0x24a>
 80007ec:	ea81 0103 	eor.w	r1, r1, r3
 80007f0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007f4:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80007f8:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80007fc:	f04f 0000 	mov.w	r0, #0
 8000800:	bd70      	pop	{r4, r5, r6, pc}
 8000802:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000806:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800080a:	bd70      	pop	{r4, r5, r6, pc}

0800080c <__aeabi_ddiv>:
 800080c:	b570      	push	{r4, r5, r6, lr}
 800080e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000812:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000816:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800081a:	bf1d      	ittte	ne
 800081c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000820:	ea94 0f0c 	teqne	r4, ip
 8000824:	ea95 0f0c 	teqne	r5, ip
 8000828:	f000 f8a7 	bleq	800097a <__aeabi_ddiv+0x16e>
 800082c:	eba4 0405 	sub.w	r4, r4, r5
 8000830:	ea81 0e03 	eor.w	lr, r1, r3
 8000834:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000838:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800083c:	f000 8088 	beq.w	8000950 <__aeabi_ddiv+0x144>
 8000840:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000844:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000848:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800084c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000850:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000854:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000858:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800085c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000860:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 8000864:	429d      	cmp	r5, r3
 8000866:	bf08      	it	eq
 8000868:	4296      	cmpeq	r6, r2
 800086a:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 800086e:	f504 7440 	add.w	r4, r4, #768	; 0x300
 8000872:	d202      	bcs.n	800087a <__aeabi_ddiv+0x6e>
 8000874:	085b      	lsrs	r3, r3, #1
 8000876:	ea4f 0232 	mov.w	r2, r2, rrx
 800087a:	1ab6      	subs	r6, r6, r2
 800087c:	eb65 0503 	sbc.w	r5, r5, r3
 8000880:	085b      	lsrs	r3, r3, #1
 8000882:	ea4f 0232 	mov.w	r2, r2, rrx
 8000886:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800088a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 800088e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000892:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000896:	bf22      	ittt	cs
 8000898:	1ab6      	subcs	r6, r6, r2
 800089a:	4675      	movcs	r5, lr
 800089c:	ea40 000c 	orrcs.w	r0, r0, ip
 80008a0:	085b      	lsrs	r3, r3, #1
 80008a2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008a6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008aa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ae:	bf22      	ittt	cs
 80008b0:	1ab6      	subcs	r6, r6, r2
 80008b2:	4675      	movcs	r5, lr
 80008b4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008b8:	085b      	lsrs	r3, r3, #1
 80008ba:	ea4f 0232 	mov.w	r2, r2, rrx
 80008be:	ebb6 0e02 	subs.w	lr, r6, r2
 80008c2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008c6:	bf22      	ittt	cs
 80008c8:	1ab6      	subcs	r6, r6, r2
 80008ca:	4675      	movcs	r5, lr
 80008cc:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80008d0:	085b      	lsrs	r3, r3, #1
 80008d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008d6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008da:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008de:	bf22      	ittt	cs
 80008e0:	1ab6      	subcs	r6, r6, r2
 80008e2:	4675      	movcs	r5, lr
 80008e4:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 80008e8:	ea55 0e06 	orrs.w	lr, r5, r6
 80008ec:	d018      	beq.n	8000920 <__aeabi_ddiv+0x114>
 80008ee:	ea4f 1505 	mov.w	r5, r5, lsl #4
 80008f2:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 80008f6:	ea4f 1606 	mov.w	r6, r6, lsl #4
 80008fa:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 80008fe:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000902:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000906:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800090a:	d1c0      	bne.n	800088e <__aeabi_ddiv+0x82>
 800090c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000910:	d10b      	bne.n	800092a <__aeabi_ddiv+0x11e>
 8000912:	ea41 0100 	orr.w	r1, r1, r0
 8000916:	f04f 0000 	mov.w	r0, #0
 800091a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800091e:	e7b6      	b.n	800088e <__aeabi_ddiv+0x82>
 8000920:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000924:	bf04      	itt	eq
 8000926:	4301      	orreq	r1, r0
 8000928:	2000      	moveq	r0, #0
 800092a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800092e:	bf88      	it	hi
 8000930:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000934:	f63f aeaf 	bhi.w	8000696 <__aeabi_dmul+0xde>
 8000938:	ebb5 0c03 	subs.w	ip, r5, r3
 800093c:	bf04      	itt	eq
 800093e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000942:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000946:	f150 0000 	adcs.w	r0, r0, #0
 800094a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800094e:	bd70      	pop	{r4, r5, r6, pc}
 8000950:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000954:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000958:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800095c:	bfc2      	ittt	gt
 800095e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000962:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000966:	bd70      	popgt	{r4, r5, r6, pc}
 8000968:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800096c:	f04f 0e00 	mov.w	lr, #0
 8000970:	3c01      	subs	r4, #1
 8000972:	e690      	b.n	8000696 <__aeabi_dmul+0xde>
 8000974:	ea45 0e06 	orr.w	lr, r5, r6
 8000978:	e68d      	b.n	8000696 <__aeabi_dmul+0xde>
 800097a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800097e:	ea94 0f0c 	teq	r4, ip
 8000982:	bf08      	it	eq
 8000984:	ea95 0f0c 	teqeq	r5, ip
 8000988:	f43f af3b 	beq.w	8000802 <__aeabi_dmul+0x24a>
 800098c:	ea94 0f0c 	teq	r4, ip
 8000990:	d10a      	bne.n	80009a8 <__aeabi_ddiv+0x19c>
 8000992:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000996:	f47f af34 	bne.w	8000802 <__aeabi_dmul+0x24a>
 800099a:	ea95 0f0c 	teq	r5, ip
 800099e:	f47f af25 	bne.w	80007ec <__aeabi_dmul+0x234>
 80009a2:	4610      	mov	r0, r2
 80009a4:	4619      	mov	r1, r3
 80009a6:	e72c      	b.n	8000802 <__aeabi_dmul+0x24a>
 80009a8:	ea95 0f0c 	teq	r5, ip
 80009ac:	d106      	bne.n	80009bc <__aeabi_ddiv+0x1b0>
 80009ae:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009b2:	f43f aefd 	beq.w	80007b0 <__aeabi_dmul+0x1f8>
 80009b6:	4610      	mov	r0, r2
 80009b8:	4619      	mov	r1, r3
 80009ba:	e722      	b.n	8000802 <__aeabi_dmul+0x24a>
 80009bc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80009c0:	bf18      	it	ne
 80009c2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80009c6:	f47f aec5 	bne.w	8000754 <__aeabi_dmul+0x19c>
 80009ca:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80009ce:	f47f af0d 	bne.w	80007ec <__aeabi_dmul+0x234>
 80009d2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80009d6:	f47f aeeb 	bne.w	80007b0 <__aeabi_dmul+0x1f8>
 80009da:	e712      	b.n	8000802 <__aeabi_dmul+0x24a>

080009dc <__gedf2>:
 80009dc:	f04f 3cff 	mov.w	ip, #4294967295
 80009e0:	e006      	b.n	80009f0 <__cmpdf2+0x4>
 80009e2:	bf00      	nop

080009e4 <__ledf2>:
 80009e4:	f04f 0c01 	mov.w	ip, #1
 80009e8:	e002      	b.n	80009f0 <__cmpdf2+0x4>
 80009ea:	bf00      	nop

080009ec <__cmpdf2>:
 80009ec:	f04f 0c01 	mov.w	ip, #1
 80009f0:	f84d cd04 	str.w	ip, [sp, #-4]!
 80009f4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80009f8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009fc:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a00:	bf18      	it	ne
 8000a02:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a06:	d01b      	beq.n	8000a40 <__cmpdf2+0x54>
 8000a08:	b001      	add	sp, #4
 8000a0a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a0e:	bf0c      	ite	eq
 8000a10:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a14:	ea91 0f03 	teqne	r1, r3
 8000a18:	bf02      	ittt	eq
 8000a1a:	ea90 0f02 	teqeq	r0, r2
 8000a1e:	2000      	moveq	r0, #0
 8000a20:	4770      	bxeq	lr
 8000a22:	f110 0f00 	cmn.w	r0, #0
 8000a26:	ea91 0f03 	teq	r1, r3
 8000a2a:	bf58      	it	pl
 8000a2c:	4299      	cmppl	r1, r3
 8000a2e:	bf08      	it	eq
 8000a30:	4290      	cmpeq	r0, r2
 8000a32:	bf2c      	ite	cs
 8000a34:	17d8      	asrcs	r0, r3, #31
 8000a36:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a3a:	f040 0001 	orr.w	r0, r0, #1
 8000a3e:	4770      	bx	lr
 8000a40:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a44:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a48:	d102      	bne.n	8000a50 <__cmpdf2+0x64>
 8000a4a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a4e:	d107      	bne.n	8000a60 <__cmpdf2+0x74>
 8000a50:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a54:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a58:	d1d6      	bne.n	8000a08 <__cmpdf2+0x1c>
 8000a5a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a5e:	d0d3      	beq.n	8000a08 <__cmpdf2+0x1c>
 8000a60:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000a64:	4770      	bx	lr
 8000a66:	bf00      	nop

08000a68 <__aeabi_cdrcmple>:
 8000a68:	4684      	mov	ip, r0
 8000a6a:	4610      	mov	r0, r2
 8000a6c:	4662      	mov	r2, ip
 8000a6e:	468c      	mov	ip, r1
 8000a70:	4619      	mov	r1, r3
 8000a72:	4663      	mov	r3, ip
 8000a74:	e000      	b.n	8000a78 <__aeabi_cdcmpeq>
 8000a76:	bf00      	nop

08000a78 <__aeabi_cdcmpeq>:
 8000a78:	b501      	push	{r0, lr}
 8000a7a:	f7ff ffb7 	bl	80009ec <__cmpdf2>
 8000a7e:	2800      	cmp	r0, #0
 8000a80:	bf48      	it	mi
 8000a82:	f110 0f00 	cmnmi.w	r0, #0
 8000a86:	bd01      	pop	{r0, pc}

08000a88 <__aeabi_dcmpeq>:
 8000a88:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a8c:	f7ff fff4 	bl	8000a78 <__aeabi_cdcmpeq>
 8000a90:	bf0c      	ite	eq
 8000a92:	2001      	moveq	r0, #1
 8000a94:	2000      	movne	r0, #0
 8000a96:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a9a:	bf00      	nop

08000a9c <__aeabi_dcmplt>:
 8000a9c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000aa0:	f7ff ffea 	bl	8000a78 <__aeabi_cdcmpeq>
 8000aa4:	bf34      	ite	cc
 8000aa6:	2001      	movcc	r0, #1
 8000aa8:	2000      	movcs	r0, #0
 8000aaa:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aae:	bf00      	nop

08000ab0 <__aeabi_dcmple>:
 8000ab0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ab4:	f7ff ffe0 	bl	8000a78 <__aeabi_cdcmpeq>
 8000ab8:	bf94      	ite	ls
 8000aba:	2001      	movls	r0, #1
 8000abc:	2000      	movhi	r0, #0
 8000abe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ac2:	bf00      	nop

08000ac4 <__aeabi_dcmpge>:
 8000ac4:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ac8:	f7ff ffce 	bl	8000a68 <__aeabi_cdrcmple>
 8000acc:	bf94      	ite	ls
 8000ace:	2001      	movls	r0, #1
 8000ad0:	2000      	movhi	r0, #0
 8000ad2:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ad6:	bf00      	nop

08000ad8 <__aeabi_dcmpgt>:
 8000ad8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000adc:	f7ff ffc4 	bl	8000a68 <__aeabi_cdrcmple>
 8000ae0:	bf34      	ite	cc
 8000ae2:	2001      	movcc	r0, #1
 8000ae4:	2000      	movcs	r0, #0
 8000ae6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aea:	bf00      	nop

08000aec <__aeabi_dcmpun>:
 8000aec:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000af0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000af4:	d102      	bne.n	8000afc <__aeabi_dcmpun+0x10>
 8000af6:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000afa:	d10a      	bne.n	8000b12 <__aeabi_dcmpun+0x26>
 8000afc:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b00:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b04:	d102      	bne.n	8000b0c <__aeabi_dcmpun+0x20>
 8000b06:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b0a:	d102      	bne.n	8000b12 <__aeabi_dcmpun+0x26>
 8000b0c:	f04f 0000 	mov.w	r0, #0
 8000b10:	4770      	bx	lr
 8000b12:	f04f 0001 	mov.w	r0, #1
 8000b16:	4770      	bx	lr

08000b18 <__aeabi_d2iz>:
 8000b18:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b1c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b20:	d215      	bcs.n	8000b4e <__aeabi_d2iz+0x36>
 8000b22:	d511      	bpl.n	8000b48 <__aeabi_d2iz+0x30>
 8000b24:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b28:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b2c:	d912      	bls.n	8000b54 <__aeabi_d2iz+0x3c>
 8000b2e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b32:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b36:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b3a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b3e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b42:	bf18      	it	ne
 8000b44:	4240      	negne	r0, r0
 8000b46:	4770      	bx	lr
 8000b48:	f04f 0000 	mov.w	r0, #0
 8000b4c:	4770      	bx	lr
 8000b4e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b52:	d105      	bne.n	8000b60 <__aeabi_d2iz+0x48>
 8000b54:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000b58:	bf08      	it	eq
 8000b5a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000b5e:	4770      	bx	lr
 8000b60:	f04f 0000 	mov.w	r0, #0
 8000b64:	4770      	bx	lr
 8000b66:	bf00      	nop

08000b68 <__aeabi_frsub>:
 8000b68:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 8000b6c:	e002      	b.n	8000b74 <__addsf3>
 8000b6e:	bf00      	nop

08000b70 <__aeabi_fsub>:
 8000b70:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08000b74 <__addsf3>:
 8000b74:	0042      	lsls	r2, r0, #1
 8000b76:	bf1f      	itttt	ne
 8000b78:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000b7c:	ea92 0f03 	teqne	r2, r3
 8000b80:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000b84:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000b88:	d06a      	beq.n	8000c60 <__addsf3+0xec>
 8000b8a:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000b8e:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000b92:	bfc1      	itttt	gt
 8000b94:	18d2      	addgt	r2, r2, r3
 8000b96:	4041      	eorgt	r1, r0
 8000b98:	4048      	eorgt	r0, r1
 8000b9a:	4041      	eorgt	r1, r0
 8000b9c:	bfb8      	it	lt
 8000b9e:	425b      	neglt	r3, r3
 8000ba0:	2b19      	cmp	r3, #25
 8000ba2:	bf88      	it	hi
 8000ba4:	4770      	bxhi	lr
 8000ba6:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8000baa:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000bae:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8000bb2:	bf18      	it	ne
 8000bb4:	4240      	negne	r0, r0
 8000bb6:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000bba:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8000bbe:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8000bc2:	bf18      	it	ne
 8000bc4:	4249      	negne	r1, r1
 8000bc6:	ea92 0f03 	teq	r2, r3
 8000bca:	d03f      	beq.n	8000c4c <__addsf3+0xd8>
 8000bcc:	f1a2 0201 	sub.w	r2, r2, #1
 8000bd0:	fa41 fc03 	asr.w	ip, r1, r3
 8000bd4:	eb10 000c 	adds.w	r0, r0, ip
 8000bd8:	f1c3 0320 	rsb	r3, r3, #32
 8000bdc:	fa01 f103 	lsl.w	r1, r1, r3
 8000be0:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000be4:	d502      	bpl.n	8000bec <__addsf3+0x78>
 8000be6:	4249      	negs	r1, r1
 8000be8:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000bec:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 8000bf0:	d313      	bcc.n	8000c1a <__addsf3+0xa6>
 8000bf2:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8000bf6:	d306      	bcc.n	8000c06 <__addsf3+0x92>
 8000bf8:	0840      	lsrs	r0, r0, #1
 8000bfa:	ea4f 0131 	mov.w	r1, r1, rrx
 8000bfe:	f102 0201 	add.w	r2, r2, #1
 8000c02:	2afe      	cmp	r2, #254	; 0xfe
 8000c04:	d251      	bcs.n	8000caa <__addsf3+0x136>
 8000c06:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 8000c0a:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000c0e:	bf08      	it	eq
 8000c10:	f020 0001 	biceq.w	r0, r0, #1
 8000c14:	ea40 0003 	orr.w	r0, r0, r3
 8000c18:	4770      	bx	lr
 8000c1a:	0049      	lsls	r1, r1, #1
 8000c1c:	eb40 0000 	adc.w	r0, r0, r0
 8000c20:	3a01      	subs	r2, #1
 8000c22:	bf28      	it	cs
 8000c24:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
 8000c28:	d2ed      	bcs.n	8000c06 <__addsf3+0x92>
 8000c2a:	fab0 fc80 	clz	ip, r0
 8000c2e:	f1ac 0c08 	sub.w	ip, ip, #8
 8000c32:	ebb2 020c 	subs.w	r2, r2, ip
 8000c36:	fa00 f00c 	lsl.w	r0, r0, ip
 8000c3a:	bfaa      	itet	ge
 8000c3c:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000c40:	4252      	neglt	r2, r2
 8000c42:	4318      	orrge	r0, r3
 8000c44:	bfbc      	itt	lt
 8000c46:	40d0      	lsrlt	r0, r2
 8000c48:	4318      	orrlt	r0, r3
 8000c4a:	4770      	bx	lr
 8000c4c:	f092 0f00 	teq	r2, #0
 8000c50:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8000c54:	bf06      	itte	eq
 8000c56:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 8000c5a:	3201      	addeq	r2, #1
 8000c5c:	3b01      	subne	r3, #1
 8000c5e:	e7b5      	b.n	8000bcc <__addsf3+0x58>
 8000c60:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000c64:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000c68:	bf18      	it	ne
 8000c6a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000c6e:	d021      	beq.n	8000cb4 <__addsf3+0x140>
 8000c70:	ea92 0f03 	teq	r2, r3
 8000c74:	d004      	beq.n	8000c80 <__addsf3+0x10c>
 8000c76:	f092 0f00 	teq	r2, #0
 8000c7a:	bf08      	it	eq
 8000c7c:	4608      	moveq	r0, r1
 8000c7e:	4770      	bx	lr
 8000c80:	ea90 0f01 	teq	r0, r1
 8000c84:	bf1c      	itt	ne
 8000c86:	2000      	movne	r0, #0
 8000c88:	4770      	bxne	lr
 8000c8a:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 8000c8e:	d104      	bne.n	8000c9a <__addsf3+0x126>
 8000c90:	0040      	lsls	r0, r0, #1
 8000c92:	bf28      	it	cs
 8000c94:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8000c98:	4770      	bx	lr
 8000c9a:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 8000c9e:	bf3c      	itt	cc
 8000ca0:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8000ca4:	4770      	bxcc	lr
 8000ca6:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000caa:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 8000cae:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000cb2:	4770      	bx	lr
 8000cb4:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000cb8:	bf16      	itet	ne
 8000cba:	4608      	movne	r0, r1
 8000cbc:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000cc0:	4601      	movne	r1, r0
 8000cc2:	0242      	lsls	r2, r0, #9
 8000cc4:	bf06      	itte	eq
 8000cc6:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000cca:	ea90 0f01 	teqeq	r0, r1
 8000cce:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 8000cd2:	4770      	bx	lr

08000cd4 <__aeabi_ui2f>:
 8000cd4:	f04f 0300 	mov.w	r3, #0
 8000cd8:	e004      	b.n	8000ce4 <__aeabi_i2f+0x8>
 8000cda:	bf00      	nop

08000cdc <__aeabi_i2f>:
 8000cdc:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 8000ce0:	bf48      	it	mi
 8000ce2:	4240      	negmi	r0, r0
 8000ce4:	ea5f 0c00 	movs.w	ip, r0
 8000ce8:	bf08      	it	eq
 8000cea:	4770      	bxeq	lr
 8000cec:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 8000cf0:	4601      	mov	r1, r0
 8000cf2:	f04f 0000 	mov.w	r0, #0
 8000cf6:	e01c      	b.n	8000d32 <__aeabi_l2f+0x2a>

08000cf8 <__aeabi_ul2f>:
 8000cf8:	ea50 0201 	orrs.w	r2, r0, r1
 8000cfc:	bf08      	it	eq
 8000cfe:	4770      	bxeq	lr
 8000d00:	f04f 0300 	mov.w	r3, #0
 8000d04:	e00a      	b.n	8000d1c <__aeabi_l2f+0x14>
 8000d06:	bf00      	nop

08000d08 <__aeabi_l2f>:
 8000d08:	ea50 0201 	orrs.w	r2, r0, r1
 8000d0c:	bf08      	it	eq
 8000d0e:	4770      	bxeq	lr
 8000d10:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 8000d14:	d502      	bpl.n	8000d1c <__aeabi_l2f+0x14>
 8000d16:	4240      	negs	r0, r0
 8000d18:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000d1c:	ea5f 0c01 	movs.w	ip, r1
 8000d20:	bf02      	ittt	eq
 8000d22:	4684      	moveq	ip, r0
 8000d24:	4601      	moveq	r1, r0
 8000d26:	2000      	moveq	r0, #0
 8000d28:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 8000d2c:	bf08      	it	eq
 8000d2e:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8000d32:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 8000d36:	fabc f28c 	clz	r2, ip
 8000d3a:	3a08      	subs	r2, #8
 8000d3c:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000d40:	db10      	blt.n	8000d64 <__aeabi_l2f+0x5c>
 8000d42:	fa01 fc02 	lsl.w	ip, r1, r2
 8000d46:	4463      	add	r3, ip
 8000d48:	fa00 fc02 	lsl.w	ip, r0, r2
 8000d4c:	f1c2 0220 	rsb	r2, r2, #32
 8000d50:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000d54:	fa20 f202 	lsr.w	r2, r0, r2
 8000d58:	eb43 0002 	adc.w	r0, r3, r2
 8000d5c:	bf08      	it	eq
 8000d5e:	f020 0001 	biceq.w	r0, r0, #1
 8000d62:	4770      	bx	lr
 8000d64:	f102 0220 	add.w	r2, r2, #32
 8000d68:	fa01 fc02 	lsl.w	ip, r1, r2
 8000d6c:	f1c2 0220 	rsb	r2, r2, #32
 8000d70:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000d74:	fa21 f202 	lsr.w	r2, r1, r2
 8000d78:	eb43 0002 	adc.w	r0, r3, r2
 8000d7c:	bf08      	it	eq
 8000d7e:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000d82:	4770      	bx	lr

08000d84 <__aeabi_fmul>:
 8000d84:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000d88:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000d8c:	bf1e      	ittt	ne
 8000d8e:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000d92:	ea92 0f0c 	teqne	r2, ip
 8000d96:	ea93 0f0c 	teqne	r3, ip
 8000d9a:	d06f      	beq.n	8000e7c <__aeabi_fmul+0xf8>
 8000d9c:	441a      	add	r2, r3
 8000d9e:	ea80 0c01 	eor.w	ip, r0, r1
 8000da2:	0240      	lsls	r0, r0, #9
 8000da4:	bf18      	it	ne
 8000da6:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8000daa:	d01e      	beq.n	8000dea <__aeabi_fmul+0x66>
 8000dac:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8000db0:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8000db4:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8000db8:	fba0 3101 	umull	r3, r1, r0, r1
 8000dbc:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8000dc0:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 8000dc4:	bf3e      	ittt	cc
 8000dc6:	0049      	lslcc	r1, r1, #1
 8000dc8:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8000dcc:	005b      	lslcc	r3, r3, #1
 8000dce:	ea40 0001 	orr.w	r0, r0, r1
 8000dd2:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 8000dd6:	2afd      	cmp	r2, #253	; 0xfd
 8000dd8:	d81d      	bhi.n	8000e16 <__aeabi_fmul+0x92>
 8000dda:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8000dde:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000de2:	bf08      	it	eq
 8000de4:	f020 0001 	biceq.w	r0, r0, #1
 8000de8:	4770      	bx	lr
 8000dea:	f090 0f00 	teq	r0, #0
 8000dee:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8000df2:	bf08      	it	eq
 8000df4:	0249      	lsleq	r1, r1, #9
 8000df6:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000dfa:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8000dfe:	3a7f      	subs	r2, #127	; 0x7f
 8000e00:	bfc2      	ittt	gt
 8000e02:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8000e06:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000e0a:	4770      	bxgt	lr
 8000e0c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000e10:	f04f 0300 	mov.w	r3, #0
 8000e14:	3a01      	subs	r2, #1
 8000e16:	dc5d      	bgt.n	8000ed4 <__aeabi_fmul+0x150>
 8000e18:	f112 0f19 	cmn.w	r2, #25
 8000e1c:	bfdc      	itt	le
 8000e1e:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 8000e22:	4770      	bxle	lr
 8000e24:	f1c2 0200 	rsb	r2, r2, #0
 8000e28:	0041      	lsls	r1, r0, #1
 8000e2a:	fa21 f102 	lsr.w	r1, r1, r2
 8000e2e:	f1c2 0220 	rsb	r2, r2, #32
 8000e32:	fa00 fc02 	lsl.w	ip, r0, r2
 8000e36:	ea5f 0031 	movs.w	r0, r1, rrx
 8000e3a:	f140 0000 	adc.w	r0, r0, #0
 8000e3e:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8000e42:	bf08      	it	eq
 8000e44:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000e48:	4770      	bx	lr
 8000e4a:	f092 0f00 	teq	r2, #0
 8000e4e:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000e52:	bf02      	ittt	eq
 8000e54:	0040      	lsleq	r0, r0, #1
 8000e56:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000e5a:	3a01      	subeq	r2, #1
 8000e5c:	d0f9      	beq.n	8000e52 <__aeabi_fmul+0xce>
 8000e5e:	ea40 000c 	orr.w	r0, r0, ip
 8000e62:	f093 0f00 	teq	r3, #0
 8000e66:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000e6a:	bf02      	ittt	eq
 8000e6c:	0049      	lsleq	r1, r1, #1
 8000e6e:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8000e72:	3b01      	subeq	r3, #1
 8000e74:	d0f9      	beq.n	8000e6a <__aeabi_fmul+0xe6>
 8000e76:	ea41 010c 	orr.w	r1, r1, ip
 8000e7a:	e78f      	b.n	8000d9c <__aeabi_fmul+0x18>
 8000e7c:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000e80:	ea92 0f0c 	teq	r2, ip
 8000e84:	bf18      	it	ne
 8000e86:	ea93 0f0c 	teqne	r3, ip
 8000e8a:	d00a      	beq.n	8000ea2 <__aeabi_fmul+0x11e>
 8000e8c:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8000e90:	bf18      	it	ne
 8000e92:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8000e96:	d1d8      	bne.n	8000e4a <__aeabi_fmul+0xc6>
 8000e98:	ea80 0001 	eor.w	r0, r0, r1
 8000e9c:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000ea0:	4770      	bx	lr
 8000ea2:	f090 0f00 	teq	r0, #0
 8000ea6:	bf17      	itett	ne
 8000ea8:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 8000eac:	4608      	moveq	r0, r1
 8000eae:	f091 0f00 	teqne	r1, #0
 8000eb2:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 8000eb6:	d014      	beq.n	8000ee2 <__aeabi_fmul+0x15e>
 8000eb8:	ea92 0f0c 	teq	r2, ip
 8000ebc:	d101      	bne.n	8000ec2 <__aeabi_fmul+0x13e>
 8000ebe:	0242      	lsls	r2, r0, #9
 8000ec0:	d10f      	bne.n	8000ee2 <__aeabi_fmul+0x15e>
 8000ec2:	ea93 0f0c 	teq	r3, ip
 8000ec6:	d103      	bne.n	8000ed0 <__aeabi_fmul+0x14c>
 8000ec8:	024b      	lsls	r3, r1, #9
 8000eca:	bf18      	it	ne
 8000ecc:	4608      	movne	r0, r1
 8000ece:	d108      	bne.n	8000ee2 <__aeabi_fmul+0x15e>
 8000ed0:	ea80 0001 	eor.w	r0, r0, r1
 8000ed4:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000ed8:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000edc:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000ee0:	4770      	bx	lr
 8000ee2:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000ee6:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 8000eea:	4770      	bx	lr

08000eec <__aeabi_fdiv>:
 8000eec:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000ef0:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000ef4:	bf1e      	ittt	ne
 8000ef6:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000efa:	ea92 0f0c 	teqne	r2, ip
 8000efe:	ea93 0f0c 	teqne	r3, ip
 8000f02:	d069      	beq.n	8000fd8 <__aeabi_fdiv+0xec>
 8000f04:	eba2 0203 	sub.w	r2, r2, r3
 8000f08:	ea80 0c01 	eor.w	ip, r0, r1
 8000f0c:	0249      	lsls	r1, r1, #9
 8000f0e:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8000f12:	d037      	beq.n	8000f84 <__aeabi_fdiv+0x98>
 8000f14:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8000f18:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8000f1c:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8000f20:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8000f24:	428b      	cmp	r3, r1
 8000f26:	bf38      	it	cc
 8000f28:	005b      	lslcc	r3, r3, #1
 8000f2a:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
 8000f2e:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
 8000f32:	428b      	cmp	r3, r1
 8000f34:	bf24      	itt	cs
 8000f36:	1a5b      	subcs	r3, r3, r1
 8000f38:	ea40 000c 	orrcs.w	r0, r0, ip
 8000f3c:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8000f40:	bf24      	itt	cs
 8000f42:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 8000f46:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000f4a:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 8000f4e:	bf24      	itt	cs
 8000f50:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8000f54:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000f58:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8000f5c:	bf24      	itt	cs
 8000f5e:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8000f62:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000f66:	011b      	lsls	r3, r3, #4
 8000f68:	bf18      	it	ne
 8000f6a:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 8000f6e:	d1e0      	bne.n	8000f32 <__aeabi_fdiv+0x46>
 8000f70:	2afd      	cmp	r2, #253	; 0xfd
 8000f72:	f63f af50 	bhi.w	8000e16 <__aeabi_fmul+0x92>
 8000f76:	428b      	cmp	r3, r1
 8000f78:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000f7c:	bf08      	it	eq
 8000f7e:	f020 0001 	biceq.w	r0, r0, #1
 8000f82:	4770      	bx	lr
 8000f84:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8000f88:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000f8c:	327f      	adds	r2, #127	; 0x7f
 8000f8e:	bfc2      	ittt	gt
 8000f90:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8000f94:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000f98:	4770      	bxgt	lr
 8000f9a:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000f9e:	f04f 0300 	mov.w	r3, #0
 8000fa2:	3a01      	subs	r2, #1
 8000fa4:	e737      	b.n	8000e16 <__aeabi_fmul+0x92>
 8000fa6:	f092 0f00 	teq	r2, #0
 8000faa:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000fae:	bf02      	ittt	eq
 8000fb0:	0040      	lsleq	r0, r0, #1
 8000fb2:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000fb6:	3a01      	subeq	r2, #1
 8000fb8:	d0f9      	beq.n	8000fae <__aeabi_fdiv+0xc2>
 8000fba:	ea40 000c 	orr.w	r0, r0, ip
 8000fbe:	f093 0f00 	teq	r3, #0
 8000fc2:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000fc6:	bf02      	ittt	eq
 8000fc8:	0049      	lsleq	r1, r1, #1
 8000fca:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8000fce:	3b01      	subeq	r3, #1
 8000fd0:	d0f9      	beq.n	8000fc6 <__aeabi_fdiv+0xda>
 8000fd2:	ea41 010c 	orr.w	r1, r1, ip
 8000fd6:	e795      	b.n	8000f04 <__aeabi_fdiv+0x18>
 8000fd8:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000fdc:	ea92 0f0c 	teq	r2, ip
 8000fe0:	d108      	bne.n	8000ff4 <__aeabi_fdiv+0x108>
 8000fe2:	0242      	lsls	r2, r0, #9
 8000fe4:	f47f af7d 	bne.w	8000ee2 <__aeabi_fmul+0x15e>
 8000fe8:	ea93 0f0c 	teq	r3, ip
 8000fec:	f47f af70 	bne.w	8000ed0 <__aeabi_fmul+0x14c>
 8000ff0:	4608      	mov	r0, r1
 8000ff2:	e776      	b.n	8000ee2 <__aeabi_fmul+0x15e>
 8000ff4:	ea93 0f0c 	teq	r3, ip
 8000ff8:	d104      	bne.n	8001004 <__aeabi_fdiv+0x118>
 8000ffa:	024b      	lsls	r3, r1, #9
 8000ffc:	f43f af4c 	beq.w	8000e98 <__aeabi_fmul+0x114>
 8001000:	4608      	mov	r0, r1
 8001002:	e76e      	b.n	8000ee2 <__aeabi_fmul+0x15e>
 8001004:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8001008:	bf18      	it	ne
 800100a:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 800100e:	d1ca      	bne.n	8000fa6 <__aeabi_fdiv+0xba>
 8001010:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
 8001014:	f47f af5c 	bne.w	8000ed0 <__aeabi_fmul+0x14c>
 8001018:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
 800101c:	f47f af3c 	bne.w	8000e98 <__aeabi_fmul+0x114>
 8001020:	e75f      	b.n	8000ee2 <__aeabi_fmul+0x15e>
 8001022:	bf00      	nop

08001024 <__gesf2>:
 8001024:	f04f 3cff 	mov.w	ip, #4294967295
 8001028:	e006      	b.n	8001038 <__cmpsf2+0x4>
 800102a:	bf00      	nop

0800102c <__lesf2>:
 800102c:	f04f 0c01 	mov.w	ip, #1
 8001030:	e002      	b.n	8001038 <__cmpsf2+0x4>
 8001032:	bf00      	nop

08001034 <__cmpsf2>:
 8001034:	f04f 0c01 	mov.w	ip, #1
 8001038:	f84d cd04 	str.w	ip, [sp, #-4]!
 800103c:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8001040:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8001044:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8001048:	bf18      	it	ne
 800104a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 800104e:	d011      	beq.n	8001074 <__cmpsf2+0x40>
 8001050:	b001      	add	sp, #4
 8001052:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 8001056:	bf18      	it	ne
 8001058:	ea90 0f01 	teqne	r0, r1
 800105c:	bf58      	it	pl
 800105e:	ebb2 0003 	subspl.w	r0, r2, r3
 8001062:	bf88      	it	hi
 8001064:	17c8      	asrhi	r0, r1, #31
 8001066:	bf38      	it	cc
 8001068:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 800106c:	bf18      	it	ne
 800106e:	f040 0001 	orrne.w	r0, r0, #1
 8001072:	4770      	bx	lr
 8001074:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8001078:	d102      	bne.n	8001080 <__cmpsf2+0x4c>
 800107a:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 800107e:	d105      	bne.n	800108c <__cmpsf2+0x58>
 8001080:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 8001084:	d1e4      	bne.n	8001050 <__cmpsf2+0x1c>
 8001086:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 800108a:	d0e1      	beq.n	8001050 <__cmpsf2+0x1c>
 800108c:	f85d 0b04 	ldr.w	r0, [sp], #4
 8001090:	4770      	bx	lr
 8001092:	bf00      	nop

08001094 <__aeabi_cfrcmple>:
 8001094:	4684      	mov	ip, r0
 8001096:	4608      	mov	r0, r1
 8001098:	4661      	mov	r1, ip
 800109a:	e7ff      	b.n	800109c <__aeabi_cfcmpeq>

0800109c <__aeabi_cfcmpeq>:
 800109c:	b50f      	push	{r0, r1, r2, r3, lr}
 800109e:	f7ff ffc9 	bl	8001034 <__cmpsf2>
 80010a2:	2800      	cmp	r0, #0
 80010a4:	bf48      	it	mi
 80010a6:	f110 0f00 	cmnmi.w	r0, #0
 80010aa:	bd0f      	pop	{r0, r1, r2, r3, pc}

080010ac <__aeabi_fcmpeq>:
 80010ac:	f84d ed08 	str.w	lr, [sp, #-8]!
 80010b0:	f7ff fff4 	bl	800109c <__aeabi_cfcmpeq>
 80010b4:	bf0c      	ite	eq
 80010b6:	2001      	moveq	r0, #1
 80010b8:	2000      	movne	r0, #0
 80010ba:	f85d fb08 	ldr.w	pc, [sp], #8
 80010be:	bf00      	nop

080010c0 <__aeabi_fcmplt>:
 80010c0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80010c4:	f7ff ffea 	bl	800109c <__aeabi_cfcmpeq>
 80010c8:	bf34      	ite	cc
 80010ca:	2001      	movcc	r0, #1
 80010cc:	2000      	movcs	r0, #0
 80010ce:	f85d fb08 	ldr.w	pc, [sp], #8
 80010d2:	bf00      	nop

080010d4 <__aeabi_fcmple>:
 80010d4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80010d8:	f7ff ffe0 	bl	800109c <__aeabi_cfcmpeq>
 80010dc:	bf94      	ite	ls
 80010de:	2001      	movls	r0, #1
 80010e0:	2000      	movhi	r0, #0
 80010e2:	f85d fb08 	ldr.w	pc, [sp], #8
 80010e6:	bf00      	nop

080010e8 <__aeabi_fcmpge>:
 80010e8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80010ec:	f7ff ffd2 	bl	8001094 <__aeabi_cfrcmple>
 80010f0:	bf94      	ite	ls
 80010f2:	2001      	movls	r0, #1
 80010f4:	2000      	movhi	r0, #0
 80010f6:	f85d fb08 	ldr.w	pc, [sp], #8
 80010fa:	bf00      	nop

080010fc <__aeabi_fcmpgt>:
 80010fc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8001100:	f7ff ffc8 	bl	8001094 <__aeabi_cfrcmple>
 8001104:	bf34      	ite	cc
 8001106:	2001      	movcc	r0, #1
 8001108:	2000      	movcs	r0, #0
 800110a:	f85d fb08 	ldr.w	pc, [sp], #8
 800110e:	bf00      	nop

08001110 <__aeabi_f2iz>:
 8001110:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8001114:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8001118:	d30f      	bcc.n	800113a <__aeabi_f2iz+0x2a>
 800111a:	f04f 039e 	mov.w	r3, #158	; 0x9e
 800111e:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8001122:	d90d      	bls.n	8001140 <__aeabi_f2iz+0x30>
 8001124:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8001128:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 800112c:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8001130:	fa23 f002 	lsr.w	r0, r3, r2
 8001134:	bf18      	it	ne
 8001136:	4240      	negne	r0, r0
 8001138:	4770      	bx	lr
 800113a:	f04f 0000 	mov.w	r0, #0
 800113e:	4770      	bx	lr
 8001140:	f112 0f61 	cmn.w	r2, #97	; 0x61
 8001144:	d101      	bne.n	800114a <__aeabi_f2iz+0x3a>
 8001146:	0242      	lsls	r2, r0, #9
 8001148:	d105      	bne.n	8001156 <__aeabi_f2iz+0x46>
 800114a:	f010 4000 	ands.w	r0, r0, #2147483648	; 0x80000000
 800114e:	bf08      	it	eq
 8001150:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8001154:	4770      	bx	lr
 8001156:	f04f 0000 	mov.w	r0, #0
 800115a:	4770      	bx	lr

0800115c <__aeabi_uldivmod>:
 800115c:	b953      	cbnz	r3, 8001174 <__aeabi_uldivmod+0x18>
 800115e:	b94a      	cbnz	r2, 8001174 <__aeabi_uldivmod+0x18>
 8001160:	2900      	cmp	r1, #0
 8001162:	bf08      	it	eq
 8001164:	2800      	cmpeq	r0, #0
 8001166:	bf1c      	itt	ne
 8001168:	f04f 31ff 	movne.w	r1, #4294967295
 800116c:	f04f 30ff 	movne.w	r0, #4294967295
 8001170:	f000 b972 	b.w	8001458 <__aeabi_idiv0>
 8001174:	f1ad 0c08 	sub.w	ip, sp, #8
 8001178:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 800117c:	f000 f806 	bl	800118c <__udivmoddi4>
 8001180:	f8dd e004 	ldr.w	lr, [sp, #4]
 8001184:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8001188:	b004      	add	sp, #16
 800118a:	4770      	bx	lr

0800118c <__udivmoddi4>:
 800118c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001190:	9e08      	ldr	r6, [sp, #32]
 8001192:	460d      	mov	r5, r1
 8001194:	4604      	mov	r4, r0
 8001196:	468e      	mov	lr, r1
 8001198:	2b00      	cmp	r3, #0
 800119a:	d14c      	bne.n	8001236 <__udivmoddi4+0xaa>
 800119c:	428a      	cmp	r2, r1
 800119e:	4694      	mov	ip, r2
 80011a0:	d967      	bls.n	8001272 <__udivmoddi4+0xe6>
 80011a2:	fab2 f382 	clz	r3, r2
 80011a6:	b153      	cbz	r3, 80011be <__udivmoddi4+0x32>
 80011a8:	fa02 fc03 	lsl.w	ip, r2, r3
 80011ac:	f1c3 0220 	rsb	r2, r3, #32
 80011b0:	fa01 fe03 	lsl.w	lr, r1, r3
 80011b4:	fa20 f202 	lsr.w	r2, r0, r2
 80011b8:	ea42 0e0e 	orr.w	lr, r2, lr
 80011bc:	409c      	lsls	r4, r3
 80011be:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80011c2:	fbbe f1f7 	udiv	r1, lr, r7
 80011c6:	fa1f f58c 	uxth.w	r5, ip
 80011ca:	fb07 ee11 	mls	lr, r7, r1, lr
 80011ce:	fb01 f005 	mul.w	r0, r1, r5
 80011d2:	0c22      	lsrs	r2, r4, #16
 80011d4:	ea42 420e 	orr.w	r2, r2, lr, lsl #16
 80011d8:	4290      	cmp	r0, r2
 80011da:	d90a      	bls.n	80011f2 <__udivmoddi4+0x66>
 80011dc:	eb1c 0202 	adds.w	r2, ip, r2
 80011e0:	f101 3eff 	add.w	lr, r1, #4294967295
 80011e4:	f080 8119 	bcs.w	800141a <__udivmoddi4+0x28e>
 80011e8:	4290      	cmp	r0, r2
 80011ea:	f240 8116 	bls.w	800141a <__udivmoddi4+0x28e>
 80011ee:	3902      	subs	r1, #2
 80011f0:	4462      	add	r2, ip
 80011f2:	1a12      	subs	r2, r2, r0
 80011f4:	fbb2 f0f7 	udiv	r0, r2, r7
 80011f8:	fb07 2210 	mls	r2, r7, r0, r2
 80011fc:	fb00 f505 	mul.w	r5, r0, r5
 8001200:	b2a4      	uxth	r4, r4
 8001202:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8001206:	42a5      	cmp	r5, r4
 8001208:	d90a      	bls.n	8001220 <__udivmoddi4+0x94>
 800120a:	eb1c 0404 	adds.w	r4, ip, r4
 800120e:	f100 32ff 	add.w	r2, r0, #4294967295
 8001212:	f080 8104 	bcs.w	800141e <__udivmoddi4+0x292>
 8001216:	42a5      	cmp	r5, r4
 8001218:	f240 8101 	bls.w	800141e <__udivmoddi4+0x292>
 800121c:	4464      	add	r4, ip
 800121e:	3802      	subs	r0, #2
 8001220:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8001224:	2100      	movs	r1, #0
 8001226:	1b64      	subs	r4, r4, r5
 8001228:	b11e      	cbz	r6, 8001232 <__udivmoddi4+0xa6>
 800122a:	40dc      	lsrs	r4, r3
 800122c:	2300      	movs	r3, #0
 800122e:	e9c6 4300 	strd	r4, r3, [r6]
 8001232:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001236:	428b      	cmp	r3, r1
 8001238:	d908      	bls.n	800124c <__udivmoddi4+0xc0>
 800123a:	2e00      	cmp	r6, #0
 800123c:	f000 80ea 	beq.w	8001414 <__udivmoddi4+0x288>
 8001240:	2100      	movs	r1, #0
 8001242:	e9c6 0500 	strd	r0, r5, [r6]
 8001246:	4608      	mov	r0, r1
 8001248:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800124c:	fab3 f183 	clz	r1, r3
 8001250:	2900      	cmp	r1, #0
 8001252:	d148      	bne.n	80012e6 <__udivmoddi4+0x15a>
 8001254:	42ab      	cmp	r3, r5
 8001256:	d302      	bcc.n	800125e <__udivmoddi4+0xd2>
 8001258:	4282      	cmp	r2, r0
 800125a:	f200 80f8 	bhi.w	800144e <__udivmoddi4+0x2c2>
 800125e:	1a84      	subs	r4, r0, r2
 8001260:	eb65 0203 	sbc.w	r2, r5, r3
 8001264:	2001      	movs	r0, #1
 8001266:	4696      	mov	lr, r2
 8001268:	2e00      	cmp	r6, #0
 800126a:	d0e2      	beq.n	8001232 <__udivmoddi4+0xa6>
 800126c:	e9c6 4e00 	strd	r4, lr, [r6]
 8001270:	e7df      	b.n	8001232 <__udivmoddi4+0xa6>
 8001272:	b902      	cbnz	r2, 8001276 <__udivmoddi4+0xea>
 8001274:	deff      	udf	#255	; 0xff
 8001276:	fab2 f382 	clz	r3, r2
 800127a:	2b00      	cmp	r3, #0
 800127c:	f040 808e 	bne.w	800139c <__udivmoddi4+0x210>
 8001280:	1a88      	subs	r0, r1, r2
 8001282:	2101      	movs	r1, #1
 8001284:	0c17      	lsrs	r7, r2, #16
 8001286:	fa1f fe82 	uxth.w	lr, r2
 800128a:	fbb0 f5f7 	udiv	r5, r0, r7
 800128e:	fb07 0015 	mls	r0, r7, r5, r0
 8001292:	0c22      	lsrs	r2, r4, #16
 8001294:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8001298:	fb0e f005 	mul.w	r0, lr, r5
 800129c:	4290      	cmp	r0, r2
 800129e:	d908      	bls.n	80012b2 <__udivmoddi4+0x126>
 80012a0:	eb1c 0202 	adds.w	r2, ip, r2
 80012a4:	f105 38ff 	add.w	r8, r5, #4294967295
 80012a8:	d202      	bcs.n	80012b0 <__udivmoddi4+0x124>
 80012aa:	4290      	cmp	r0, r2
 80012ac:	f200 80cc 	bhi.w	8001448 <__udivmoddi4+0x2bc>
 80012b0:	4645      	mov	r5, r8
 80012b2:	1a12      	subs	r2, r2, r0
 80012b4:	fbb2 f0f7 	udiv	r0, r2, r7
 80012b8:	fb07 2210 	mls	r2, r7, r0, r2
 80012bc:	fb0e fe00 	mul.w	lr, lr, r0
 80012c0:	b2a4      	uxth	r4, r4
 80012c2:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80012c6:	45a6      	cmp	lr, r4
 80012c8:	d908      	bls.n	80012dc <__udivmoddi4+0x150>
 80012ca:	eb1c 0404 	adds.w	r4, ip, r4
 80012ce:	f100 32ff 	add.w	r2, r0, #4294967295
 80012d2:	d202      	bcs.n	80012da <__udivmoddi4+0x14e>
 80012d4:	45a6      	cmp	lr, r4
 80012d6:	f200 80b4 	bhi.w	8001442 <__udivmoddi4+0x2b6>
 80012da:	4610      	mov	r0, r2
 80012dc:	eba4 040e 	sub.w	r4, r4, lr
 80012e0:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 80012e4:	e7a0      	b.n	8001228 <__udivmoddi4+0x9c>
 80012e6:	f1c1 0720 	rsb	r7, r1, #32
 80012ea:	408b      	lsls	r3, r1
 80012ec:	fa22 fc07 	lsr.w	ip, r2, r7
 80012f0:	ea4c 0c03 	orr.w	ip, ip, r3
 80012f4:	fa25 fa07 	lsr.w	sl, r5, r7
 80012f8:	ea4f 491c 	mov.w	r9, ip, lsr #16
 80012fc:	fbba f8f9 	udiv	r8, sl, r9
 8001300:	408d      	lsls	r5, r1
 8001302:	fa20 f307 	lsr.w	r3, r0, r7
 8001306:	fb09 aa18 	mls	sl, r9, r8, sl
 800130a:	fa1f fe8c 	uxth.w	lr, ip
 800130e:	432b      	orrs	r3, r5
 8001310:	fa00 f501 	lsl.w	r5, r0, r1
 8001314:	fb08 f00e 	mul.w	r0, r8, lr
 8001318:	0c1c      	lsrs	r4, r3, #16
 800131a:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 800131e:	42a0      	cmp	r0, r4
 8001320:	fa02 f201 	lsl.w	r2, r2, r1
 8001324:	d90b      	bls.n	800133e <__udivmoddi4+0x1b2>
 8001326:	eb1c 0404 	adds.w	r4, ip, r4
 800132a:	f108 3aff 	add.w	sl, r8, #4294967295
 800132e:	f080 8086 	bcs.w	800143e <__udivmoddi4+0x2b2>
 8001332:	42a0      	cmp	r0, r4
 8001334:	f240 8083 	bls.w	800143e <__udivmoddi4+0x2b2>
 8001338:	f1a8 0802 	sub.w	r8, r8, #2
 800133c:	4464      	add	r4, ip
 800133e:	1a24      	subs	r4, r4, r0
 8001340:	b298      	uxth	r0, r3
 8001342:	fbb4 f3f9 	udiv	r3, r4, r9
 8001346:	fb09 4413 	mls	r4, r9, r3, r4
 800134a:	fb03 fe0e 	mul.w	lr, r3, lr
 800134e:	ea40 4404 	orr.w	r4, r0, r4, lsl #16
 8001352:	45a6      	cmp	lr, r4
 8001354:	d908      	bls.n	8001368 <__udivmoddi4+0x1dc>
 8001356:	eb1c 0404 	adds.w	r4, ip, r4
 800135a:	f103 30ff 	add.w	r0, r3, #4294967295
 800135e:	d26a      	bcs.n	8001436 <__udivmoddi4+0x2aa>
 8001360:	45a6      	cmp	lr, r4
 8001362:	d968      	bls.n	8001436 <__udivmoddi4+0x2aa>
 8001364:	3b02      	subs	r3, #2
 8001366:	4464      	add	r4, ip
 8001368:	ea43 4008 	orr.w	r0, r3, r8, lsl #16
 800136c:	fba0 9302 	umull	r9, r3, r0, r2
 8001370:	eba4 040e 	sub.w	r4, r4, lr
 8001374:	429c      	cmp	r4, r3
 8001376:	46c8      	mov	r8, r9
 8001378:	469e      	mov	lr, r3
 800137a:	d354      	bcc.n	8001426 <__udivmoddi4+0x29a>
 800137c:	d051      	beq.n	8001422 <__udivmoddi4+0x296>
 800137e:	2e00      	cmp	r6, #0
 8001380:	d067      	beq.n	8001452 <__udivmoddi4+0x2c6>
 8001382:	ebb5 0308 	subs.w	r3, r5, r8
 8001386:	eb64 040e 	sbc.w	r4, r4, lr
 800138a:	40cb      	lsrs	r3, r1
 800138c:	fa04 f707 	lsl.w	r7, r4, r7
 8001390:	431f      	orrs	r7, r3
 8001392:	40cc      	lsrs	r4, r1
 8001394:	e9c6 7400 	strd	r7, r4, [r6]
 8001398:	2100      	movs	r1, #0
 800139a:	e74a      	b.n	8001232 <__udivmoddi4+0xa6>
 800139c:	fa02 fc03 	lsl.w	ip, r2, r3
 80013a0:	f1c3 0020 	rsb	r0, r3, #32
 80013a4:	40c1      	lsrs	r1, r0
 80013a6:	409d      	lsls	r5, r3
 80013a8:	fa24 f000 	lsr.w	r0, r4, r0
 80013ac:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80013b0:	4328      	orrs	r0, r5
 80013b2:	fbb1 f5f7 	udiv	r5, r1, r7
 80013b6:	fb07 1115 	mls	r1, r7, r5, r1
 80013ba:	fa1f fe8c 	uxth.w	lr, ip
 80013be:	0c02      	lsrs	r2, r0, #16
 80013c0:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80013c4:	fb05 f10e 	mul.w	r1, r5, lr
 80013c8:	4291      	cmp	r1, r2
 80013ca:	fa04 f403 	lsl.w	r4, r4, r3
 80013ce:	d908      	bls.n	80013e2 <__udivmoddi4+0x256>
 80013d0:	eb1c 0202 	adds.w	r2, ip, r2
 80013d4:	f105 38ff 	add.w	r8, r5, #4294967295
 80013d8:	d22f      	bcs.n	800143a <__udivmoddi4+0x2ae>
 80013da:	4291      	cmp	r1, r2
 80013dc:	d92d      	bls.n	800143a <__udivmoddi4+0x2ae>
 80013de:	3d02      	subs	r5, #2
 80013e0:	4462      	add	r2, ip
 80013e2:	1a52      	subs	r2, r2, r1
 80013e4:	fbb2 f1f7 	udiv	r1, r2, r7
 80013e8:	fb07 2211 	mls	r2, r7, r1, r2
 80013ec:	b280      	uxth	r0, r0
 80013ee:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 80013f2:	fb01 f20e 	mul.w	r2, r1, lr
 80013f6:	4282      	cmp	r2, r0
 80013f8:	d908      	bls.n	800140c <__udivmoddi4+0x280>
 80013fa:	eb1c 0000 	adds.w	r0, ip, r0
 80013fe:	f101 38ff 	add.w	r8, r1, #4294967295
 8001402:	d216      	bcs.n	8001432 <__udivmoddi4+0x2a6>
 8001404:	4282      	cmp	r2, r0
 8001406:	d914      	bls.n	8001432 <__udivmoddi4+0x2a6>
 8001408:	3902      	subs	r1, #2
 800140a:	4460      	add	r0, ip
 800140c:	1a80      	subs	r0, r0, r2
 800140e:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8001412:	e73a      	b.n	800128a <__udivmoddi4+0xfe>
 8001414:	4631      	mov	r1, r6
 8001416:	4630      	mov	r0, r6
 8001418:	e70b      	b.n	8001232 <__udivmoddi4+0xa6>
 800141a:	4671      	mov	r1, lr
 800141c:	e6e9      	b.n	80011f2 <__udivmoddi4+0x66>
 800141e:	4610      	mov	r0, r2
 8001420:	e6fe      	b.n	8001220 <__udivmoddi4+0x94>
 8001422:	454d      	cmp	r5, r9
 8001424:	d2ab      	bcs.n	800137e <__udivmoddi4+0x1f2>
 8001426:	ebb9 0802 	subs.w	r8, r9, r2
 800142a:	eb63 0e0c 	sbc.w	lr, r3, ip
 800142e:	3801      	subs	r0, #1
 8001430:	e7a5      	b.n	800137e <__udivmoddi4+0x1f2>
 8001432:	4641      	mov	r1, r8
 8001434:	e7ea      	b.n	800140c <__udivmoddi4+0x280>
 8001436:	4603      	mov	r3, r0
 8001438:	e796      	b.n	8001368 <__udivmoddi4+0x1dc>
 800143a:	4645      	mov	r5, r8
 800143c:	e7d1      	b.n	80013e2 <__udivmoddi4+0x256>
 800143e:	46d0      	mov	r8, sl
 8001440:	e77d      	b.n	800133e <__udivmoddi4+0x1b2>
 8001442:	4464      	add	r4, ip
 8001444:	3802      	subs	r0, #2
 8001446:	e749      	b.n	80012dc <__udivmoddi4+0x150>
 8001448:	3d02      	subs	r5, #2
 800144a:	4462      	add	r2, ip
 800144c:	e731      	b.n	80012b2 <__udivmoddi4+0x126>
 800144e:	4608      	mov	r0, r1
 8001450:	e70a      	b.n	8001268 <__udivmoddi4+0xdc>
 8001452:	4631      	mov	r1, r6
 8001454:	e6ed      	b.n	8001232 <__udivmoddi4+0xa6>
 8001456:	bf00      	nop

08001458 <__aeabi_idiv0>:
 8001458:	4770      	bx	lr
 800145a:	bf00      	nop

0800145c <FIRFilter_Init>:
 800145c:	b480      	push	{r7}
 800145e:	b085      	sub	sp, #20
 8001460:	af00      	add	r7, sp, #0
 8001462:	6078      	str	r0, [r7, #4]
 8001464:	2300      	movs	r3, #0
 8001466:	73fb      	strb	r3, [r7, #15]
 8001468:	e008      	b.n	800147c <FIRFilter_Init+0x20>
 800146a:	7bfa      	ldrb	r2, [r7, #15]
 800146c:	687b      	ldr	r3, [r7, #4]
 800146e:	f04f 0100 	mov.w	r1, #0
 8001472:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8001476:	7bfb      	ldrb	r3, [r7, #15]
 8001478:	3301      	adds	r3, #1
 800147a:	73fb      	strb	r3, [r7, #15]
 800147c:	7bfb      	ldrb	r3, [r7, #15]
 800147e:	2b18      	cmp	r3, #24
 8001480:	d9f3      	bls.n	800146a <FIRFilter_Init+0xe>
 8001482:	687b      	ldr	r3, [r7, #4]
 8001484:	2200      	movs	r2, #0
 8001486:	f883 2064 	strb.w	r2, [r3, #100]	; 0x64
 800148a:	687b      	ldr	r3, [r7, #4]
 800148c:	f04f 0200 	mov.w	r2, #0
 8001490:	669a      	str	r2, [r3, #104]	; 0x68
 8001492:	bf00      	nop
 8001494:	3714      	adds	r7, #20
 8001496:	46bd      	mov	sp, r7
 8001498:	bc80      	pop	{r7}
 800149a:	4770      	bx	lr

0800149c <FIRFilter_Update>:
 800149c:	b590      	push	{r4, r7, lr}
 800149e:	b085      	sub	sp, #20
 80014a0:	af00      	add	r7, sp, #0
 80014a2:	6078      	str	r0, [r7, #4]
 80014a4:	6039      	str	r1, [r7, #0]
 80014a6:	687b      	ldr	r3, [r7, #4]
 80014a8:	f893 3064 	ldrb.w	r3, [r3, #100]	; 0x64
 80014ac:	4619      	mov	r1, r3
 80014ae:	687b      	ldr	r3, [r7, #4]
 80014b0:	683a      	ldr	r2, [r7, #0]
 80014b2:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
 80014b6:	687b      	ldr	r3, [r7, #4]
 80014b8:	f893 3064 	ldrb.w	r3, [r3, #100]	; 0x64
 80014bc:	3301      	adds	r3, #1
 80014be:	b2da      	uxtb	r2, r3
 80014c0:	687b      	ldr	r3, [r7, #4]
 80014c2:	f883 2064 	strb.w	r2, [r3, #100]	; 0x64
 80014c6:	687b      	ldr	r3, [r7, #4]
 80014c8:	f893 3064 	ldrb.w	r3, [r3, #100]	; 0x64
 80014cc:	2b19      	cmp	r3, #25
 80014ce:	d103      	bne.n	80014d8 <FIRFilter_Update+0x3c>
 80014d0:	687b      	ldr	r3, [r7, #4]
 80014d2:	2200      	movs	r2, #0
 80014d4:	f883 2064 	strb.w	r2, [r3, #100]	; 0x64
 80014d8:	687b      	ldr	r3, [r7, #4]
 80014da:	f04f 0200 	mov.w	r2, #0
 80014de:	669a      	str	r2, [r3, #104]	; 0x68
 80014e0:	687b      	ldr	r3, [r7, #4]
 80014e2:	f893 3064 	ldrb.w	r3, [r3, #100]	; 0x64
 80014e6:	73fb      	strb	r3, [r7, #15]
 80014e8:	2300      	movs	r3, #0
 80014ea:	73bb      	strb	r3, [r7, #14]
 80014ec:	e021      	b.n	8001532 <FIRFilter_Update+0x96>
 80014ee:	7bfb      	ldrb	r3, [r7, #15]
 80014f0:	2b00      	cmp	r3, #0
 80014f2:	d003      	beq.n	80014fc <FIRFilter_Update+0x60>
 80014f4:	7bfb      	ldrb	r3, [r7, #15]
 80014f6:	3b01      	subs	r3, #1
 80014f8:	73fb      	strb	r3, [r7, #15]
 80014fa:	e001      	b.n	8001500 <FIRFilter_Update+0x64>
 80014fc:	2318      	movs	r3, #24
 80014fe:	73fb      	strb	r3, [r7, #15]
 8001500:	687b      	ldr	r3, [r7, #4]
 8001502:	6e9c      	ldr	r4, [r3, #104]	; 0x68
 8001504:	7bbb      	ldrb	r3, [r7, #14]
 8001506:	4a0f      	ldr	r2, [pc, #60]	; (8001544 <FIRFilter_Update+0xa8>)
 8001508:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800150c:	7bfa      	ldrb	r2, [r7, #15]
 800150e:	687b      	ldr	r3, [r7, #4]
 8001510:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001514:	4619      	mov	r1, r3
 8001516:	f7ff fc35 	bl	8000d84 <__aeabi_fmul>
 800151a:	4603      	mov	r3, r0
 800151c:	4619      	mov	r1, r3
 800151e:	4620      	mov	r0, r4
 8001520:	f7ff fb28 	bl	8000b74 <__addsf3>
 8001524:	4603      	mov	r3, r0
 8001526:	461a      	mov	r2, r3
 8001528:	687b      	ldr	r3, [r7, #4]
 800152a:	669a      	str	r2, [r3, #104]	; 0x68
 800152c:	7bbb      	ldrb	r3, [r7, #14]
 800152e:	3301      	adds	r3, #1
 8001530:	73bb      	strb	r3, [r7, #14]
 8001532:	7bbb      	ldrb	r3, [r7, #14]
 8001534:	2b18      	cmp	r3, #24
 8001536:	d9da      	bls.n	80014ee <FIRFilter_Update+0x52>
 8001538:	687b      	ldr	r3, [r7, #4]
 800153a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800153c:	4618      	mov	r0, r3
 800153e:	3714      	adds	r7, #20
 8001540:	46bd      	mov	sp, r7
 8001542:	bd90      	pop	{r4, r7, pc}
 8001544:	20000000 	.word	0x20000000

08001548 <PID_Update>:
 8001548:	b5b0      	push	{r4, r5, r7, lr}
 800154a:	b082      	sub	sp, #8
 800154c:	af00      	add	r7, sp, #0
 800154e:	6078      	str	r0, [r7, #4]
 8001550:	460b      	mov	r3, r1
 8001552:	807b      	strh	r3, [r7, #2]
 8001554:	4613      	mov	r3, r2
 8001556:	803b      	strh	r3, [r7, #0]
 8001558:	687b      	ldr	r3, [r7, #4]
 800155a:	685b      	ldr	r3, [r3, #4]
 800155c:	f04f 0100 	mov.w	r1, #0
 8001560:	4618      	mov	r0, r3
 8001562:	f7ff fdcb 	bl	80010fc <__aeabi_fcmpgt>
 8001566:	4603      	mov	r3, r0
 8001568:	2b00      	cmp	r3, #0
 800156a:	d006      	beq.n	800157a <PID_Update+0x32>
 800156c:	687b      	ldr	r3, [r7, #4]
 800156e:	691a      	ldr	r2, [r3, #16]
 8001570:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8001574:	441a      	add	r2, r3
 8001576:	687b      	ldr	r3, [r7, #4]
 8001578:	611a      	str	r2, [r3, #16]
 800157a:	687b      	ldr	r3, [r7, #4]
 800157c:	691a      	ldr	r2, [r3, #16]
 800157e:	687b      	ldr	r3, [r7, #4]
 8001580:	699b      	ldr	r3, [r3, #24]
 8001582:	429a      	cmp	r2, r3
 8001584:	dd04      	ble.n	8001590 <PID_Update+0x48>
 8001586:	687b      	ldr	r3, [r7, #4]
 8001588:	699a      	ldr	r2, [r3, #24]
 800158a:	687b      	ldr	r3, [r7, #4]
 800158c:	611a      	str	r2, [r3, #16]
 800158e:	e00b      	b.n	80015a8 <PID_Update+0x60>
 8001590:	687b      	ldr	r3, [r7, #4]
 8001592:	691a      	ldr	r2, [r3, #16]
 8001594:	687b      	ldr	r3, [r7, #4]
 8001596:	699b      	ldr	r3, [r3, #24]
 8001598:	425b      	negs	r3, r3
 800159a:	429a      	cmp	r2, r3
 800159c:	da04      	bge.n	80015a8 <PID_Update+0x60>
 800159e:	687b      	ldr	r3, [r7, #4]
 80015a0:	699b      	ldr	r3, [r3, #24]
 80015a2:	425a      	negs	r2, r3
 80015a4:	687b      	ldr	r3, [r7, #4]
 80015a6:	611a      	str	r2, [r3, #16]
 80015a8:	687b      	ldr	r3, [r7, #4]
 80015aa:	681c      	ldr	r4, [r3, #0]
 80015ac:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 80015b0:	4618      	mov	r0, r3
 80015b2:	f7ff fb93 	bl	8000cdc <__aeabi_i2f>
 80015b6:	4603      	mov	r3, r0
 80015b8:	4619      	mov	r1, r3
 80015ba:	4620      	mov	r0, r4
 80015bc:	f7ff fbe2 	bl	8000d84 <__aeabi_fmul>
 80015c0:	4603      	mov	r3, r0
 80015c2:	461d      	mov	r5, r3
 80015c4:	687b      	ldr	r3, [r7, #4]
 80015c6:	685c      	ldr	r4, [r3, #4]
 80015c8:	687b      	ldr	r3, [r7, #4]
 80015ca:	691b      	ldr	r3, [r3, #16]
 80015cc:	4618      	mov	r0, r3
 80015ce:	f7ff fb85 	bl	8000cdc <__aeabi_i2f>
 80015d2:	4603      	mov	r3, r0
 80015d4:	4619      	mov	r1, r3
 80015d6:	4620      	mov	r0, r4
 80015d8:	f7ff fbd4 	bl	8000d84 <__aeabi_fmul>
 80015dc:	4603      	mov	r3, r0
 80015de:	461c      	mov	r4, r3
 80015e0:	883b      	ldrh	r3, [r7, #0]
 80015e2:	4618      	mov	r0, r3
 80015e4:	f7ff fb7a 	bl	8000cdc <__aeabi_i2f>
 80015e8:	4603      	mov	r3, r0
 80015ea:	4619      	mov	r1, r3
 80015ec:	4620      	mov	r0, r4
 80015ee:	f7ff fc7d 	bl	8000eec <__aeabi_fdiv>
 80015f2:	4603      	mov	r3, r0
 80015f4:	4619      	mov	r1, r3
 80015f6:	4628      	mov	r0, r5
 80015f8:	f7ff fabc 	bl	8000b74 <__addsf3>
 80015fc:	4603      	mov	r3, r0
 80015fe:	461d      	mov	r5, r3
 8001600:	687b      	ldr	r3, [r7, #4]
 8001602:	689c      	ldr	r4, [r3, #8]
 8001604:	883b      	ldrh	r3, [r7, #0]
 8001606:	4618      	mov	r0, r3
 8001608:	f7ff fb68 	bl	8000cdc <__aeabi_i2f>
 800160c:	4603      	mov	r3, r0
 800160e:	4619      	mov	r1, r3
 8001610:	4620      	mov	r0, r4
 8001612:	f7ff fbb7 	bl	8000d84 <__aeabi_fmul>
 8001616:	4603      	mov	r3, r0
 8001618:	461c      	mov	r4, r3
 800161a:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800161e:	687a      	ldr	r2, [r7, #4]
 8001620:	f9b2 200c 	ldrsh.w	r2, [r2, #12]
 8001624:	1a9b      	subs	r3, r3, r2
 8001626:	4618      	mov	r0, r3
 8001628:	f7ff fb58 	bl	8000cdc <__aeabi_i2f>
 800162c:	4603      	mov	r3, r0
 800162e:	4619      	mov	r1, r3
 8001630:	4620      	mov	r0, r4
 8001632:	f7ff fba7 	bl	8000d84 <__aeabi_fmul>
 8001636:	4603      	mov	r3, r0
 8001638:	4619      	mov	r1, r3
 800163a:	4628      	mov	r0, r5
 800163c:	f7ff fa9a 	bl	8000b74 <__addsf3>
 8001640:	4603      	mov	r3, r0
 8001642:	4618      	mov	r0, r3
 8001644:	f7ff fd64 	bl	8001110 <__aeabi_f2iz>
 8001648:	4603      	mov	r3, r0
 800164a:	b21a      	sxth	r2, r3
 800164c:	687b      	ldr	r3, [r7, #4]
 800164e:	829a      	strh	r2, [r3, #20]
 8001650:	687b      	ldr	r3, [r7, #4]
 8001652:	f9b3 2014 	ldrsh.w	r2, [r3, #20]
 8001656:	687b      	ldr	r3, [r7, #4]
 8001658:	f9b3 301c 	ldrsh.w	r3, [r3, #28]
 800165c:	429a      	cmp	r2, r3
 800165e:	db05      	blt.n	800166c <PID_Update+0x124>
 8001660:	687b      	ldr	r3, [r7, #4]
 8001662:	f9b3 201c 	ldrsh.w	r2, [r3, #28]
 8001666:	687b      	ldr	r3, [r7, #4]
 8001668:	829a      	strh	r2, [r3, #20]
 800166a:	e012      	b.n	8001692 <PID_Update+0x14a>
 800166c:	687b      	ldr	r3, [r7, #4]
 800166e:	f9b3 3014 	ldrsh.w	r3, [r3, #20]
 8001672:	461a      	mov	r2, r3
 8001674:	687b      	ldr	r3, [r7, #4]
 8001676:	f9b3 301c 	ldrsh.w	r3, [r3, #28]
 800167a:	425b      	negs	r3, r3
 800167c:	429a      	cmp	r2, r3
 800167e:	dc08      	bgt.n	8001692 <PID_Update+0x14a>
 8001680:	687b      	ldr	r3, [r7, #4]
 8001682:	f9b3 301c 	ldrsh.w	r3, [r3, #28]
 8001686:	b29b      	uxth	r3, r3
 8001688:	425b      	negs	r3, r3
 800168a:	b29b      	uxth	r3, r3
 800168c:	b21a      	sxth	r2, r3
 800168e:	687b      	ldr	r3, [r7, #4]
 8001690:	829a      	strh	r2, [r3, #20]
 8001692:	687b      	ldr	r3, [r7, #4]
 8001694:	887a      	ldrh	r2, [r7, #2]
 8001696:	819a      	strh	r2, [r3, #12]
 8001698:	687b      	ldr	r3, [r7, #4]
 800169a:	f9b3 3014 	ldrsh.w	r3, [r3, #20]
 800169e:	4618      	mov	r0, r3
 80016a0:	3708      	adds	r7, #8
 80016a2:	46bd      	mov	sp, r7
 80016a4:	bdb0      	pop	{r4, r5, r7, pc}

080016a6 <DRV8836_Init>:
 */
#include "drv8836.h"
#include "tim.h"

void DRV8836_Init(DRV8836_t *ic, TIM_HandleTypeDef *htim, uint16_t a_forward_channel, uint16_t a_reverse_channel, uint16_t b_forward_channel, uint16_t b_reverse_channel)
{
 80016a6:	b580      	push	{r7, lr}
 80016a8:	b084      	sub	sp, #16
 80016aa:	af00      	add	r7, sp, #0
 80016ac:	60f8      	str	r0, [r7, #12]
 80016ae:	60b9      	str	r1, [r7, #8]
 80016b0:	4611      	mov	r1, r2
 80016b2:	461a      	mov	r2, r3
 80016b4:	460b      	mov	r3, r1
 80016b6:	80fb      	strh	r3, [r7, #6]
 80016b8:	4613      	mov	r3, r2
 80016ba:	80bb      	strh	r3, [r7, #4]
	ic->drv_htim = htim;
 80016bc:	68fb      	ldr	r3, [r7, #12]
 80016be:	68ba      	ldr	r2, [r7, #8]
 80016c0:	605a      	str	r2, [r3, #4]
	ic->a_forward_channel = a_forward_channel;
 80016c2:	68fb      	ldr	r3, [r7, #12]
 80016c4:	88fa      	ldrh	r2, [r7, #6]
 80016c6:	811a      	strh	r2, [r3, #8]
	ic->a_reverse_channel = a_reverse_channel;
 80016c8:	68fb      	ldr	r3, [r7, #12]
 80016ca:	88ba      	ldrh	r2, [r7, #4]
 80016cc:	815a      	strh	r2, [r3, #10]
	ic->b_forward_channel = b_forward_channel;
 80016ce:	68fb      	ldr	r3, [r7, #12]
 80016d0:	8b3a      	ldrh	r2, [r7, #24]
 80016d2:	819a      	strh	r2, [r3, #12]
	ic->b_reverse_channel = b_reverse_channel;
 80016d4:	68fb      	ldr	r3, [r7, #12]
 80016d6:	8bba      	ldrh	r2, [r7, #28]
 80016d8:	81da      	strh	r2, [r3, #14]
	HAL_TIM_PWM_Start(ic->drv_htim, ic->a_forward_channel);
 80016da:	68fb      	ldr	r3, [r7, #12]
 80016dc:	685a      	ldr	r2, [r3, #4]
 80016de:	68fb      	ldr	r3, [r7, #12]
 80016e0:	891b      	ldrh	r3, [r3, #8]
 80016e2:	4619      	mov	r1, r3
 80016e4:	4610      	mov	r0, r2
 80016e6:	f004 f90b 	bl	8005900 <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(ic->drv_htim, ic->a_reverse_channel);
 80016ea:	68fb      	ldr	r3, [r7, #12]
 80016ec:	685a      	ldr	r2, [r3, #4]
 80016ee:	68fb      	ldr	r3, [r7, #12]
 80016f0:	895b      	ldrh	r3, [r3, #10]
 80016f2:	4619      	mov	r1, r3
 80016f4:	4610      	mov	r0, r2
 80016f6:	f004 f903 	bl	8005900 <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(ic->drv_htim, ic->b_forward_channel);
 80016fa:	68fb      	ldr	r3, [r7, #12]
 80016fc:	685a      	ldr	r2, [r3, #4]
 80016fe:	68fb      	ldr	r3, [r7, #12]
 8001700:	899b      	ldrh	r3, [r3, #12]
 8001702:	4619      	mov	r1, r3
 8001704:	4610      	mov	r0, r2
 8001706:	f004 f8fb 	bl	8005900 <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(ic->drv_htim, ic->b_reverse_channel);
 800170a:	68fb      	ldr	r3, [r7, #12]
 800170c:	685a      	ldr	r2, [r3, #4]
 800170e:	68fb      	ldr	r3, [r7, #12]
 8001710:	89db      	ldrh	r3, [r3, #14]
 8001712:	4619      	mov	r1, r3
 8001714:	4610      	mov	r0, r2
 8001716:	f004 f8f3 	bl	8005900 <HAL_TIM_PWM_Start>
	__HAL_TIM_SET_COMPARE(ic->drv_htim, a_forward_channel, 0);
 800171a:	88fb      	ldrh	r3, [r7, #6]
 800171c:	2b00      	cmp	r3, #0
 800171e:	d105      	bne.n	800172c <DRV8836_Init+0x86>
 8001720:	68fb      	ldr	r3, [r7, #12]
 8001722:	685b      	ldr	r3, [r3, #4]
 8001724:	681b      	ldr	r3, [r3, #0]
 8001726:	2200      	movs	r2, #0
 8001728:	635a      	str	r2, [r3, #52]	; 0x34
 800172a:	e016      	b.n	800175a <DRV8836_Init+0xb4>
 800172c:	88fb      	ldrh	r3, [r7, #6]
 800172e:	2b04      	cmp	r3, #4
 8001730:	d105      	bne.n	800173e <DRV8836_Init+0x98>
 8001732:	68fb      	ldr	r3, [r7, #12]
 8001734:	685b      	ldr	r3, [r3, #4]
 8001736:	681a      	ldr	r2, [r3, #0]
 8001738:	2300      	movs	r3, #0
 800173a:	6393      	str	r3, [r2, #56]	; 0x38
 800173c:	e00d      	b.n	800175a <DRV8836_Init+0xb4>
 800173e:	88fb      	ldrh	r3, [r7, #6]
 8001740:	2b08      	cmp	r3, #8
 8001742:	d105      	bne.n	8001750 <DRV8836_Init+0xaa>
 8001744:	68fb      	ldr	r3, [r7, #12]
 8001746:	685b      	ldr	r3, [r3, #4]
 8001748:	681a      	ldr	r2, [r3, #0]
 800174a:	2300      	movs	r3, #0
 800174c:	63d3      	str	r3, [r2, #60]	; 0x3c
 800174e:	e004      	b.n	800175a <DRV8836_Init+0xb4>
 8001750:	68fb      	ldr	r3, [r7, #12]
 8001752:	685b      	ldr	r3, [r3, #4]
 8001754:	681a      	ldr	r2, [r3, #0]
 8001756:	2300      	movs	r3, #0
 8001758:	6413      	str	r3, [r2, #64]	; 0x40
	__HAL_TIM_SET_COMPARE(ic->drv_htim, a_reverse_channel, 0);
 800175a:	88bb      	ldrh	r3, [r7, #4]
 800175c:	2b00      	cmp	r3, #0
 800175e:	d105      	bne.n	800176c <DRV8836_Init+0xc6>
 8001760:	68fb      	ldr	r3, [r7, #12]
 8001762:	685b      	ldr	r3, [r3, #4]
 8001764:	681b      	ldr	r3, [r3, #0]
 8001766:	2200      	movs	r2, #0
 8001768:	635a      	str	r2, [r3, #52]	; 0x34
 800176a:	e016      	b.n	800179a <DRV8836_Init+0xf4>
 800176c:	88bb      	ldrh	r3, [r7, #4]
 800176e:	2b04      	cmp	r3, #4
 8001770:	d105      	bne.n	800177e <DRV8836_Init+0xd8>
 8001772:	68fb      	ldr	r3, [r7, #12]
 8001774:	685b      	ldr	r3, [r3, #4]
 8001776:	681a      	ldr	r2, [r3, #0]
 8001778:	2300      	movs	r3, #0
 800177a:	6393      	str	r3, [r2, #56]	; 0x38
 800177c:	e00d      	b.n	800179a <DRV8836_Init+0xf4>
 800177e:	88bb      	ldrh	r3, [r7, #4]
 8001780:	2b08      	cmp	r3, #8
 8001782:	d105      	bne.n	8001790 <DRV8836_Init+0xea>
 8001784:	68fb      	ldr	r3, [r7, #12]
 8001786:	685b      	ldr	r3, [r3, #4]
 8001788:	681a      	ldr	r2, [r3, #0]
 800178a:	2300      	movs	r3, #0
 800178c:	63d3      	str	r3, [r2, #60]	; 0x3c
 800178e:	e004      	b.n	800179a <DRV8836_Init+0xf4>
 8001790:	68fb      	ldr	r3, [r7, #12]
 8001792:	685b      	ldr	r3, [r3, #4]
 8001794:	681a      	ldr	r2, [r3, #0]
 8001796:	2300      	movs	r3, #0
 8001798:	6413      	str	r3, [r2, #64]	; 0x40
	__HAL_TIM_SET_COMPARE(ic->drv_htim, b_forward_channel, 0);
 800179a:	8b3b      	ldrh	r3, [r7, #24]
 800179c:	2b00      	cmp	r3, #0
 800179e:	d105      	bne.n	80017ac <DRV8836_Init+0x106>
 80017a0:	68fb      	ldr	r3, [r7, #12]
 80017a2:	685b      	ldr	r3, [r3, #4]
 80017a4:	681b      	ldr	r3, [r3, #0]
 80017a6:	2200      	movs	r2, #0
 80017a8:	635a      	str	r2, [r3, #52]	; 0x34
 80017aa:	e016      	b.n	80017da <DRV8836_Init+0x134>
 80017ac:	8b3b      	ldrh	r3, [r7, #24]
 80017ae:	2b04      	cmp	r3, #4
 80017b0:	d105      	bne.n	80017be <DRV8836_Init+0x118>
 80017b2:	68fb      	ldr	r3, [r7, #12]
 80017b4:	685b      	ldr	r3, [r3, #4]
 80017b6:	681a      	ldr	r2, [r3, #0]
 80017b8:	2300      	movs	r3, #0
 80017ba:	6393      	str	r3, [r2, #56]	; 0x38
 80017bc:	e00d      	b.n	80017da <DRV8836_Init+0x134>
 80017be:	8b3b      	ldrh	r3, [r7, #24]
 80017c0:	2b08      	cmp	r3, #8
 80017c2:	d105      	bne.n	80017d0 <DRV8836_Init+0x12a>
 80017c4:	68fb      	ldr	r3, [r7, #12]
 80017c6:	685b      	ldr	r3, [r3, #4]
 80017c8:	681a      	ldr	r2, [r3, #0]
 80017ca:	2300      	movs	r3, #0
 80017cc:	63d3      	str	r3, [r2, #60]	; 0x3c
 80017ce:	e004      	b.n	80017da <DRV8836_Init+0x134>
 80017d0:	68fb      	ldr	r3, [r7, #12]
 80017d2:	685b      	ldr	r3, [r3, #4]
 80017d4:	681a      	ldr	r2, [r3, #0]
 80017d6:	2300      	movs	r3, #0
 80017d8:	6413      	str	r3, [r2, #64]	; 0x40
	__HAL_TIM_SET_COMPARE(ic->drv_htim, b_reverse_channel, 0);
 80017da:	8bbb      	ldrh	r3, [r7, #28]
 80017dc:	2b00      	cmp	r3, #0
 80017de:	d105      	bne.n	80017ec <DRV8836_Init+0x146>
 80017e0:	68fb      	ldr	r3, [r7, #12]
 80017e2:	685b      	ldr	r3, [r3, #4]
 80017e4:	681b      	ldr	r3, [r3, #0]
 80017e6:	2200      	movs	r2, #0
 80017e8:	635a      	str	r2, [r3, #52]	; 0x34
}
 80017ea:	e016      	b.n	800181a <DRV8836_Init+0x174>
	__HAL_TIM_SET_COMPARE(ic->drv_htim, b_reverse_channel, 0);
 80017ec:	8bbb      	ldrh	r3, [r7, #28]
 80017ee:	2b04      	cmp	r3, #4
 80017f0:	d105      	bne.n	80017fe <DRV8836_Init+0x158>
 80017f2:	68fb      	ldr	r3, [r7, #12]
 80017f4:	685b      	ldr	r3, [r3, #4]
 80017f6:	681a      	ldr	r2, [r3, #0]
 80017f8:	2300      	movs	r3, #0
 80017fa:	6393      	str	r3, [r2, #56]	; 0x38
}
 80017fc:	e00d      	b.n	800181a <DRV8836_Init+0x174>
	__HAL_TIM_SET_COMPARE(ic->drv_htim, b_reverse_channel, 0);
 80017fe:	8bbb      	ldrh	r3, [r7, #28]
 8001800:	2b08      	cmp	r3, #8
 8001802:	d105      	bne.n	8001810 <DRV8836_Init+0x16a>
 8001804:	68fb      	ldr	r3, [r7, #12]
 8001806:	685b      	ldr	r3, [r3, #4]
 8001808:	681a      	ldr	r2, [r3, #0]
 800180a:	2300      	movs	r3, #0
 800180c:	63d3      	str	r3, [r2, #60]	; 0x3c
}
 800180e:	e004      	b.n	800181a <DRV8836_Init+0x174>
	__HAL_TIM_SET_COMPARE(ic->drv_htim, b_reverse_channel, 0);
 8001810:	68fb      	ldr	r3, [r7, #12]
 8001812:	685b      	ldr	r3, [r3, #4]
 8001814:	681a      	ldr	r2, [r3, #0]
 8001816:	2300      	movs	r3, #0
 8001818:	6413      	str	r3, [r2, #64]	; 0x40
}
 800181a:	bf00      	nop
 800181c:	3710      	adds	r7, #16
 800181e:	46bd      	mov	sp, r7
 8001820:	bd80      	pop	{r7, pc}
	...

08001824 <DRV8836_SetMotor>:

DRV8836_Error_t DRV8836_SetMotor(DRV8836_t *ic, DRV8836_Output_t output, DRV8836_Direction_t direction, uint16_t speed)
{
 8001824:	b480      	push	{r7}
 8001826:	b087      	sub	sp, #28
 8001828:	af00      	add	r7, sp, #0
 800182a:	6078      	str	r0, [r7, #4]
 800182c:	4608      	mov	r0, r1
 800182e:	4611      	mov	r1, r2
 8001830:	461a      	mov	r2, r3
 8001832:	4603      	mov	r3, r0
 8001834:	70fb      	strb	r3, [r7, #3]
 8001836:	460b      	mov	r3, r1
 8001838:	70bb      	strb	r3, [r7, #2]
 800183a:	4613      	mov	r3, r2
 800183c:	803b      	strh	r3, [r7, #0]
	DRV8836_Direction_t *TargetDirection;
	uint16_t *TargetSpeed;
	uint16_t TargetForwardChannel;
	uint16_t TargetReverseChannel;

	if(speed > ic->drv_htim->Instance->ARR) //check if pwm value fit the counter period range
 800183e:	883a      	ldrh	r2, [r7, #0]
 8001840:	687b      	ldr	r3, [r7, #4]
 8001842:	685b      	ldr	r3, [r3, #4]
 8001844:	681b      	ldr	r3, [r3, #0]
 8001846:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001848:	429a      	cmp	r2, r3
 800184a:	d901      	bls.n	8001850 <DRV8836_SetMotor+0x2c>
	{
		return DRV8836_ERROR;
 800184c:	2301      	movs	r3, #1
 800184e:	e14e      	b.n	8001aee <DRV8836_SetMotor+0x2ca>
	}

	if(MOTOR_A == output)
 8001850:	78fb      	ldrb	r3, [r7, #3]
 8001852:	2b00      	cmp	r3, #0
 8001854:	d10c      	bne.n	8001870 <DRV8836_SetMotor+0x4c>
	{
		TargetForwardChannel = ic->a_forward_channel;
 8001856:	687b      	ldr	r3, [r7, #4]
 8001858:	891b      	ldrh	r3, [r3, #8]
 800185a:	81fb      	strh	r3, [r7, #14]
		TargetReverseChannel = ic->a_reverse_channel;
 800185c:	687b      	ldr	r3, [r7, #4]
 800185e:	895b      	ldrh	r3, [r3, #10]
 8001860:	81bb      	strh	r3, [r7, #12]
		TargetSpeed = &(ic->a_speed);
 8001862:	687b      	ldr	r3, [r7, #4]
 8001864:	3310      	adds	r3, #16
 8001866:	613b      	str	r3, [r7, #16]
		TargetDirection = &(ic->a_direction);			//TODO: test here
 8001868:	687b      	ldr	r3, [r7, #4]
 800186a:	3314      	adds	r3, #20
 800186c:	617b      	str	r3, [r7, #20]
 800186e:	e011      	b.n	8001894 <DRV8836_SetMotor+0x70>
	}
	else if(MOTOR_B == output)
 8001870:	78fb      	ldrb	r3, [r7, #3]
 8001872:	2b01      	cmp	r3, #1
 8001874:	d10c      	bne.n	8001890 <DRV8836_SetMotor+0x6c>
	{
		TargetForwardChannel = ic->b_forward_channel;
 8001876:	687b      	ldr	r3, [r7, #4]
 8001878:	899b      	ldrh	r3, [r3, #12]
 800187a:	81fb      	strh	r3, [r7, #14]
		TargetReverseChannel = ic->b_reverse_channel;
 800187c:	687b      	ldr	r3, [r7, #4]
 800187e:	89db      	ldrh	r3, [r3, #14]
 8001880:	81bb      	strh	r3, [r7, #12]
		TargetSpeed = &(ic->b_speed);
 8001882:	687b      	ldr	r3, [r7, #4]
 8001884:	3312      	adds	r3, #18
 8001886:	613b      	str	r3, [r7, #16]
		TargetDirection = &(ic->b_direction);
 8001888:	687b      	ldr	r3, [r7, #4]
 800188a:	3315      	adds	r3, #21
 800188c:	617b      	str	r3, [r7, #20]
 800188e:	e001      	b.n	8001894 <DRV8836_SetMotor+0x70>
	}
	else
	{
		return DRV8836_ERROR;
 8001890:	2301      	movs	r3, #1
 8001892:	e12c      	b.n	8001aee <DRV8836_SetMotor+0x2ca>
	}

	switch(direction)
 8001894:	78bb      	ldrb	r3, [r7, #2]
 8001896:	2b03      	cmp	r3, #3
 8001898:	f200 8120 	bhi.w	8001adc <DRV8836_SetMotor+0x2b8>
 800189c:	a201      	add	r2, pc, #4	; (adr r2, 80018a4 <DRV8836_SetMotor+0x80>)
 800189e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80018a2:	bf00      	nop
 80018a4:	080018b5 	.word	0x080018b5
 80018a8:	08001937 	.word	0x08001937
 80018ac:	080019b9 	.word	0x080019b9
 80018b0:	08001a3b 	.word	0x08001a3b
	{
	case Coast:
		__HAL_TIM_SET_COMPARE(ic->drv_htim, TargetForwardChannel, 0);
 80018b4:	89fb      	ldrh	r3, [r7, #14]
 80018b6:	2b00      	cmp	r3, #0
 80018b8:	d105      	bne.n	80018c6 <DRV8836_SetMotor+0xa2>
 80018ba:	687b      	ldr	r3, [r7, #4]
 80018bc:	685b      	ldr	r3, [r3, #4]
 80018be:	681b      	ldr	r3, [r3, #0]
 80018c0:	2200      	movs	r2, #0
 80018c2:	635a      	str	r2, [r3, #52]	; 0x34
 80018c4:	e016      	b.n	80018f4 <DRV8836_SetMotor+0xd0>
 80018c6:	89fb      	ldrh	r3, [r7, #14]
 80018c8:	2b04      	cmp	r3, #4
 80018ca:	d105      	bne.n	80018d8 <DRV8836_SetMotor+0xb4>
 80018cc:	687b      	ldr	r3, [r7, #4]
 80018ce:	685b      	ldr	r3, [r3, #4]
 80018d0:	681a      	ldr	r2, [r3, #0]
 80018d2:	2300      	movs	r3, #0
 80018d4:	6393      	str	r3, [r2, #56]	; 0x38
 80018d6:	e00d      	b.n	80018f4 <DRV8836_SetMotor+0xd0>
 80018d8:	89fb      	ldrh	r3, [r7, #14]
 80018da:	2b08      	cmp	r3, #8
 80018dc:	d105      	bne.n	80018ea <DRV8836_SetMotor+0xc6>
 80018de:	687b      	ldr	r3, [r7, #4]
 80018e0:	685b      	ldr	r3, [r3, #4]
 80018e2:	681a      	ldr	r2, [r3, #0]
 80018e4:	2300      	movs	r3, #0
 80018e6:	63d3      	str	r3, [r2, #60]	; 0x3c
 80018e8:	e004      	b.n	80018f4 <DRV8836_SetMotor+0xd0>
 80018ea:	687b      	ldr	r3, [r7, #4]
 80018ec:	685b      	ldr	r3, [r3, #4]
 80018ee:	681a      	ldr	r2, [r3, #0]
 80018f0:	2300      	movs	r3, #0
 80018f2:	6413      	str	r3, [r2, #64]	; 0x40
		__HAL_TIM_SET_COMPARE(ic->drv_htim, TargetReverseChannel, 0);
 80018f4:	89bb      	ldrh	r3, [r7, #12]
 80018f6:	2b00      	cmp	r3, #0
 80018f8:	d105      	bne.n	8001906 <DRV8836_SetMotor+0xe2>
 80018fa:	687b      	ldr	r3, [r7, #4]
 80018fc:	685b      	ldr	r3, [r3, #4]
 80018fe:	681b      	ldr	r3, [r3, #0]
 8001900:	2200      	movs	r2, #0
 8001902:	635a      	str	r2, [r3, #52]	; 0x34
		break;
 8001904:	e0ec      	b.n	8001ae0 <DRV8836_SetMotor+0x2bc>
		__HAL_TIM_SET_COMPARE(ic->drv_htim, TargetReverseChannel, 0);
 8001906:	89bb      	ldrh	r3, [r7, #12]
 8001908:	2b04      	cmp	r3, #4
 800190a:	d105      	bne.n	8001918 <DRV8836_SetMotor+0xf4>
 800190c:	687b      	ldr	r3, [r7, #4]
 800190e:	685b      	ldr	r3, [r3, #4]
 8001910:	681a      	ldr	r2, [r3, #0]
 8001912:	2300      	movs	r3, #0
 8001914:	6393      	str	r3, [r2, #56]	; 0x38
		break;
 8001916:	e0e3      	b.n	8001ae0 <DRV8836_SetMotor+0x2bc>
		__HAL_TIM_SET_COMPARE(ic->drv_htim, TargetReverseChannel, 0);
 8001918:	89bb      	ldrh	r3, [r7, #12]
 800191a:	2b08      	cmp	r3, #8
 800191c:	d105      	bne.n	800192a <DRV8836_SetMotor+0x106>
 800191e:	687b      	ldr	r3, [r7, #4]
 8001920:	685b      	ldr	r3, [r3, #4]
 8001922:	681a      	ldr	r2, [r3, #0]
 8001924:	2300      	movs	r3, #0
 8001926:	63d3      	str	r3, [r2, #60]	; 0x3c
		break;
 8001928:	e0da      	b.n	8001ae0 <DRV8836_SetMotor+0x2bc>
		__HAL_TIM_SET_COMPARE(ic->drv_htim, TargetReverseChannel, 0);
 800192a:	687b      	ldr	r3, [r7, #4]
 800192c:	685b      	ldr	r3, [r3, #4]
 800192e:	681a      	ldr	r2, [r3, #0]
 8001930:	2300      	movs	r3, #0
 8001932:	6413      	str	r3, [r2, #64]	; 0x40
		break;
 8001934:	e0d4      	b.n	8001ae0 <DRV8836_SetMotor+0x2bc>

	case Reverse:
		__HAL_TIM_SET_COMPARE(ic->drv_htim, TargetForwardChannel, 0);
 8001936:	89fb      	ldrh	r3, [r7, #14]
 8001938:	2b00      	cmp	r3, #0
 800193a:	d105      	bne.n	8001948 <DRV8836_SetMotor+0x124>
 800193c:	687b      	ldr	r3, [r7, #4]
 800193e:	685b      	ldr	r3, [r3, #4]
 8001940:	681b      	ldr	r3, [r3, #0]
 8001942:	2200      	movs	r2, #0
 8001944:	635a      	str	r2, [r3, #52]	; 0x34
 8001946:	e016      	b.n	8001976 <DRV8836_SetMotor+0x152>
 8001948:	89fb      	ldrh	r3, [r7, #14]
 800194a:	2b04      	cmp	r3, #4
 800194c:	d105      	bne.n	800195a <DRV8836_SetMotor+0x136>
 800194e:	687b      	ldr	r3, [r7, #4]
 8001950:	685b      	ldr	r3, [r3, #4]
 8001952:	681a      	ldr	r2, [r3, #0]
 8001954:	2300      	movs	r3, #0
 8001956:	6393      	str	r3, [r2, #56]	; 0x38
 8001958:	e00d      	b.n	8001976 <DRV8836_SetMotor+0x152>
 800195a:	89fb      	ldrh	r3, [r7, #14]
 800195c:	2b08      	cmp	r3, #8
 800195e:	d105      	bne.n	800196c <DRV8836_SetMotor+0x148>
 8001960:	687b      	ldr	r3, [r7, #4]
 8001962:	685b      	ldr	r3, [r3, #4]
 8001964:	681a      	ldr	r2, [r3, #0]
 8001966:	2300      	movs	r3, #0
 8001968:	63d3      	str	r3, [r2, #60]	; 0x3c
 800196a:	e004      	b.n	8001976 <DRV8836_SetMotor+0x152>
 800196c:	687b      	ldr	r3, [r7, #4]
 800196e:	685b      	ldr	r3, [r3, #4]
 8001970:	681a      	ldr	r2, [r3, #0]
 8001972:	2300      	movs	r3, #0
 8001974:	6413      	str	r3, [r2, #64]	; 0x40
		__HAL_TIM_SET_COMPARE(ic->drv_htim, TargetReverseChannel, speed);
 8001976:	89bb      	ldrh	r3, [r7, #12]
 8001978:	2b00      	cmp	r3, #0
 800197a:	d105      	bne.n	8001988 <DRV8836_SetMotor+0x164>
 800197c:	687b      	ldr	r3, [r7, #4]
 800197e:	685b      	ldr	r3, [r3, #4]
 8001980:	681b      	ldr	r3, [r3, #0]
 8001982:	883a      	ldrh	r2, [r7, #0]
 8001984:	635a      	str	r2, [r3, #52]	; 0x34
		break;
 8001986:	e0ab      	b.n	8001ae0 <DRV8836_SetMotor+0x2bc>
		__HAL_TIM_SET_COMPARE(ic->drv_htim, TargetReverseChannel, speed);
 8001988:	89bb      	ldrh	r3, [r7, #12]
 800198a:	2b04      	cmp	r3, #4
 800198c:	d105      	bne.n	800199a <DRV8836_SetMotor+0x176>
 800198e:	687b      	ldr	r3, [r7, #4]
 8001990:	685b      	ldr	r3, [r3, #4]
 8001992:	681a      	ldr	r2, [r3, #0]
 8001994:	883b      	ldrh	r3, [r7, #0]
 8001996:	6393      	str	r3, [r2, #56]	; 0x38
		break;
 8001998:	e0a2      	b.n	8001ae0 <DRV8836_SetMotor+0x2bc>
		__HAL_TIM_SET_COMPARE(ic->drv_htim, TargetReverseChannel, speed);
 800199a:	89bb      	ldrh	r3, [r7, #12]
 800199c:	2b08      	cmp	r3, #8
 800199e:	d105      	bne.n	80019ac <DRV8836_SetMotor+0x188>
 80019a0:	687b      	ldr	r3, [r7, #4]
 80019a2:	685b      	ldr	r3, [r3, #4]
 80019a4:	681a      	ldr	r2, [r3, #0]
 80019a6:	883b      	ldrh	r3, [r7, #0]
 80019a8:	63d3      	str	r3, [r2, #60]	; 0x3c
		break;
 80019aa:	e099      	b.n	8001ae0 <DRV8836_SetMotor+0x2bc>
		__HAL_TIM_SET_COMPARE(ic->drv_htim, TargetReverseChannel, speed);
 80019ac:	687b      	ldr	r3, [r7, #4]
 80019ae:	685b      	ldr	r3, [r3, #4]
 80019b0:	681a      	ldr	r2, [r3, #0]
 80019b2:	883b      	ldrh	r3, [r7, #0]
 80019b4:	6413      	str	r3, [r2, #64]	; 0x40
		break;
 80019b6:	e093      	b.n	8001ae0 <DRV8836_SetMotor+0x2bc>

	case Forward:
		__HAL_TIM_SET_COMPARE(ic->drv_htim, TargetForwardChannel, speed);
 80019b8:	89fb      	ldrh	r3, [r7, #14]
 80019ba:	2b00      	cmp	r3, #0
 80019bc:	d105      	bne.n	80019ca <DRV8836_SetMotor+0x1a6>
 80019be:	687b      	ldr	r3, [r7, #4]
 80019c0:	685b      	ldr	r3, [r3, #4]
 80019c2:	681b      	ldr	r3, [r3, #0]
 80019c4:	883a      	ldrh	r2, [r7, #0]
 80019c6:	635a      	str	r2, [r3, #52]	; 0x34
 80019c8:	e016      	b.n	80019f8 <DRV8836_SetMotor+0x1d4>
 80019ca:	89fb      	ldrh	r3, [r7, #14]
 80019cc:	2b04      	cmp	r3, #4
 80019ce:	d105      	bne.n	80019dc <DRV8836_SetMotor+0x1b8>
 80019d0:	687b      	ldr	r3, [r7, #4]
 80019d2:	685b      	ldr	r3, [r3, #4]
 80019d4:	681a      	ldr	r2, [r3, #0]
 80019d6:	883b      	ldrh	r3, [r7, #0]
 80019d8:	6393      	str	r3, [r2, #56]	; 0x38
 80019da:	e00d      	b.n	80019f8 <DRV8836_SetMotor+0x1d4>
 80019dc:	89fb      	ldrh	r3, [r7, #14]
 80019de:	2b08      	cmp	r3, #8
 80019e0:	d105      	bne.n	80019ee <DRV8836_SetMotor+0x1ca>
 80019e2:	687b      	ldr	r3, [r7, #4]
 80019e4:	685b      	ldr	r3, [r3, #4]
 80019e6:	681a      	ldr	r2, [r3, #0]
 80019e8:	883b      	ldrh	r3, [r7, #0]
 80019ea:	63d3      	str	r3, [r2, #60]	; 0x3c
 80019ec:	e004      	b.n	80019f8 <DRV8836_SetMotor+0x1d4>
 80019ee:	687b      	ldr	r3, [r7, #4]
 80019f0:	685b      	ldr	r3, [r3, #4]
 80019f2:	681a      	ldr	r2, [r3, #0]
 80019f4:	883b      	ldrh	r3, [r7, #0]
 80019f6:	6413      	str	r3, [r2, #64]	; 0x40
		__HAL_TIM_SET_COMPARE(ic->drv_htim, TargetReverseChannel, 0);
 80019f8:	89bb      	ldrh	r3, [r7, #12]
 80019fa:	2b00      	cmp	r3, #0
 80019fc:	d105      	bne.n	8001a0a <DRV8836_SetMotor+0x1e6>
 80019fe:	687b      	ldr	r3, [r7, #4]
 8001a00:	685b      	ldr	r3, [r3, #4]
 8001a02:	681b      	ldr	r3, [r3, #0]
 8001a04:	2200      	movs	r2, #0
 8001a06:	635a      	str	r2, [r3, #52]	; 0x34
		break;
 8001a08:	e06a      	b.n	8001ae0 <DRV8836_SetMotor+0x2bc>
		__HAL_TIM_SET_COMPARE(ic->drv_htim, TargetReverseChannel, 0);
 8001a0a:	89bb      	ldrh	r3, [r7, #12]
 8001a0c:	2b04      	cmp	r3, #4
 8001a0e:	d105      	bne.n	8001a1c <DRV8836_SetMotor+0x1f8>
 8001a10:	687b      	ldr	r3, [r7, #4]
 8001a12:	685b      	ldr	r3, [r3, #4]
 8001a14:	681a      	ldr	r2, [r3, #0]
 8001a16:	2300      	movs	r3, #0
 8001a18:	6393      	str	r3, [r2, #56]	; 0x38
		break;
 8001a1a:	e061      	b.n	8001ae0 <DRV8836_SetMotor+0x2bc>
		__HAL_TIM_SET_COMPARE(ic->drv_htim, TargetReverseChannel, 0);
 8001a1c:	89bb      	ldrh	r3, [r7, #12]
 8001a1e:	2b08      	cmp	r3, #8
 8001a20:	d105      	bne.n	8001a2e <DRV8836_SetMotor+0x20a>
 8001a22:	687b      	ldr	r3, [r7, #4]
 8001a24:	685b      	ldr	r3, [r3, #4]
 8001a26:	681a      	ldr	r2, [r3, #0]
 8001a28:	2300      	movs	r3, #0
 8001a2a:	63d3      	str	r3, [r2, #60]	; 0x3c
		break;
 8001a2c:	e058      	b.n	8001ae0 <DRV8836_SetMotor+0x2bc>
		__HAL_TIM_SET_COMPARE(ic->drv_htim, TargetReverseChannel, 0);
 8001a2e:	687b      	ldr	r3, [r7, #4]
 8001a30:	685b      	ldr	r3, [r3, #4]
 8001a32:	681a      	ldr	r2, [r3, #0]
 8001a34:	2300      	movs	r3, #0
 8001a36:	6413      	str	r3, [r2, #64]	; 0x40
		break;
 8001a38:	e052      	b.n	8001ae0 <DRV8836_SetMotor+0x2bc>

	case Brake:
		__HAL_TIM_SET_COMPARE(ic->drv_htim, TargetForwardChannel, ic->drv_htim->Init.Period);	//TODO: CHECK IF IT WORKS CORRECTLY!
 8001a3a:	89fb      	ldrh	r3, [r7, #14]
 8001a3c:	2b00      	cmp	r3, #0
 8001a3e:	d107      	bne.n	8001a50 <DRV8836_SetMotor+0x22c>
 8001a40:	687b      	ldr	r3, [r7, #4]
 8001a42:	685a      	ldr	r2, [r3, #4]
 8001a44:	687b      	ldr	r3, [r7, #4]
 8001a46:	685b      	ldr	r3, [r3, #4]
 8001a48:	681b      	ldr	r3, [r3, #0]
 8001a4a:	68d2      	ldr	r2, [r2, #12]
 8001a4c:	635a      	str	r2, [r3, #52]	; 0x34
 8001a4e:	e01c      	b.n	8001a8a <DRV8836_SetMotor+0x266>
 8001a50:	89fb      	ldrh	r3, [r7, #14]
 8001a52:	2b04      	cmp	r3, #4
 8001a54:	d107      	bne.n	8001a66 <DRV8836_SetMotor+0x242>
 8001a56:	687b      	ldr	r3, [r7, #4]
 8001a58:	685b      	ldr	r3, [r3, #4]
 8001a5a:	687a      	ldr	r2, [r7, #4]
 8001a5c:	6852      	ldr	r2, [r2, #4]
 8001a5e:	6812      	ldr	r2, [r2, #0]
 8001a60:	68db      	ldr	r3, [r3, #12]
 8001a62:	6393      	str	r3, [r2, #56]	; 0x38
 8001a64:	e011      	b.n	8001a8a <DRV8836_SetMotor+0x266>
 8001a66:	89fb      	ldrh	r3, [r7, #14]
 8001a68:	2b08      	cmp	r3, #8
 8001a6a:	d107      	bne.n	8001a7c <DRV8836_SetMotor+0x258>
 8001a6c:	687b      	ldr	r3, [r7, #4]
 8001a6e:	685b      	ldr	r3, [r3, #4]
 8001a70:	687a      	ldr	r2, [r7, #4]
 8001a72:	6852      	ldr	r2, [r2, #4]
 8001a74:	6812      	ldr	r2, [r2, #0]
 8001a76:	68db      	ldr	r3, [r3, #12]
 8001a78:	63d3      	str	r3, [r2, #60]	; 0x3c
 8001a7a:	e006      	b.n	8001a8a <DRV8836_SetMotor+0x266>
 8001a7c:	687b      	ldr	r3, [r7, #4]
 8001a7e:	685b      	ldr	r3, [r3, #4]
 8001a80:	687a      	ldr	r2, [r7, #4]
 8001a82:	6852      	ldr	r2, [r2, #4]
 8001a84:	6812      	ldr	r2, [r2, #0]
 8001a86:	68db      	ldr	r3, [r3, #12]
 8001a88:	6413      	str	r3, [r2, #64]	; 0x40
		__HAL_TIM_SET_COMPARE(ic->drv_htim, TargetReverseChannel, ic->drv_htim->Init.Period);
 8001a8a:	89bb      	ldrh	r3, [r7, #12]
 8001a8c:	2b00      	cmp	r3, #0
 8001a8e:	d107      	bne.n	8001aa0 <DRV8836_SetMotor+0x27c>
 8001a90:	687b      	ldr	r3, [r7, #4]
 8001a92:	685a      	ldr	r2, [r3, #4]
 8001a94:	687b      	ldr	r3, [r7, #4]
 8001a96:	685b      	ldr	r3, [r3, #4]
 8001a98:	681b      	ldr	r3, [r3, #0]
 8001a9a:	68d2      	ldr	r2, [r2, #12]
 8001a9c:	635a      	str	r2, [r3, #52]	; 0x34
		break;
 8001a9e:	e01f      	b.n	8001ae0 <DRV8836_SetMotor+0x2bc>
		__HAL_TIM_SET_COMPARE(ic->drv_htim, TargetReverseChannel, ic->drv_htim->Init.Period);
 8001aa0:	89bb      	ldrh	r3, [r7, #12]
 8001aa2:	2b04      	cmp	r3, #4
 8001aa4:	d107      	bne.n	8001ab6 <DRV8836_SetMotor+0x292>
 8001aa6:	687b      	ldr	r3, [r7, #4]
 8001aa8:	685b      	ldr	r3, [r3, #4]
 8001aaa:	687a      	ldr	r2, [r7, #4]
 8001aac:	6852      	ldr	r2, [r2, #4]
 8001aae:	6812      	ldr	r2, [r2, #0]
 8001ab0:	68db      	ldr	r3, [r3, #12]
 8001ab2:	6393      	str	r3, [r2, #56]	; 0x38
		break;
 8001ab4:	e014      	b.n	8001ae0 <DRV8836_SetMotor+0x2bc>
		__HAL_TIM_SET_COMPARE(ic->drv_htim, TargetReverseChannel, ic->drv_htim->Init.Period);
 8001ab6:	89bb      	ldrh	r3, [r7, #12]
 8001ab8:	2b08      	cmp	r3, #8
 8001aba:	d107      	bne.n	8001acc <DRV8836_SetMotor+0x2a8>
 8001abc:	687b      	ldr	r3, [r7, #4]
 8001abe:	685b      	ldr	r3, [r3, #4]
 8001ac0:	687a      	ldr	r2, [r7, #4]
 8001ac2:	6852      	ldr	r2, [r2, #4]
 8001ac4:	6812      	ldr	r2, [r2, #0]
 8001ac6:	68db      	ldr	r3, [r3, #12]
 8001ac8:	63d3      	str	r3, [r2, #60]	; 0x3c
		break;
 8001aca:	e009      	b.n	8001ae0 <DRV8836_SetMotor+0x2bc>
		__HAL_TIM_SET_COMPARE(ic->drv_htim, TargetReverseChannel, ic->drv_htim->Init.Period);
 8001acc:	687b      	ldr	r3, [r7, #4]
 8001ace:	685b      	ldr	r3, [r3, #4]
 8001ad0:	687a      	ldr	r2, [r7, #4]
 8001ad2:	6852      	ldr	r2, [r2, #4]
 8001ad4:	6812      	ldr	r2, [r2, #0]
 8001ad6:	68db      	ldr	r3, [r3, #12]
 8001ad8:	6413      	str	r3, [r2, #64]	; 0x40
		break;
 8001ada:	e001      	b.n	8001ae0 <DRV8836_SetMotor+0x2bc>

	default:
		return DRV8836_ERROR;
 8001adc:	2301      	movs	r3, #1
 8001ade:	e006      	b.n	8001aee <DRV8836_SetMotor+0x2ca>
		break;
	}

	*TargetDirection = direction;	//save set direction and speed to struct
 8001ae0:	697b      	ldr	r3, [r7, #20]
 8001ae2:	78ba      	ldrb	r2, [r7, #2]
 8001ae4:	701a      	strb	r2, [r3, #0]
	*TargetSpeed = speed;
 8001ae6:	693b      	ldr	r3, [r7, #16]
 8001ae8:	883a      	ldrh	r2, [r7, #0]
 8001aea:	801a      	strh	r2, [r3, #0]

	return DRV8836_OK;
 8001aec:	2300      	movs	r3, #0
}
 8001aee:	4618      	mov	r0, r3
 8001af0:	371c      	adds	r7, #28
 8001af2:	46bd      	mov	sp, r7
 8001af4:	bc80      	pop	{r7}
 8001af6:	4770      	bx	lr

08001af8 <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 8001af8:	b580      	push	{r7, lr}
 8001afa:	b088      	sub	sp, #32
 8001afc:	af00      	add	r7, sp, #0

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001afe:	f107 0310 	add.w	r3, r7, #16
 8001b02:	2200      	movs	r2, #0
 8001b04:	601a      	str	r2, [r3, #0]
 8001b06:	605a      	str	r2, [r3, #4]
 8001b08:	609a      	str	r2, [r3, #8]
 8001b0a:	60da      	str	r2, [r3, #12]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001b0c:	4b4f      	ldr	r3, [pc, #316]	; (8001c4c <MX_GPIO_Init+0x154>)
 8001b0e:	699b      	ldr	r3, [r3, #24]
 8001b10:	4a4e      	ldr	r2, [pc, #312]	; (8001c4c <MX_GPIO_Init+0x154>)
 8001b12:	f043 0310 	orr.w	r3, r3, #16
 8001b16:	6193      	str	r3, [r2, #24]
 8001b18:	4b4c      	ldr	r3, [pc, #304]	; (8001c4c <MX_GPIO_Init+0x154>)
 8001b1a:	699b      	ldr	r3, [r3, #24]
 8001b1c:	f003 0310 	and.w	r3, r3, #16
 8001b20:	60fb      	str	r3, [r7, #12]
 8001b22:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001b24:	4b49      	ldr	r3, [pc, #292]	; (8001c4c <MX_GPIO_Init+0x154>)
 8001b26:	699b      	ldr	r3, [r3, #24]
 8001b28:	4a48      	ldr	r2, [pc, #288]	; (8001c4c <MX_GPIO_Init+0x154>)
 8001b2a:	f043 0320 	orr.w	r3, r3, #32
 8001b2e:	6193      	str	r3, [r2, #24]
 8001b30:	4b46      	ldr	r3, [pc, #280]	; (8001c4c <MX_GPIO_Init+0x154>)
 8001b32:	699b      	ldr	r3, [r3, #24]
 8001b34:	f003 0320 	and.w	r3, r3, #32
 8001b38:	60bb      	str	r3, [r7, #8]
 8001b3a:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001b3c:	4b43      	ldr	r3, [pc, #268]	; (8001c4c <MX_GPIO_Init+0x154>)
 8001b3e:	699b      	ldr	r3, [r3, #24]
 8001b40:	4a42      	ldr	r2, [pc, #264]	; (8001c4c <MX_GPIO_Init+0x154>)
 8001b42:	f043 0304 	orr.w	r3, r3, #4
 8001b46:	6193      	str	r3, [r2, #24]
 8001b48:	4b40      	ldr	r3, [pc, #256]	; (8001c4c <MX_GPIO_Init+0x154>)
 8001b4a:	699b      	ldr	r3, [r3, #24]
 8001b4c:	f003 0304 	and.w	r3, r3, #4
 8001b50:	607b      	str	r3, [r7, #4]
 8001b52:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001b54:	4b3d      	ldr	r3, [pc, #244]	; (8001c4c <MX_GPIO_Init+0x154>)
 8001b56:	699b      	ldr	r3, [r3, #24]
 8001b58:	4a3c      	ldr	r2, [pc, #240]	; (8001c4c <MX_GPIO_Init+0x154>)
 8001b5a:	f043 0308 	orr.w	r3, r3, #8
 8001b5e:	6193      	str	r3, [r2, #24]
 8001b60:	4b3a      	ldr	r3, [pc, #232]	; (8001c4c <MX_GPIO_Init+0x154>)
 8001b62:	699b      	ldr	r3, [r3, #24]
 8001b64:	f003 0308 	and.w	r3, r3, #8
 8001b68:	603b      	str	r3, [r7, #0]
 8001b6a:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, DRV_MODE_Pin|DRV_NSLEEP_Pin|LED_Pin|KEEP_ALIVE_Pin, GPIO_PIN_RESET);
 8001b6c:	2200      	movs	r2, #0
 8001b6e:	f246 0103 	movw	r1, #24579	; 0x6003
 8001b72:	4837      	ldr	r0, [pc, #220]	; (8001c50 <MX_GPIO_Init+0x158>)
 8001b74:	f002 f936 	bl	8003de4 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(NRF24_CSN_GPIO_Port, NRF24_CSN_Pin, GPIO_PIN_RESET);
 8001b78:	2200      	movs	r2, #0
 8001b7a:	2104      	movs	r1, #4
 8001b7c:	4835      	ldr	r0, [pc, #212]	; (8001c54 <MX_GPIO_Init+0x15c>)
 8001b7e:	f002 f931 	bl	8003de4 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(NRF24_CE_GPIO_Port, NRF24_CE_Pin, GPIO_PIN_RESET);
 8001b82:	2200      	movs	r2, #0
 8001b84:	2110      	movs	r1, #16
 8001b86:	4834      	ldr	r0, [pc, #208]	; (8001c58 <MX_GPIO_Init+0x160>)
 8001b88:	f002 f92c 	bl	8003de4 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : PCPin PCPin PCPin */
  GPIO_InitStruct.Pin = DRV_MODE_Pin|DRV_NSLEEP_Pin|KEEP_ALIVE_Pin;
 8001b8c:	f246 0302 	movw	r3, #24578	; 0x6002
 8001b90:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001b92:	2301      	movs	r3, #1
 8001b94:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b96:	2300      	movs	r3, #0
 8001b98:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001b9a:	2302      	movs	r3, #2
 8001b9c:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001b9e:	f107 0310 	add.w	r3, r7, #16
 8001ba2:	4619      	mov	r1, r3
 8001ba4:	482a      	ldr	r0, [pc, #168]	; (8001c50 <MX_GPIO_Init+0x158>)
 8001ba6:	f001 ff99 	bl	8003adc <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = LED_Pin;
 8001baa:	2301      	movs	r3, #1
 8001bac:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001bae:	2301      	movs	r3, #1
 8001bb0:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001bb2:	2300      	movs	r3, #0
 8001bb4:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001bb6:	2303      	movs	r3, #3
 8001bb8:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
 8001bba:	f107 0310 	add.w	r3, r7, #16
 8001bbe:	4619      	mov	r1, r3
 8001bc0:	4823      	ldr	r0, [pc, #140]	; (8001c50 <MX_GPIO_Init+0x158>)
 8001bc2:	f001 ff8b 	bl	8003adc <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = BUTTON_PWR_Pin;
 8001bc6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001bca:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001bcc:	2300      	movs	r3, #0
 8001bce:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001bd0:	2300      	movs	r3, #0
 8001bd2:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(BUTTON_PWR_GPIO_Port, &GPIO_InitStruct);
 8001bd4:	f107 0310 	add.w	r3, r7, #16
 8001bd8:	4619      	mov	r1, r3
 8001bda:	4820      	ldr	r0, [pc, #128]	; (8001c5c <MX_GPIO_Init+0x164>)
 8001bdc:	f001 ff7e 	bl	8003adc <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = NRF24_IRQ_Pin;
 8001be0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8001be4:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8001be6:	4b1e      	ldr	r3, [pc, #120]	; (8001c60 <MX_GPIO_Init+0x168>)
 8001be8:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001bea:	2300      	movs	r3, #0
 8001bec:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(NRF24_IRQ_GPIO_Port, &GPIO_InitStruct);
 8001bee:	f107 0310 	add.w	r3, r7, #16
 8001bf2:	4619      	mov	r1, r3
 8001bf4:	4819      	ldr	r0, [pc, #100]	; (8001c5c <MX_GPIO_Init+0x164>)
 8001bf6:	f001 ff71 	bl	8003adc <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = NRF24_CSN_Pin;
 8001bfa:	2304      	movs	r3, #4
 8001bfc:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001bfe:	2301      	movs	r3, #1
 8001c00:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001c02:	2300      	movs	r3, #0
 8001c04:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001c06:	2302      	movs	r3, #2
 8001c08:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(NRF24_CSN_GPIO_Port, &GPIO_InitStruct);
 8001c0a:	f107 0310 	add.w	r3, r7, #16
 8001c0e:	4619      	mov	r1, r3
 8001c10:	4810      	ldr	r0, [pc, #64]	; (8001c54 <MX_GPIO_Init+0x15c>)
 8001c12:	f001 ff63 	bl	8003adc <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = NRF24_CE_Pin;
 8001c16:	2310      	movs	r3, #16
 8001c18:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001c1a:	2301      	movs	r3, #1
 8001c1c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001c1e:	2300      	movs	r3, #0
 8001c20:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001c22:	2302      	movs	r3, #2
 8001c24:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(NRF24_CE_GPIO_Port, &GPIO_InitStruct);
 8001c26:	f107 0310 	add.w	r3, r7, #16
 8001c2a:	4619      	mov	r1, r3
 8001c2c:	480a      	ldr	r0, [pc, #40]	; (8001c58 <MX_GPIO_Init+0x160>)
 8001c2e:	f001 ff55 	bl	8003adc <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 5, 0);
 8001c32:	2200      	movs	r2, #0
 8001c34:	2105      	movs	r1, #5
 8001c36:	2028      	movs	r0, #40	; 0x28
 8001c38:	f001 ff25 	bl	8003a86 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 8001c3c:	2028      	movs	r0, #40	; 0x28
 8001c3e:	f001 ff3e 	bl	8003abe <HAL_NVIC_EnableIRQ>

}
 8001c42:	bf00      	nop
 8001c44:	3720      	adds	r7, #32
 8001c46:	46bd      	mov	sp, r7
 8001c48:	bd80      	pop	{r7, pc}
 8001c4a:	bf00      	nop
 8001c4c:	40021000 	.word	0x40021000
 8001c50:	40011000 	.word	0x40011000
 8001c54:	40011400 	.word	0x40011400
 8001c58:	40010c00 	.word	0x40010c00
 8001c5c:	40010800 	.word	0x40010800
 8001c60:	10210000 	.word	0x10210000

08001c64 <MX_I2C1_Init>:

I2C_HandleTypeDef hi2c1;

/* I2C1 init function */
void MX_I2C1_Init(void)
{
 8001c64:	b580      	push	{r7, lr}
 8001c66:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8001c68:	4b12      	ldr	r3, [pc, #72]	; (8001cb4 <MX_I2C1_Init+0x50>)
 8001c6a:	4a13      	ldr	r2, [pc, #76]	; (8001cb8 <MX_I2C1_Init+0x54>)
 8001c6c:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 400000;
 8001c6e:	4b11      	ldr	r3, [pc, #68]	; (8001cb4 <MX_I2C1_Init+0x50>)
 8001c70:	4a12      	ldr	r2, [pc, #72]	; (8001cbc <MX_I2C1_Init+0x58>)
 8001c72:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8001c74:	4b0f      	ldr	r3, [pc, #60]	; (8001cb4 <MX_I2C1_Init+0x50>)
 8001c76:	2200      	movs	r2, #0
 8001c78:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 8001c7a:	4b0e      	ldr	r3, [pc, #56]	; (8001cb4 <MX_I2C1_Init+0x50>)
 8001c7c:	2200      	movs	r2, #0
 8001c7e:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001c80:	4b0c      	ldr	r3, [pc, #48]	; (8001cb4 <MX_I2C1_Init+0x50>)
 8001c82:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8001c86:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001c88:	4b0a      	ldr	r3, [pc, #40]	; (8001cb4 <MX_I2C1_Init+0x50>)
 8001c8a:	2200      	movs	r2, #0
 8001c8c:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 8001c8e:	4b09      	ldr	r3, [pc, #36]	; (8001cb4 <MX_I2C1_Init+0x50>)
 8001c90:	2200      	movs	r2, #0
 8001c92:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001c94:	4b07      	ldr	r3, [pc, #28]	; (8001cb4 <MX_I2C1_Init+0x50>)
 8001c96:	2200      	movs	r2, #0
 8001c98:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001c9a:	4b06      	ldr	r3, [pc, #24]	; (8001cb4 <MX_I2C1_Init+0x50>)
 8001c9c:	2200      	movs	r2, #0
 8001c9e:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001ca0:	4804      	ldr	r0, [pc, #16]	; (8001cb4 <MX_I2C1_Init+0x50>)
 8001ca2:	f002 f8e9 	bl	8003e78 <HAL_I2C_Init>
 8001ca6:	4603      	mov	r3, r0
 8001ca8:	2b00      	cmp	r3, #0
 8001caa:	d001      	beq.n	8001cb0 <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 8001cac:	f000 f944 	bl	8001f38 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8001cb0:	bf00      	nop
 8001cb2:	bd80      	pop	{r7, pc}
 8001cb4:	20000258 	.word	0x20000258
 8001cb8:	40005400 	.word	0x40005400
 8001cbc:	00061a80 	.word	0x00061a80

08001cc0 <HAL_I2C_MspInit>:

void HAL_I2C_MspInit(I2C_HandleTypeDef* i2cHandle)
{
 8001cc0:	b580      	push	{r7, lr}
 8001cc2:	b08a      	sub	sp, #40	; 0x28
 8001cc4:	af00      	add	r7, sp, #0
 8001cc6:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001cc8:	f107 0314 	add.w	r3, r7, #20
 8001ccc:	2200      	movs	r2, #0
 8001cce:	601a      	str	r2, [r3, #0]
 8001cd0:	605a      	str	r2, [r3, #4]
 8001cd2:	609a      	str	r2, [r3, #8]
 8001cd4:	60da      	str	r2, [r3, #12]
  if(i2cHandle->Instance==I2C1)
 8001cd6:	687b      	ldr	r3, [r7, #4]
 8001cd8:	681b      	ldr	r3, [r3, #0]
 8001cda:	4a1d      	ldr	r2, [pc, #116]	; (8001d50 <HAL_I2C_MspInit+0x90>)
 8001cdc:	4293      	cmp	r3, r2
 8001cde:	d132      	bne.n	8001d46 <HAL_I2C_MspInit+0x86>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001ce0:	4b1c      	ldr	r3, [pc, #112]	; (8001d54 <HAL_I2C_MspInit+0x94>)
 8001ce2:	699b      	ldr	r3, [r3, #24]
 8001ce4:	4a1b      	ldr	r2, [pc, #108]	; (8001d54 <HAL_I2C_MspInit+0x94>)
 8001ce6:	f043 0308 	orr.w	r3, r3, #8
 8001cea:	6193      	str	r3, [r2, #24]
 8001cec:	4b19      	ldr	r3, [pc, #100]	; (8001d54 <HAL_I2C_MspInit+0x94>)
 8001cee:	699b      	ldr	r3, [r3, #24]
 8001cf0:	f003 0308 	and.w	r3, r3, #8
 8001cf4:	613b      	str	r3, [r7, #16]
 8001cf6:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 8001cf8:	f44f 7340 	mov.w	r3, #768	; 0x300
 8001cfc:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001cfe:	2312      	movs	r3, #18
 8001d00:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001d02:	2303      	movs	r3, #3
 8001d04:	623b      	str	r3, [r7, #32]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001d06:	f107 0314 	add.w	r3, r7, #20
 8001d0a:	4619      	mov	r1, r3
 8001d0c:	4812      	ldr	r0, [pc, #72]	; (8001d58 <HAL_I2C_MspInit+0x98>)
 8001d0e:	f001 fee5 	bl	8003adc <HAL_GPIO_Init>

    __HAL_AFIO_REMAP_I2C1_ENABLE();
 8001d12:	4b12      	ldr	r3, [pc, #72]	; (8001d5c <HAL_I2C_MspInit+0x9c>)
 8001d14:	685b      	ldr	r3, [r3, #4]
 8001d16:	627b      	str	r3, [r7, #36]	; 0x24
 8001d18:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001d1a:	f043 63e0 	orr.w	r3, r3, #117440512	; 0x7000000
 8001d1e:	627b      	str	r3, [r7, #36]	; 0x24
 8001d20:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001d22:	f043 0302 	orr.w	r3, r3, #2
 8001d26:	627b      	str	r3, [r7, #36]	; 0x24
 8001d28:	4a0c      	ldr	r2, [pc, #48]	; (8001d5c <HAL_I2C_MspInit+0x9c>)
 8001d2a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001d2c:	6053      	str	r3, [r2, #4]

    /* I2C1 clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8001d2e:	4b09      	ldr	r3, [pc, #36]	; (8001d54 <HAL_I2C_MspInit+0x94>)
 8001d30:	69db      	ldr	r3, [r3, #28]
 8001d32:	4a08      	ldr	r2, [pc, #32]	; (8001d54 <HAL_I2C_MspInit+0x94>)
 8001d34:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001d38:	61d3      	str	r3, [r2, #28]
 8001d3a:	4b06      	ldr	r3, [pc, #24]	; (8001d54 <HAL_I2C_MspInit+0x94>)
 8001d3c:	69db      	ldr	r3, [r3, #28]
 8001d3e:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001d42:	60fb      	str	r3, [r7, #12]
 8001d44:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }
}
 8001d46:	bf00      	nop
 8001d48:	3728      	adds	r7, #40	; 0x28
 8001d4a:	46bd      	mov	sp, r7
 8001d4c:	bd80      	pop	{r7, pc}
 8001d4e:	bf00      	nop
 8001d50:	40005400 	.word	0x40005400
 8001d54:	40021000 	.word	0x40021000
 8001d58:	40010c00 	.word	0x40010c00
 8001d5c:	40010000 	.word	0x40010000

08001d60 <ITM_SendChar>:
           \li Is blocking when a debugger is connected, but the previous character sent has not been transmitted.
  \param [in]     ch  Character to transmit.
  \returns            Character to transmit.
 */
__STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)
{
 8001d60:	b480      	push	{r7}
 8001d62:	b083      	sub	sp, #12
 8001d64:	af00      	add	r7, sp, #0
 8001d66:	6078      	str	r0, [r7, #4]
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8001d68:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8001d6c:	f8d3 3e80 	ldr.w	r3, [r3, #3712]	; 0xe80
 8001d70:	f003 0301 	and.w	r3, r3, #1
 8001d74:	2b00      	cmp	r3, #0
 8001d76:	d013      	beq.n	8001da0 <ITM_SendChar+0x40>
      ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 8001d78:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8001d7c:	f8d3 3e00 	ldr.w	r3, [r3, #3584]	; 0xe00
 8001d80:	f003 0301 	and.w	r3, r3, #1
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8001d84:	2b00      	cmp	r3, #0
 8001d86:	d00b      	beq.n	8001da0 <ITM_SendChar+0x40>
  {
    while (ITM->PORT[0U].u32 == 0UL)
 8001d88:	e000      	b.n	8001d8c <ITM_SendChar+0x2c>
    {
      __NOP();
 8001d8a:	bf00      	nop
    while (ITM->PORT[0U].u32 == 0UL)
 8001d8c:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8001d90:	681b      	ldr	r3, [r3, #0]
 8001d92:	2b00      	cmp	r3, #0
 8001d94:	d0f9      	beq.n	8001d8a <ITM_SendChar+0x2a>
    }
    ITM->PORT[0U].u8 = (uint8_t)ch;
 8001d96:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8001d9a:	687a      	ldr	r2, [r7, #4]
 8001d9c:	b2d2      	uxtb	r2, r2
 8001d9e:	701a      	strb	r2, [r3, #0]
  }
  return (ch);
 8001da0:	687b      	ldr	r3, [r7, #4]
}
 8001da2:	4618      	mov	r0, r3
 8001da4:	370c      	adds	r7, #12
 8001da6:	46bd      	mov	sp, r7
 8001da8:	bc80      	pop	{r7}
 8001daa:	4770      	bx	lr

08001dac <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8001dac:	b580      	push	{r7, lr}
 8001dae:	b082      	sub	sp, #8
 8001db0:	af02      	add	r7, sp, #8
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8001db2:	f001 fd5d 	bl	8003870 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8001db6:	f000 f839 	bl	8001e2c <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8001dba:	f7ff fe9d 	bl	8001af8 <MX_GPIO_Init>
  MX_I2C1_Init();
 8001dbe:	f7ff ff51 	bl	8001c64 <MX_I2C1_Init>
  MX_SPI3_Init();
 8001dc2:	f001 f813 	bl	8002dec <MX_SPI3_Init>
  MX_TIM1_Init();
 8001dc6:	f001 fa51 	bl	800326c <MX_TIM1_Init>
  MX_TIM3_Init();
 8001dca:	f001 faa7 	bl	800331c <MX_TIM3_Init>
  MX_TIM4_Init();
 8001dce:	f001 fb3b 	bl	8003448 <MX_TIM4_Init>
  MX_TIM7_Init();
 8001dd2:	f001 fb8d 	bl	80034f0 <MX_TIM7_Init>
  MX_USART2_UART_Init();
 8001dd6:	f001 fcb1 	bl	800373c <MX_USART2_UART_Init>
  /* USER CODE BEGIN 2 */
  HAL_GPIO_WritePin(DRV_NSLEEP_GPIO_Port, DRV_NSLEEP_Pin, GPIO_PIN_SET);
 8001dda:	2201      	movs	r2, #1
 8001ddc:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8001de0:	480e      	ldr	r0, [pc, #56]	; (8001e1c <main+0x70>)
 8001de2:	f001 ffff 	bl	8003de4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DRV_MODE_GPIO_Port, DRV_MODE_Pin, GPIO_PIN_RESET);
 8001de6:	2200      	movs	r2, #0
 8001de8:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001dec:	480b      	ldr	r0, [pc, #44]	; (8001e1c <main+0x70>)
 8001dee:	f001 fff9 	bl	8003de4 <HAL_GPIO_WritePin>


  Motors_Init();
 8001df2:	f000 f917 	bl	8002024 <Motors_Init>
  HAL_TIM_Base_Start_IT(&htim7);
 8001df6:	480a      	ldr	r0, [pc, #40]	; (8001e20 <main+0x74>)
 8001df8:	f003 fcd0 	bl	800579c <HAL_TIM_Base_Start_IT>

  Radio_TaskInit();
 8001dfc:	f000 ff5c 	bl	8002cb8 <Radio_TaskInit>


  xTaskCreate(vTaskOnboardDiode, "PCB Diode Task", 128, NULL, 1, NULL);
 8001e00:	2300      	movs	r3, #0
 8001e02:	9301      	str	r3, [sp, #4]
 8001e04:	2301      	movs	r3, #1
 8001e06:	9300      	str	r3, [sp, #0]
 8001e08:	2300      	movs	r3, #0
 8001e0a:	2280      	movs	r2, #128	; 0x80
 8001e0c:	4905      	ldr	r1, [pc, #20]	; (8001e24 <main+0x78>)
 8001e0e:	4806      	ldr	r0, [pc, #24]	; (8001e28 <main+0x7c>)
 8001e10:	f005 fd5c 	bl	80078cc <xTaskCreate>

  vTaskStartScheduler();
 8001e14:	f005 feca 	bl	8007bac <vTaskStartScheduler>
  /* USER CODE END 2 */

  /* We should never get here as control is now taken by the scheduler */
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 8001e18:	e7fe      	b.n	8001e18 <main+0x6c>
 8001e1a:	bf00      	nop
 8001e1c:	40011000 	.word	0x40011000
 8001e20:	200005e4 	.word	0x200005e4
 8001e24:	0800c298 	.word	0x0800c298
 8001e28:	08002c15 	.word	0x08002c15

08001e2c <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001e2c:	b580      	push	{r7, lr}
 8001e2e:	b094      	sub	sp, #80	; 0x50
 8001e30:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001e32:	f107 0318 	add.w	r3, r7, #24
 8001e36:	2238      	movs	r2, #56	; 0x38
 8001e38:	2100      	movs	r1, #0
 8001e3a:	4618      	mov	r0, r3
 8001e3c:	f008 f931 	bl	800a0a2 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001e40:	1d3b      	adds	r3, r7, #4
 8001e42:	2200      	movs	r2, #0
 8001e44:	601a      	str	r2, [r3, #0]
 8001e46:	605a      	str	r2, [r3, #4]
 8001e48:	609a      	str	r2, [r3, #8]
 8001e4a:	60da      	str	r2, [r3, #12]
 8001e4c:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8001e4e:	2301      	movs	r3, #1
 8001e50:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001e52:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001e56:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV2;
 8001e58:	2301      	movs	r3, #1
 8001e5a:	627b      	str	r3, [r7, #36]	; 0x24
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8001e5c:	2301      	movs	r3, #1
 8001e5e:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.Prediv1Source = RCC_PREDIV1_SOURCE_HSE;
 8001e60:	2300      	movs	r3, #0
 8001e62:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001e64:	2302      	movs	r3, #2
 8001e66:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001e68:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001e6c:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 8001e6e:	f44f 13e0 	mov.w	r3, #1835008	; 0x1c0000
 8001e72:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL2.PLL2State = RCC_PLL_NONE;
 8001e74:	2300      	movs	r3, #0
 8001e76:	647b      	str	r3, [r7, #68]	; 0x44
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001e78:	f107 0318 	add.w	r3, r7, #24
 8001e7c:	4618      	mov	r0, r3
 8001e7e:	f002 f93f 	bl	8004100 <HAL_RCC_OscConfig>
 8001e82:	4603      	mov	r3, r0
 8001e84:	2b00      	cmp	r3, #0
 8001e86:	d001      	beq.n	8001e8c <SystemClock_Config+0x60>
  {
    Error_Handler();
 8001e88:	f000 f856 	bl	8001f38 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001e8c:	230f      	movs	r3, #15
 8001e8e:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001e90:	2302      	movs	r3, #2
 8001e92:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001e94:	2300      	movs	r3, #0
 8001e96:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8001e98:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001e9c:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8001e9e:	2300      	movs	r3, #0
 8001ea0:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8001ea2:	1d3b      	adds	r3, r7, #4
 8001ea4:	2102      	movs	r1, #2
 8001ea6:	4618      	mov	r0, r3
 8001ea8:	f002 fc40 	bl	800472c <HAL_RCC_ClockConfig>
 8001eac:	4603      	mov	r3, r0
 8001eae:	2b00      	cmp	r3, #0
 8001eb0:	d001      	beq.n	8001eb6 <SystemClock_Config+0x8a>
  {
    Error_Handler();
 8001eb2:	f000 f841 	bl	8001f38 <Error_Handler>
  }

  /** Configure the Systick interrupt time
  */
  __HAL_RCC_PLLI2S_ENABLE();
 8001eb6:	4b03      	ldr	r3, [pc, #12]	; (8001ec4 <SystemClock_Config+0x98>)
 8001eb8:	2201      	movs	r2, #1
 8001eba:	601a      	str	r2, [r3, #0]
}
 8001ebc:	bf00      	nop
 8001ebe:	3750      	adds	r7, #80	; 0x50
 8001ec0:	46bd      	mov	sp, r7
 8001ec2:	bd80      	pop	{r7, pc}
 8001ec4:	42420070 	.word	0x42420070

08001ec8 <__io_putchar>:

/* USER CODE BEGIN 4 */

int __io_putchar(int ch)
{
 8001ec8:	b580      	push	{r7, lr}
 8001eca:	b082      	sub	sp, #8
 8001ecc:	af00      	add	r7, sp, #0
 8001ece:	6078      	str	r0, [r7, #4]
	ITM_SendChar(ch);
 8001ed0:	687b      	ldr	r3, [r7, #4]
 8001ed2:	4618      	mov	r0, r3
 8001ed4:	f7ff ff44 	bl	8001d60 <ITM_SendChar>

	return ch;
 8001ed8:	687b      	ldr	r3, [r7, #4]
}
 8001eda:	4618      	mov	r0, r3
 8001edc:	3708      	adds	r7, #8
 8001ede:	46bd      	mov	sp, r7
 8001ee0:	bd80      	pop	{r7, pc}

08001ee2 <HAL_GPIO_EXTI_Callback>:

void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
 8001ee2:	b580      	push	{r7, lr}
 8001ee4:	b082      	sub	sp, #8
 8001ee6:	af00      	add	r7, sp, #0
 8001ee8:	4603      	mov	r3, r0
 8001eea:	80fb      	strh	r3, [r7, #6]
	if(GPIO_Pin == NRF24_IRQ_Pin)
 8001eec:	88fb      	ldrh	r3, [r7, #6]
 8001eee:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8001ef2:	d101      	bne.n	8001ef8 <HAL_GPIO_EXTI_Callback+0x16>
	{
		Radio_HandlerIRQ();
 8001ef4:	f000 ff0a 	bl	8002d0c <Radio_HandlerIRQ>

	}
}
 8001ef8:	bf00      	nop
 8001efa:	3708      	adds	r7, #8
 8001efc:	46bd      	mov	sp, r7
 8001efe:	bd80      	pop	{r7, pc}

08001f00 <HAL_TIM_PeriodElapsedCallback>:
  * a global variable "uwTick" used as application time base.
  * @param  htim : TIM handle
  * @retval None
  */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8001f00:	b580      	push	{r7, lr}
 8001f02:	b082      	sub	sp, #8
 8001f04:	af00      	add	r7, sp, #0
 8001f06:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001f08:	687b      	ldr	r3, [r7, #4]
 8001f0a:	681b      	ldr	r3, [r3, #0]
 8001f0c:	4a08      	ldr	r2, [pc, #32]	; (8001f30 <HAL_TIM_PeriodElapsedCallback+0x30>)
 8001f0e:	4293      	cmp	r3, r2
 8001f10:	d102      	bne.n	8001f18 <HAL_TIM_PeriodElapsedCallback+0x18>
    HAL_IncTick();
 8001f12:	f001 fcc3 	bl	800389c <HAL_IncTick>
  {
	  /* Encoder sampling */
	  Motors_EncoderSample();
  }
  /* USER CODE END Callback 1 */
}
 8001f16:	e006      	b.n	8001f26 <HAL_TIM_PeriodElapsedCallback+0x26>
  else if(htim->Instance == TIM7)
 8001f18:	687b      	ldr	r3, [r7, #4]
 8001f1a:	681b      	ldr	r3, [r3, #0]
 8001f1c:	4a05      	ldr	r2, [pc, #20]	; (8001f34 <HAL_TIM_PeriodElapsedCallback+0x34>)
 8001f1e:	4293      	cmp	r3, r2
 8001f20:	d101      	bne.n	8001f26 <HAL_TIM_PeriodElapsedCallback+0x26>
	  Motors_EncoderSample();
 8001f22:	f000 f8c3 	bl	80020ac <Motors_EncoderSample>
}
 8001f26:	bf00      	nop
 8001f28:	3708      	adds	r7, #8
 8001f2a:	46bd      	mov	sp, r7
 8001f2c:	bd80      	pop	{r7, pc}
 8001f2e:	bf00      	nop
 8001f30:	40001000 	.word	0x40001000
 8001f34:	40001400 	.word	0x40001400

08001f38 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001f38:	b480      	push	{r7}
 8001f3a:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001f3c:	b672      	cpsid	i
}
 8001f3e:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8001f40:	e7fe      	b.n	8001f40 <Error_Handler+0x8>

08001f42 <MotorEnc_Init>:
int32_t FilterSum;
uint16_t OldestMember;


void MotorEnc_Init(MotorEncoder_t *encoder, TIM_HandleTypeDef *htim)
{
 8001f42:	b580      	push	{r7, lr}
 8001f44:	b082      	sub	sp, #8
 8001f46:	af00      	add	r7, sp, #0
 8001f48:	6078      	str	r0, [r7, #4]
 8001f4a:	6039      	str	r1, [r7, #0]
	encoder->htimEnc = htim;
 8001f4c:	687b      	ldr	r3, [r7, #4]
 8001f4e:	683a      	ldr	r2, [r7, #0]
 8001f50:	601a      	str	r2, [r3, #0]
	HAL_TIM_Encoder_Start(htim, TIM_CHANNEL_ALL);
 8001f52:	213c      	movs	r1, #60	; 0x3c
 8001f54:	6838      	ldr	r0, [r7, #0]
 8001f56:	f003 fe1f 	bl	8005b98 <HAL_TIM_Encoder_Start>
}
 8001f5a:	bf00      	nop
 8001f5c:	3708      	adds	r7, #8
 8001f5e:	46bd      	mov	sp, r7
 8001f60:	bd80      	pop	{r7, pc}
	...

08001f64 <MotorEnc_Update>:


void MotorEnc_Update(MotorEncoder_t *encoder)
{
 8001f64:	b480      	push	{r7}
 8001f66:	b085      	sub	sp, #20
 8001f68:	af00      	add	r7, sp, #0
 8001f6a:	6078      	str	r0, [r7, #4]
	int16_t TempPosition = encoder->Position;
 8001f6c:	687b      	ldr	r3, [r7, #4]
 8001f6e:	899b      	ldrh	r3, [r3, #12]
 8001f70:	81fb      	strh	r3, [r7, #14]

	/* Calculate counter difference */
	int CounterDif = encoder->htimEnc->Instance->CNT - encoder->LastCounter;
 8001f72:	687b      	ldr	r3, [r7, #4]
 8001f74:	681b      	ldr	r3, [r3, #0]
 8001f76:	681b      	ldr	r3, [r3, #0]
 8001f78:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8001f7a:	687b      	ldr	r3, [r7, #4]
 8001f7c:	691b      	ldr	r3, [r3, #16]
 8001f7e:	1ad3      	subs	r3, r2, r3
 8001f80:	60bb      	str	r3, [r7, #8]
	/* Check if counter has changed */
	if(CounterDif >= 1 || CounterDif <= -1)
 8001f82:	68bb      	ldr	r3, [r7, #8]
 8001f84:	2b00      	cmp	r3, #0
 8001f86:	dc02      	bgt.n	8001f8e <MotorEnc_Update+0x2a>
 8001f88:	68bb      	ldr	r3, [r7, #8]
 8001f8a:	2b00      	cmp	r3, #0
 8001f8c:	da0a      	bge.n	8001fa4 <MotorEnc_Update+0x40>
	{
		/* Velocity is equal to difference, very important type casting! */
		/* Casting uint32_t to int8_t solves overflow problem in fast and correct way */
		encoder->Velocity = (int8_t)(CounterDif);
 8001f8e:	68bb      	ldr	r3, [r7, #8]
 8001f90:	b25a      	sxtb	r2, r3
 8001f92:	687b      	ldr	r3, [r7, #4]
 8001f94:	711a      	strb	r2, [r3, #4]
		encoder->LastCounter = encoder->htimEnc->Instance->CNT;
 8001f96:	687b      	ldr	r3, [r7, #4]
 8001f98:	681b      	ldr	r3, [r3, #0]
 8001f9a:	681b      	ldr	r3, [r3, #0]
 8001f9c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8001f9e:	687b      	ldr	r3, [r7, #4]
 8001fa0:	611a      	str	r2, [r3, #16]
 8001fa2:	e002      	b.n	8001faa <MotorEnc_Update+0x46>
	}
	else
	{
		encoder->Velocity = 0;
 8001fa4:	687b      	ldr	r3, [r7, #4]
 8001fa6:	2200      	movs	r2, #0
 8001fa8:	711a      	strb	r2, [r3, #4]
	}

	TempPosition = encoder->Position + encoder->Velocity;
 8001faa:	687b      	ldr	r3, [r7, #4]
 8001fac:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
 8001fb0:	b29a      	uxth	r2, r3
 8001fb2:	687b      	ldr	r3, [r7, #4]
 8001fb4:	f993 3004 	ldrsb.w	r3, [r3, #4]
 8001fb8:	b29b      	uxth	r3, r3
 8001fba:	4413      	add	r3, r2
 8001fbc:	b29b      	uxth	r3, r3
 8001fbe:	81fb      	strh	r3, [r7, #14]

	if(encoder->Velocity != 0)
 8001fc0:	687b      	ldr	r3, [r7, #4]
 8001fc2:	f993 3004 	ldrsb.w	r3, [r3, #4]
 8001fc6:	2b00      	cmp	r3, #0
 8001fc8:	d024      	beq.n	8002014 <MotorEnc_Update+0xb0>
	{
		if(TempPosition >= 0)
 8001fca:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8001fce:	2b00      	cmp	r3, #0
 8001fd0:	db16      	blt.n	8002000 <MotorEnc_Update+0x9c>
		{
			encoder->Position = (encoder->Position + encoder->Velocity) % PULSES_PER_ROTATION;
 8001fd2:	687b      	ldr	r3, [r7, #4]
 8001fd4:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
 8001fd8:	461a      	mov	r2, r3
 8001fda:	687b      	ldr	r3, [r7, #4]
 8001fdc:	f993 3004 	ldrsb.w	r3, [r3, #4]
 8001fe0:	4413      	add	r3, r2
 8001fe2:	4a0f      	ldr	r2, [pc, #60]	; (8002020 <MotorEnc_Update+0xbc>)
 8001fe4:	fb82 1203 	smull	r1, r2, r2, r3
 8001fe8:	1251      	asrs	r1, r2, #9
 8001fea:	17da      	asrs	r2, r3, #31
 8001fec:	1a8a      	subs	r2, r1, r2
 8001fee:	f44f 61af 	mov.w	r1, #1400	; 0x578
 8001ff2:	fb01 f202 	mul.w	r2, r1, r2
 8001ff6:	1a9a      	subs	r2, r3, r2
 8001ff8:	b212      	sxth	r2, r2
 8001ffa:	687b      	ldr	r3, [r7, #4]
 8001ffc:	819a      	strh	r2, [r3, #12]


	//TODO: calculate RPM, position and start working on PID
	// 300RPM, 1:50 ratio,

}
 8001ffe:	e009      	b.n	8002014 <MotorEnc_Update+0xb0>
			encoder->Position = PULSES_PER_ROTATION + encoder->Velocity;
 8002000:	687b      	ldr	r3, [r7, #4]
 8002002:	f993 3004 	ldrsb.w	r3, [r3, #4]
 8002006:	b29b      	uxth	r3, r3
 8002008:	f503 63af 	add.w	r3, r3, #1400	; 0x578
 800200c:	b29b      	uxth	r3, r3
 800200e:	b21a      	sxth	r2, r3
 8002010:	687b      	ldr	r3, [r7, #4]
 8002012:	819a      	strh	r2, [r3, #12]
}
 8002014:	bf00      	nop
 8002016:	3714      	adds	r7, #20
 8002018:	46bd      	mov	sp, r7
 800201a:	bc80      	pop	{r7}
 800201c:	4770      	bx	lr
 800201e:	bf00      	nop
 8002020:	5d9f7391 	.word	0x5d9f7391

08002024 <Motors_Init>:
//
// -- Init --
//

void Motors_Init(void)
{
 8002024:	b580      	push	{r7, lr}
 8002026:	b082      	sub	sp, #8
 8002028:	af02      	add	r7, sp, #8
	DRV8836_Init(&MotorDriver, &htim3, TIM_CHANNEL_1, TIM_CHANNEL_2, TIM_CHANNEL_3, TIM_CHANNEL_4);
 800202a:	230c      	movs	r3, #12
 800202c:	9301      	str	r3, [sp, #4]
 800202e:	2308      	movs	r3, #8
 8002030:	9300      	str	r3, [sp, #0]
 8002032:	2304      	movs	r3, #4
 8002034:	2200      	movs	r2, #0
 8002036:	490a      	ldr	r1, [pc, #40]	; (8002060 <Motors_Init+0x3c>)
 8002038:	480a      	ldr	r0, [pc, #40]	; (8002064 <Motors_Init+0x40>)
 800203a:	f7ff fb34 	bl	80016a6 <DRV8836_Init>
	MotorEnc_Init(&MotorEncoderA, &htim1);
 800203e:	490a      	ldr	r1, [pc, #40]	; (8002068 <Motors_Init+0x44>)
 8002040:	480a      	ldr	r0, [pc, #40]	; (800206c <Motors_Init+0x48>)
 8002042:	f7ff ff7e 	bl	8001f42 <MotorEnc_Init>
	MotorEnc_Init(&MotorEncoderB, &htim4);
 8002046:	490a      	ldr	r1, [pc, #40]	; (8002070 <Motors_Init+0x4c>)
 8002048:	480a      	ldr	r0, [pc, #40]	; (8002074 <Motors_Init+0x50>)
 800204a:	f7ff ff7a 	bl	8001f42 <MotorEnc_Init>

	FIRFilter_Init(&EncoderFilterA);
 800204e:	480a      	ldr	r0, [pc, #40]	; (8002078 <Motors_Init+0x54>)
 8002050:	f7ff fa04 	bl	800145c <FIRFilter_Init>
	FIRFilter_Init(&EncoderFilterB);
 8002054:	4809      	ldr	r0, [pc, #36]	; (800207c <Motors_Init+0x58>)
 8002056:	f7ff fa01 	bl	800145c <FIRFilter_Init>
}
 800205a:	bf00      	nop
 800205c:	46bd      	mov	sp, r7
 800205e:	bd80      	pop	{r7, pc}
 8002060:	20000554 	.word	0x20000554
 8002064:	200002ac 	.word	0x200002ac
 8002068:	2000050c 	.word	0x2000050c
 800206c:	200002c4 	.word	0x200002c4
 8002070:	2000059c 	.word	0x2000059c
 8002074:	200002dc 	.word	0x200002dc
 8002078:	200002f4 	.word	0x200002f4
 800207c:	20000360 	.word	0x20000360

08002080 <Motors_SetMotor>:
//
// -- Setters --
//

void Motors_SetMotor(DRV8836_Output_t motorAB, DRV8836_Direction_t direction, uint16_t speed)
{
 8002080:	b580      	push	{r7, lr}
 8002082:	b082      	sub	sp, #8
 8002084:	af00      	add	r7, sp, #0
 8002086:	4603      	mov	r3, r0
 8002088:	71fb      	strb	r3, [r7, #7]
 800208a:	460b      	mov	r3, r1
 800208c:	71bb      	strb	r3, [r7, #6]
 800208e:	4613      	mov	r3, r2
 8002090:	80bb      	strh	r3, [r7, #4]
	DRV8836_SetMotor(&MotorDriver, motorAB, direction, speed);
 8002092:	88bb      	ldrh	r3, [r7, #4]
 8002094:	79ba      	ldrb	r2, [r7, #6]
 8002096:	79f9      	ldrb	r1, [r7, #7]
 8002098:	4803      	ldr	r0, [pc, #12]	; (80020a8 <Motors_SetMotor+0x28>)
 800209a:	f7ff fbc3 	bl	8001824 <DRV8836_SetMotor>
}
 800209e:	bf00      	nop
 80020a0:	3708      	adds	r7, #8
 80020a2:	46bd      	mov	sp, r7
 80020a4:	bd80      	pop	{r7, pc}
 80020a6:	bf00      	nop
 80020a8:	200002ac 	.word	0x200002ac

080020ac <Motors_EncoderSample>:
//
// -- Encoder routine --
//

void Motors_EncoderSample(void)						//call this function with encoder sampling frequency
{
 80020ac:	b580      	push	{r7, lr}
 80020ae:	af00      	add	r7, sp, #0
	/* Read encoder values and calculate velocity */
	MotorEnc_Update(&MotorEncoderA);
 80020b0:	4875      	ldr	r0, [pc, #468]	; (8002288 <Motors_EncoderSample+0x1dc>)
 80020b2:	f7ff ff57 	bl	8001f64 <MotorEnc_Update>
	MotorEnc_Update(&MotorEncoderB);
 80020b6:	4875      	ldr	r0, [pc, #468]	; (800228c <Motors_EncoderSample+0x1e0>)
 80020b8:	f7ff ff54 	bl	8001f64 <MotorEnc_Update>

	/* Filter velocity values */
	MotorEncoderA.VelocityFiltered = FIRFilter_Update(&EncoderFilterA, MotorEncoderA.Velocity);
 80020bc:	4b72      	ldr	r3, [pc, #456]	; (8002288 <Motors_EncoderSample+0x1dc>)
 80020be:	f993 3004 	ldrsb.w	r3, [r3, #4]
 80020c2:	4618      	mov	r0, r3
 80020c4:	f7fe fe0a 	bl	8000cdc <__aeabi_i2f>
 80020c8:	4603      	mov	r3, r0
 80020ca:	4619      	mov	r1, r3
 80020cc:	4870      	ldr	r0, [pc, #448]	; (8002290 <Motors_EncoderSample+0x1e4>)
 80020ce:	f7ff f9e5 	bl	800149c <FIRFilter_Update>
 80020d2:	4603      	mov	r3, r0
 80020d4:	4a6c      	ldr	r2, [pc, #432]	; (8002288 <Motors_EncoderSample+0x1dc>)
 80020d6:	6093      	str	r3, [r2, #8]
	MotorEncoderB.VelocityFiltered = FIRFilter_Update(&EncoderFilterB, MotorEncoderB.Velocity);
 80020d8:	4b6c      	ldr	r3, [pc, #432]	; (800228c <Motors_EncoderSample+0x1e0>)
 80020da:	f993 3004 	ldrsb.w	r3, [r3, #4]
 80020de:	4618      	mov	r0, r3
 80020e0:	f7fe fdfc 	bl	8000cdc <__aeabi_i2f>
 80020e4:	4603      	mov	r3, r0
 80020e6:	4619      	mov	r1, r3
 80020e8:	486a      	ldr	r0, [pc, #424]	; (8002294 <Motors_EncoderSample+0x1e8>)
 80020ea:	f7ff f9d7 	bl	800149c <FIRFilter_Update>
 80020ee:	4603      	mov	r3, r0
 80020f0:	4a66      	ldr	r2, [pc, #408]	; (800228c <Motors_EncoderSample+0x1e0>)
 80020f2:	6093      	str	r3, [r2, #8]

	/* Calculate RPM */
	//MotorEncoderB.RPM = (MotorEncoderB.Velocity * 60 * (1000/ENCODER_SAMPLING_TIME_MS)) / PULSES_PER_ROTATION;

	if(MotorsControllPID == 1)
 80020f4:	4b68      	ldr	r3, [pc, #416]	; (8002298 <Motors_EncoderSample+0x1ec>)
 80020f6:	781b      	ldrb	r3, [r3, #0]
 80020f8:	2b01      	cmp	r3, #1
 80020fa:	f040 80a6 	bne.w	800224a <Motors_EncoderSample+0x19e>
	{
		/* Update motor's A PID if any of its gains its greater than 0 */
		if(MotorPID_A.kp > 0 || MotorPID_A.ki > 0|| MotorPID_A.kd > 0)
 80020fe:	4b67      	ldr	r3, [pc, #412]	; (800229c <Motors_EncoderSample+0x1f0>)
 8002100:	681b      	ldr	r3, [r3, #0]
 8002102:	f04f 0100 	mov.w	r1, #0
 8002106:	4618      	mov	r0, r3
 8002108:	f7fe fff8 	bl	80010fc <__aeabi_fcmpgt>
 800210c:	4603      	mov	r3, r0
 800210e:	2b00      	cmp	r3, #0
 8002110:	d113      	bne.n	800213a <Motors_EncoderSample+0x8e>
 8002112:	4b62      	ldr	r3, [pc, #392]	; (800229c <Motors_EncoderSample+0x1f0>)
 8002114:	685b      	ldr	r3, [r3, #4]
 8002116:	f04f 0100 	mov.w	r1, #0
 800211a:	4618      	mov	r0, r3
 800211c:	f7fe ffee 	bl	80010fc <__aeabi_fcmpgt>
 8002120:	4603      	mov	r3, r0
 8002122:	2b00      	cmp	r3, #0
 8002124:	d109      	bne.n	800213a <Motors_EncoderSample+0x8e>
 8002126:	4b5d      	ldr	r3, [pc, #372]	; (800229c <Motors_EncoderSample+0x1f0>)
 8002128:	689b      	ldr	r3, [r3, #8]
 800212a:	f04f 0100 	mov.w	r1, #0
 800212e:	4618      	mov	r0, r3
 8002130:	f7fe ffe4 	bl	80010fc <__aeabi_fcmpgt>
 8002134:	4603      	mov	r3, r0
 8002136:	2b00      	cmp	r3, #0
 8002138:	d034      	beq.n	80021a4 <Motors_EncoderSample+0xf8>
		{
			PID_Update(&MotorPID_A, TargetVelocityA - MotorEncoderA.VelocityFiltered , 1000 / ENCODER_SAMPLING_TIME_MS);
 800213a:	4b59      	ldr	r3, [pc, #356]	; (80022a0 <Motors_EncoderSample+0x1f4>)
 800213c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8002140:	4618      	mov	r0, r3
 8002142:	f7fe fdcb 	bl	8000cdc <__aeabi_i2f>
 8002146:	4602      	mov	r2, r0
 8002148:	4b4f      	ldr	r3, [pc, #316]	; (8002288 <Motors_EncoderSample+0x1dc>)
 800214a:	689b      	ldr	r3, [r3, #8]
 800214c:	4619      	mov	r1, r3
 800214e:	4610      	mov	r0, r2
 8002150:	f7fe fd0e 	bl	8000b70 <__aeabi_fsub>
 8002154:	4603      	mov	r3, r0
 8002156:	4618      	mov	r0, r3
 8002158:	f7fe ffda 	bl	8001110 <__aeabi_f2iz>
 800215c:	4603      	mov	r3, r0
 800215e:	b21b      	sxth	r3, r3
 8002160:	2264      	movs	r2, #100	; 0x64
 8002162:	4619      	mov	r1, r3
 8002164:	484d      	ldr	r0, [pc, #308]	; (800229c <Motors_EncoderSample+0x1f0>)
 8002166:	f7ff f9ef 	bl	8001548 <PID_Update>

			if(MotorPID_A.Output > 0)
 800216a:	4b4c      	ldr	r3, [pc, #304]	; (800229c <Motors_EncoderSample+0x1f0>)
 800216c:	f9b3 3014 	ldrsh.w	r3, [r3, #20]
 8002170:	2b00      	cmp	r3, #0
 8002172:	dd0b      	ble.n	800218c <Motors_EncoderSample+0xe0>
			{
				Motors_SetMotor(MOTOR_A, Reverse, DEAD_PWM_OFFSET + MotorPID_A.Output);
 8002174:	4b49      	ldr	r3, [pc, #292]	; (800229c <Motors_EncoderSample+0x1f0>)
 8002176:	f9b3 3014 	ldrsh.w	r3, [r3, #20]
 800217a:	b29b      	uxth	r3, r3
 800217c:	3396      	adds	r3, #150	; 0x96
 800217e:	b29b      	uxth	r3, r3
 8002180:	461a      	mov	r2, r3
 8002182:	2101      	movs	r1, #1
 8002184:	2000      	movs	r0, #0
 8002186:	f7ff ff7b 	bl	8002080 <Motors_SetMotor>
 800218a:	e00b      	b.n	80021a4 <Motors_EncoderSample+0xf8>
			}
			else
			{
				Motors_SetMotor(MOTOR_A, Forward, DEAD_PWM_OFFSET + (-MotorPID_A.Output) );
 800218c:	4b43      	ldr	r3, [pc, #268]	; (800229c <Motors_EncoderSample+0x1f0>)
 800218e:	f9b3 3014 	ldrsh.w	r3, [r3, #20]
 8002192:	b29b      	uxth	r3, r3
 8002194:	f1c3 0396 	rsb	r3, r3, #150	; 0x96
 8002198:	b29b      	uxth	r3, r3
 800219a:	461a      	mov	r2, r3
 800219c:	2102      	movs	r1, #2
 800219e:	2000      	movs	r0, #0
 80021a0:	f7ff ff6e 	bl	8002080 <Motors_SetMotor>
			}
		}
		/* Same for motor B */
		if(MotorPID_B.kp > 0 || MotorPID_B.ki > 0|| MotorPID_B.kd > 0)
 80021a4:	4b3f      	ldr	r3, [pc, #252]	; (80022a4 <Motors_EncoderSample+0x1f8>)
 80021a6:	681b      	ldr	r3, [r3, #0]
 80021a8:	f04f 0100 	mov.w	r1, #0
 80021ac:	4618      	mov	r0, r3
 80021ae:	f7fe ffa5 	bl	80010fc <__aeabi_fcmpgt>
 80021b2:	4603      	mov	r3, r0
 80021b4:	2b00      	cmp	r3, #0
 80021b6:	d113      	bne.n	80021e0 <Motors_EncoderSample+0x134>
 80021b8:	4b3a      	ldr	r3, [pc, #232]	; (80022a4 <Motors_EncoderSample+0x1f8>)
 80021ba:	685b      	ldr	r3, [r3, #4]
 80021bc:	f04f 0100 	mov.w	r1, #0
 80021c0:	4618      	mov	r0, r3
 80021c2:	f7fe ff9b 	bl	80010fc <__aeabi_fcmpgt>
 80021c6:	4603      	mov	r3, r0
 80021c8:	2b00      	cmp	r3, #0
 80021ca:	d109      	bne.n	80021e0 <Motors_EncoderSample+0x134>
 80021cc:	4b35      	ldr	r3, [pc, #212]	; (80022a4 <Motors_EncoderSample+0x1f8>)
 80021ce:	689b      	ldr	r3, [r3, #8]
 80021d0:	f04f 0100 	mov.w	r1, #0
 80021d4:	4618      	mov	r0, r3
 80021d6:	f7fe ff91 	bl	80010fc <__aeabi_fcmpgt>
 80021da:	4603      	mov	r3, r0
 80021dc:	2b00      	cmp	r3, #0
 80021de:	d034      	beq.n	800224a <Motors_EncoderSample+0x19e>
		{
			PID_Update(&MotorPID_B, TargetVelocityB - MotorEncoderB.VelocityFiltered , 1000 / ENCODER_SAMPLING_TIME_MS);
 80021e0:	4b31      	ldr	r3, [pc, #196]	; (80022a8 <Motors_EncoderSample+0x1fc>)
 80021e2:	f9b3 3000 	ldrsh.w	r3, [r3]
 80021e6:	4618      	mov	r0, r3
 80021e8:	f7fe fd78 	bl	8000cdc <__aeabi_i2f>
 80021ec:	4602      	mov	r2, r0
 80021ee:	4b27      	ldr	r3, [pc, #156]	; (800228c <Motors_EncoderSample+0x1e0>)
 80021f0:	689b      	ldr	r3, [r3, #8]
 80021f2:	4619      	mov	r1, r3
 80021f4:	4610      	mov	r0, r2
 80021f6:	f7fe fcbb 	bl	8000b70 <__aeabi_fsub>
 80021fa:	4603      	mov	r3, r0
 80021fc:	4618      	mov	r0, r3
 80021fe:	f7fe ff87 	bl	8001110 <__aeabi_f2iz>
 8002202:	4603      	mov	r3, r0
 8002204:	b21b      	sxth	r3, r3
 8002206:	2264      	movs	r2, #100	; 0x64
 8002208:	4619      	mov	r1, r3
 800220a:	4826      	ldr	r0, [pc, #152]	; (80022a4 <Motors_EncoderSample+0x1f8>)
 800220c:	f7ff f99c 	bl	8001548 <PID_Update>

			if(MotorPID_B.Output > 0)
 8002210:	4b24      	ldr	r3, [pc, #144]	; (80022a4 <Motors_EncoderSample+0x1f8>)
 8002212:	f9b3 3014 	ldrsh.w	r3, [r3, #20]
 8002216:	2b00      	cmp	r3, #0
 8002218:	dd0b      	ble.n	8002232 <Motors_EncoderSample+0x186>
			{
				Motors_SetMotor(MOTOR_B, Reverse, DEAD_PWM_OFFSET + MotorPID_B.Output);
 800221a:	4b22      	ldr	r3, [pc, #136]	; (80022a4 <Motors_EncoderSample+0x1f8>)
 800221c:	f9b3 3014 	ldrsh.w	r3, [r3, #20]
 8002220:	b29b      	uxth	r3, r3
 8002222:	3396      	adds	r3, #150	; 0x96
 8002224:	b29b      	uxth	r3, r3
 8002226:	461a      	mov	r2, r3
 8002228:	2101      	movs	r1, #1
 800222a:	2001      	movs	r0, #1
 800222c:	f7ff ff28 	bl	8002080 <Motors_SetMotor>
 8002230:	e00b      	b.n	800224a <Motors_EncoderSample+0x19e>
			}
			else
			{
				Motors_SetMotor(MOTOR_B, Forward, DEAD_PWM_OFFSET + (-MotorPID_B.Output) );
 8002232:	4b1c      	ldr	r3, [pc, #112]	; (80022a4 <Motors_EncoderSample+0x1f8>)
 8002234:	f9b3 3014 	ldrsh.w	r3, [r3, #20]
 8002238:	b29b      	uxth	r3, r3
 800223a:	f1c3 0396 	rsb	r3, r3, #150	; 0x96
 800223e:	b29b      	uxth	r3, r3
 8002240:	461a      	mov	r2, r3
 8002242:	2102      	movs	r1, #2
 8002244:	2001      	movs	r0, #1
 8002246:	f7ff ff1b 	bl	8002080 <Motors_SetMotor>
	}



	/* Debug UART print */
	UartBufferLength = sprintf((char*) UartBuffer, "$%d %d;",(int16_t) MotorEncoderB.VelocityFiltered, MotorPID_B.Output );
 800224a:	4b10      	ldr	r3, [pc, #64]	; (800228c <Motors_EncoderSample+0x1e0>)
 800224c:	689b      	ldr	r3, [r3, #8]
 800224e:	4618      	mov	r0, r3
 8002250:	f7fe ff5e 	bl	8001110 <__aeabi_f2iz>
 8002254:	4603      	mov	r3, r0
 8002256:	b21b      	sxth	r3, r3
 8002258:	461a      	mov	r2, r3
 800225a:	4b12      	ldr	r3, [pc, #72]	; (80022a4 <Motors_EncoderSample+0x1f8>)
 800225c:	f9b3 3014 	ldrsh.w	r3, [r3, #20]
 8002260:	4912      	ldr	r1, [pc, #72]	; (80022ac <Motors_EncoderSample+0x200>)
 8002262:	4813      	ldr	r0, [pc, #76]	; (80022b0 <Motors_EncoderSample+0x204>)
 8002264:	f007 feba 	bl	8009fdc <siprintf>
 8002268:	4603      	mov	r3, r0
 800226a:	b2da      	uxtb	r2, r3
 800226c:	4b11      	ldr	r3, [pc, #68]	; (80022b4 <Motors_EncoderSample+0x208>)
 800226e:	701a      	strb	r2, [r3, #0]
	HAL_UART_Transmit(&huart2, UartBuffer, UartBufferLength, 500);
 8002270:	4b10      	ldr	r3, [pc, #64]	; (80022b4 <Motors_EncoderSample+0x208>)
 8002272:	781b      	ldrb	r3, [r3, #0]
 8002274:	b29a      	uxth	r2, r3
 8002276:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 800227a:	490d      	ldr	r1, [pc, #52]	; (80022b0 <Motors_EncoderSample+0x204>)
 800227c:	480e      	ldr	r0, [pc, #56]	; (80022b8 <Motors_EncoderSample+0x20c>)
 800227e:	f004 fb45 	bl	800690c <HAL_UART_Transmit>

}
 8002282:	bf00      	nop
 8002284:	bd80      	pop	{r7, pc}
 8002286:	bf00      	nop
 8002288:	200002c4 	.word	0x200002c4
 800228c:	200002dc 	.word	0x200002dc
 8002290:	200002f4 	.word	0x200002f4
 8002294:	20000360 	.word	0x20000360
 8002298:	200003cc 	.word	0x200003cc
 800229c:	200003d4 	.word	0x200003d4
 80022a0:	200003ce 	.word	0x200003ce
 80022a4:	200003f4 	.word	0x200003f4
 80022a8:	200003d0 	.word	0x200003d0
 80022ac:	0800c2a8 	.word	0x0800c2a8
 80022b0:	20000414 	.word	0x20000414
 80022b4:	20000424 	.word	0x20000424
 80022b8:	2000062c 	.word	0x2000062c

080022bc <nRF24_Delay_ms>:

#define NRF24_CE_HIGH		HAL_GPIO_WritePin(NRF24_CE_GPIO_Port, NRF24_CE_Pin, GPIO_PIN_SET)
#define NRF24_CE_LOW		HAL_GPIO_WritePin(NRF24_CE_GPIO_Port, NRF24_CE_Pin, GPIO_PIN_RESET)

static void nRF24_Delay_ms(uint8_t Time)
{
 80022bc:	b580      	push	{r7, lr}
 80022be:	b082      	sub	sp, #8
 80022c0:	af00      	add	r7, sp, #0
 80022c2:	4603      	mov	r3, r0
 80022c4:	71fb      	strb	r3, [r7, #7]
	HAL_Delay(Time);
 80022c6:	79fb      	ldrb	r3, [r7, #7]
 80022c8:	4618      	mov	r0, r3
 80022ca:	f001 fb03 	bl	80038d4 <HAL_Delay>
}
 80022ce:	bf00      	nop
 80022d0:	3708      	adds	r7, #8
 80022d2:	46bd      	mov	sp, r7
 80022d4:	bd80      	pop	{r7, pc}
	...

080022d8 <nRF24_SendSpi>:

static void nRF24_SendSpi(uint8_t *Data, uint8_t Length)
{
 80022d8:	b580      	push	{r7, lr}
 80022da:	b082      	sub	sp, #8
 80022dc:	af00      	add	r7, sp, #0
 80022de:	6078      	str	r0, [r7, #4]
 80022e0:	460b      	mov	r3, r1
 80022e2:	70fb      	strb	r3, [r7, #3]
	HAL_SPI_Transmit(hspi_nrf, Data, Length, 1000);
 80022e4:	4b06      	ldr	r3, [pc, #24]	; (8002300 <nRF24_SendSpi+0x28>)
 80022e6:	6818      	ldr	r0, [r3, #0]
 80022e8:	78fb      	ldrb	r3, [r7, #3]
 80022ea:	b29a      	uxth	r2, r3
 80022ec:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80022f0:	6879      	ldr	r1, [r7, #4]
 80022f2:	f002 fcff 	bl	8004cf4 <HAL_SPI_Transmit>
}
 80022f6:	bf00      	nop
 80022f8:	3708      	adds	r7, #8
 80022fa:	46bd      	mov	sp, r7
 80022fc:	bd80      	pop	{r7, pc}
 80022fe:	bf00      	nop
 8002300:	20000428 	.word	0x20000428

08002304 <nRF24_ReadSpi>:

static void nRF24_ReadSpi(uint8_t *Data, uint8_t Length)
{
 8002304:	b580      	push	{r7, lr}
 8002306:	b082      	sub	sp, #8
 8002308:	af00      	add	r7, sp, #0
 800230a:	6078      	str	r0, [r7, #4]
 800230c:	460b      	mov	r3, r1
 800230e:	70fb      	strb	r3, [r7, #3]
	HAL_SPI_Receive(hspi_nrf, Data, Length, 1000);
 8002310:	4b06      	ldr	r3, [pc, #24]	; (800232c <nRF24_ReadSpi+0x28>)
 8002312:	6818      	ldr	r0, [r3, #0]
 8002314:	78fb      	ldrb	r3, [r7, #3]
 8002316:	b29a      	uxth	r2, r3
 8002318:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800231c:	6879      	ldr	r1, [r7, #4]
 800231e:	f002 fe2c 	bl	8004f7a <HAL_SPI_Receive>
}
 8002322:	bf00      	nop
 8002324:	3708      	adds	r7, #8
 8002326:	46bd      	mov	sp, r7
 8002328:	bd80      	pop	{r7, pc}
 800232a:	bf00      	nop
 800232c:	20000428 	.word	0x20000428

08002330 <nRF24_ReadRegister>:
//
// END OF BASIC READ/WRITE FUNCTIONS
//

static uint8_t nRF24_ReadRegister(uint8_t reg)
{
 8002330:	b580      	push	{r7, lr}
 8002332:	b084      	sub	sp, #16
 8002334:	af00      	add	r7, sp, #0
 8002336:	4603      	mov	r3, r0
 8002338:	71fb      	strb	r3, [r7, #7]
	uint8_t result;

	reg = NRF24_CMD_R_REGISTER | reg;
 800233a:	79fb      	ldrb	r3, [r7, #7]
 800233c:	71fb      	strb	r3, [r7, #7]

	NRF24_CSN_LOW;
 800233e:	2200      	movs	r2, #0
 8002340:	2104      	movs	r1, #4
 8002342:	480c      	ldr	r0, [pc, #48]	; (8002374 <nRF24_ReadRegister+0x44>)
 8002344:	f001 fd4e 	bl	8003de4 <HAL_GPIO_WritePin>
	nRF24_SendSpi(&reg, 1);
 8002348:	1dfb      	adds	r3, r7, #7
 800234a:	2101      	movs	r1, #1
 800234c:	4618      	mov	r0, r3
 800234e:	f7ff ffc3 	bl	80022d8 <nRF24_SendSpi>
	nRF24_ReadSpi(&result, 1);
 8002352:	f107 030f 	add.w	r3, r7, #15
 8002356:	2101      	movs	r1, #1
 8002358:	4618      	mov	r0, r3
 800235a:	f7ff ffd3 	bl	8002304 <nRF24_ReadSpi>
	NRF24_CSN_HIGH;
 800235e:	2201      	movs	r2, #1
 8002360:	2104      	movs	r1, #4
 8002362:	4804      	ldr	r0, [pc, #16]	; (8002374 <nRF24_ReadRegister+0x44>)
 8002364:	f001 fd3e 	bl	8003de4 <HAL_GPIO_WritePin>

	return result;
 8002368:	7bfb      	ldrb	r3, [r7, #15]
}
 800236a:	4618      	mov	r0, r3
 800236c:	3710      	adds	r7, #16
 800236e:	46bd      	mov	sp, r7
 8002370:	bd80      	pop	{r7, pc}
 8002372:	bf00      	nop
 8002374:	40011400 	.word	0x40011400

08002378 <nRF24_ReadRegisters>:

static void nRF24_ReadRegisters(uint8_t reg, uint8_t* ret, uint8_t len)
{
 8002378:	b580      	push	{r7, lr}
 800237a:	b082      	sub	sp, #8
 800237c:	af00      	add	r7, sp, #0
 800237e:	4603      	mov	r3, r0
 8002380:	6039      	str	r1, [r7, #0]
 8002382:	71fb      	strb	r3, [r7, #7]
 8002384:	4613      	mov	r3, r2
 8002386:	71bb      	strb	r3, [r7, #6]
	reg = NRF24_CMD_R_REGISTER | reg;
 8002388:	79fb      	ldrb	r3, [r7, #7]
 800238a:	71fb      	strb	r3, [r7, #7]

	NRF24_CSN_LOW;
 800238c:	2200      	movs	r2, #0
 800238e:	2104      	movs	r1, #4
 8002390:	480a      	ldr	r0, [pc, #40]	; (80023bc <nRF24_ReadRegisters+0x44>)
 8002392:	f001 fd27 	bl	8003de4 <HAL_GPIO_WritePin>

	nRF24_SendSpi(&reg, 1);
 8002396:	1dfb      	adds	r3, r7, #7
 8002398:	2101      	movs	r1, #1
 800239a:	4618      	mov	r0, r3
 800239c:	f7ff ff9c 	bl	80022d8 <nRF24_SendSpi>
	nRF24_ReadSpi(ret, len);
 80023a0:	79bb      	ldrb	r3, [r7, #6]
 80023a2:	4619      	mov	r1, r3
 80023a4:	6838      	ldr	r0, [r7, #0]
 80023a6:	f7ff ffad 	bl	8002304 <nRF24_ReadSpi>

	NRF24_CSN_HIGH;
 80023aa:	2201      	movs	r2, #1
 80023ac:	2104      	movs	r1, #4
 80023ae:	4803      	ldr	r0, [pc, #12]	; (80023bc <nRF24_ReadRegisters+0x44>)
 80023b0:	f001 fd18 	bl	8003de4 <HAL_GPIO_WritePin>
}
 80023b4:	bf00      	nop
 80023b6:	3708      	adds	r7, #8
 80023b8:	46bd      	mov	sp, r7
 80023ba:	bd80      	pop	{r7, pc}
 80023bc:	40011400 	.word	0x40011400

080023c0 <nRF24_WriteRegister>:

static void nRF24_WriteRegister(uint8_t reg, uint8_t val)
{
 80023c0:	b580      	push	{r7, lr}
 80023c2:	b084      	sub	sp, #16
 80023c4:	af00      	add	r7, sp, #0
 80023c6:	4603      	mov	r3, r0
 80023c8:	460a      	mov	r2, r1
 80023ca:	71fb      	strb	r3, [r7, #7]
 80023cc:	4613      	mov	r3, r2
 80023ce:	71bb      	strb	r3, [r7, #6]
	uint8_t tmp[2];

	tmp[0] = NRF24_CMD_W_REGISTER | reg;
 80023d0:	79fb      	ldrb	r3, [r7, #7]
 80023d2:	f043 0320 	orr.w	r3, r3, #32
 80023d6:	b2db      	uxtb	r3, r3
 80023d8:	733b      	strb	r3, [r7, #12]
	tmp[1] = val;
 80023da:	79bb      	ldrb	r3, [r7, #6]
 80023dc:	737b      	strb	r3, [r7, #13]

	NRF24_CSN_LOW;
 80023de:	2200      	movs	r2, #0
 80023e0:	2104      	movs	r1, #4
 80023e2:	4809      	ldr	r0, [pc, #36]	; (8002408 <nRF24_WriteRegister+0x48>)
 80023e4:	f001 fcfe 	bl	8003de4 <HAL_GPIO_WritePin>

	nRF24_SendSpi(tmp, 2);
 80023e8:	f107 030c 	add.w	r3, r7, #12
 80023ec:	2102      	movs	r1, #2
 80023ee:	4618      	mov	r0, r3
 80023f0:	f7ff ff72 	bl	80022d8 <nRF24_SendSpi>

	NRF24_CSN_HIGH;
 80023f4:	2201      	movs	r2, #1
 80023f6:	2104      	movs	r1, #4
 80023f8:	4803      	ldr	r0, [pc, #12]	; (8002408 <nRF24_WriteRegister+0x48>)
 80023fa:	f001 fcf3 	bl	8003de4 <HAL_GPIO_WritePin>
}
 80023fe:	bf00      	nop
 8002400:	3710      	adds	r7, #16
 8002402:	46bd      	mov	sp, r7
 8002404:	bd80      	pop	{r7, pc}
 8002406:	bf00      	nop
 8002408:	40011400 	.word	0x40011400

0800240c <nRF24_WriteRegisters>:

static void nRF24_WriteRegisters(uint8_t reg, uint8_t* val, uint8_t len)
{
 800240c:	b580      	push	{r7, lr}
 800240e:	b082      	sub	sp, #8
 8002410:	af00      	add	r7, sp, #0
 8002412:	4603      	mov	r3, r0
 8002414:	6039      	str	r1, [r7, #0]
 8002416:	71fb      	strb	r3, [r7, #7]
 8002418:	4613      	mov	r3, r2
 800241a:	71bb      	strb	r3, [r7, #6]
	reg = NRF24_CMD_W_REGISTER | reg;
 800241c:	79fb      	ldrb	r3, [r7, #7]
 800241e:	f043 0320 	orr.w	r3, r3, #32
 8002422:	b2db      	uxtb	r3, r3
 8002424:	71fb      	strb	r3, [r7, #7]

	NRF24_CSN_LOW;
 8002426:	2200      	movs	r2, #0
 8002428:	2104      	movs	r1, #4
 800242a:	480b      	ldr	r0, [pc, #44]	; (8002458 <nRF24_WriteRegisters+0x4c>)
 800242c:	f001 fcda 	bl	8003de4 <HAL_GPIO_WritePin>

	nRF24_SendSpi(&reg, 1);
 8002430:	1dfb      	adds	r3, r7, #7
 8002432:	2101      	movs	r1, #1
 8002434:	4618      	mov	r0, r3
 8002436:	f7ff ff4f 	bl	80022d8 <nRF24_SendSpi>
	nRF24_SendSpi(val, len);
 800243a:	79bb      	ldrb	r3, [r7, #6]
 800243c:	4619      	mov	r1, r3
 800243e:	6838      	ldr	r0, [r7, #0]
 8002440:	f7ff ff4a 	bl	80022d8 <nRF24_SendSpi>

	NRF24_CSN_HIGH;
 8002444:	2201      	movs	r2, #1
 8002446:	2104      	movs	r1, #4
 8002448:	4803      	ldr	r0, [pc, #12]	; (8002458 <nRF24_WriteRegisters+0x4c>)
 800244a:	f001 fccb 	bl	8003de4 <HAL_GPIO_WritePin>
}
 800244e:	bf00      	nop
 8002450:	3708      	adds	r7, #8
 8002452:	46bd      	mov	sp, r7
 8002454:	bd80      	pop	{r7, pc}
 8002456:	bf00      	nop
 8002458:	40011400 	.word	0x40011400

0800245c <nRF24_RX_Mode>:

void nRF24_RX_Mode(void)
{
 800245c:	b580      	push	{r7, lr}
 800245e:	b082      	sub	sp, #8
 8002460:	af00      	add	r7, sp, #0
	uint8_t config = nRF24_ReadConfig();
 8002462:	f000 f829 	bl	80024b8 <nRF24_ReadConfig>
 8002466:	4603      	mov	r3, r0
 8002468:	71fb      	strb	r3, [r7, #7]
	// Restore pipe 0 adress after comeback from TX mode
	nRF24_SetRXAddress(0, addr_p0_backup);
 800246a:	4911      	ldr	r1, [pc, #68]	; (80024b0 <nRF24_RX_Mode+0x54>)
 800246c:	2000      	movs	r0, #0
 800246e:	f000 f9b6 	bl	80027de <nRF24_SetRXAddress>
	// PWR_UP bit set
	config |= (1<<NRF24_PWR_UP);
 8002472:	79fb      	ldrb	r3, [r7, #7]
 8002474:	f043 0302 	orr.w	r3, r3, #2
 8002478:	71fb      	strb	r3, [r7, #7]
	// PRIM_RX bit set
	config |= (1<<NRF24_PRIM_RX);
 800247a:	79fb      	ldrb	r3, [r7, #7]
 800247c:	f043 0301 	orr.w	r3, r3, #1
 8002480:	71fb      	strb	r3, [r7, #7]
	nRF24_WriteConfig(config);
 8002482:	79fb      	ldrb	r3, [r7, #7]
 8002484:	4618      	mov	r0, r3
 8002486:	f000 f81f 	bl	80024c8 <nRF24_WriteConfig>
	// Reset status
	nRF24_WriteStatus((1<<NRF24_RX_DR)|(1<<NRF24_TX_DS)|(1<<NRF24_MAX_RT));
 800248a:	2070      	movs	r0, #112	; 0x70
 800248c:	f000 f877 	bl	800257e <nRF24_WriteStatus>
	// Flush RX
	nRF24_FlushRX();
 8002490:	f000 f884 	bl	800259c <nRF24_FlushRX>
	// Flush TX
	nRF24_FlushTX();
 8002494:	f000 f89c 	bl	80025d0 <nRF24_FlushTX>

	NRF24_CE_HIGH;
 8002498:	2201      	movs	r2, #1
 800249a:	2110      	movs	r1, #16
 800249c:	4805      	ldr	r0, [pc, #20]	; (80024b4 <nRF24_RX_Mode+0x58>)
 800249e:	f001 fca1 	bl	8003de4 <HAL_GPIO_WritePin>
	nRF24_Delay_ms(1);
 80024a2:	2001      	movs	r0, #1
 80024a4:	f7ff ff0a 	bl	80022bc <nRF24_Delay_ms>
}
 80024a8:	bf00      	nop
 80024aa:	3708      	adds	r7, #8
 80024ac:	46bd      	mov	sp, r7
 80024ae:	bd80      	pop	{r7, pc}
 80024b0:	2000042c 	.word	0x2000042c
 80024b4:	40010c00 	.word	0x40010c00

080024b8 <nRF24_ReadConfig>:
}



uint8_t nRF24_ReadConfig(void)
{
 80024b8:	b580      	push	{r7, lr}
 80024ba:	af00      	add	r7, sp, #0
	return (nRF24_ReadRegister(NRF24_CONFIG));
 80024bc:	2000      	movs	r0, #0
 80024be:	f7ff ff37 	bl	8002330 <nRF24_ReadRegister>
 80024c2:	4603      	mov	r3, r0
}
 80024c4:	4618      	mov	r0, r3
 80024c6:	bd80      	pop	{r7, pc}

080024c8 <nRF24_WriteConfig>:

void nRF24_WriteConfig(uint8_t conf)
{
 80024c8:	b580      	push	{r7, lr}
 80024ca:	b082      	sub	sp, #8
 80024cc:	af00      	add	r7, sp, #0
 80024ce:	4603      	mov	r3, r0
 80024d0:	71fb      	strb	r3, [r7, #7]
	nRF24_WriteRegister(NRF24_CONFIG, conf);
 80024d2:	79fb      	ldrb	r3, [r7, #7]
 80024d4:	4619      	mov	r1, r3
 80024d6:	2000      	movs	r0, #0
 80024d8:	f7ff ff72 	bl	80023c0 <nRF24_WriteRegister>
}
 80024dc:	bf00      	nop
 80024de:	3708      	adds	r7, #8
 80024e0:	46bd      	mov	sp, r7
 80024e2:	bd80      	pop	{r7, pc}

080024e4 <nRF24_SetPALevel>:

void nRF24_SetPALevel(uint8_t lev)
{
 80024e4:	b580      	push	{r7, lr}
 80024e6:	b084      	sub	sp, #16
 80024e8:	af00      	add	r7, sp, #0
 80024ea:	4603      	mov	r3, r0
 80024ec:	71fb      	strb	r3, [r7, #7]
	uint8_t rf_setup = nRF24_ReadRegister(NRF24_RF_SETUP);
 80024ee:	2006      	movs	r0, #6
 80024f0:	f7ff ff1e 	bl	8002330 <nRF24_ReadRegister>
 80024f4:	4603      	mov	r3, r0
 80024f6:	73fb      	strb	r3, [r7, #15]
	rf_setup &= 0xF8; // Clear PWR bits
 80024f8:	7bfb      	ldrb	r3, [r7, #15]
 80024fa:	f023 0307 	bic.w	r3, r3, #7
 80024fe:	73fb      	strb	r3, [r7, #15]
	rf_setup |= (lev<<1);
 8002500:	79fb      	ldrb	r3, [r7, #7]
 8002502:	005b      	lsls	r3, r3, #1
 8002504:	b25a      	sxtb	r2, r3
 8002506:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800250a:	4313      	orrs	r3, r2
 800250c:	b25b      	sxtb	r3, r3
 800250e:	73fb      	strb	r3, [r7, #15]
	nRF24_WriteRegister(NRF24_RF_SETUP, rf_setup);
 8002510:	7bfb      	ldrb	r3, [r7, #15]
 8002512:	4619      	mov	r1, r3
 8002514:	2006      	movs	r0, #6
 8002516:	f7ff ff53 	bl	80023c0 <nRF24_WriteRegister>
}
 800251a:	bf00      	nop
 800251c:	3710      	adds	r7, #16
 800251e:	46bd      	mov	sp, r7
 8002520:	bd80      	pop	{r7, pc}

08002522 <nRF24_SetDataRate>:

void nRF24_SetDataRate(uint8_t dr)
{
 8002522:	b580      	push	{r7, lr}
 8002524:	b084      	sub	sp, #16
 8002526:	af00      	add	r7, sp, #0
 8002528:	4603      	mov	r3, r0
 800252a:	71fb      	strb	r3, [r7, #7]
	uint8_t rf_setup = nRF24_ReadRegister(NRF24_RF_SETUP);
 800252c:	2006      	movs	r0, #6
 800252e:	f7ff feff 	bl	8002330 <nRF24_ReadRegister>
 8002532:	4603      	mov	r3, r0
 8002534:	73fb      	strb	r3, [r7, #15]
	rf_setup &= 0xD7; // Clear DR bits (1MBPS)
 8002536:	7bfb      	ldrb	r3, [r7, #15]
 8002538:	f023 0328 	bic.w	r3, r3, #40	; 0x28
 800253c:	73fb      	strb	r3, [r7, #15]
	if(dr == NRF24_RF_DR_250KBPS)
 800253e:	79fb      	ldrb	r3, [r7, #7]
 8002540:	2b02      	cmp	r3, #2
 8002542:	d104      	bne.n	800254e <nRF24_SetDataRate+0x2c>
		rf_setup |= (1<<NRF24_RF_DR_LOW);
 8002544:	7bfb      	ldrb	r3, [r7, #15]
 8002546:	f043 0320 	orr.w	r3, r3, #32
 800254a:	73fb      	strb	r3, [r7, #15]
 800254c:	e006      	b.n	800255c <nRF24_SetDataRate+0x3a>
	else if(dr == NRF24_RF_DR_2MBPS)
 800254e:	79fb      	ldrb	r3, [r7, #7]
 8002550:	2b01      	cmp	r3, #1
 8002552:	d103      	bne.n	800255c <nRF24_SetDataRate+0x3a>
		rf_setup |= (1<<NRF24_RF_DR_HIGH);
 8002554:	7bfb      	ldrb	r3, [r7, #15]
 8002556:	f043 0308 	orr.w	r3, r3, #8
 800255a:	73fb      	strb	r3, [r7, #15]
	nRF24_WriteRegister(NRF24_RF_SETUP, rf_setup);
 800255c:	7bfb      	ldrb	r3, [r7, #15]
 800255e:	4619      	mov	r1, r3
 8002560:	2006      	movs	r0, #6
 8002562:	f7ff ff2d 	bl	80023c0 <nRF24_WriteRegister>
}
 8002566:	bf00      	nop
 8002568:	3710      	adds	r7, #16
 800256a:	46bd      	mov	sp, r7
 800256c:	bd80      	pop	{r7, pc}

0800256e <nRF24_ReadStatus>:

uint8_t nRF24_ReadStatus(void)
{
 800256e:	b580      	push	{r7, lr}
 8002570:	af00      	add	r7, sp, #0
	return (nRF24_ReadRegister(NRF24_STATUS));
 8002572:	2007      	movs	r0, #7
 8002574:	f7ff fedc 	bl	8002330 <nRF24_ReadRegister>
 8002578:	4603      	mov	r3, r0
}
 800257a:	4618      	mov	r0, r3
 800257c:	bd80      	pop	{r7, pc}

0800257e <nRF24_WriteStatus>:

void nRF24_WriteStatus(uint8_t st)
{
 800257e:	b580      	push	{r7, lr}
 8002580:	b082      	sub	sp, #8
 8002582:	af00      	add	r7, sp, #0
 8002584:	4603      	mov	r3, r0
 8002586:	71fb      	strb	r3, [r7, #7]
	nRF24_WriteRegister(NRF24_STATUS, st);
 8002588:	79fb      	ldrb	r3, [r7, #7]
 800258a:	4619      	mov	r1, r3
 800258c:	2007      	movs	r0, #7
 800258e:	f7ff ff17 	bl	80023c0 <nRF24_WriteRegister>
}
 8002592:	bf00      	nop
 8002594:	3708      	adds	r7, #8
 8002596:	46bd      	mov	sp, r7
 8002598:	bd80      	pop	{r7, pc}
	...

0800259c <nRF24_FlushRX>:
{
	return nRF24_IsBitSetInFifoStatus(NRF24_RX_EMPTY);
}

void nRF24_FlushRX(void)
{
 800259c:	b580      	push	{r7, lr}
 800259e:	b082      	sub	sp, #8
 80025a0:	af00      	add	r7, sp, #0
	uint8_t command = NRF24_CMD_FLUSH_RX;
 80025a2:	23e2      	movs	r3, #226	; 0xe2
 80025a4:	71fb      	strb	r3, [r7, #7]

	NRF24_CSN_LOW;
 80025a6:	2200      	movs	r2, #0
 80025a8:	2104      	movs	r1, #4
 80025aa:	4808      	ldr	r0, [pc, #32]	; (80025cc <nRF24_FlushRX+0x30>)
 80025ac:	f001 fc1a 	bl	8003de4 <HAL_GPIO_WritePin>
	nRF24_SendSpi(&command, 1);
 80025b0:	1dfb      	adds	r3, r7, #7
 80025b2:	2101      	movs	r1, #1
 80025b4:	4618      	mov	r0, r3
 80025b6:	f7ff fe8f 	bl	80022d8 <nRF24_SendSpi>
	NRF24_CSN_HIGH;
 80025ba:	2201      	movs	r2, #1
 80025bc:	2104      	movs	r1, #4
 80025be:	4803      	ldr	r0, [pc, #12]	; (80025cc <nRF24_FlushRX+0x30>)
 80025c0:	f001 fc10 	bl	8003de4 <HAL_GPIO_WritePin>
}
 80025c4:	bf00      	nop
 80025c6:	3708      	adds	r7, #8
 80025c8:	46bd      	mov	sp, r7
 80025ca:	bd80      	pop	{r7, pc}
 80025cc:	40011400 	.word	0x40011400

080025d0 <nRF24_FlushTX>:

void nRF24_FlushTX(void)
{
 80025d0:	b580      	push	{r7, lr}
 80025d2:	b082      	sub	sp, #8
 80025d4:	af00      	add	r7, sp, #0
	uint8_t command = NRF24_CMD_FLUSH_TX;
 80025d6:	23e1      	movs	r3, #225	; 0xe1
 80025d8:	71fb      	strb	r3, [r7, #7]

	NRF24_CSN_LOW;
 80025da:	2200      	movs	r2, #0
 80025dc:	2104      	movs	r1, #4
 80025de:	4808      	ldr	r0, [pc, #32]	; (8002600 <nRF24_FlushTX+0x30>)
 80025e0:	f001 fc00 	bl	8003de4 <HAL_GPIO_WritePin>
	nRF24_SendSpi(&command, 1);
 80025e4:	1dfb      	adds	r3, r7, #7
 80025e6:	2101      	movs	r1, #1
 80025e8:	4618      	mov	r0, r3
 80025ea:	f7ff fe75 	bl	80022d8 <nRF24_SendSpi>
	NRF24_CSN_HIGH;
 80025ee:	2201      	movs	r2, #1
 80025f0:	2104      	movs	r1, #4
 80025f2:	4803      	ldr	r0, [pc, #12]	; (8002600 <nRF24_FlushTX+0x30>)
 80025f4:	f001 fbf6 	bl	8003de4 <HAL_GPIO_WritePin>
}
 80025f8:	bf00      	nop
 80025fa:	3708      	adds	r7, #8
 80025fc:	46bd      	mov	sp, r7
 80025fe:	bd80      	pop	{r7, pc}
 8002600:	40011400 	.word	0x40011400

08002604 <nRF24_EnableCRC>:

void nRF24_EnableCRC(uint8_t onoff)
{
 8002604:	b580      	push	{r7, lr}
 8002606:	b084      	sub	sp, #16
 8002608:	af00      	add	r7, sp, #0
 800260a:	4603      	mov	r3, r0
 800260c:	71fb      	strb	r3, [r7, #7]
	uint8_t config = nRF24_ReadConfig();
 800260e:	f7ff ff53 	bl	80024b8 <nRF24_ReadConfig>
 8002612:	4603      	mov	r3, r0
 8002614:	73fb      	strb	r3, [r7, #15]

	if(onoff)
 8002616:	79fb      	ldrb	r3, [r7, #7]
 8002618:	2b00      	cmp	r3, #0
 800261a:	d004      	beq.n	8002626 <nRF24_EnableCRC+0x22>
		config |= (1<<NRF24_EN_CRC);
 800261c:	7bfb      	ldrb	r3, [r7, #15]
 800261e:	f043 0308 	orr.w	r3, r3, #8
 8002622:	73fb      	strb	r3, [r7, #15]
 8002624:	e003      	b.n	800262e <nRF24_EnableCRC+0x2a>
	else
		config &= ~(1<<NRF24_EN_CRC);
 8002626:	7bfb      	ldrb	r3, [r7, #15]
 8002628:	f023 0308 	bic.w	r3, r3, #8
 800262c:	73fb      	strb	r3, [r7, #15]
	nRF24_WriteConfig(config);
 800262e:	7bfb      	ldrb	r3, [r7, #15]
 8002630:	4618      	mov	r0, r3
 8002632:	f7ff ff49 	bl	80024c8 <nRF24_WriteConfig>
}
 8002636:	bf00      	nop
 8002638:	3710      	adds	r7, #16
 800263a:	46bd      	mov	sp, r7
 800263c:	bd80      	pop	{r7, pc}

0800263e <nRF24_SetCRCLength>:

void nRF24_SetCRCLength(uint8_t crcl)
{
 800263e:	b580      	push	{r7, lr}
 8002640:	b084      	sub	sp, #16
 8002642:	af00      	add	r7, sp, #0
 8002644:	4603      	mov	r3, r0
 8002646:	71fb      	strb	r3, [r7, #7]
	uint8_t config = nRF24_ReadConfig();
 8002648:	f7ff ff36 	bl	80024b8 <nRF24_ReadConfig>
 800264c:	4603      	mov	r3, r0
 800264e:	73fb      	strb	r3, [r7, #15]
	if(crcl == NRF24_CRC_WIDTH_2B)
 8002650:	79fb      	ldrb	r3, [r7, #7]
 8002652:	2b01      	cmp	r3, #1
 8002654:	d104      	bne.n	8002660 <nRF24_SetCRCLength+0x22>
		config |= (1<<NRF24_CRCO);
 8002656:	7bfb      	ldrb	r3, [r7, #15]
 8002658:	f043 0304 	orr.w	r3, r3, #4
 800265c:	73fb      	strb	r3, [r7, #15]
 800265e:	e003      	b.n	8002668 <nRF24_SetCRCLength+0x2a>
	else
		config &= ~(1<<NRF24_CRCO);
 8002660:	7bfb      	ldrb	r3, [r7, #15]
 8002662:	f023 0304 	bic.w	r3, r3, #4
 8002666:	73fb      	strb	r3, [r7, #15]
	nRF24_WriteConfig(config);
 8002668:	7bfb      	ldrb	r3, [r7, #15]
 800266a:	4618      	mov	r0, r3
 800266c:	f7ff ff2c 	bl	80024c8 <nRF24_WriteConfig>
}
 8002670:	bf00      	nop
 8002672:	3710      	adds	r7, #16
 8002674:	46bd      	mov	sp, r7
 8002676:	bd80      	pop	{r7, pc}

08002678 <nRF24_SetRetries>:

void nRF24_SetRetries(uint8_t ard, uint8_t arc)
{
 8002678:	b580      	push	{r7, lr}
 800267a:	b082      	sub	sp, #8
 800267c:	af00      	add	r7, sp, #0
 800267e:	4603      	mov	r3, r0
 8002680:	460a      	mov	r2, r1
 8002682:	71fb      	strb	r3, [r7, #7]
 8002684:	4613      	mov	r3, r2
 8002686:	71bb      	strb	r3, [r7, #6]
	// ard * 250us, arc repeats
	nRF24_WriteRegister(NRF24_SETUP_RETR, (((ard & 0x0F)<<NRF24_ARD) | ((arc & 0x0F)<<NRF24_ARC)));
 8002688:	79fb      	ldrb	r3, [r7, #7]
 800268a:	011b      	lsls	r3, r3, #4
 800268c:	b25a      	sxtb	r2, r3
 800268e:	f997 3006 	ldrsb.w	r3, [r7, #6]
 8002692:	f003 030f 	and.w	r3, r3, #15
 8002696:	b25b      	sxtb	r3, r3
 8002698:	4313      	orrs	r3, r2
 800269a:	b25b      	sxtb	r3, r3
 800269c:	b2db      	uxtb	r3, r3
 800269e:	4619      	mov	r1, r3
 80026a0:	2004      	movs	r0, #4
 80026a2:	f7ff fe8d 	bl	80023c0 <nRF24_WriteRegister>
}
 80026a6:	bf00      	nop
 80026a8:	3708      	adds	r7, #8
 80026aa:	46bd      	mov	sp, r7
 80026ac:	bd80      	pop	{r7, pc}

080026ae <nRF24_SetRFChannel>:

void nRF24_SetRFChannel(uint8_t channel)
{
 80026ae:	b580      	push	{r7, lr}
 80026b0:	b082      	sub	sp, #8
 80026b2:	af00      	add	r7, sp, #0
 80026b4:	4603      	mov	r3, r0
 80026b6:	71fb      	strb	r3, [r7, #7]
	nRF24_WriteRegister(NRF24_RF_CH, (channel & 0x7F));
 80026b8:	79fb      	ldrb	r3, [r7, #7]
 80026ba:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 80026be:	b2db      	uxtb	r3, r3
 80026c0:	4619      	mov	r1, r3
 80026c2:	2005      	movs	r0, #5
 80026c4:	f7ff fe7c 	bl	80023c0 <nRF24_WriteRegister>
}
 80026c8:	bf00      	nop
 80026ca:	3708      	adds	r7, #8
 80026cc:	46bd      	mov	sp, r7
 80026ce:	bd80      	pop	{r7, pc}

080026d0 <nRF24_EnablePipe>:
		pipe = 5; // Block too high pipe number
	nRF24_WriteRegister(NRF24_RX_PW_P0 + pipe , (size & 0x3F));
}

void nRF24_EnablePipe(uint8_t pipe, uint8_t onoff)
{
 80026d0:	b580      	push	{r7, lr}
 80026d2:	b084      	sub	sp, #16
 80026d4:	af00      	add	r7, sp, #0
 80026d6:	4603      	mov	r3, r0
 80026d8:	460a      	mov	r2, r1
 80026da:	71fb      	strb	r3, [r7, #7]
 80026dc:	4613      	mov	r3, r2
 80026de:	71bb      	strb	r3, [r7, #6]
	if(pipe > 5)
 80026e0:	79fb      	ldrb	r3, [r7, #7]
 80026e2:	2b05      	cmp	r3, #5
 80026e4:	d901      	bls.n	80026ea <nRF24_EnablePipe+0x1a>
		pipe = 5; // Block too high pipe number
 80026e6:	2305      	movs	r3, #5
 80026e8:	71fb      	strb	r3, [r7, #7]
	uint8_t enable_pipe = nRF24_ReadRegister(NRF24_EN_RXADDR);
 80026ea:	2002      	movs	r0, #2
 80026ec:	f7ff fe20 	bl	8002330 <nRF24_ReadRegister>
 80026f0:	4603      	mov	r3, r0
 80026f2:	73fb      	strb	r3, [r7, #15]
	if(onoff == 1)
 80026f4:	79bb      	ldrb	r3, [r7, #6]
 80026f6:	2b01      	cmp	r3, #1
 80026f8:	d10a      	bne.n	8002710 <nRF24_EnablePipe+0x40>
		enable_pipe |= (1<<pipe);
 80026fa:	79fb      	ldrb	r3, [r7, #7]
 80026fc:	2201      	movs	r2, #1
 80026fe:	fa02 f303 	lsl.w	r3, r2, r3
 8002702:	b25a      	sxtb	r2, r3
 8002704:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8002708:	4313      	orrs	r3, r2
 800270a:	b25b      	sxtb	r3, r3
 800270c:	73fb      	strb	r3, [r7, #15]
 800270e:	e00b      	b.n	8002728 <nRF24_EnablePipe+0x58>
	else
		enable_pipe &= ~(1<<pipe);
 8002710:	79fb      	ldrb	r3, [r7, #7]
 8002712:	2201      	movs	r2, #1
 8002714:	fa02 f303 	lsl.w	r3, r2, r3
 8002718:	b25b      	sxtb	r3, r3
 800271a:	43db      	mvns	r3, r3
 800271c:	b25a      	sxtb	r2, r3
 800271e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8002722:	4013      	ands	r3, r2
 8002724:	b25b      	sxtb	r3, r3
 8002726:	73fb      	strb	r3, [r7, #15]
	nRF24_WriteRegister(NRF24_EN_RXADDR, enable_pipe);
 8002728:	7bfb      	ldrb	r3, [r7, #15]
 800272a:	4619      	mov	r1, r3
 800272c:	2002      	movs	r0, #2
 800272e:	f7ff fe47 	bl	80023c0 <nRF24_WriteRegister>
}
 8002732:	bf00      	nop
 8002734:	3710      	adds	r7, #16
 8002736:	46bd      	mov	sp, r7
 8002738:	bd80      	pop	{r7, pc}

0800273a <nRF24_AutoACK>:

void nRF24_AutoACK(uint8_t pipe, uint8_t onoff)
{
 800273a:	b580      	push	{r7, lr}
 800273c:	b084      	sub	sp, #16
 800273e:	af00      	add	r7, sp, #0
 8002740:	4603      	mov	r3, r0
 8002742:	460a      	mov	r2, r1
 8002744:	71fb      	strb	r3, [r7, #7]
 8002746:	4613      	mov	r3, r2
 8002748:	71bb      	strb	r3, [r7, #6]
	if(pipe > 5)
 800274a:	79fb      	ldrb	r3, [r7, #7]
 800274c:	2b05      	cmp	r3, #5
 800274e:	d901      	bls.n	8002754 <nRF24_AutoACK+0x1a>
		pipe = 5; // Block too high pipe number
 8002750:	2305      	movs	r3, #5
 8002752:	71fb      	strb	r3, [r7, #7]
	uint8_t enaa = nRF24_ReadRegister(NRF24_EN_AA);
 8002754:	2001      	movs	r0, #1
 8002756:	f7ff fdeb 	bl	8002330 <nRF24_ReadRegister>
 800275a:	4603      	mov	r3, r0
 800275c:	73fb      	strb	r3, [r7, #15]
	if(onoff == 1)
 800275e:	79bb      	ldrb	r3, [r7, #6]
 8002760:	2b01      	cmp	r3, #1
 8002762:	d10a      	bne.n	800277a <nRF24_AutoACK+0x40>
		enaa |= (1<<pipe);
 8002764:	79fb      	ldrb	r3, [r7, #7]
 8002766:	2201      	movs	r2, #1
 8002768:	fa02 f303 	lsl.w	r3, r2, r3
 800276c:	b25a      	sxtb	r2, r3
 800276e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8002772:	4313      	orrs	r3, r2
 8002774:	b25b      	sxtb	r3, r3
 8002776:	73fb      	strb	r3, [r7, #15]
 8002778:	e00b      	b.n	8002792 <nRF24_AutoACK+0x58>
	else
		enaa &= ~(1<<pipe);
 800277a:	79fb      	ldrb	r3, [r7, #7]
 800277c:	2201      	movs	r2, #1
 800277e:	fa02 f303 	lsl.w	r3, r2, r3
 8002782:	b25b      	sxtb	r3, r3
 8002784:	43db      	mvns	r3, r3
 8002786:	b25a      	sxtb	r2, r3
 8002788:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800278c:	4013      	ands	r3, r2
 800278e:	b25b      	sxtb	r3, r3
 8002790:	73fb      	strb	r3, [r7, #15]
	nRF24_WriteRegister(NRF24_EN_AA, enaa);
 8002792:	7bfb      	ldrb	r3, [r7, #15]
 8002794:	4619      	mov	r1, r3
 8002796:	2001      	movs	r0, #1
 8002798:	f7ff fe12 	bl	80023c0 <nRF24_WriteRegister>
}
 800279c:	bf00      	nop
 800279e:	3710      	adds	r7, #16
 80027a0:	46bd      	mov	sp, r7
 80027a2:	bd80      	pop	{r7, pc}

080027a4 <nRF24_SetAddressWidth>:

void nRF24_SetAddressWidth(uint8_t size)
{
 80027a4:	b580      	push	{r7, lr}
 80027a6:	b082      	sub	sp, #8
 80027a8:	af00      	add	r7, sp, #0
 80027aa:	4603      	mov	r3, r0
 80027ac:	71fb      	strb	r3, [r7, #7]
	if(size > 5)
 80027ae:	79fb      	ldrb	r3, [r7, #7]
 80027b0:	2b05      	cmp	r3, #5
 80027b2:	d901      	bls.n	80027b8 <nRF24_SetAddressWidth+0x14>
		size = 5; // Maximum are 5 bytes
 80027b4:	2305      	movs	r3, #5
 80027b6:	71fb      	strb	r3, [r7, #7]
	if(size < 3)
 80027b8:	79fb      	ldrb	r3, [r7, #7]
 80027ba:	2b02      	cmp	r3, #2
 80027bc:	d801      	bhi.n	80027c2 <nRF24_SetAddressWidth+0x1e>
		size = 3; // Minimum are 3 bytes
 80027be:	2303      	movs	r3, #3
 80027c0:	71fb      	strb	r3, [r7, #7]
	nRF24_WriteRegister(NRF24_SETUP_AW, ((size-2) & 0x03));
 80027c2:	79fb      	ldrb	r3, [r7, #7]
 80027c4:	3b02      	subs	r3, #2
 80027c6:	b2db      	uxtb	r3, r3
 80027c8:	f003 0303 	and.w	r3, r3, #3
 80027cc:	b2db      	uxtb	r3, r3
 80027ce:	4619      	mov	r1, r3
 80027d0:	2003      	movs	r0, #3
 80027d2:	f7ff fdf5 	bl	80023c0 <nRF24_WriteRegister>
}
 80027d6:	bf00      	nop
 80027d8:	3708      	adds	r7, #8
 80027da:	46bd      	mov	sp, r7
 80027dc:	bd80      	pop	{r7, pc}

080027de <nRF24_SetRXAddress>:

void nRF24_SetRXAddress(uint8_t pipe, uint8_t* address)
{
 80027de:	b580      	push	{r7, lr}
 80027e0:	b084      	sub	sp, #16
 80027e2:	af00      	add	r7, sp, #0
 80027e4:	4603      	mov	r3, r0
 80027e6:	6039      	str	r1, [r7, #0]
 80027e8:	71fb      	strb	r3, [r7, #7]
	// pipe 0 and pipe 1 are fully 40-bits storaged
	// pipe 2-5 is storaged only with last byte. Rest are as same as pipe 1
	// pipe 0 and 1 are LSByte first so they are needed to reverse address
	if((pipe == 0) || (pipe == 1))
 80027ea:	79fb      	ldrb	r3, [r7, #7]
 80027ec:	2b00      	cmp	r3, #0
 80027ee:	d002      	beq.n	80027f6 <nRF24_SetRXAddress+0x18>
 80027f0:	79fb      	ldrb	r3, [r7, #7]
 80027f2:	2b01      	cmp	r3, #1
 80027f4:	d11d      	bne.n	8002832 <nRF24_SetRXAddress+0x54>
	{
		uint8_t i;
		uint8_t address_rev[NRF24_ADDR_SIZE];
		for(i = 0; i<NRF24_ADDR_SIZE; i++)
 80027f6:	2300      	movs	r3, #0
 80027f8:	73fb      	strb	r3, [r7, #15]
 80027fa:	e00d      	b.n	8002818 <nRF24_SetRXAddress+0x3a>
			address_rev[NRF24_ADDR_SIZE - 1 - i] = address[i];
 80027fc:	7bfb      	ldrb	r3, [r7, #15]
 80027fe:	683a      	ldr	r2, [r7, #0]
 8002800:	441a      	add	r2, r3
 8002802:	7bfb      	ldrb	r3, [r7, #15]
 8002804:	f1c3 0302 	rsb	r3, r3, #2
 8002808:	7812      	ldrb	r2, [r2, #0]
 800280a:	3310      	adds	r3, #16
 800280c:	443b      	add	r3, r7
 800280e:	f803 2c04 	strb.w	r2, [r3, #-4]
		for(i = 0; i<NRF24_ADDR_SIZE; i++)
 8002812:	7bfb      	ldrb	r3, [r7, #15]
 8002814:	3301      	adds	r3, #1
 8002816:	73fb      	strb	r3, [r7, #15]
 8002818:	7bfb      	ldrb	r3, [r7, #15]
 800281a:	2b02      	cmp	r3, #2
 800281c:	d9ee      	bls.n	80027fc <nRF24_SetRXAddress+0x1e>
		nRF24_WriteRegisters(NRF24_RX_ADDR_P0 + pipe, address_rev, NRF24_ADDR_SIZE);
 800281e:	79fb      	ldrb	r3, [r7, #7]
 8002820:	330a      	adds	r3, #10
 8002822:	b2db      	uxtb	r3, r3
 8002824:	f107 010c 	add.w	r1, r7, #12
 8002828:	2203      	movs	r2, #3
 800282a:	4618      	mov	r0, r3
 800282c:	f7ff fdee 	bl	800240c <nRF24_WriteRegisters>
	{
 8002830:	e00a      	b.n	8002848 <nRF24_SetRXAddress+0x6a>
	}
	else
		nRF24_WriteRegister(NRF24_RX_ADDR_P0 + pipe, address[NRF24_ADDR_SIZE-1]);
 8002832:	79fb      	ldrb	r3, [r7, #7]
 8002834:	330a      	adds	r3, #10
 8002836:	b2da      	uxtb	r2, r3
 8002838:	683b      	ldr	r3, [r7, #0]
 800283a:	3302      	adds	r3, #2
 800283c:	781b      	ldrb	r3, [r3, #0]
 800283e:	4619      	mov	r1, r3
 8002840:	4610      	mov	r0, r2
 8002842:	f7ff fdbd 	bl	80023c0 <nRF24_WriteRegister>
}
 8002846:	bf00      	nop
 8002848:	bf00      	nop
 800284a:	3710      	adds	r7, #16
 800284c:	46bd      	mov	sp, r7
 800284e:	bd80      	pop	{r7, pc}

08002850 <nRF24_SetTXAddress>:

void nRF24_SetTXAddress(uint8_t* address)
{
 8002850:	b580      	push	{r7, lr}
 8002852:	b084      	sub	sp, #16
 8002854:	af00      	add	r7, sp, #0
 8002856:	6078      	str	r0, [r7, #4]
	// TX address is storaged similar to RX pipe 0 - LSByte first
	uint8_t i;
	uint8_t address_rev[NRF24_ADDR_SIZE];

	nRF24_ReadRegisters(NRF24_RX_ADDR_P0, address_rev, NRF24_ADDR_SIZE); // Backup P0 address
 8002858:	f107 030c 	add.w	r3, r7, #12
 800285c:	2203      	movs	r2, #3
 800285e:	4619      	mov	r1, r3
 8002860:	200a      	movs	r0, #10
 8002862:	f7ff fd89 	bl	8002378 <nRF24_ReadRegisters>
	for(i = 0; i<NRF24_ADDR_SIZE; i++)
 8002866:	2300      	movs	r3, #0
 8002868:	73fb      	strb	r3, [r7, #15]
 800286a:	e00c      	b.n	8002886 <nRF24_SetTXAddress+0x36>
		addr_p0_backup[NRF24_ADDR_SIZE - 1 - i] = address_rev[i]; //Reverse P0 address
 800286c:	7bfa      	ldrb	r2, [r7, #15]
 800286e:	7bfb      	ldrb	r3, [r7, #15]
 8002870:	f1c3 0302 	rsb	r3, r3, #2
 8002874:	3210      	adds	r2, #16
 8002876:	443a      	add	r2, r7
 8002878:	f812 1c04 	ldrb.w	r1, [r2, #-4]
 800287c:	4a16      	ldr	r2, [pc, #88]	; (80028d8 <nRF24_SetTXAddress+0x88>)
 800287e:	54d1      	strb	r1, [r2, r3]
	for(i = 0; i<NRF24_ADDR_SIZE; i++)
 8002880:	7bfb      	ldrb	r3, [r7, #15]
 8002882:	3301      	adds	r3, #1
 8002884:	73fb      	strb	r3, [r7, #15]
 8002886:	7bfb      	ldrb	r3, [r7, #15]
 8002888:	2b02      	cmp	r3, #2
 800288a:	d9ef      	bls.n	800286c <nRF24_SetTXAddress+0x1c>

	for(i = 0; i<NRF24_ADDR_SIZE; i++)
 800288c:	2300      	movs	r3, #0
 800288e:	73fb      	strb	r3, [r7, #15]
 8002890:	e00d      	b.n	80028ae <nRF24_SetTXAddress+0x5e>
		address_rev[NRF24_ADDR_SIZE - 1 - i] = address[i];
 8002892:	7bfb      	ldrb	r3, [r7, #15]
 8002894:	687a      	ldr	r2, [r7, #4]
 8002896:	441a      	add	r2, r3
 8002898:	7bfb      	ldrb	r3, [r7, #15]
 800289a:	f1c3 0302 	rsb	r3, r3, #2
 800289e:	7812      	ldrb	r2, [r2, #0]
 80028a0:	3310      	adds	r3, #16
 80028a2:	443b      	add	r3, r7
 80028a4:	f803 2c04 	strb.w	r2, [r3, #-4]
	for(i = 0; i<NRF24_ADDR_SIZE; i++)
 80028a8:	7bfb      	ldrb	r3, [r7, #15]
 80028aa:	3301      	adds	r3, #1
 80028ac:	73fb      	strb	r3, [r7, #15]
 80028ae:	7bfb      	ldrb	r3, [r7, #15]
 80028b0:	2b02      	cmp	r3, #2
 80028b2:	d9ee      	bls.n	8002892 <nRF24_SetTXAddress+0x42>
	//make pipe 0 address backup;

	nRF24_WriteRegisters(NRF24_RX_ADDR_P0, address_rev, NRF24_ADDR_SIZE); // Pipe 0 must be same for auto ACk
 80028b4:	f107 030c 	add.w	r3, r7, #12
 80028b8:	2203      	movs	r2, #3
 80028ba:	4619      	mov	r1, r3
 80028bc:	200a      	movs	r0, #10
 80028be:	f7ff fda5 	bl	800240c <nRF24_WriteRegisters>
	nRF24_WriteRegisters(NRF24_TX_ADDR, address_rev, NRF24_ADDR_SIZE);
 80028c2:	f107 030c 	add.w	r3, r7, #12
 80028c6:	2203      	movs	r2, #3
 80028c8:	4619      	mov	r1, r3
 80028ca:	2010      	movs	r0, #16
 80028cc:	f7ff fd9e 	bl	800240c <nRF24_WriteRegisters>

}
 80028d0:	bf00      	nop
 80028d2:	3710      	adds	r7, #16
 80028d4:	46bd      	mov	sp, r7
 80028d6:	bd80      	pop	{r7, pc}
 80028d8:	2000042c 	.word	0x2000042c

080028dc <nRF24_ClearInterrupts>:

void nRF24_ClearInterrupts(void)
{
 80028dc:	b580      	push	{r7, lr}
 80028de:	b082      	sub	sp, #8
 80028e0:	af00      	add	r7, sp, #0
	uint8_t status = nRF24_ReadStatus();
 80028e2:	f7ff fe44 	bl	800256e <nRF24_ReadStatus>
 80028e6:	4603      	mov	r3, r0
 80028e8:	71fb      	strb	r3, [r7, #7]
	status |= (7<<4); // Clear bits 4, 5, 6.
 80028ea:	79fb      	ldrb	r3, [r7, #7]
 80028ec:	f043 0370 	orr.w	r3, r3, #112	; 0x70
 80028f0:	71fb      	strb	r3, [r7, #7]
	nRF24_WriteStatus(status);
 80028f2:	79fb      	ldrb	r3, [r7, #7]
 80028f4:	4618      	mov	r0, r3
 80028f6:	f7ff fe42 	bl	800257e <nRF24_WriteStatus>
}
 80028fa:	bf00      	nop
 80028fc:	3708      	adds	r7, #8
 80028fe:	46bd      	mov	sp, r7
 8002900:	bd80      	pop	{r7, pc}

08002902 <nRF24_GetDynamicPayloadSize>:

uint8_t nRF24_GetDynamicPayloadSize(void)
{
 8002902:	b580      	push	{r7, lr}
 8002904:	b082      	sub	sp, #8
 8002906:	af00      	add	r7, sp, #0
    uint8_t result = 0;
 8002908:	2300      	movs	r3, #0
 800290a:	71fb      	strb	r3, [r7, #7]

    result = nRF24_ReadRegister(NRF24_CMD_R_RX_PL_WID);
 800290c:	2060      	movs	r0, #96	; 0x60
 800290e:	f7ff fd0f 	bl	8002330 <nRF24_ReadRegister>
 8002912:	4603      	mov	r3, r0
 8002914:	71fb      	strb	r3, [r7, #7]

    if (result > 32) // Something went wrong :)
 8002916:	79fb      	ldrb	r3, [r7, #7]
 8002918:	2b20      	cmp	r3, #32
 800291a:	d906      	bls.n	800292a <nRF24_GetDynamicPayloadSize+0x28>
    {
        nRF24_FlushRX();
 800291c:	f7ff fe3e 	bl	800259c <nRF24_FlushRX>
        nRF24_Delay_ms(2);
 8002920:	2002      	movs	r0, #2
 8002922:	f7ff fccb 	bl	80022bc <nRF24_Delay_ms>
        return 0;
 8002926:	2300      	movs	r3, #0
 8002928:	e000      	b.n	800292c <nRF24_GetDynamicPayloadSize+0x2a>
    }
    return result;
 800292a:	79fb      	ldrb	r3, [r7, #7]
}
 800292c:	4618      	mov	r0, r3
 800292e:	3708      	adds	r7, #8
 8002930:	46bd      	mov	sp, r7
 8002932:	bd80      	pop	{r7, pc}

08002934 <nRF24_EnableRXDataReadyIRQ>:

void nRF24_EnableRXDataReadyIRQ(uint8_t onoff)
{
 8002934:	b580      	push	{r7, lr}
 8002936:	b084      	sub	sp, #16
 8002938:	af00      	add	r7, sp, #0
 800293a:	4603      	mov	r3, r0
 800293c:	71fb      	strb	r3, [r7, #7]
	uint8_t config = nRF24_ReadConfig();
 800293e:	f7ff fdbb 	bl	80024b8 <nRF24_ReadConfig>
 8002942:	4603      	mov	r3, r0
 8002944:	73fb      	strb	r3, [r7, #15]

	if(!onoff)
 8002946:	79fb      	ldrb	r3, [r7, #7]
 8002948:	2b00      	cmp	r3, #0
 800294a:	d104      	bne.n	8002956 <nRF24_EnableRXDataReadyIRQ+0x22>
		config |= (1<<NRF24_RX_DR);
 800294c:	7bfb      	ldrb	r3, [r7, #15]
 800294e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8002952:	73fb      	strb	r3, [r7, #15]
 8002954:	e003      	b.n	800295e <nRF24_EnableRXDataReadyIRQ+0x2a>
	else
		config &= ~(1<<NRF24_RX_DR);
 8002956:	7bfb      	ldrb	r3, [r7, #15]
 8002958:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800295c:	73fb      	strb	r3, [r7, #15]

	nRF24_WriteConfig(config);
 800295e:	7bfb      	ldrb	r3, [r7, #15]
 8002960:	4618      	mov	r0, r3
 8002962:	f7ff fdb1 	bl	80024c8 <nRF24_WriteConfig>
}
 8002966:	bf00      	nop
 8002968:	3710      	adds	r7, #16
 800296a:	46bd      	mov	sp, r7
 800296c:	bd80      	pop	{r7, pc}

0800296e <nRF24_EnableTXDataSentIRQ>:

void nRF24_EnableTXDataSentIRQ(uint8_t onoff)
{
 800296e:	b580      	push	{r7, lr}
 8002970:	b084      	sub	sp, #16
 8002972:	af00      	add	r7, sp, #0
 8002974:	4603      	mov	r3, r0
 8002976:	71fb      	strb	r3, [r7, #7]
	uint8_t config = nRF24_ReadConfig();
 8002978:	f7ff fd9e 	bl	80024b8 <nRF24_ReadConfig>
 800297c:	4603      	mov	r3, r0
 800297e:	73fb      	strb	r3, [r7, #15]

	if(!onoff)
 8002980:	79fb      	ldrb	r3, [r7, #7]
 8002982:	2b00      	cmp	r3, #0
 8002984:	d104      	bne.n	8002990 <nRF24_EnableTXDataSentIRQ+0x22>
		config |= (1<<NRF24_TX_DS);
 8002986:	7bfb      	ldrb	r3, [r7, #15]
 8002988:	f043 0320 	orr.w	r3, r3, #32
 800298c:	73fb      	strb	r3, [r7, #15]
 800298e:	e003      	b.n	8002998 <nRF24_EnableTXDataSentIRQ+0x2a>
	else
		config &= ~(1<<NRF24_TX_DS);
 8002990:	7bfb      	ldrb	r3, [r7, #15]
 8002992:	f023 0320 	bic.w	r3, r3, #32
 8002996:	73fb      	strb	r3, [r7, #15]

	nRF24_WriteConfig(config);
 8002998:	7bfb      	ldrb	r3, [r7, #15]
 800299a:	4618      	mov	r0, r3
 800299c:	f7ff fd94 	bl	80024c8 <nRF24_WriteConfig>
}
 80029a0:	bf00      	nop
 80029a2:	3710      	adds	r7, #16
 80029a4:	46bd      	mov	sp, r7
 80029a6:	bd80      	pop	{r7, pc}

080029a8 <nRF24_EnableMaxRetransmitIRQ>:

void nRF24_EnableMaxRetransmitIRQ(uint8_t onoff)
{
 80029a8:	b580      	push	{r7, lr}
 80029aa:	b084      	sub	sp, #16
 80029ac:	af00      	add	r7, sp, #0
 80029ae:	4603      	mov	r3, r0
 80029b0:	71fb      	strb	r3, [r7, #7]
	uint8_t config = nRF24_ReadConfig();
 80029b2:	f7ff fd81 	bl	80024b8 <nRF24_ReadConfig>
 80029b6:	4603      	mov	r3, r0
 80029b8:	73fb      	strb	r3, [r7, #15]

	if(!onoff)
 80029ba:	79fb      	ldrb	r3, [r7, #7]
 80029bc:	2b00      	cmp	r3, #0
 80029be:	d104      	bne.n	80029ca <nRF24_EnableMaxRetransmitIRQ+0x22>
		config |= (1<<NRF24_MAX_RT);
 80029c0:	7bfb      	ldrb	r3, [r7, #15]
 80029c2:	f043 0310 	orr.w	r3, r3, #16
 80029c6:	73fb      	strb	r3, [r7, #15]
 80029c8:	e003      	b.n	80029d2 <nRF24_EnableMaxRetransmitIRQ+0x2a>
	else
		config &= ~(1<<NRF24_MAX_RT);
 80029ca:	7bfb      	ldrb	r3, [r7, #15]
 80029cc:	f023 0310 	bic.w	r3, r3, #16
 80029d0:	73fb      	strb	r3, [r7, #15]

	nRF24_WriteConfig(config);
 80029d2:	7bfb      	ldrb	r3, [r7, #15]
 80029d4:	4618      	mov	r0, r3
 80029d6:	f7ff fd77 	bl	80024c8 <nRF24_WriteConfig>
}
 80029da:	bf00      	nop
 80029dc:	3710      	adds	r7, #16
 80029de:	46bd      	mov	sp, r7
 80029e0:	bd80      	pop	{r7, pc}

080029e2 <nRF24_ReadRXPaylaod>:
	}while(!((status & (1<<NRF24_MAX_RT)) || (status & (1<<NRF24_TX_DS))));

}

void nRF24_ReadRXPaylaod(uint8_t *data, uint8_t *size)
{
 80029e2:	b580      	push	{r7, lr}
 80029e4:	b082      	sub	sp, #8
 80029e6:	af00      	add	r7, sp, #0
 80029e8:	6078      	str	r0, [r7, #4]
 80029ea:	6039      	str	r1, [r7, #0]
#if (NRF24_DYNAMIC_PAYLOAD == 1)
	*size = nRF24_GetDynamicPayloadSize();
 80029ec:	f7ff ff89 	bl	8002902 <nRF24_GetDynamicPayloadSize>
 80029f0:	4603      	mov	r3, r0
 80029f2:	461a      	mov	r2, r3
 80029f4:	683b      	ldr	r3, [r7, #0]
 80029f6:	701a      	strb	r2, [r3, #0]
	nRF24_ReadRegisters(NRF24_CMD_R_RX_PAYLOAD, data, *size);
 80029f8:	683b      	ldr	r3, [r7, #0]
 80029fa:	781b      	ldrb	r3, [r3, #0]
 80029fc:	461a      	mov	r2, r3
 80029fe:	6879      	ldr	r1, [r7, #4]
 8002a00:	2061      	movs	r0, #97	; 0x61
 8002a02:	f7ff fcb9 	bl	8002378 <nRF24_ReadRegisters>
#if (NRF24_INTERRUPT_MODE == 0)
	nRF24_WriteRegister(NRF24_STATUS, (1<NRF24_RX_DR));
	if(nRF24_ReadStatus() & (1<<NRF24_TX_DS))
		nRF24_WriteRegister(NRF24_STATUS, (1<<NRF24_TX_DS));
#endif
}
 8002a06:	bf00      	nop
 8002a08:	3708      	adds	r7, #8
 8002a0a:	46bd      	mov	sp, r7
 8002a0c:	bd80      	pop	{r7, pc}
	...

08002a10 <nRF24_IRQ_Handler>:
	}
	return 0;
}

void nRF24_IRQ_Handler(void)
{
 8002a10:	b480      	push	{r7}
 8002a12:	af00      	add	r7, sp, #0

	Nrf24InterruptFlag = 1;
 8002a14:	4b03      	ldr	r3, [pc, #12]	; (8002a24 <nRF24_IRQ_Handler+0x14>)
 8002a16:	2201      	movs	r2, #1
 8002a18:	701a      	strb	r2, [r3, #0]
}
 8002a1a:	bf00      	nop
 8002a1c:	46bd      	mov	sp, r7
 8002a1e:	bc80      	pop	{r7}
 8002a20:	4770      	bx	lr
 8002a22:	bf00      	nop
 8002a24:	20000432 	.word	0x20000432

08002a28 <nRF24_IRQ_Read>:

void nRF24_IRQ_Read(void)
{
 8002a28:	b580      	push	{r7, lr}
 8002a2a:	b082      	sub	sp, #8
 8002a2c:	af00      	add	r7, sp, #0
	if(Nrf24InterruptFlag == 1)
 8002a2e:	4b1d      	ldr	r3, [pc, #116]	; (8002aa4 <nRF24_IRQ_Read+0x7c>)
 8002a30:	781b      	ldrb	r3, [r3, #0]
 8002a32:	b2db      	uxtb	r3, r3
 8002a34:	2b01      	cmp	r3, #1
 8002a36:	d130      	bne.n	8002a9a <nRF24_IRQ_Read+0x72>
	{
		Nrf24InterruptFlag = 0;
 8002a38:	4b1a      	ldr	r3, [pc, #104]	; (8002aa4 <nRF24_IRQ_Read+0x7c>)
 8002a3a:	2200      	movs	r2, #0
 8002a3c:	701a      	strb	r2, [r3, #0]

		uint8_t status = nRF24_ReadStatus();
 8002a3e:	f7ff fd96 	bl	800256e <nRF24_ReadStatus>
 8002a42:	4603      	mov	r3, r0
 8002a44:	71bb      	strb	r3, [r7, #6]
		uint8_t ClearIrq = 0;
 8002a46:	2300      	movs	r3, #0
 8002a48:	71fb      	strb	r3, [r7, #7]
		// RX FIFO Interrupt
		if ((status & (1 << NRF24_RX_DR)))
 8002a4a:	79bb      	ldrb	r3, [r7, #6]
 8002a4c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002a50:	2b00      	cmp	r3, #0
 8002a52:	d006      	beq.n	8002a62 <nRF24_IRQ_Read+0x3a>
		{
			nrf24_rx_flag = 1;
 8002a54:	4b14      	ldr	r3, [pc, #80]	; (8002aa8 <nRF24_IRQ_Read+0x80>)
 8002a56:	2201      	movs	r2, #1
 8002a58:	701a      	strb	r2, [r3, #0]
			ClearIrq |= (1<<NRF24_RX_DR); // Interrupt flag clear
 8002a5a:	79fb      	ldrb	r3, [r7, #7]
 8002a5c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8002a60:	71fb      	strb	r3, [r7, #7]
		}
		// TX Data Sent interrupt
		if ((status & (1 << NRF24_TX_DS)))
 8002a62:	79bb      	ldrb	r3, [r7, #6]
 8002a64:	f003 0320 	and.w	r3, r3, #32
 8002a68:	2b00      	cmp	r3, #0
 8002a6a:	d006      	beq.n	8002a7a <nRF24_IRQ_Read+0x52>
		{
			nrf24_tx_flag = 1;
 8002a6c:	4b0f      	ldr	r3, [pc, #60]	; (8002aac <nRF24_IRQ_Read+0x84>)
 8002a6e:	2201      	movs	r2, #1
 8002a70:	701a      	strb	r2, [r3, #0]
			ClearIrq |= (1<<NRF24_TX_DS); // Interrupt flag clear
 8002a72:	79fb      	ldrb	r3, [r7, #7]
 8002a74:	f043 0320 	orr.w	r3, r3, #32
 8002a78:	71fb      	strb	r3, [r7, #7]
		}
		// Max Retransmits interrupt
		if ((status & (1 << NRF24_MAX_RT)))
 8002a7a:	79bb      	ldrb	r3, [r7, #6]
 8002a7c:	f003 0310 	and.w	r3, r3, #16
 8002a80:	2b00      	cmp	r3, #0
 8002a82:	d006      	beq.n	8002a92 <nRF24_IRQ_Read+0x6a>
		{
			nrf24_mr_flag = 1;
 8002a84:	4b0a      	ldr	r3, [pc, #40]	; (8002ab0 <nRF24_IRQ_Read+0x88>)
 8002a86:	2201      	movs	r2, #1
 8002a88:	701a      	strb	r2, [r3, #0]
			ClearIrq |= (1<<NRF24_MAX_RT); // Interrupt flag clear
 8002a8a:	79fb      	ldrb	r3, [r7, #7]
 8002a8c:	f043 0310 	orr.w	r3, r3, #16
 8002a90:	71fb      	strb	r3, [r7, #7]
		}

		nRF24_WriteStatus(ClearIrq);
 8002a92:	79fb      	ldrb	r3, [r7, #7]
 8002a94:	4618      	mov	r0, r3
 8002a96:	f7ff fd72 	bl	800257e <nRF24_WriteStatus>
	}
}
 8002a9a:	bf00      	nop
 8002a9c:	3708      	adds	r7, #8
 8002a9e:	46bd      	mov	sp, r7
 8002aa0:	bd80      	pop	{r7, pc}
 8002aa2:	bf00      	nop
 8002aa4:	20000432 	.word	0x20000432
 8002aa8:	2000042f 	.word	0x2000042f
 8002aac:	20000430 	.word	0x20000430
 8002ab0:	20000431 	.word	0x20000431

08002ab4 <nRF24_Event>:
{

}

void nRF24_Event(void)
{
 8002ab4:	b580      	push	{r7, lr}
 8002ab6:	af00      	add	r7, sp, #0
	nRF24_IRQ_Read(); // Check if there was any interrupt
 8002ab8:	f7ff ffb6 	bl	8002a28 <nRF24_IRQ_Read>

	if(nrf24_rx_flag)
 8002abc:	4b0e      	ldr	r3, [pc, #56]	; (8002af8 <nRF24_Event+0x44>)
 8002abe:	781b      	ldrb	r3, [r3, #0]
 8002ac0:	2b00      	cmp	r3, #0
 8002ac2:	d004      	beq.n	8002ace <nRF24_Event+0x1a>
	{
		nRF24_EventRxCallback();
 8002ac4:	f000 f962 	bl	8002d8c <nRF24_EventRxCallback>
		nrf24_rx_flag = 0;
 8002ac8:	4b0b      	ldr	r3, [pc, #44]	; (8002af8 <nRF24_Event+0x44>)
 8002aca:	2200      	movs	r2, #0
 8002acc:	701a      	strb	r2, [r3, #0]
	}

	if(nrf24_tx_flag)
 8002ace:	4b0b      	ldr	r3, [pc, #44]	; (8002afc <nRF24_Event+0x48>)
 8002ad0:	781b      	ldrb	r3, [r3, #0]
 8002ad2:	2b00      	cmp	r3, #0
 8002ad4:	d004      	beq.n	8002ae0 <nRF24_Event+0x2c>
	{
		nRF24_EventTxCallback();
 8002ad6:	f000 f949 	bl	8002d6c <nRF24_EventTxCallback>
		nrf24_tx_flag = 0;
 8002ada:	4b08      	ldr	r3, [pc, #32]	; (8002afc <nRF24_Event+0x48>)
 8002adc:	2200      	movs	r2, #0
 8002ade:	701a      	strb	r2, [r3, #0]
	}

	if(nrf24_mr_flag)
 8002ae0:	4b07      	ldr	r3, [pc, #28]	; (8002b00 <nRF24_Event+0x4c>)
 8002ae2:	781b      	ldrb	r3, [r3, #0]
 8002ae4:	2b00      	cmp	r3, #0
 8002ae6:	d004      	beq.n	8002af2 <nRF24_Event+0x3e>
	{
		nRF24_EventMrCallback();
 8002ae8:	f000 f974 	bl	8002dd4 <nRF24_EventMrCallback>
		nrf24_mr_flag = 0;
 8002aec:	4b04      	ldr	r3, [pc, #16]	; (8002b00 <nRF24_Event+0x4c>)
 8002aee:	2200      	movs	r2, #0
 8002af0:	701a      	strb	r2, [r3, #0]
	}
}
 8002af2:	bf00      	nop
 8002af4:	bd80      	pop	{r7, pc}
 8002af6:	bf00      	nop
 8002af8:	2000042f 	.word	0x2000042f
 8002afc:	20000430 	.word	0x20000430
 8002b00:	20000431 	.word	0x20000431

08002b04 <nRF24_Init>:

void nRF24_Init(SPI_HandleTypeDef *hspi)
{
 8002b04:	b580      	push	{r7, lr}
 8002b06:	b082      	sub	sp, #8
 8002b08:	af00      	add	r7, sp, #0
 8002b0a:	6078      	str	r0, [r7, #4]
	hspi_nrf = hspi;
 8002b0c:	4a2e      	ldr	r2, [pc, #184]	; (8002bc8 <nRF24_Init+0xc4>)
 8002b0e:	687b      	ldr	r3, [r7, #4]
 8002b10:	6013      	str	r3, [r2, #0]

	NRF24_CE_LOW;
 8002b12:	2200      	movs	r2, #0
 8002b14:	2110      	movs	r1, #16
 8002b16:	482d      	ldr	r0, [pc, #180]	; (8002bcc <nRF24_Init+0xc8>)
 8002b18:	f001 f964 	bl	8003de4 <HAL_GPIO_WritePin>
	NRF24_CSN_HIGH;
 8002b1c:	2201      	movs	r2, #1
 8002b1e:	2104      	movs	r1, #4
 8002b20:	482b      	ldr	r0, [pc, #172]	; (8002bd0 <nRF24_Init+0xcc>)
 8002b22:	f001 f95f 	bl	8003de4 <HAL_GPIO_WritePin>

	nRF24_Delay_ms(5); // Wait for radio power up
 8002b26:	2005      	movs	r0, #5
 8002b28:	f7ff fbc8 	bl	80022bc <nRF24_Delay_ms>

	nRF24_SetPALevel(NRF24_PA_PWR_0dBM); // Radio power
 8002b2c:	2003      	movs	r0, #3
 8002b2e:	f7ff fcd9 	bl	80024e4 <nRF24_SetPALevel>
	nRF24_SetDataRate(NRF24_RF_DR_250KBPS); // Data Rate
 8002b32:	2002      	movs	r0, #2
 8002b34:	f7ff fcf5 	bl	8002522 <nRF24_SetDataRate>
	nRF24_EnableCRC(1); // Enable CRC
 8002b38:	2001      	movs	r0, #1
 8002b3a:	f7ff fd63 	bl	8002604 <nRF24_EnableCRC>
	nRF24_SetCRCLength(NRF24_CRC_WIDTH_1B); // CRC Length 1 byte
 8002b3e:	2000      	movs	r0, #0
 8002b40:	f7ff fd7d 	bl	800263e <nRF24_SetCRCLength>
	nRF24_SetRetries(0x04, 0x07); // 1000us, 7 times
 8002b44:	2107      	movs	r1, #7
 8002b46:	2004      	movs	r0, #4
 8002b48:	f7ff fd96 	bl	8002678 <nRF24_SetRetries>

#if (NRF24_DYNAMIC_PAYLOAD == 1)
	nRF24_WriteRegister(NRF24_FEATURE, nRF24_ReadRegister(NRF24_FEATURE) | (1<<NRF24_EN_DPL)); // Enable dynamic payload feature
 8002b4c:	201d      	movs	r0, #29
 8002b4e:	f7ff fbef 	bl	8002330 <nRF24_ReadRegister>
 8002b52:	4603      	mov	r3, r0
 8002b54:	f043 0304 	orr.w	r3, r3, #4
 8002b58:	b2db      	uxtb	r3, r3
 8002b5a:	4619      	mov	r1, r3
 8002b5c:	201d      	movs	r0, #29
 8002b5e:	f7ff fc2f 	bl	80023c0 <nRF24_WriteRegister>
	nRF24_WriteRegister(NRF24_DYNPD, 0x3F); // Enable dynamic payloads for all pipes
 8002b62:	213f      	movs	r1, #63	; 0x3f
 8002b64:	201c      	movs	r0, #28
 8002b66:	f7ff fc2b 	bl	80023c0 <nRF24_WriteRegister>
#else
	nRF24_WriteRegister(NRF24_DYNPD, 0); // Disable dynamic payloads for all pipes
	nRF24_SetPayloadSize(0, NRF24_PAYLOAD_SIZE); // Set 32 bytes payload for pipe 0
#endif
	nRF24_SetRFChannel(10); // Set RF channel for transmission
 8002b6a:	200a      	movs	r0, #10
 8002b6c:	f7ff fd9f 	bl	80026ae <nRF24_SetRFChannel>
	nRF24_EnablePipe(0, 1); // Enable pipe 0
 8002b70:	2101      	movs	r1, #1
 8002b72:	2000      	movs	r0, #0
 8002b74:	f7ff fdac 	bl	80026d0 <nRF24_EnablePipe>
	nRF24_AutoACK(0, 1); // Enable auto ACK for pipe 0
 8002b78:	2101      	movs	r1, #1
 8002b7a:	2000      	movs	r0, #0
 8002b7c:	f7ff fddd 	bl	800273a <nRF24_AutoACK>
	nRF24_SetAddressWidth(NRF24_ADDR_SIZE); // Set address size
 8002b80:	2003      	movs	r0, #3
 8002b82:	f7ff fe0f 	bl	80027a4 <nRF24_SetAddressWidth>

	nRF24_Delay_ms(1);
 8002b86:	2001      	movs	r0, #1
 8002b88:	f7ff fb98 	bl	80022bc <nRF24_Delay_ms>

	nRF24_EnableRXDataReadyIRQ(1);
 8002b8c:	2001      	movs	r0, #1
 8002b8e:	f7ff fed1 	bl	8002934 <nRF24_EnableRXDataReadyIRQ>
	nRF24_EnableTXDataSentIRQ(1);
 8002b92:	2001      	movs	r0, #1
 8002b94:	f7ff feeb 	bl	800296e <nRF24_EnableTXDataSentIRQ>
	nRF24_EnableMaxRetransmitIRQ(1);
 8002b98:	2001      	movs	r0, #1
 8002b9a:	f7ff ff05 	bl	80029a8 <nRF24_EnableMaxRetransmitIRQ>

	nRF24_Delay_ms(1);
 8002b9e:	2001      	movs	r0, #1
 8002ba0:	f7ff fb8c 	bl	80022bc <nRF24_Delay_ms>

	nRF24_ClearInterrupts();
 8002ba4:	f7ff fe9a 	bl	80028dc <nRF24_ClearInterrupts>


	//
	//
	//
	nRF24_WriteRegister(NRF24_FEATURE, nRF24_ReadRegister(NRF24_FEATURE) | (1<<1));
 8002ba8:	201d      	movs	r0, #29
 8002baa:	f7ff fbc1 	bl	8002330 <nRF24_ReadRegister>
 8002bae:	4603      	mov	r3, r0
 8002bb0:	f043 0302 	orr.w	r3, r3, #2
 8002bb4:	b2db      	uxtb	r3, r3
 8002bb6:	4619      	mov	r1, r3
 8002bb8:	201d      	movs	r0, #29
 8002bba:	f7ff fc01 	bl	80023c0 <nRF24_WriteRegister>
}
 8002bbe:	bf00      	nop
 8002bc0:	3708      	adds	r7, #8
 8002bc2:	46bd      	mov	sp, r7
 8002bc4:	bd80      	pop	{r7, pc}
 8002bc6:	bf00      	nop
 8002bc8:	20000428 	.word	0x20000428
 8002bcc:	40010c00 	.word	0x40010c00
 8002bd0:	40011400 	.word	0x40011400

08002bd4 <nRF24_WriteAckPayload>:
//
//
//

nRF24_TX_Status nRF24_WriteAckPayload(uint8_t pipe, uint8_t *data, uint8_t size)
{
 8002bd4:	b580      	push	{r7, lr}
 8002bd6:	b082      	sub	sp, #8
 8002bd8:	af00      	add	r7, sp, #0
 8002bda:	4603      	mov	r3, r0
 8002bdc:	6039      	str	r1, [r7, #0]
 8002bde:	71fb      	strb	r3, [r7, #7]
 8002be0:	4613      	mov	r3, r2
 8002be2:	71bb      	strb	r3, [r7, #6]
	if(size > 32)
 8002be4:	79bb      	ldrb	r3, [r7, #6]
 8002be6:	2b20      	cmp	r3, #32
 8002be8:	d901      	bls.n	8002bee <nRF24_WriteAckPayload+0x1a>
		return NRF24_NO_TRANSMITTED_PACKET;
 8002bea:	2301      	movs	r3, #1
 8002bec:	e00d      	b.n	8002c0a <nRF24_WriteAckPayload+0x36>

	pipe &= 0x07;
 8002bee:	79fb      	ldrb	r3, [r7, #7]
 8002bf0:	f003 0307 	and.w	r3, r3, #7
 8002bf4:	71fb      	strb	r3, [r7, #7]
	nRF24_WriteRegisters((NRF24_CMD_W_ACK_PAYLOAD | pipe), data, size);
 8002bf6:	79fb      	ldrb	r3, [r7, #7]
 8002bf8:	f063 0357 	orn	r3, r3, #87	; 0x57
 8002bfc:	b2db      	uxtb	r3, r3
 8002bfe:	79ba      	ldrb	r2, [r7, #6]
 8002c00:	6839      	ldr	r1, [r7, #0]
 8002c02:	4618      	mov	r0, r3
 8002c04:	f7ff fc02 	bl	800240c <nRF24_WriteRegisters>

	return NRF24_TRANSMITTED_PACKET;
 8002c08:	2300      	movs	r3, #0
}
 8002c0a:	4618      	mov	r0, r3
 8002c0c:	3708      	adds	r7, #8
 8002c0e:	46bd      	mov	sp, r7
 8002c10:	bd80      	pop	{r7, pc}
	...

08002c14 <vTaskOnboardDiode>:




void vTaskOnboardDiode(void *pvParameters)
{
 8002c14:	b580      	push	{r7, lr}
 8002c16:	b082      	sub	sp, #8
 8002c18:	af00      	add	r7, sp, #0
 8002c1a:	6078      	str	r0, [r7, #4]

	for(;;)
	{
		HAL_GPIO_TogglePin(LED_GPIO_Port, LED_Pin);
 8002c1c:	2101      	movs	r1, #1
 8002c1e:	4804      	ldr	r0, [pc, #16]	; (8002c30 <vTaskOnboardDiode+0x1c>)
 8002c20:	f001 f8f8 	bl	8003e14 <HAL_GPIO_TogglePin>
		vTaskDelay(500);
 8002c24:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8002c28:	f004 ff8c 	bl	8007b44 <vTaskDelay>
		HAL_GPIO_TogglePin(LED_GPIO_Port, LED_Pin);
 8002c2c:	e7f6      	b.n	8002c1c <vTaskOnboardDiode+0x8>
 8002c2e:	bf00      	nop
 8002c30:	40011000 	.word	0x40011000

08002c34 <vTaskRadio>:
//
// -- The task --
//

void vTaskRadio(void *pvParameters)
{
 8002c34:	b580      	push	{r7, lr}
 8002c36:	b082      	sub	sp, #8
 8002c38:	af00      	add	r7, sp, #0
 8002c3a:	6078      	str	r0, [r7, #4]
	/* Create queue for transmission (TX) */
	QueueRadioTX = xQueueCreate(3, sizeof(RadioFrame_t));
 8002c3c:	2200      	movs	r2, #0
 8002c3e:	2121      	movs	r1, #33	; 0x21
 8002c40:	2003      	movs	r0, #3
 8002c42:	f004 f9a4 	bl	8006f8e <xQueueGenericCreate>
 8002c46:	4603      	mov	r3, r0
 8002c48:	4a17      	ldr	r2, [pc, #92]	; (8002ca8 <vTaskRadio+0x74>)
 8002c4a:	6013      	str	r3, [r2, #0]

	for(;;)
	{

		if(xTaskNotifyWait(0, 0, NULL, 2000) == pdTRUE)
 8002c4c:	f44f 63fa 	mov.w	r3, #2000	; 0x7d0
 8002c50:	2200      	movs	r2, #0
 8002c52:	2100      	movs	r1, #0
 8002c54:	2000      	movs	r0, #0
 8002c56:	f005 fc81 	bl	800855c <xTaskNotifyWait>
 8002c5a:	4603      	mov	r3, r0
 8002c5c:	2b01      	cmp	r3, #1
 8002c5e:	d11f      	bne.n	8002ca0 <vTaskRadio+0x6c>
		{
			/* Check kind of IRQ and take related actions (callbacks) */
			nRF24_Event();
 8002c60:	f7ff ff28 	bl	8002ab4 <nRF24_Event>
			/* Take massage from TX Queue and send it via next ACK Payload */
			if(TxStatus == RADIO_OK && ConnectionStatus == RADIO_OK)
 8002c64:	4b11      	ldr	r3, [pc, #68]	; (8002cac <vTaskRadio+0x78>)
 8002c66:	781b      	ldrb	r3, [r3, #0]
 8002c68:	2b00      	cmp	r3, #0
 8002c6a:	d1ef      	bne.n	8002c4c <vTaskRadio+0x18>
 8002c6c:	4b10      	ldr	r3, [pc, #64]	; (8002cb0 <vTaskRadio+0x7c>)
 8002c6e:	781b      	ldrb	r3, [r3, #0]
 8002c70:	2b00      	cmp	r3, #0
 8002c72:	d1eb      	bne.n	8002c4c <vTaskRadio+0x18>
			{
				if( xQueueReceive(QueueRadioTX, &FrameToSend, 0 ) == pdPASS )
 8002c74:	4b0c      	ldr	r3, [pc, #48]	; (8002ca8 <vTaskRadio+0x74>)
 8002c76:	681b      	ldr	r3, [r3, #0]
 8002c78:	2200      	movs	r2, #0
 8002c7a:	490e      	ldr	r1, [pc, #56]	; (8002cb4 <vTaskRadio+0x80>)
 8002c7c:	4618      	mov	r0, r3
 8002c7e:	f004 fb7d 	bl	800737c <xQueueReceive>
 8002c82:	4603      	mov	r3, r0
 8002c84:	2b01      	cmp	r3, #1
 8002c86:	d1e1      	bne.n	8002c4c <vTaskRadio+0x18>
				{
					nRF24_WriteAckPayload(0, FrameToSend.data, FrameToSend.length);
 8002c88:	4b0a      	ldr	r3, [pc, #40]	; (8002cb4 <vTaskRadio+0x80>)
 8002c8a:	f893 3020 	ldrb.w	r3, [r3, #32]
 8002c8e:	461a      	mov	r2, r3
 8002c90:	4908      	ldr	r1, [pc, #32]	; (8002cb4 <vTaskRadio+0x80>)
 8002c92:	2000      	movs	r0, #0
 8002c94:	f7ff ff9e 	bl	8002bd4 <nRF24_WriteAckPayload>
					/* Radio busy to prevent overwriting ack payload with next frame untill TX Callback arrives */
					TxStatus = RADIO_BUSY;
 8002c98:	4b04      	ldr	r3, [pc, #16]	; (8002cac <vTaskRadio+0x78>)
 8002c9a:	2202      	movs	r2, #2
 8002c9c:	701a      	strb	r2, [r3, #0]
 8002c9e:	e7d5      	b.n	8002c4c <vTaskRadio+0x18>
				}
			}
		}
		else
		{
			ConnectionStatus = RADIO_ERROR;
 8002ca0:	4b03      	ldr	r3, [pc, #12]	; (8002cb0 <vTaskRadio+0x7c>)
 8002ca2:	2201      	movs	r2, #1
 8002ca4:	701a      	strb	r2, [r3, #0]
		if(xTaskNotifyWait(0, 0, NULL, 2000) == pdTRUE)
 8002ca6:	e7d1      	b.n	8002c4c <vTaskRadio+0x18>
 8002ca8:	20000440 	.word	0x20000440
 8002cac:	20000434 	.word	0x20000434
 8002cb0:	20000433 	.word	0x20000433
 8002cb4:	20000444 	.word	0x20000444

08002cb8 <Radio_TaskInit>:
// -- API Functions to use in main.c --
//

/* Init, to use before scheduler start */
void Radio_TaskInit(void)
{
 8002cb8:	b580      	push	{r7, lr}
 8002cba:	b082      	sub	sp, #8
 8002cbc:	af02      	add	r7, sp, #8
	/* Transceiver init */
	nRF24_Init(&hspi3);
 8002cbe:	480d      	ldr	r0, [pc, #52]	; (8002cf4 <Radio_TaskInit+0x3c>)
 8002cc0:	f7ff ff20 	bl	8002b04 <nRF24_Init>
	/* Set communication addresses */
	nRF24_SetRXAddress(0, (uint8_t*) "Bot");
 8002cc4:	490c      	ldr	r1, [pc, #48]	; (8002cf8 <Radio_TaskInit+0x40>)
 8002cc6:	2000      	movs	r0, #0
 8002cc8:	f7ff fd89 	bl	80027de <nRF24_SetRXAddress>
	nRF24_SetTXAddress( (uint8_t*) "Con");
 8002ccc:	480b      	ldr	r0, [pc, #44]	; (8002cfc <Radio_TaskInit+0x44>)
 8002cce:	f7ff fdbf 	bl	8002850 <nRF24_SetTXAddress>
	/* Enable RX mode */
	nRF24_RX_Mode();
 8002cd2:	f7ff fbc3 	bl	800245c <nRF24_RX_Mode>
	/* Task creation */
	xTaskCreate(vTaskRadio, "NRF24 Task", 512, NULL, 1, &xTaskRadioHandle);
 8002cd6:	4b0a      	ldr	r3, [pc, #40]	; (8002d00 <Radio_TaskInit+0x48>)
 8002cd8:	9301      	str	r3, [sp, #4]
 8002cda:	2301      	movs	r3, #1
 8002cdc:	9300      	str	r3, [sp, #0]
 8002cde:	2300      	movs	r3, #0
 8002ce0:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002ce4:	4907      	ldr	r1, [pc, #28]	; (8002d04 <Radio_TaskInit+0x4c>)
 8002ce6:	4808      	ldr	r0, [pc, #32]	; (8002d08 <Radio_TaskInit+0x50>)
 8002ce8:	f004 fdf0 	bl	80078cc <xTaskCreate>
}
 8002cec:	bf00      	nop
 8002cee:	46bd      	mov	sp, r7
 8002cf0:	bd80      	pop	{r7, pc}
 8002cf2:	bf00      	nop
 8002cf4:	20000468 	.word	0x20000468
 8002cf8:	0800c2b0 	.word	0x0800c2b0
 8002cfc:	0800c2b4 	.word	0x0800c2b4
 8002d00:	2000043c 	.word	0x2000043c
 8002d04:	0800c2b8 	.word	0x0800c2b8
 8002d08:	08002c35 	.word	0x08002c35

08002d0c <Radio_HandlerIRQ>:

/* Interrupt handler to put in EXTI routine */
/* Whole interrupt mechanism should be more optimised for RTOS usage but now I want to just get it just work... */
void Radio_HandlerIRQ(void)	//TODO: Check priorities later
{
 8002d0c:	b580      	push	{r7, lr}
 8002d0e:	b08a      	sub	sp, #40	; 0x28
 8002d10:	af00      	add	r7, sp, #0
	BaseType_t xHigherPriorityTaskWoken = pdFALSE;
 8002d12:	2300      	movs	r3, #0
 8002d14:	627b      	str	r3, [r7, #36]	; 0x24
	/* Set Interrupt Flag to 1 */
	nRF24_IRQ_Handler();
 8002d16:	f7ff fe7b 	bl	8002a10 <nRF24_IRQ_Handler>

	RadioFrame_t TestFrame;
	TestFrame.data[0] = 0xFF;
 8002d1a:	23ff      	movs	r3, #255	; 0xff
 8002d1c:	703b      	strb	r3, [r7, #0]
	TestFrame.length = 1;
 8002d1e:	2301      	movs	r3, #1
 8002d20:	f887 3020 	strb.w	r3, [r7, #32]

	xQueueSendToBackFromISR( QueueRadioTX, &TestFrame, NULL );
 8002d24:	4b0e      	ldr	r3, [pc, #56]	; (8002d60 <Radio_HandlerIRQ+0x54>)
 8002d26:	6818      	ldr	r0, [r3, #0]
 8002d28:	4639      	mov	r1, r7
 8002d2a:	2300      	movs	r3, #0
 8002d2c:	2200      	movs	r2, #0
 8002d2e:	f004 fa8d 	bl	800724c <xQueueGenericSendFromISR>


	/* Notify the radio Task */
	vTaskNotifyGiveFromISR(xTaskRadioHandle, &xHigherPriorityTaskWoken);
 8002d32:	4b0c      	ldr	r3, [pc, #48]	; (8002d64 <Radio_HandlerIRQ+0x58>)
 8002d34:	681b      	ldr	r3, [r3, #0]
 8002d36:	f107 0224 	add.w	r2, r7, #36	; 0x24
 8002d3a:	4611      	mov	r1, r2
 8002d3c:	4618      	mov	r0, r3
 8002d3e:	f005 fc67 	bl	8008610 <vTaskNotifyGiveFromISR>
	/* yield if unblocked task (radio) has higher priority than current task */
	portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 8002d42:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002d44:	2b00      	cmp	r3, #0
 8002d46:	d007      	beq.n	8002d58 <Radio_HandlerIRQ+0x4c>
 8002d48:	4b07      	ldr	r3, [pc, #28]	; (8002d68 <Radio_HandlerIRQ+0x5c>)
 8002d4a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8002d4e:	601a      	str	r2, [r3, #0]
 8002d50:	f3bf 8f4f 	dsb	sy
 8002d54:	f3bf 8f6f 	isb	sy
}
 8002d58:	bf00      	nop
 8002d5a:	3728      	adds	r7, #40	; 0x28
 8002d5c:	46bd      	mov	sp, r7
 8002d5e:	bd80      	pop	{r7, pc}
 8002d60:	20000440 	.word	0x20000440
 8002d64:	2000043c 	.word	0x2000043c
 8002d68:	e000ed04 	.word	0xe000ed04

08002d6c <nRF24_EventTxCallback>:
//
// -- NRF24 Event Callbacks --
//

void nRF24_EventTxCallback(void)
{
 8002d6c:	b480      	push	{r7}
 8002d6e:	af00      	add	r7, sp, #0
	/* Unlock sending next TX ACK Payload */
	TxStatus = RADIO_OK;
 8002d70:	4b04      	ldr	r3, [pc, #16]	; (8002d84 <nRF24_EventTxCallback+0x18>)
 8002d72:	2200      	movs	r2, #0
 8002d74:	701a      	strb	r2, [r3, #0]
	/* Radio OK - connection is live */
	ConnectionStatus = RADIO_OK;
 8002d76:	4b04      	ldr	r3, [pc, #16]	; (8002d88 <nRF24_EventTxCallback+0x1c>)
 8002d78:	2200      	movs	r2, #0
 8002d7a:	701a      	strb	r2, [r3, #0]
}
 8002d7c:	bf00      	nop
 8002d7e:	46bd      	mov	sp, r7
 8002d80:	bc80      	pop	{r7}
 8002d82:	4770      	bx	lr
 8002d84:	20000434 	.word	0x20000434
 8002d88:	20000433 	.word	0x20000433

08002d8c <nRF24_EventRxCallback>:


void nRF24_EventRxCallback(void)					// Received Packet or received ACK Payload
{
 8002d8c:	b580      	push	{r7, lr}
 8002d8e:	b08a      	sub	sp, #40	; 0x28
 8002d90:	af00      	add	r7, sp, #0
	uint8_t ReceivedCommand[MAX_COMMAND_LENGTH];
	uint8_t ReceivedLength;
	nRF24_ReadRXPaylaod((uint8_t*)ReceivedCommand,&ReceivedLength);
 8002d92:	1dfa      	adds	r2, r7, #7
 8002d94:	f107 0308 	add.w	r3, r7, #8
 8002d98:	4611      	mov	r1, r2
 8002d9a:	4618      	mov	r0, r3
 8002d9c:	f7ff fe21 	bl	80029e2 <nRF24_ReadRXPaylaod>

	/* If new RX is available, that means the connection is OK */
	ConnectionStatus = RADIO_OK;
 8002da0:	4b09      	ldr	r3, [pc, #36]	; (8002dc8 <nRF24_EventRxCallback+0x3c>)
 8002da2:	2200      	movs	r2, #0
 8002da4:	701a      	strb	r2, [r3, #0]
	/* Save tick for connection lost timeot */
	ConnectionTimeoutCounter = xTaskGetTickCount();
 8002da6:	f005 f813 	bl	8007dd0 <xTaskGetTickCount>
 8002daa:	4603      	mov	r3, r0
 8002dac:	4a07      	ldr	r2, [pc, #28]	; (8002dcc <nRF24_EventRxCallback+0x40>)
 8002dae:	6013      	str	r3, [r2, #0]

	/* Note: ACK Payload !propably! is cleared from nRF buffer after send, so there is no need to prevent
	 *  sending the same frame in ACK payload again and again when no new frame was written to send */

	/* Ingore if it is connection hold (it's only important for controller side */
	if(CONNECTION_HOLD == ReceivedCommand[0]) return;
 8002db0:	7a3b      	ldrb	r3, [r7, #8]
 8002db2:	2b05      	cmp	r3, #5
 8002db4:	d003      	beq.n	8002dbe <nRF24_EventRxCallback+0x32>

	/* Write received frame to parser queue */
	//Radio_RxBufferPut(ReceivedCommand, ReceivedLength); 	//TODO: QUEUE TO PARSER
	RxStatus = RADIO_NEW_RX;
 8002db6:	4b06      	ldr	r3, [pc, #24]	; (8002dd0 <nRF24_EventRxCallback+0x44>)
 8002db8:	2203      	movs	r2, #3
 8002dba:	701a      	strb	r2, [r3, #0]
 8002dbc:	e000      	b.n	8002dc0 <nRF24_EventRxCallback+0x34>
	if(CONNECTION_HOLD == ReceivedCommand[0]) return;
 8002dbe:	bf00      	nop
}
 8002dc0:	3728      	adds	r7, #40	; 0x28
 8002dc2:	46bd      	mov	sp, r7
 8002dc4:	bd80      	pop	{r7, pc}
 8002dc6:	bf00      	nop
 8002dc8:	20000433 	.word	0x20000433
 8002dcc:	20000438 	.word	0x20000438
 8002dd0:	20000435 	.word	0x20000435

08002dd4 <nRF24_EventMrCallback>:

/* This callback means connection lost */
void nRF24_EventMrCallback(void)
{
 8002dd4:	b480      	push	{r7}
 8002dd6:	af00      	add	r7, sp, #0
	ConnectionStatus = RADIO_ERROR;
 8002dd8:	4b03      	ldr	r3, [pc, #12]	; (8002de8 <nRF24_EventMrCallback+0x14>)
 8002dda:	2201      	movs	r2, #1
 8002ddc:	701a      	strb	r2, [r3, #0]
	//TODO: Check if this has any sense on robot
}
 8002dde:	bf00      	nop
 8002de0:	46bd      	mov	sp, r7
 8002de2:	bc80      	pop	{r7}
 8002de4:	4770      	bx	lr
 8002de6:	bf00      	nop
 8002de8:	20000433 	.word	0x20000433

08002dec <MX_SPI3_Init>:

SPI_HandleTypeDef hspi3;

/* SPI3 init function */
void MX_SPI3_Init(void)
{
 8002dec:	b580      	push	{r7, lr}
 8002dee:	af00      	add	r7, sp, #0
  /* USER CODE END SPI3_Init 0 */

  /* USER CODE BEGIN SPI3_Init 1 */

  /* USER CODE END SPI3_Init 1 */
  hspi3.Instance = SPI3;
 8002df0:	4b17      	ldr	r3, [pc, #92]	; (8002e50 <MX_SPI3_Init+0x64>)
 8002df2:	4a18      	ldr	r2, [pc, #96]	; (8002e54 <MX_SPI3_Init+0x68>)
 8002df4:	601a      	str	r2, [r3, #0]
  hspi3.Init.Mode = SPI_MODE_MASTER;
 8002df6:	4b16      	ldr	r3, [pc, #88]	; (8002e50 <MX_SPI3_Init+0x64>)
 8002df8:	f44f 7282 	mov.w	r2, #260	; 0x104
 8002dfc:	605a      	str	r2, [r3, #4]
  hspi3.Init.Direction = SPI_DIRECTION_2LINES;
 8002dfe:	4b14      	ldr	r3, [pc, #80]	; (8002e50 <MX_SPI3_Init+0x64>)
 8002e00:	2200      	movs	r2, #0
 8002e02:	609a      	str	r2, [r3, #8]
  hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
 8002e04:	4b12      	ldr	r3, [pc, #72]	; (8002e50 <MX_SPI3_Init+0x64>)
 8002e06:	2200      	movs	r2, #0
 8002e08:	60da      	str	r2, [r3, #12]
  hspi3.Init.CLKPolarity = SPI_POLARITY_LOW;
 8002e0a:	4b11      	ldr	r3, [pc, #68]	; (8002e50 <MX_SPI3_Init+0x64>)
 8002e0c:	2200      	movs	r2, #0
 8002e0e:	611a      	str	r2, [r3, #16]
  hspi3.Init.CLKPhase = SPI_PHASE_1EDGE;
 8002e10:	4b0f      	ldr	r3, [pc, #60]	; (8002e50 <MX_SPI3_Init+0x64>)
 8002e12:	2200      	movs	r2, #0
 8002e14:	615a      	str	r2, [r3, #20]
  hspi3.Init.NSS = SPI_NSS_SOFT;
 8002e16:	4b0e      	ldr	r3, [pc, #56]	; (8002e50 <MX_SPI3_Init+0x64>)
 8002e18:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002e1c:	619a      	str	r2, [r3, #24]
  hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8002e1e:	4b0c      	ldr	r3, [pc, #48]	; (8002e50 <MX_SPI3_Init+0x64>)
 8002e20:	2218      	movs	r2, #24
 8002e22:	61da      	str	r2, [r3, #28]
  hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8002e24:	4b0a      	ldr	r3, [pc, #40]	; (8002e50 <MX_SPI3_Init+0x64>)
 8002e26:	2200      	movs	r2, #0
 8002e28:	621a      	str	r2, [r3, #32]
  hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 8002e2a:	4b09      	ldr	r3, [pc, #36]	; (8002e50 <MX_SPI3_Init+0x64>)
 8002e2c:	2200      	movs	r2, #0
 8002e2e:	625a      	str	r2, [r3, #36]	; 0x24
  hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8002e30:	4b07      	ldr	r3, [pc, #28]	; (8002e50 <MX_SPI3_Init+0x64>)
 8002e32:	2200      	movs	r2, #0
 8002e34:	629a      	str	r2, [r3, #40]	; 0x28
  hspi3.Init.CRCPolynomial = 10;
 8002e36:	4b06      	ldr	r3, [pc, #24]	; (8002e50 <MX_SPI3_Init+0x64>)
 8002e38:	220a      	movs	r2, #10
 8002e3a:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi3) != HAL_OK)
 8002e3c:	4804      	ldr	r0, [pc, #16]	; (8002e50 <MX_SPI3_Init+0x64>)
 8002e3e:	f001 fed5 	bl	8004bec <HAL_SPI_Init>
 8002e42:	4603      	mov	r3, r0
 8002e44:	2b00      	cmp	r3, #0
 8002e46:	d001      	beq.n	8002e4c <MX_SPI3_Init+0x60>
  {
    Error_Handler();
 8002e48:	f7ff f876 	bl	8001f38 <Error_Handler>
  }
  /* USER CODE BEGIN SPI3_Init 2 */

  /* USER CODE END SPI3_Init 2 */

}
 8002e4c:	bf00      	nop
 8002e4e:	bd80      	pop	{r7, pc}
 8002e50:	20000468 	.word	0x20000468
 8002e54:	40003c00 	.word	0x40003c00

08002e58 <HAL_SPI_MspInit>:

void HAL_SPI_MspInit(SPI_HandleTypeDef* spiHandle)
{
 8002e58:	b580      	push	{r7, lr}
 8002e5a:	b08a      	sub	sp, #40	; 0x28
 8002e5c:	af00      	add	r7, sp, #0
 8002e5e:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002e60:	f107 0314 	add.w	r3, r7, #20
 8002e64:	2200      	movs	r2, #0
 8002e66:	601a      	str	r2, [r3, #0]
 8002e68:	605a      	str	r2, [r3, #4]
 8002e6a:	609a      	str	r2, [r3, #8]
 8002e6c:	60da      	str	r2, [r3, #12]
  if(spiHandle->Instance==SPI3)
 8002e6e:	687b      	ldr	r3, [r7, #4]
 8002e70:	681b      	ldr	r3, [r3, #0]
 8002e72:	4a23      	ldr	r2, [pc, #140]	; (8002f00 <HAL_SPI_MspInit+0xa8>)
 8002e74:	4293      	cmp	r3, r2
 8002e76:	d13f      	bne.n	8002ef8 <HAL_SPI_MspInit+0xa0>
  {
  /* USER CODE BEGIN SPI3_MspInit 0 */

  /* USER CODE END SPI3_MspInit 0 */
    /* SPI3 clock enable */
    __HAL_RCC_SPI3_CLK_ENABLE();
 8002e78:	4b22      	ldr	r3, [pc, #136]	; (8002f04 <HAL_SPI_MspInit+0xac>)
 8002e7a:	69db      	ldr	r3, [r3, #28]
 8002e7c:	4a21      	ldr	r2, [pc, #132]	; (8002f04 <HAL_SPI_MspInit+0xac>)
 8002e7e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8002e82:	61d3      	str	r3, [r2, #28]
 8002e84:	4b1f      	ldr	r3, [pc, #124]	; (8002f04 <HAL_SPI_MspInit+0xac>)
 8002e86:	69db      	ldr	r3, [r3, #28]
 8002e88:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8002e8c:	613b      	str	r3, [r7, #16]
 8002e8e:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002e90:	4b1c      	ldr	r3, [pc, #112]	; (8002f04 <HAL_SPI_MspInit+0xac>)
 8002e92:	699b      	ldr	r3, [r3, #24]
 8002e94:	4a1b      	ldr	r2, [pc, #108]	; (8002f04 <HAL_SPI_MspInit+0xac>)
 8002e96:	f043 0310 	orr.w	r3, r3, #16
 8002e9a:	6193      	str	r3, [r2, #24]
 8002e9c:	4b19      	ldr	r3, [pc, #100]	; (8002f04 <HAL_SPI_MspInit+0xac>)
 8002e9e:	699b      	ldr	r3, [r3, #24]
 8002ea0:	f003 0310 	and.w	r3, r3, #16
 8002ea4:	60fb      	str	r3, [r7, #12]
 8002ea6:	68fb      	ldr	r3, [r7, #12]
    /**SPI3 GPIO Configuration
    PC10     ------> SPI3_SCK
    PC11     ------> SPI3_MISO
    PC12     ------> SPI3_MOSI
    */
    GPIO_InitStruct.Pin = NRF24_SCK_Pin|NRF24_MOSI_Pin;
 8002ea8:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8002eac:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002eae:	2302      	movs	r3, #2
 8002eb0:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002eb2:	2303      	movs	r3, #3
 8002eb4:	623b      	str	r3, [r7, #32]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002eb6:	f107 0314 	add.w	r3, r7, #20
 8002eba:	4619      	mov	r1, r3
 8002ebc:	4812      	ldr	r0, [pc, #72]	; (8002f08 <HAL_SPI_MspInit+0xb0>)
 8002ebe:	f000 fe0d 	bl	8003adc <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = NRF24_MISO_Pin;
 8002ec2:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8002ec6:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8002ec8:	2300      	movs	r3, #0
 8002eca:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002ecc:	2300      	movs	r3, #0
 8002ece:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(NRF24_MISO_GPIO_Port, &GPIO_InitStruct);
 8002ed0:	f107 0314 	add.w	r3, r7, #20
 8002ed4:	4619      	mov	r1, r3
 8002ed6:	480c      	ldr	r0, [pc, #48]	; (8002f08 <HAL_SPI_MspInit+0xb0>)
 8002ed8:	f000 fe00 	bl	8003adc <HAL_GPIO_Init>

    __HAL_AFIO_REMAP_SPI3_ENABLE();
 8002edc:	4b0b      	ldr	r3, [pc, #44]	; (8002f0c <HAL_SPI_MspInit+0xb4>)
 8002ede:	685b      	ldr	r3, [r3, #4]
 8002ee0:	627b      	str	r3, [r7, #36]	; 0x24
 8002ee2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002ee4:	f043 63e0 	orr.w	r3, r3, #117440512	; 0x7000000
 8002ee8:	627b      	str	r3, [r7, #36]	; 0x24
 8002eea:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002eec:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002ef0:	627b      	str	r3, [r7, #36]	; 0x24
 8002ef2:	4a06      	ldr	r2, [pc, #24]	; (8002f0c <HAL_SPI_MspInit+0xb4>)
 8002ef4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002ef6:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN SPI3_MspInit 1 */

  /* USER CODE END SPI3_MspInit 1 */
  }
}
 8002ef8:	bf00      	nop
 8002efa:	3728      	adds	r7, #40	; 0x28
 8002efc:	46bd      	mov	sp, r7
 8002efe:	bd80      	pop	{r7, pc}
 8002f00:	40003c00 	.word	0x40003c00
 8002f04:	40021000 	.word	0x40021000
 8002f08:	40011000 	.word	0x40011000
 8002f0c:	40010000 	.word	0x40010000

08002f10 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002f10:	b580      	push	{r7, lr}
 8002f12:	b084      	sub	sp, #16
 8002f14:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 8002f16:	4b18      	ldr	r3, [pc, #96]	; (8002f78 <HAL_MspInit+0x68>)
 8002f18:	699b      	ldr	r3, [r3, #24]
 8002f1a:	4a17      	ldr	r2, [pc, #92]	; (8002f78 <HAL_MspInit+0x68>)
 8002f1c:	f043 0301 	orr.w	r3, r3, #1
 8002f20:	6193      	str	r3, [r2, #24]
 8002f22:	4b15      	ldr	r3, [pc, #84]	; (8002f78 <HAL_MspInit+0x68>)
 8002f24:	699b      	ldr	r3, [r3, #24]
 8002f26:	f003 0301 	and.w	r3, r3, #1
 8002f2a:	60bb      	str	r3, [r7, #8]
 8002f2c:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 8002f2e:	4b12      	ldr	r3, [pc, #72]	; (8002f78 <HAL_MspInit+0x68>)
 8002f30:	69db      	ldr	r3, [r3, #28]
 8002f32:	4a11      	ldr	r2, [pc, #68]	; (8002f78 <HAL_MspInit+0x68>)
 8002f34:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002f38:	61d3      	str	r3, [r2, #28]
 8002f3a:	4b0f      	ldr	r3, [pc, #60]	; (8002f78 <HAL_MspInit+0x68>)
 8002f3c:	69db      	ldr	r3, [r3, #28]
 8002f3e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002f42:	607b      	str	r3, [r7, #4]
 8002f44:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8002f46:	2200      	movs	r2, #0
 8002f48:	210f      	movs	r1, #15
 8002f4a:	f06f 0001 	mvn.w	r0, #1
 8002f4e:	f000 fd9a 	bl	8003a86 <HAL_NVIC_SetPriority>

  /** NOJTAG: JTAG-DP Disabled and SW-DP Enabled
  */
  __HAL_AFIO_REMAP_SWJ_NOJTAG();
 8002f52:	4b0a      	ldr	r3, [pc, #40]	; (8002f7c <HAL_MspInit+0x6c>)
 8002f54:	685b      	ldr	r3, [r3, #4]
 8002f56:	60fb      	str	r3, [r7, #12]
 8002f58:	68fb      	ldr	r3, [r7, #12]
 8002f5a:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8002f5e:	60fb      	str	r3, [r7, #12]
 8002f60:	68fb      	ldr	r3, [r7, #12]
 8002f62:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8002f66:	60fb      	str	r3, [r7, #12]
 8002f68:	4a04      	ldr	r2, [pc, #16]	; (8002f7c <HAL_MspInit+0x6c>)
 8002f6a:	68fb      	ldr	r3, [r7, #12]
 8002f6c:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002f6e:	bf00      	nop
 8002f70:	3710      	adds	r7, #16
 8002f72:	46bd      	mov	sp, r7
 8002f74:	bd80      	pop	{r7, pc}
 8002f76:	bf00      	nop
 8002f78:	40021000 	.word	0x40021000
 8002f7c:	40010000 	.word	0x40010000

08002f80 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002f80:	b580      	push	{r7, lr}
 8002f82:	b08e      	sub	sp, #56	; 0x38
 8002f84:	af00      	add	r7, sp, #0
 8002f86:	6078      	str	r0, [r7, #4]
  RCC_ClkInitTypeDef    clkconfig;
  uint32_t              uwTimclock, uwAPB1Prescaler = 0U;
 8002f88:	2300      	movs	r3, #0
 8002f8a:	62fb      	str	r3, [r7, #44]	; 0x2c

  uint32_t              uwPrescalerValue = 0U;
 8002f8c:	2300      	movs	r3, #0
 8002f8e:	62bb      	str	r3, [r7, #40]	; 0x28
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status = HAL_OK;
 8002f90:	2300      	movs	r3, #0
 8002f92:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002f96:	4b34      	ldr	r3, [pc, #208]	; (8003068 <HAL_InitTick+0xe8>)
 8002f98:	69db      	ldr	r3, [r3, #28]
 8002f9a:	4a33      	ldr	r2, [pc, #204]	; (8003068 <HAL_InitTick+0xe8>)
 8002f9c:	f043 0310 	orr.w	r3, r3, #16
 8002fa0:	61d3      	str	r3, [r2, #28]
 8002fa2:	4b31      	ldr	r3, [pc, #196]	; (8003068 <HAL_InitTick+0xe8>)
 8002fa4:	69db      	ldr	r3, [r3, #28]
 8002fa6:	f003 0310 	and.w	r3, r3, #16
 8002faa:	60fb      	str	r3, [r7, #12]
 8002fac:	68fb      	ldr	r3, [r7, #12]

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002fae:	f107 0210 	add.w	r2, r7, #16
 8002fb2:	f107 0314 	add.w	r3, r7, #20
 8002fb6:	4611      	mov	r1, r2
 8002fb8:	4618      	mov	r0, r3
 8002fba:	f001 fdc9 	bl	8004b50 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
 8002fbe:	6a3b      	ldr	r3, [r7, #32]
 8002fc0:	62fb      	str	r3, [r7, #44]	; 0x2c
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8002fc2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002fc4:	2b00      	cmp	r3, #0
 8002fc6:	d103      	bne.n	8002fd0 <HAL_InitTick+0x50>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 8002fc8:	f001 fd9a 	bl	8004b00 <HAL_RCC_GetPCLK1Freq>
 8002fcc:	6378      	str	r0, [r7, #52]	; 0x34
 8002fce:	e004      	b.n	8002fda <HAL_InitTick+0x5a>
  }
  else
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8002fd0:	f001 fd96 	bl	8004b00 <HAL_RCC_GetPCLK1Freq>
 8002fd4:	4603      	mov	r3, r0
 8002fd6:	005b      	lsls	r3, r3, #1
 8002fd8:	637b      	str	r3, [r7, #52]	; 0x34
  }

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8002fda:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002fdc:	4a23      	ldr	r2, [pc, #140]	; (800306c <HAL_InitTick+0xec>)
 8002fde:	fba2 2303 	umull	r2, r3, r2, r3
 8002fe2:	0c9b      	lsrs	r3, r3, #18
 8002fe4:	3b01      	subs	r3, #1
 8002fe6:	62bb      	str	r3, [r7, #40]	; 0x28

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8002fe8:	4b21      	ldr	r3, [pc, #132]	; (8003070 <HAL_InitTick+0xf0>)
 8002fea:	4a22      	ldr	r2, [pc, #136]	; (8003074 <HAL_InitTick+0xf4>)
 8002fec:	601a      	str	r2, [r3, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8002fee:	4b20      	ldr	r3, [pc, #128]	; (8003070 <HAL_InitTick+0xf0>)
 8002ff0:	f240 32e7 	movw	r2, #999	; 0x3e7
 8002ff4:	60da      	str	r2, [r3, #12]
  htim6.Init.Prescaler = uwPrescalerValue;
 8002ff6:	4a1e      	ldr	r2, [pc, #120]	; (8003070 <HAL_InitTick+0xf0>)
 8002ff8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002ffa:	6053      	str	r3, [r2, #4]
  htim6.Init.ClockDivision = 0;
 8002ffc:	4b1c      	ldr	r3, [pc, #112]	; (8003070 <HAL_InitTick+0xf0>)
 8002ffe:	2200      	movs	r2, #0
 8003000:	611a      	str	r2, [r3, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8003002:	4b1b      	ldr	r3, [pc, #108]	; (8003070 <HAL_InitTick+0xf0>)
 8003004:	2200      	movs	r2, #0
 8003006:	609a      	str	r2, [r3, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8003008:	4b19      	ldr	r3, [pc, #100]	; (8003070 <HAL_InitTick+0xf0>)
 800300a:	2200      	movs	r2, #0
 800300c:	619a      	str	r2, [r3, #24]

  status = HAL_TIM_Base_Init(&htim6);
 800300e:	4818      	ldr	r0, [pc, #96]	; (8003070 <HAL_InitTick+0xf0>)
 8003010:	f002 fb74 	bl	80056fc <HAL_TIM_Base_Init>
 8003014:	4603      	mov	r3, r0
 8003016:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
  if (status == HAL_OK)
 800301a:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 800301e:	2b00      	cmp	r3, #0
 8003020:	d11b      	bne.n	800305a <HAL_InitTick+0xda>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim6);
 8003022:	4813      	ldr	r0, [pc, #76]	; (8003070 <HAL_InitTick+0xf0>)
 8003024:	f002 fbba 	bl	800579c <HAL_TIM_Base_Start_IT>
 8003028:	4603      	mov	r3, r0
 800302a:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
    if (status == HAL_OK)
 800302e:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 8003032:	2b00      	cmp	r3, #0
 8003034:	d111      	bne.n	800305a <HAL_InitTick+0xda>
    {
    /* Enable the TIM6 global Interrupt */
        HAL_NVIC_EnableIRQ(TIM6_IRQn);
 8003036:	2036      	movs	r0, #54	; 0x36
 8003038:	f000 fd41 	bl	8003abe <HAL_NVIC_EnableIRQ>
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 800303c:	687b      	ldr	r3, [r7, #4]
 800303e:	2b0f      	cmp	r3, #15
 8003040:	d808      	bhi.n	8003054 <HAL_InitTick+0xd4>
      {
        /* Configure the TIM IRQ priority */
        HAL_NVIC_SetPriority(TIM6_IRQn, TickPriority, 0U);
 8003042:	2200      	movs	r2, #0
 8003044:	6879      	ldr	r1, [r7, #4]
 8003046:	2036      	movs	r0, #54	; 0x36
 8003048:	f000 fd1d 	bl	8003a86 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 800304c:	4a0a      	ldr	r2, [pc, #40]	; (8003078 <HAL_InitTick+0xf8>)
 800304e:	687b      	ldr	r3, [r7, #4]
 8003050:	6013      	str	r3, [r2, #0]
 8003052:	e002      	b.n	800305a <HAL_InitTick+0xda>
      }
      else
      {
        status = HAL_ERROR;
 8003054:	2301      	movs	r3, #1
 8003056:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
      }
    }
  }

 /* Return function status */
  return status;
 800305a:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
}
 800305e:	4618      	mov	r0, r3
 8003060:	3738      	adds	r7, #56	; 0x38
 8003062:	46bd      	mov	sp, r7
 8003064:	bd80      	pop	{r7, pc}
 8003066:	bf00      	nop
 8003068:	40021000 	.word	0x40021000
 800306c:	431bde83 	.word	0x431bde83
 8003070:	200004c0 	.word	0x200004c0
 8003074:	40001000 	.word	0x40001000
 8003078:	20000068 	.word	0x20000068

0800307c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 800307c:	b480      	push	{r7}
 800307e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8003080:	e7fe      	b.n	8003080 <NMI_Handler+0x4>

08003082 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8003082:	b480      	push	{r7}
 8003084:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8003086:	e7fe      	b.n	8003086 <HardFault_Handler+0x4>

08003088 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8003088:	b480      	push	{r7}
 800308a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 800308c:	e7fe      	b.n	800308c <MemManage_Handler+0x4>

0800308e <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 800308e:	b480      	push	{r7}
 8003090:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8003092:	e7fe      	b.n	8003092 <BusFault_Handler+0x4>

08003094 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8003094:	b480      	push	{r7}
 8003096:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8003098:	e7fe      	b.n	8003098 <UsageFault_Handler+0x4>

0800309a <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 800309a:	b480      	push	{r7}
 800309c:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 800309e:	bf00      	nop
 80030a0:	46bd      	mov	sp, r7
 80030a2:	bc80      	pop	{r7}
 80030a4:	4770      	bx	lr

080030a6 <EXTI15_10_IRQHandler>:

/**
  * @brief This function handles EXTI line[15:10] interrupts.
  */
void EXTI15_10_IRQHandler(void)
{
 80030a6:	b580      	push	{r7, lr}
 80030a8:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI15_10_IRQn 0 */

  /* USER CODE END EXTI15_10_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(NRF24_IRQ_Pin);
 80030aa:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 80030ae:	f000 fecb 	bl	8003e48 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI15_10_IRQn 1 */

  /* USER CODE END EXTI15_10_IRQn 1 */
}
 80030b2:	bf00      	nop
 80030b4:	bd80      	pop	{r7, pc}
	...

080030b8 <TIM6_IRQHandler>:

/**
  * @brief This function handles TIM6 global interrupt.
  */
void TIM6_IRQHandler(void)
{
 80030b8:	b580      	push	{r7, lr}
 80030ba:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM6_IRQn 0 */

  /* USER CODE END TIM6_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 80030bc:	4802      	ldr	r0, [pc, #8]	; (80030c8 <TIM6_IRQHandler+0x10>)
 80030be:	f002 fdf9 	bl	8005cb4 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM6_IRQn 1 */

  /* USER CODE END TIM6_IRQn 1 */
}
 80030c2:	bf00      	nop
 80030c4:	bd80      	pop	{r7, pc}
 80030c6:	bf00      	nop
 80030c8:	200004c0 	.word	0x200004c0

080030cc <TIM7_IRQHandler>:

/**
  * @brief This function handles TIM7 global interrupt.
  */
void TIM7_IRQHandler(void)
{
 80030cc:	b580      	push	{r7, lr}
 80030ce:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM7_IRQn 0 */

  /* USER CODE END TIM7_IRQn 0 */
  HAL_TIM_IRQHandler(&htim7);
 80030d0:	4802      	ldr	r0, [pc, #8]	; (80030dc <TIM7_IRQHandler+0x10>)
 80030d2:	f002 fdef 	bl	8005cb4 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM7_IRQn 1 */

  /* USER CODE END TIM7_IRQn 1 */
}
 80030d6:	bf00      	nop
 80030d8:	bd80      	pop	{r7, pc}
 80030da:	bf00      	nop
 80030dc:	200005e4 	.word	0x200005e4

080030e0 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80030e0:	b480      	push	{r7}
 80030e2:	af00      	add	r7, sp, #0
  return 1;
 80030e4:	2301      	movs	r3, #1
}
 80030e6:	4618      	mov	r0, r3
 80030e8:	46bd      	mov	sp, r7
 80030ea:	bc80      	pop	{r7}
 80030ec:	4770      	bx	lr

080030ee <_kill>:

int _kill(int pid, int sig)
{
 80030ee:	b580      	push	{r7, lr}
 80030f0:	b082      	sub	sp, #8
 80030f2:	af00      	add	r7, sp, #0
 80030f4:	6078      	str	r0, [r7, #4]
 80030f6:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 80030f8:	f007 f826 	bl	800a148 <__errno>
 80030fc:	4603      	mov	r3, r0
 80030fe:	2216      	movs	r2, #22
 8003100:	601a      	str	r2, [r3, #0]
  return -1;
 8003102:	f04f 33ff 	mov.w	r3, #4294967295
}
 8003106:	4618      	mov	r0, r3
 8003108:	3708      	adds	r7, #8
 800310a:	46bd      	mov	sp, r7
 800310c:	bd80      	pop	{r7, pc}

0800310e <_exit>:

void _exit (int status)
{
 800310e:	b580      	push	{r7, lr}
 8003110:	b082      	sub	sp, #8
 8003112:	af00      	add	r7, sp, #0
 8003114:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8003116:	f04f 31ff 	mov.w	r1, #4294967295
 800311a:	6878      	ldr	r0, [r7, #4]
 800311c:	f7ff ffe7 	bl	80030ee <_kill>
  while (1) {}    /* Make sure we hang here */
 8003120:	e7fe      	b.n	8003120 <_exit+0x12>

08003122 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8003122:	b580      	push	{r7, lr}
 8003124:	b086      	sub	sp, #24
 8003126:	af00      	add	r7, sp, #0
 8003128:	60f8      	str	r0, [r7, #12]
 800312a:	60b9      	str	r1, [r7, #8]
 800312c:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800312e:	2300      	movs	r3, #0
 8003130:	617b      	str	r3, [r7, #20]
 8003132:	e00a      	b.n	800314a <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8003134:	f3af 8000 	nop.w
 8003138:	4601      	mov	r1, r0
 800313a:	68bb      	ldr	r3, [r7, #8]
 800313c:	1c5a      	adds	r2, r3, #1
 800313e:	60ba      	str	r2, [r7, #8]
 8003140:	b2ca      	uxtb	r2, r1
 8003142:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8003144:	697b      	ldr	r3, [r7, #20]
 8003146:	3301      	adds	r3, #1
 8003148:	617b      	str	r3, [r7, #20]
 800314a:	697a      	ldr	r2, [r7, #20]
 800314c:	687b      	ldr	r3, [r7, #4]
 800314e:	429a      	cmp	r2, r3
 8003150:	dbf0      	blt.n	8003134 <_read+0x12>
  }

  return len;
 8003152:	687b      	ldr	r3, [r7, #4]
}
 8003154:	4618      	mov	r0, r3
 8003156:	3718      	adds	r7, #24
 8003158:	46bd      	mov	sp, r7
 800315a:	bd80      	pop	{r7, pc}

0800315c <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800315c:	b580      	push	{r7, lr}
 800315e:	b086      	sub	sp, #24
 8003160:	af00      	add	r7, sp, #0
 8003162:	60f8      	str	r0, [r7, #12]
 8003164:	60b9      	str	r1, [r7, #8]
 8003166:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8003168:	2300      	movs	r3, #0
 800316a:	617b      	str	r3, [r7, #20]
 800316c:	e009      	b.n	8003182 <_write+0x26>
  {
    __io_putchar(*ptr++);
 800316e:	68bb      	ldr	r3, [r7, #8]
 8003170:	1c5a      	adds	r2, r3, #1
 8003172:	60ba      	str	r2, [r7, #8]
 8003174:	781b      	ldrb	r3, [r3, #0]
 8003176:	4618      	mov	r0, r3
 8003178:	f7fe fea6 	bl	8001ec8 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800317c:	697b      	ldr	r3, [r7, #20]
 800317e:	3301      	adds	r3, #1
 8003180:	617b      	str	r3, [r7, #20]
 8003182:	697a      	ldr	r2, [r7, #20]
 8003184:	687b      	ldr	r3, [r7, #4]
 8003186:	429a      	cmp	r2, r3
 8003188:	dbf1      	blt.n	800316e <_write+0x12>
  }
  return len;
 800318a:	687b      	ldr	r3, [r7, #4]
}
 800318c:	4618      	mov	r0, r3
 800318e:	3718      	adds	r7, #24
 8003190:	46bd      	mov	sp, r7
 8003192:	bd80      	pop	{r7, pc}

08003194 <_close>:

int _close(int file)
{
 8003194:	b480      	push	{r7}
 8003196:	b083      	sub	sp, #12
 8003198:	af00      	add	r7, sp, #0
 800319a:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800319c:	f04f 33ff 	mov.w	r3, #4294967295
}
 80031a0:	4618      	mov	r0, r3
 80031a2:	370c      	adds	r7, #12
 80031a4:	46bd      	mov	sp, r7
 80031a6:	bc80      	pop	{r7}
 80031a8:	4770      	bx	lr

080031aa <_fstat>:


int _fstat(int file, struct stat *st)
{
 80031aa:	b480      	push	{r7}
 80031ac:	b083      	sub	sp, #12
 80031ae:	af00      	add	r7, sp, #0
 80031b0:	6078      	str	r0, [r7, #4]
 80031b2:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80031b4:	683b      	ldr	r3, [r7, #0]
 80031b6:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80031ba:	605a      	str	r2, [r3, #4]
  return 0;
 80031bc:	2300      	movs	r3, #0
}
 80031be:	4618      	mov	r0, r3
 80031c0:	370c      	adds	r7, #12
 80031c2:	46bd      	mov	sp, r7
 80031c4:	bc80      	pop	{r7}
 80031c6:	4770      	bx	lr

080031c8 <_isatty>:

int _isatty(int file)
{
 80031c8:	b480      	push	{r7}
 80031ca:	b083      	sub	sp, #12
 80031cc:	af00      	add	r7, sp, #0
 80031ce:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80031d0:	2301      	movs	r3, #1
}
 80031d2:	4618      	mov	r0, r3
 80031d4:	370c      	adds	r7, #12
 80031d6:	46bd      	mov	sp, r7
 80031d8:	bc80      	pop	{r7}
 80031da:	4770      	bx	lr

080031dc <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80031dc:	b480      	push	{r7}
 80031de:	b085      	sub	sp, #20
 80031e0:	af00      	add	r7, sp, #0
 80031e2:	60f8      	str	r0, [r7, #12]
 80031e4:	60b9      	str	r1, [r7, #8]
 80031e6:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80031e8:	2300      	movs	r3, #0
}
 80031ea:	4618      	mov	r0, r3
 80031ec:	3714      	adds	r7, #20
 80031ee:	46bd      	mov	sp, r7
 80031f0:	bc80      	pop	{r7}
 80031f2:	4770      	bx	lr

080031f4 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80031f4:	b580      	push	{r7, lr}
 80031f6:	b086      	sub	sp, #24
 80031f8:	af00      	add	r7, sp, #0
 80031fa:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80031fc:	4a14      	ldr	r2, [pc, #80]	; (8003250 <_sbrk+0x5c>)
 80031fe:	4b15      	ldr	r3, [pc, #84]	; (8003254 <_sbrk+0x60>)
 8003200:	1ad3      	subs	r3, r2, r3
 8003202:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8003204:	697b      	ldr	r3, [r7, #20]
 8003206:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8003208:	4b13      	ldr	r3, [pc, #76]	; (8003258 <_sbrk+0x64>)
 800320a:	681b      	ldr	r3, [r3, #0]
 800320c:	2b00      	cmp	r3, #0
 800320e:	d102      	bne.n	8003216 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8003210:	4b11      	ldr	r3, [pc, #68]	; (8003258 <_sbrk+0x64>)
 8003212:	4a12      	ldr	r2, [pc, #72]	; (800325c <_sbrk+0x68>)
 8003214:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8003216:	4b10      	ldr	r3, [pc, #64]	; (8003258 <_sbrk+0x64>)
 8003218:	681a      	ldr	r2, [r3, #0]
 800321a:	687b      	ldr	r3, [r7, #4]
 800321c:	4413      	add	r3, r2
 800321e:	693a      	ldr	r2, [r7, #16]
 8003220:	429a      	cmp	r2, r3
 8003222:	d207      	bcs.n	8003234 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8003224:	f006 ff90 	bl	800a148 <__errno>
 8003228:	4603      	mov	r3, r0
 800322a:	220c      	movs	r2, #12
 800322c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800322e:	f04f 33ff 	mov.w	r3, #4294967295
 8003232:	e009      	b.n	8003248 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8003234:	4b08      	ldr	r3, [pc, #32]	; (8003258 <_sbrk+0x64>)
 8003236:	681b      	ldr	r3, [r3, #0]
 8003238:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800323a:	4b07      	ldr	r3, [pc, #28]	; (8003258 <_sbrk+0x64>)
 800323c:	681a      	ldr	r2, [r3, #0]
 800323e:	687b      	ldr	r3, [r7, #4]
 8003240:	4413      	add	r3, r2
 8003242:	4a05      	ldr	r2, [pc, #20]	; (8003258 <_sbrk+0x64>)
 8003244:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8003246:	68fb      	ldr	r3, [r7, #12]
}
 8003248:	4618      	mov	r0, r3
 800324a:	3718      	adds	r7, #24
 800324c:	46bd      	mov	sp, r7
 800324e:	bd80      	pop	{r7, pc}
 8003250:	20010000 	.word	0x20010000
 8003254:	00001000 	.word	0x00001000
 8003258:	20000508 	.word	0x20000508
 800325c:	20002508 	.word	0x20002508

08003260 <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8003260:	b480      	push	{r7}
 8003262:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8003264:	bf00      	nop
 8003266:	46bd      	mov	sp, r7
 8003268:	bc80      	pop	{r7}
 800326a:	4770      	bx	lr

0800326c <MX_TIM1_Init>:
TIM_HandleTypeDef htim4;
TIM_HandleTypeDef htim7;

/* TIM1 init function */
void MX_TIM1_Init(void)
{
 800326c:	b580      	push	{r7, lr}
 800326e:	b08c      	sub	sp, #48	; 0x30
 8003270:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_Encoder_InitTypeDef sConfig = {0};
 8003272:	f107 030c 	add.w	r3, r7, #12
 8003276:	2224      	movs	r2, #36	; 0x24
 8003278:	2100      	movs	r1, #0
 800327a:	4618      	mov	r0, r3
 800327c:	f006 ff11 	bl	800a0a2 <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8003280:	1d3b      	adds	r3, r7, #4
 8003282:	2200      	movs	r2, #0
 8003284:	601a      	str	r2, [r3, #0]
 8003286:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 8003288:	4b22      	ldr	r3, [pc, #136]	; (8003314 <MX_TIM1_Init+0xa8>)
 800328a:	4a23      	ldr	r2, [pc, #140]	; (8003318 <MX_TIM1_Init+0xac>)
 800328c:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 0;
 800328e:	4b21      	ldr	r3, [pc, #132]	; (8003314 <MX_TIM1_Init+0xa8>)
 8003290:	2200      	movs	r2, #0
 8003292:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8003294:	4b1f      	ldr	r3, [pc, #124]	; (8003314 <MX_TIM1_Init+0xa8>)
 8003296:	2200      	movs	r2, #0
 8003298:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 65535;
 800329a:	4b1e      	ldr	r3, [pc, #120]	; (8003314 <MX_TIM1_Init+0xa8>)
 800329c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80032a0:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80032a2:	4b1c      	ldr	r3, [pc, #112]	; (8003314 <MX_TIM1_Init+0xa8>)
 80032a4:	2200      	movs	r2, #0
 80032a6:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 80032a8:	4b1a      	ldr	r3, [pc, #104]	; (8003314 <MX_TIM1_Init+0xa8>)
 80032aa:	2200      	movs	r2, #0
 80032ac:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80032ae:	4b19      	ldr	r3, [pc, #100]	; (8003314 <MX_TIM1_Init+0xa8>)
 80032b0:	2200      	movs	r2, #0
 80032b2:	619a      	str	r2, [r3, #24]
  sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 80032b4:	2303      	movs	r3, #3
 80032b6:	60fb      	str	r3, [r7, #12]
  sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 80032b8:	2300      	movs	r3, #0
 80032ba:	613b      	str	r3, [r7, #16]
  sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 80032bc:	2301      	movs	r3, #1
 80032be:	617b      	str	r3, [r7, #20]
  sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 80032c0:	2300      	movs	r3, #0
 80032c2:	61bb      	str	r3, [r7, #24]
  sConfig.IC1Filter = 0;
 80032c4:	2300      	movs	r3, #0
 80032c6:	61fb      	str	r3, [r7, #28]
  sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 80032c8:	2300      	movs	r3, #0
 80032ca:	623b      	str	r3, [r7, #32]
  sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 80032cc:	2301      	movs	r3, #1
 80032ce:	627b      	str	r3, [r7, #36]	; 0x24
  sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 80032d0:	2300      	movs	r3, #0
 80032d2:	62bb      	str	r3, [r7, #40]	; 0x28
  sConfig.IC2Filter = 0;
 80032d4:	2300      	movs	r3, #0
 80032d6:	62fb      	str	r3, [r7, #44]	; 0x2c
  if (HAL_TIM_Encoder_Init(&htim1, &sConfig) != HAL_OK)
 80032d8:	f107 030c 	add.w	r3, r7, #12
 80032dc:	4619      	mov	r1, r3
 80032de:	480d      	ldr	r0, [pc, #52]	; (8003314 <MX_TIM1_Init+0xa8>)
 80032e0:	f002 fbb8 	bl	8005a54 <HAL_TIM_Encoder_Init>
 80032e4:	4603      	mov	r3, r0
 80032e6:	2b00      	cmp	r3, #0
 80032e8:	d001      	beq.n	80032ee <MX_TIM1_Init+0x82>
  {
    Error_Handler();
 80032ea:	f7fe fe25 	bl	8001f38 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80032ee:	2300      	movs	r3, #0
 80032f0:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80032f2:	2300      	movs	r3, #0
 80032f4:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 80032f6:	1d3b      	adds	r3, r7, #4
 80032f8:	4619      	mov	r1, r3
 80032fa:	4806      	ldr	r0, [pc, #24]	; (8003314 <MX_TIM1_Init+0xa8>)
 80032fc:	f003 fa3e 	bl	800677c <HAL_TIMEx_MasterConfigSynchronization>
 8003300:	4603      	mov	r3, r0
 8003302:	2b00      	cmp	r3, #0
 8003304:	d001      	beq.n	800330a <MX_TIM1_Init+0x9e>
  {
    Error_Handler();
 8003306:	f7fe fe17 	bl	8001f38 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */

}
 800330a:	bf00      	nop
 800330c:	3730      	adds	r7, #48	; 0x30
 800330e:	46bd      	mov	sp, r7
 8003310:	bd80      	pop	{r7, pc}
 8003312:	bf00      	nop
 8003314:	2000050c 	.word	0x2000050c
 8003318:	40012c00 	.word	0x40012c00

0800331c <MX_TIM3_Init>:
/* TIM3 init function */
void MX_TIM3_Init(void)
{
 800331c:	b580      	push	{r7, lr}
 800331e:	b08e      	sub	sp, #56	; 0x38
 8003320:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8003322:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8003326:	2200      	movs	r2, #0
 8003328:	601a      	str	r2, [r3, #0]
 800332a:	605a      	str	r2, [r3, #4]
 800332c:	609a      	str	r2, [r3, #8]
 800332e:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8003330:	f107 0320 	add.w	r3, r7, #32
 8003334:	2200      	movs	r2, #0
 8003336:	601a      	str	r2, [r3, #0]
 8003338:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 800333a:	1d3b      	adds	r3, r7, #4
 800333c:	2200      	movs	r2, #0
 800333e:	601a      	str	r2, [r3, #0]
 8003340:	605a      	str	r2, [r3, #4]
 8003342:	609a      	str	r2, [r3, #8]
 8003344:	60da      	str	r2, [r3, #12]
 8003346:	611a      	str	r2, [r3, #16]
 8003348:	615a      	str	r2, [r3, #20]
 800334a:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 800334c:	4b3c      	ldr	r3, [pc, #240]	; (8003440 <MX_TIM3_Init+0x124>)
 800334e:	4a3d      	ldr	r2, [pc, #244]	; (8003444 <MX_TIM3_Init+0x128>)
 8003350:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 1;
 8003352:	4b3b      	ldr	r3, [pc, #236]	; (8003440 <MX_TIM3_Init+0x124>)
 8003354:	2201      	movs	r2, #1
 8003356:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8003358:	4b39      	ldr	r3, [pc, #228]	; (8003440 <MX_TIM3_Init+0x124>)
 800335a:	2200      	movs	r2, #0
 800335c:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 255;
 800335e:	4b38      	ldr	r3, [pc, #224]	; (8003440 <MX_TIM3_Init+0x124>)
 8003360:	22ff      	movs	r2, #255	; 0xff
 8003362:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8003364:	4b36      	ldr	r3, [pc, #216]	; (8003440 <MX_TIM3_Init+0x124>)
 8003366:	2200      	movs	r2, #0
 8003368:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800336a:	4b35      	ldr	r3, [pc, #212]	; (8003440 <MX_TIM3_Init+0x124>)
 800336c:	2200      	movs	r2, #0
 800336e:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8003370:	4833      	ldr	r0, [pc, #204]	; (8003440 <MX_TIM3_Init+0x124>)
 8003372:	f002 f9c3 	bl	80056fc <HAL_TIM_Base_Init>
 8003376:	4603      	mov	r3, r0
 8003378:	2b00      	cmp	r3, #0
 800337a:	d001      	beq.n	8003380 <MX_TIM3_Init+0x64>
  {
    Error_Handler();
 800337c:	f7fe fddc 	bl	8001f38 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8003380:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8003384:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8003386:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800338a:	4619      	mov	r1, r3
 800338c:	482c      	ldr	r0, [pc, #176]	; (8003440 <MX_TIM3_Init+0x124>)
 800338e:	f002 fe5b 	bl	8006048 <HAL_TIM_ConfigClockSource>
 8003392:	4603      	mov	r3, r0
 8003394:	2b00      	cmp	r3, #0
 8003396:	d001      	beq.n	800339c <MX_TIM3_Init+0x80>
  {
    Error_Handler();
 8003398:	f7fe fdce 	bl	8001f38 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 800339c:	4828      	ldr	r0, [pc, #160]	; (8003440 <MX_TIM3_Init+0x124>)
 800339e:	f002 fa57 	bl	8005850 <HAL_TIM_PWM_Init>
 80033a2:	4603      	mov	r3, r0
 80033a4:	2b00      	cmp	r3, #0
 80033a6:	d001      	beq.n	80033ac <MX_TIM3_Init+0x90>
  {
    Error_Handler();
 80033a8:	f7fe fdc6 	bl	8001f38 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80033ac:	2300      	movs	r3, #0
 80033ae:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80033b0:	2300      	movs	r3, #0
 80033b2:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80033b4:	f107 0320 	add.w	r3, r7, #32
 80033b8:	4619      	mov	r1, r3
 80033ba:	4821      	ldr	r0, [pc, #132]	; (8003440 <MX_TIM3_Init+0x124>)
 80033bc:	f003 f9de 	bl	800677c <HAL_TIMEx_MasterConfigSynchronization>
 80033c0:	4603      	mov	r3, r0
 80033c2:	2b00      	cmp	r3, #0
 80033c4:	d001      	beq.n	80033ca <MX_TIM3_Init+0xae>
  {
    Error_Handler();
 80033c6:	f7fe fdb7 	bl	8001f38 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80033ca:	2360      	movs	r3, #96	; 0x60
 80033cc:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 80033ce:	2300      	movs	r3, #0
 80033d0:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80033d2:	2300      	movs	r3, #0
 80033d4:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_ENABLE;
 80033d6:	2304      	movs	r3, #4
 80033d8:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80033da:	1d3b      	adds	r3, r7, #4
 80033dc:	2200      	movs	r2, #0
 80033de:	4619      	mov	r1, r3
 80033e0:	4817      	ldr	r0, [pc, #92]	; (8003440 <MX_TIM3_Init+0x124>)
 80033e2:	f002 fd6f 	bl	8005ec4 <HAL_TIM_PWM_ConfigChannel>
 80033e6:	4603      	mov	r3, r0
 80033e8:	2b00      	cmp	r3, #0
 80033ea:	d001      	beq.n	80033f0 <MX_TIM3_Init+0xd4>
  {
    Error_Handler();
 80033ec:	f7fe fda4 	bl	8001f38 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 80033f0:	1d3b      	adds	r3, r7, #4
 80033f2:	2204      	movs	r2, #4
 80033f4:	4619      	mov	r1, r3
 80033f6:	4812      	ldr	r0, [pc, #72]	; (8003440 <MX_TIM3_Init+0x124>)
 80033f8:	f002 fd64 	bl	8005ec4 <HAL_TIM_PWM_ConfigChannel>
 80033fc:	4603      	mov	r3, r0
 80033fe:	2b00      	cmp	r3, #0
 8003400:	d001      	beq.n	8003406 <MX_TIM3_Init+0xea>
  {
    Error_Handler();
 8003402:	f7fe fd99 	bl	8001f38 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 8003406:	1d3b      	adds	r3, r7, #4
 8003408:	2208      	movs	r2, #8
 800340a:	4619      	mov	r1, r3
 800340c:	480c      	ldr	r0, [pc, #48]	; (8003440 <MX_TIM3_Init+0x124>)
 800340e:	f002 fd59 	bl	8005ec4 <HAL_TIM_PWM_ConfigChannel>
 8003412:	4603      	mov	r3, r0
 8003414:	2b00      	cmp	r3, #0
 8003416:	d001      	beq.n	800341c <MX_TIM3_Init+0x100>
  {
    Error_Handler();
 8003418:	f7fe fd8e 	bl	8001f38 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 800341c:	1d3b      	adds	r3, r7, #4
 800341e:	220c      	movs	r2, #12
 8003420:	4619      	mov	r1, r3
 8003422:	4807      	ldr	r0, [pc, #28]	; (8003440 <MX_TIM3_Init+0x124>)
 8003424:	f002 fd4e 	bl	8005ec4 <HAL_TIM_PWM_ConfigChannel>
 8003428:	4603      	mov	r3, r0
 800342a:	2b00      	cmp	r3, #0
 800342c:	d001      	beq.n	8003432 <MX_TIM3_Init+0x116>
  {
    Error_Handler();
 800342e:	f7fe fd83 	bl	8001f38 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */
  HAL_TIM_MspPostInit(&htim3);
 8003432:	4803      	ldr	r0, [pc, #12]	; (8003440 <MX_TIM3_Init+0x124>)
 8003434:	f000 f93a 	bl	80036ac <HAL_TIM_MspPostInit>

}
 8003438:	bf00      	nop
 800343a:	3738      	adds	r7, #56	; 0x38
 800343c:	46bd      	mov	sp, r7
 800343e:	bd80      	pop	{r7, pc}
 8003440:	20000554 	.word	0x20000554
 8003444:	40000400 	.word	0x40000400

08003448 <MX_TIM4_Init>:
/* TIM4 init function */
void MX_TIM4_Init(void)
{
 8003448:	b580      	push	{r7, lr}
 800344a:	b08c      	sub	sp, #48	; 0x30
 800344c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_Encoder_InitTypeDef sConfig = {0};
 800344e:	f107 030c 	add.w	r3, r7, #12
 8003452:	2224      	movs	r2, #36	; 0x24
 8003454:	2100      	movs	r1, #0
 8003456:	4618      	mov	r0, r3
 8003458:	f006 fe23 	bl	800a0a2 <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800345c:	1d3b      	adds	r3, r7, #4
 800345e:	2200      	movs	r2, #0
 8003460:	601a      	str	r2, [r3, #0]
 8003462:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 8003464:	4b20      	ldr	r3, [pc, #128]	; (80034e8 <MX_TIM4_Init+0xa0>)
 8003466:	4a21      	ldr	r2, [pc, #132]	; (80034ec <MX_TIM4_Init+0xa4>)
 8003468:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 0;
 800346a:	4b1f      	ldr	r3, [pc, #124]	; (80034e8 <MX_TIM4_Init+0xa0>)
 800346c:	2200      	movs	r2, #0
 800346e:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 8003470:	4b1d      	ldr	r3, [pc, #116]	; (80034e8 <MX_TIM4_Init+0xa0>)
 8003472:	2200      	movs	r2, #0
 8003474:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 65535;
 8003476:	4b1c      	ldr	r3, [pc, #112]	; (80034e8 <MX_TIM4_Init+0xa0>)
 8003478:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800347c:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800347e:	4b1a      	ldr	r3, [pc, #104]	; (80034e8 <MX_TIM4_Init+0xa0>)
 8003480:	2200      	movs	r2, #0
 8003482:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8003484:	4b18      	ldr	r3, [pc, #96]	; (80034e8 <MX_TIM4_Init+0xa0>)
 8003486:	2200      	movs	r2, #0
 8003488:	619a      	str	r2, [r3, #24]
  sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 800348a:	2303      	movs	r3, #3
 800348c:	60fb      	str	r3, [r7, #12]
  sConfig.IC1Polarity = TIM_ICPOLARITY_FALLING;
 800348e:	2302      	movs	r3, #2
 8003490:	613b      	str	r3, [r7, #16]
  sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 8003492:	2301      	movs	r3, #1
 8003494:	617b      	str	r3, [r7, #20]
  sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 8003496:	2300      	movs	r3, #0
 8003498:	61bb      	str	r3, [r7, #24]
  sConfig.IC1Filter = 0;
 800349a:	2300      	movs	r3, #0
 800349c:	61fb      	str	r3, [r7, #28]
  sConfig.IC2Polarity = TIM_ICPOLARITY_FALLING;
 800349e:	2302      	movs	r3, #2
 80034a0:	623b      	str	r3, [r7, #32]
  sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 80034a2:	2301      	movs	r3, #1
 80034a4:	627b      	str	r3, [r7, #36]	; 0x24
  sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 80034a6:	2300      	movs	r3, #0
 80034a8:	62bb      	str	r3, [r7, #40]	; 0x28
  sConfig.IC2Filter = 0;
 80034aa:	2300      	movs	r3, #0
 80034ac:	62fb      	str	r3, [r7, #44]	; 0x2c
  if (HAL_TIM_Encoder_Init(&htim4, &sConfig) != HAL_OK)
 80034ae:	f107 030c 	add.w	r3, r7, #12
 80034b2:	4619      	mov	r1, r3
 80034b4:	480c      	ldr	r0, [pc, #48]	; (80034e8 <MX_TIM4_Init+0xa0>)
 80034b6:	f002 facd 	bl	8005a54 <HAL_TIM_Encoder_Init>
 80034ba:	4603      	mov	r3, r0
 80034bc:	2b00      	cmp	r3, #0
 80034be:	d001      	beq.n	80034c4 <MX_TIM4_Init+0x7c>
  {
    Error_Handler();
 80034c0:	f7fe fd3a 	bl	8001f38 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80034c4:	2300      	movs	r3, #0
 80034c6:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80034c8:	2300      	movs	r3, #0
 80034ca:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 80034cc:	1d3b      	adds	r3, r7, #4
 80034ce:	4619      	mov	r1, r3
 80034d0:	4805      	ldr	r0, [pc, #20]	; (80034e8 <MX_TIM4_Init+0xa0>)
 80034d2:	f003 f953 	bl	800677c <HAL_TIMEx_MasterConfigSynchronization>
 80034d6:	4603      	mov	r3, r0
 80034d8:	2b00      	cmp	r3, #0
 80034da:	d001      	beq.n	80034e0 <MX_TIM4_Init+0x98>
  {
    Error_Handler();
 80034dc:	f7fe fd2c 	bl	8001f38 <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */

}
 80034e0:	bf00      	nop
 80034e2:	3730      	adds	r7, #48	; 0x30
 80034e4:	46bd      	mov	sp, r7
 80034e6:	bd80      	pop	{r7, pc}
 80034e8:	2000059c 	.word	0x2000059c
 80034ec:	40000800 	.word	0x40000800

080034f0 <MX_TIM7_Init>:
/* TIM7 init function */
void MX_TIM7_Init(void)
{
 80034f0:	b580      	push	{r7, lr}
 80034f2:	b082      	sub	sp, #8
 80034f4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM7_Init 0 */

  /* USER CODE END TIM7_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80034f6:	463b      	mov	r3, r7
 80034f8:	2200      	movs	r2, #0
 80034fa:	601a      	str	r2, [r3, #0]
 80034fc:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM7_Init 1 */

  /* USER CODE END TIM7_Init 1 */
  htim7.Instance = TIM7;
 80034fe:	4b15      	ldr	r3, [pc, #84]	; (8003554 <MX_TIM7_Init+0x64>)
 8003500:	4a15      	ldr	r2, [pc, #84]	; (8003558 <MX_TIM7_Init+0x68>)
 8003502:	601a      	str	r2, [r3, #0]
  htim7.Init.Prescaler = 71;
 8003504:	4b13      	ldr	r3, [pc, #76]	; (8003554 <MX_TIM7_Init+0x64>)
 8003506:	2247      	movs	r2, #71	; 0x47
 8003508:	605a      	str	r2, [r3, #4]
  htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 800350a:	4b12      	ldr	r3, [pc, #72]	; (8003554 <MX_TIM7_Init+0x64>)
 800350c:	2200      	movs	r2, #0
 800350e:	609a      	str	r2, [r3, #8]
  htim7.Init.Period = 9999;
 8003510:	4b10      	ldr	r3, [pc, #64]	; (8003554 <MX_TIM7_Init+0x64>)
 8003512:	f242 720f 	movw	r2, #9999	; 0x270f
 8003516:	60da      	str	r2, [r3, #12]
  htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8003518:	4b0e      	ldr	r3, [pc, #56]	; (8003554 <MX_TIM7_Init+0x64>)
 800351a:	2200      	movs	r2, #0
 800351c:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 800351e:	480d      	ldr	r0, [pc, #52]	; (8003554 <MX_TIM7_Init+0x64>)
 8003520:	f002 f8ec 	bl	80056fc <HAL_TIM_Base_Init>
 8003524:	4603      	mov	r3, r0
 8003526:	2b00      	cmp	r3, #0
 8003528:	d001      	beq.n	800352e <MX_TIM7_Init+0x3e>
  {
    Error_Handler();
 800352a:	f7fe fd05 	bl	8001f38 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800352e:	2300      	movs	r3, #0
 8003530:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8003532:	2300      	movs	r3, #0
 8003534:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 8003536:	463b      	mov	r3, r7
 8003538:	4619      	mov	r1, r3
 800353a:	4806      	ldr	r0, [pc, #24]	; (8003554 <MX_TIM7_Init+0x64>)
 800353c:	f003 f91e 	bl	800677c <HAL_TIMEx_MasterConfigSynchronization>
 8003540:	4603      	mov	r3, r0
 8003542:	2b00      	cmp	r3, #0
 8003544:	d001      	beq.n	800354a <MX_TIM7_Init+0x5a>
  {
    Error_Handler();
 8003546:	f7fe fcf7 	bl	8001f38 <Error_Handler>
  }
  /* USER CODE BEGIN TIM7_Init 2 */

  /* USER CODE END TIM7_Init 2 */

}
 800354a:	bf00      	nop
 800354c:	3708      	adds	r7, #8
 800354e:	46bd      	mov	sp, r7
 8003550:	bd80      	pop	{r7, pc}
 8003552:	bf00      	nop
 8003554:	200005e4 	.word	0x200005e4
 8003558:	40001400 	.word	0x40001400

0800355c <HAL_TIM_Encoder_MspInit>:

void HAL_TIM_Encoder_MspInit(TIM_HandleTypeDef* tim_encoderHandle)
{
 800355c:	b580      	push	{r7, lr}
 800355e:	b08a      	sub	sp, #40	; 0x28
 8003560:	af00      	add	r7, sp, #0
 8003562:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003564:	f107 0318 	add.w	r3, r7, #24
 8003568:	2200      	movs	r2, #0
 800356a:	601a      	str	r2, [r3, #0]
 800356c:	605a      	str	r2, [r3, #4]
 800356e:	609a      	str	r2, [r3, #8]
 8003570:	60da      	str	r2, [r3, #12]
  if(tim_encoderHandle->Instance==TIM1)
 8003572:	687b      	ldr	r3, [r7, #4]
 8003574:	681b      	ldr	r3, [r3, #0]
 8003576:	4a2b      	ldr	r2, [pc, #172]	; (8003624 <HAL_TIM_Encoder_MspInit+0xc8>)
 8003578:	4293      	cmp	r3, r2
 800357a:	d125      	bne.n	80035c8 <HAL_TIM_Encoder_MspInit+0x6c>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* TIM1 clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 800357c:	4b2a      	ldr	r3, [pc, #168]	; (8003628 <HAL_TIM_Encoder_MspInit+0xcc>)
 800357e:	699b      	ldr	r3, [r3, #24]
 8003580:	4a29      	ldr	r2, [pc, #164]	; (8003628 <HAL_TIM_Encoder_MspInit+0xcc>)
 8003582:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8003586:	6193      	str	r3, [r2, #24]
 8003588:	4b27      	ldr	r3, [pc, #156]	; (8003628 <HAL_TIM_Encoder_MspInit+0xcc>)
 800358a:	699b      	ldr	r3, [r3, #24]
 800358c:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8003590:	617b      	str	r3, [r7, #20]
 8003592:	697b      	ldr	r3, [r7, #20]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8003594:	4b24      	ldr	r3, [pc, #144]	; (8003628 <HAL_TIM_Encoder_MspInit+0xcc>)
 8003596:	699b      	ldr	r3, [r3, #24]
 8003598:	4a23      	ldr	r2, [pc, #140]	; (8003628 <HAL_TIM_Encoder_MspInit+0xcc>)
 800359a:	f043 0304 	orr.w	r3, r3, #4
 800359e:	6193      	str	r3, [r2, #24]
 80035a0:	4b21      	ldr	r3, [pc, #132]	; (8003628 <HAL_TIM_Encoder_MspInit+0xcc>)
 80035a2:	699b      	ldr	r3, [r3, #24]
 80035a4:	f003 0304 	and.w	r3, r3, #4
 80035a8:	613b      	str	r3, [r7, #16]
 80035aa:	693b      	ldr	r3, [r7, #16]
    /**TIM1 GPIO Configuration
    PA8     ------> TIM1_CH1
    PA9     ------> TIM1_CH2
    */
    GPIO_InitStruct.Pin = ENC_A_1_Pin|ENC_A_2_Pin;
 80035ac:	f44f 7340 	mov.w	r3, #768	; 0x300
 80035b0:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80035b2:	2300      	movs	r3, #0
 80035b4:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80035b6:	2300      	movs	r3, #0
 80035b8:	623b      	str	r3, [r7, #32]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80035ba:	f107 0318 	add.w	r3, r7, #24
 80035be:	4619      	mov	r1, r3
 80035c0:	481a      	ldr	r0, [pc, #104]	; (800362c <HAL_TIM_Encoder_MspInit+0xd0>)
 80035c2:	f000 fa8b 	bl	8003adc <HAL_GPIO_Init>

  /* USER CODE BEGIN TIM4_MspInit 1 */

  /* USER CODE END TIM4_MspInit 1 */
  }
}
 80035c6:	e028      	b.n	800361a <HAL_TIM_Encoder_MspInit+0xbe>
  else if(tim_encoderHandle->Instance==TIM4)
 80035c8:	687b      	ldr	r3, [r7, #4]
 80035ca:	681b      	ldr	r3, [r3, #0]
 80035cc:	4a18      	ldr	r2, [pc, #96]	; (8003630 <HAL_TIM_Encoder_MspInit+0xd4>)
 80035ce:	4293      	cmp	r3, r2
 80035d0:	d123      	bne.n	800361a <HAL_TIM_Encoder_MspInit+0xbe>
    __HAL_RCC_TIM4_CLK_ENABLE();
 80035d2:	4b15      	ldr	r3, [pc, #84]	; (8003628 <HAL_TIM_Encoder_MspInit+0xcc>)
 80035d4:	69db      	ldr	r3, [r3, #28]
 80035d6:	4a14      	ldr	r2, [pc, #80]	; (8003628 <HAL_TIM_Encoder_MspInit+0xcc>)
 80035d8:	f043 0304 	orr.w	r3, r3, #4
 80035dc:	61d3      	str	r3, [r2, #28]
 80035de:	4b12      	ldr	r3, [pc, #72]	; (8003628 <HAL_TIM_Encoder_MspInit+0xcc>)
 80035e0:	69db      	ldr	r3, [r3, #28]
 80035e2:	f003 0304 	and.w	r3, r3, #4
 80035e6:	60fb      	str	r3, [r7, #12]
 80035e8:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80035ea:	4b0f      	ldr	r3, [pc, #60]	; (8003628 <HAL_TIM_Encoder_MspInit+0xcc>)
 80035ec:	699b      	ldr	r3, [r3, #24]
 80035ee:	4a0e      	ldr	r2, [pc, #56]	; (8003628 <HAL_TIM_Encoder_MspInit+0xcc>)
 80035f0:	f043 0308 	orr.w	r3, r3, #8
 80035f4:	6193      	str	r3, [r2, #24]
 80035f6:	4b0c      	ldr	r3, [pc, #48]	; (8003628 <HAL_TIM_Encoder_MspInit+0xcc>)
 80035f8:	699b      	ldr	r3, [r3, #24]
 80035fa:	f003 0308 	and.w	r3, r3, #8
 80035fe:	60bb      	str	r3, [r7, #8]
 8003600:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = ENC_B_1_Pin|ENC_B_2_Pin;
 8003602:	23c0      	movs	r3, #192	; 0xc0
 8003604:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8003606:	2300      	movs	r3, #0
 8003608:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800360a:	2300      	movs	r3, #0
 800360c:	623b      	str	r3, [r7, #32]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800360e:	f107 0318 	add.w	r3, r7, #24
 8003612:	4619      	mov	r1, r3
 8003614:	4807      	ldr	r0, [pc, #28]	; (8003634 <HAL_TIM_Encoder_MspInit+0xd8>)
 8003616:	f000 fa61 	bl	8003adc <HAL_GPIO_Init>
}
 800361a:	bf00      	nop
 800361c:	3728      	adds	r7, #40	; 0x28
 800361e:	46bd      	mov	sp, r7
 8003620:	bd80      	pop	{r7, pc}
 8003622:	bf00      	nop
 8003624:	40012c00 	.word	0x40012c00
 8003628:	40021000 	.word	0x40021000
 800362c:	40010800 	.word	0x40010800
 8003630:	40000800 	.word	0x40000800
 8003634:	40010c00 	.word	0x40010c00

08003638 <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
{
 8003638:	b580      	push	{r7, lr}
 800363a:	b084      	sub	sp, #16
 800363c:	af00      	add	r7, sp, #0
 800363e:	6078      	str	r0, [r7, #4]

  if(tim_baseHandle->Instance==TIM3)
 8003640:	687b      	ldr	r3, [r7, #4]
 8003642:	681b      	ldr	r3, [r3, #0]
 8003644:	4a16      	ldr	r2, [pc, #88]	; (80036a0 <HAL_TIM_Base_MspInit+0x68>)
 8003646:	4293      	cmp	r3, r2
 8003648:	d10c      	bne.n	8003664 <HAL_TIM_Base_MspInit+0x2c>
  {
  /* USER CODE BEGIN TIM3_MspInit 0 */

  /* USER CODE END TIM3_MspInit 0 */
    /* TIM3 clock enable */
    __HAL_RCC_TIM3_CLK_ENABLE();
 800364a:	4b16      	ldr	r3, [pc, #88]	; (80036a4 <HAL_TIM_Base_MspInit+0x6c>)
 800364c:	69db      	ldr	r3, [r3, #28]
 800364e:	4a15      	ldr	r2, [pc, #84]	; (80036a4 <HAL_TIM_Base_MspInit+0x6c>)
 8003650:	f043 0302 	orr.w	r3, r3, #2
 8003654:	61d3      	str	r3, [r2, #28]
 8003656:	4b13      	ldr	r3, [pc, #76]	; (80036a4 <HAL_TIM_Base_MspInit+0x6c>)
 8003658:	69db      	ldr	r3, [r3, #28]
 800365a:	f003 0302 	and.w	r3, r3, #2
 800365e:	60fb      	str	r3, [r7, #12]
 8003660:	68fb      	ldr	r3, [r7, #12]
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
  /* USER CODE BEGIN TIM7_MspInit 1 */

  /* USER CODE END TIM7_MspInit 1 */
  }
}
 8003662:	e018      	b.n	8003696 <HAL_TIM_Base_MspInit+0x5e>
  else if(tim_baseHandle->Instance==TIM7)
 8003664:	687b      	ldr	r3, [r7, #4]
 8003666:	681b      	ldr	r3, [r3, #0]
 8003668:	4a0f      	ldr	r2, [pc, #60]	; (80036a8 <HAL_TIM_Base_MspInit+0x70>)
 800366a:	4293      	cmp	r3, r2
 800366c:	d113      	bne.n	8003696 <HAL_TIM_Base_MspInit+0x5e>
    __HAL_RCC_TIM7_CLK_ENABLE();
 800366e:	4b0d      	ldr	r3, [pc, #52]	; (80036a4 <HAL_TIM_Base_MspInit+0x6c>)
 8003670:	69db      	ldr	r3, [r3, #28]
 8003672:	4a0c      	ldr	r2, [pc, #48]	; (80036a4 <HAL_TIM_Base_MspInit+0x6c>)
 8003674:	f043 0320 	orr.w	r3, r3, #32
 8003678:	61d3      	str	r3, [r2, #28]
 800367a:	4b0a      	ldr	r3, [pc, #40]	; (80036a4 <HAL_TIM_Base_MspInit+0x6c>)
 800367c:	69db      	ldr	r3, [r3, #28]
 800367e:	f003 0320 	and.w	r3, r3, #32
 8003682:	60bb      	str	r3, [r7, #8]
 8003684:	68bb      	ldr	r3, [r7, #8]
    HAL_NVIC_SetPriority(TIM7_IRQn, 5, 0);
 8003686:	2200      	movs	r2, #0
 8003688:	2105      	movs	r1, #5
 800368a:	2037      	movs	r0, #55	; 0x37
 800368c:	f000 f9fb 	bl	8003a86 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
 8003690:	2037      	movs	r0, #55	; 0x37
 8003692:	f000 fa14 	bl	8003abe <HAL_NVIC_EnableIRQ>
}
 8003696:	bf00      	nop
 8003698:	3710      	adds	r7, #16
 800369a:	46bd      	mov	sp, r7
 800369c:	bd80      	pop	{r7, pc}
 800369e:	bf00      	nop
 80036a0:	40000400 	.word	0x40000400
 80036a4:	40021000 	.word	0x40021000
 80036a8:	40001400 	.word	0x40001400

080036ac <HAL_TIM_MspPostInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
{
 80036ac:	b580      	push	{r7, lr}
 80036ae:	b088      	sub	sp, #32
 80036b0:	af00      	add	r7, sp, #0
 80036b2:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80036b4:	f107 030c 	add.w	r3, r7, #12
 80036b8:	2200      	movs	r2, #0
 80036ba:	601a      	str	r2, [r3, #0]
 80036bc:	605a      	str	r2, [r3, #4]
 80036be:	609a      	str	r2, [r3, #8]
 80036c0:	60da      	str	r2, [r3, #12]
  if(timHandle->Instance==TIM3)
 80036c2:	687b      	ldr	r3, [r7, #4]
 80036c4:	681b      	ldr	r3, [r3, #0]
 80036c6:	4a19      	ldr	r2, [pc, #100]	; (800372c <HAL_TIM_MspPostInit+0x80>)
 80036c8:	4293      	cmp	r3, r2
 80036ca:	d12a      	bne.n	8003722 <HAL_TIM_MspPostInit+0x76>
  {
  /* USER CODE BEGIN TIM3_MspPostInit 0 */

  /* USER CODE END TIM3_MspPostInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 80036cc:	4b18      	ldr	r3, [pc, #96]	; (8003730 <HAL_TIM_MspPostInit+0x84>)
 80036ce:	699b      	ldr	r3, [r3, #24]
 80036d0:	4a17      	ldr	r2, [pc, #92]	; (8003730 <HAL_TIM_MspPostInit+0x84>)
 80036d2:	f043 0310 	orr.w	r3, r3, #16
 80036d6:	6193      	str	r3, [r2, #24]
 80036d8:	4b15      	ldr	r3, [pc, #84]	; (8003730 <HAL_TIM_MspPostInit+0x84>)
 80036da:	699b      	ldr	r3, [r3, #24]
 80036dc:	f003 0310 	and.w	r3, r3, #16
 80036e0:	60bb      	str	r3, [r7, #8]
 80036e2:	68bb      	ldr	r3, [r7, #8]
    PC6     ------> TIM3_CH1
    PC7     ------> TIM3_CH2
    PC8     ------> TIM3_CH3
    PC9     ------> TIM3_CH4
    */
    GPIO_InitStruct.Pin = DRV_AIN1_Pin|DRV_AIN2_Pin|DRV_BIN1_Pin|DRV_BIN2_Pin;
 80036e4:	f44f 7370 	mov.w	r3, #960	; 0x3c0
 80036e8:	60fb      	str	r3, [r7, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80036ea:	2302      	movs	r3, #2
 80036ec:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80036ee:	2303      	movs	r3, #3
 80036f0:	61bb      	str	r3, [r7, #24]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80036f2:	f107 030c 	add.w	r3, r7, #12
 80036f6:	4619      	mov	r1, r3
 80036f8:	480e      	ldr	r0, [pc, #56]	; (8003734 <HAL_TIM_MspPostInit+0x88>)
 80036fa:	f000 f9ef 	bl	8003adc <HAL_GPIO_Init>

    __HAL_AFIO_REMAP_TIM3_ENABLE();
 80036fe:	4b0e      	ldr	r3, [pc, #56]	; (8003738 <HAL_TIM_MspPostInit+0x8c>)
 8003700:	685b      	ldr	r3, [r3, #4]
 8003702:	61fb      	str	r3, [r7, #28]
 8003704:	69fb      	ldr	r3, [r7, #28]
 8003706:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
 800370a:	61fb      	str	r3, [r7, #28]
 800370c:	69fb      	ldr	r3, [r7, #28]
 800370e:	f043 63e0 	orr.w	r3, r3, #117440512	; 0x7000000
 8003712:	61fb      	str	r3, [r7, #28]
 8003714:	69fb      	ldr	r3, [r7, #28]
 8003716:	f443 6340 	orr.w	r3, r3, #3072	; 0xc00
 800371a:	61fb      	str	r3, [r7, #28]
 800371c:	4a06      	ldr	r2, [pc, #24]	; (8003738 <HAL_TIM_MspPostInit+0x8c>)
 800371e:	69fb      	ldr	r3, [r7, #28]
 8003720:	6053      	str	r3, [r2, #4]
  /* USER CODE BEGIN TIM3_MspPostInit 1 */

  /* USER CODE END TIM3_MspPostInit 1 */
  }

}
 8003722:	bf00      	nop
 8003724:	3720      	adds	r7, #32
 8003726:	46bd      	mov	sp, r7
 8003728:	bd80      	pop	{r7, pc}
 800372a:	bf00      	nop
 800372c:	40000400 	.word	0x40000400
 8003730:	40021000 	.word	0x40021000
 8003734:	40011000 	.word	0x40011000
 8003738:	40010000 	.word	0x40010000

0800373c <MX_USART2_UART_Init>:
UART_HandleTypeDef huart2;

/* USART2 init function */

void MX_USART2_UART_Init(void)
{
 800373c:	b580      	push	{r7, lr}
 800373e:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8003740:	4b11      	ldr	r3, [pc, #68]	; (8003788 <MX_USART2_UART_Init+0x4c>)
 8003742:	4a12      	ldr	r2, [pc, #72]	; (800378c <MX_USART2_UART_Init+0x50>)
 8003744:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 8003746:	4b10      	ldr	r3, [pc, #64]	; (8003788 <MX_USART2_UART_Init+0x4c>)
 8003748:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 800374c:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 800374e:	4b0e      	ldr	r3, [pc, #56]	; (8003788 <MX_USART2_UART_Init+0x4c>)
 8003750:	2200      	movs	r2, #0
 8003752:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8003754:	4b0c      	ldr	r3, [pc, #48]	; (8003788 <MX_USART2_UART_Init+0x4c>)
 8003756:	2200      	movs	r2, #0
 8003758:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 800375a:	4b0b      	ldr	r3, [pc, #44]	; (8003788 <MX_USART2_UART_Init+0x4c>)
 800375c:	2200      	movs	r2, #0
 800375e:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8003760:	4b09      	ldr	r3, [pc, #36]	; (8003788 <MX_USART2_UART_Init+0x4c>)
 8003762:	220c      	movs	r2, #12
 8003764:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8003766:	4b08      	ldr	r3, [pc, #32]	; (8003788 <MX_USART2_UART_Init+0x4c>)
 8003768:	2200      	movs	r2, #0
 800376a:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 800376c:	4b06      	ldr	r3, [pc, #24]	; (8003788 <MX_USART2_UART_Init+0x4c>)
 800376e:	2200      	movs	r2, #0
 8003770:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8003772:	4805      	ldr	r0, [pc, #20]	; (8003788 <MX_USART2_UART_Init+0x4c>)
 8003774:	f003 f87a 	bl	800686c <HAL_UART_Init>
 8003778:	4603      	mov	r3, r0
 800377a:	2b00      	cmp	r3, #0
 800377c:	d001      	beq.n	8003782 <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 800377e:	f7fe fbdb 	bl	8001f38 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8003782:	bf00      	nop
 8003784:	bd80      	pop	{r7, pc}
 8003786:	bf00      	nop
 8003788:	2000062c 	.word	0x2000062c
 800378c:	40004400 	.word	0x40004400

08003790 <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 8003790:	b580      	push	{r7, lr}
 8003792:	b088      	sub	sp, #32
 8003794:	af00      	add	r7, sp, #0
 8003796:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003798:	f107 0310 	add.w	r3, r7, #16
 800379c:	2200      	movs	r2, #0
 800379e:	601a      	str	r2, [r3, #0]
 80037a0:	605a      	str	r2, [r3, #4]
 80037a2:	609a      	str	r2, [r3, #8]
 80037a4:	60da      	str	r2, [r3, #12]
  if(uartHandle->Instance==USART2)
 80037a6:	687b      	ldr	r3, [r7, #4]
 80037a8:	681b      	ldr	r3, [r3, #0]
 80037aa:	4a1b      	ldr	r2, [pc, #108]	; (8003818 <HAL_UART_MspInit+0x88>)
 80037ac:	4293      	cmp	r3, r2
 80037ae:	d12f      	bne.n	8003810 <HAL_UART_MspInit+0x80>
  {
  /* USER CODE BEGIN USART2_MspInit 0 */

  /* USER CODE END USART2_MspInit 0 */
    /* USART2 clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 80037b0:	4b1a      	ldr	r3, [pc, #104]	; (800381c <HAL_UART_MspInit+0x8c>)
 80037b2:	69db      	ldr	r3, [r3, #28]
 80037b4:	4a19      	ldr	r2, [pc, #100]	; (800381c <HAL_UART_MspInit+0x8c>)
 80037b6:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80037ba:	61d3      	str	r3, [r2, #28]
 80037bc:	4b17      	ldr	r3, [pc, #92]	; (800381c <HAL_UART_MspInit+0x8c>)
 80037be:	69db      	ldr	r3, [r3, #28]
 80037c0:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80037c4:	60fb      	str	r3, [r7, #12]
 80037c6:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80037c8:	4b14      	ldr	r3, [pc, #80]	; (800381c <HAL_UART_MspInit+0x8c>)
 80037ca:	699b      	ldr	r3, [r3, #24]
 80037cc:	4a13      	ldr	r2, [pc, #76]	; (800381c <HAL_UART_MspInit+0x8c>)
 80037ce:	f043 0304 	orr.w	r3, r3, #4
 80037d2:	6193      	str	r3, [r2, #24]
 80037d4:	4b11      	ldr	r3, [pc, #68]	; (800381c <HAL_UART_MspInit+0x8c>)
 80037d6:	699b      	ldr	r3, [r3, #24]
 80037d8:	f003 0304 	and.w	r3, r3, #4
 80037dc:	60bb      	str	r3, [r7, #8]
 80037de:	68bb      	ldr	r3, [r7, #8]
    /**USART2 GPIO Configuration
    PA2     ------> USART2_TX
    PA3     ------> USART2_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 80037e0:	2304      	movs	r3, #4
 80037e2:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80037e4:	2302      	movs	r3, #2
 80037e6:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80037e8:	2303      	movs	r3, #3
 80037ea:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80037ec:	f107 0310 	add.w	r3, r7, #16
 80037f0:	4619      	mov	r1, r3
 80037f2:	480b      	ldr	r0, [pc, #44]	; (8003820 <HAL_UART_MspInit+0x90>)
 80037f4:	f000 f972 	bl	8003adc <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 80037f8:	2308      	movs	r3, #8
 80037fa:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80037fc:	2300      	movs	r3, #0
 80037fe:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003800:	2300      	movs	r3, #0
 8003802:	61bb      	str	r3, [r7, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8003804:	f107 0310 	add.w	r3, r7, #16
 8003808:	4619      	mov	r1, r3
 800380a:	4805      	ldr	r0, [pc, #20]	; (8003820 <HAL_UART_MspInit+0x90>)
 800380c:	f000 f966 	bl	8003adc <HAL_GPIO_Init>

  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }
}
 8003810:	bf00      	nop
 8003812:	3720      	adds	r7, #32
 8003814:	46bd      	mov	sp, r7
 8003816:	bd80      	pop	{r7, pc}
 8003818:	40004400 	.word	0x40004400
 800381c:	40021000 	.word	0x40021000
 8003820:	40010800 	.word	0x40010800

08003824 <Reset_Handler>:
 8003824:	f7ff fd1c 	bl	8003260 <SystemInit>
 8003828:	480b      	ldr	r0, [pc, #44]	; (8003858 <LoopFillZerobss+0xe>)
 800382a:	490c      	ldr	r1, [pc, #48]	; (800385c <LoopFillZerobss+0x12>)
 800382c:	4a0c      	ldr	r2, [pc, #48]	; (8003860 <LoopFillZerobss+0x16>)
 800382e:	2300      	movs	r3, #0
 8003830:	e002      	b.n	8003838 <LoopCopyDataInit>

08003832 <CopyDataInit>:
 8003832:	58d4      	ldr	r4, [r2, r3]
 8003834:	50c4      	str	r4, [r0, r3]
 8003836:	3304      	adds	r3, #4

08003838 <LoopCopyDataInit>:
 8003838:	18c4      	adds	r4, r0, r3
 800383a:	428c      	cmp	r4, r1
 800383c:	d3f9      	bcc.n	8003832 <CopyDataInit>
 800383e:	4a09      	ldr	r2, [pc, #36]	; (8003864 <LoopFillZerobss+0x1a>)
 8003840:	4c09      	ldr	r4, [pc, #36]	; (8003868 <LoopFillZerobss+0x1e>)
 8003842:	2300      	movs	r3, #0
 8003844:	e001      	b.n	800384a <LoopFillZerobss>

08003846 <FillZerobss>:
 8003846:	6013      	str	r3, [r2, #0]
 8003848:	3204      	adds	r2, #4

0800384a <LoopFillZerobss>:
 800384a:	42a2      	cmp	r2, r4
 800384c:	d3fb      	bcc.n	8003846 <FillZerobss>
 800384e:	f006 fc81 	bl	800a154 <__libc_init_array>
 8003852:	f7fe faab 	bl	8001dac <main>
 8003856:	4770      	bx	lr
 8003858:	20000000 	.word	0x20000000
 800385c:	2000023c 	.word	0x2000023c
 8003860:	0800c694 	.word	0x0800c694
 8003864:	2000023c 	.word	0x2000023c
 8003868:	20002508 	.word	0x20002508

0800386c <ADC1_2_IRQHandler>:
 800386c:	e7fe      	b.n	800386c <ADC1_2_IRQHandler>
	...

08003870 <HAL_Init>:
 8003870:	b580      	push	{r7, lr}
 8003872:	af00      	add	r7, sp, #0
 8003874:	4b08      	ldr	r3, [pc, #32]	; (8003898 <HAL_Init+0x28>)
 8003876:	681b      	ldr	r3, [r3, #0]
 8003878:	4a07      	ldr	r2, [pc, #28]	; (8003898 <HAL_Init+0x28>)
 800387a:	f043 0310 	orr.w	r3, r3, #16
 800387e:	6013      	str	r3, [r2, #0]
 8003880:	2003      	movs	r0, #3
 8003882:	f000 f8f5 	bl	8003a70 <HAL_NVIC_SetPriorityGrouping>
 8003886:	200f      	movs	r0, #15
 8003888:	f7ff fb7a 	bl	8002f80 <HAL_InitTick>
 800388c:	f7ff fb40 	bl	8002f10 <HAL_MspInit>
 8003890:	2300      	movs	r3, #0
 8003892:	4618      	mov	r0, r3
 8003894:	bd80      	pop	{r7, pc}
 8003896:	bf00      	nop
 8003898:	40022000 	.word	0x40022000

0800389c <HAL_IncTick>:
 800389c:	b480      	push	{r7}
 800389e:	af00      	add	r7, sp, #0
 80038a0:	4b05      	ldr	r3, [pc, #20]	; (80038b8 <HAL_IncTick+0x1c>)
 80038a2:	781b      	ldrb	r3, [r3, #0]
 80038a4:	461a      	mov	r2, r3
 80038a6:	4b05      	ldr	r3, [pc, #20]	; (80038bc <HAL_IncTick+0x20>)
 80038a8:	681b      	ldr	r3, [r3, #0]
 80038aa:	4413      	add	r3, r2
 80038ac:	4a03      	ldr	r2, [pc, #12]	; (80038bc <HAL_IncTick+0x20>)
 80038ae:	6013      	str	r3, [r2, #0]
 80038b0:	bf00      	nop
 80038b2:	46bd      	mov	sp, r7
 80038b4:	bc80      	pop	{r7}
 80038b6:	4770      	bx	lr
 80038b8:	2000006c 	.word	0x2000006c
 80038bc:	20000674 	.word	0x20000674

080038c0 <HAL_GetTick>:
 80038c0:	b480      	push	{r7}
 80038c2:	af00      	add	r7, sp, #0
 80038c4:	4b02      	ldr	r3, [pc, #8]	; (80038d0 <HAL_GetTick+0x10>)
 80038c6:	681b      	ldr	r3, [r3, #0]
 80038c8:	4618      	mov	r0, r3
 80038ca:	46bd      	mov	sp, r7
 80038cc:	bc80      	pop	{r7}
 80038ce:	4770      	bx	lr
 80038d0:	20000674 	.word	0x20000674

080038d4 <HAL_Delay>:
 80038d4:	b580      	push	{r7, lr}
 80038d6:	b084      	sub	sp, #16
 80038d8:	af00      	add	r7, sp, #0
 80038da:	6078      	str	r0, [r7, #4]
 80038dc:	f7ff fff0 	bl	80038c0 <HAL_GetTick>
 80038e0:	60b8      	str	r0, [r7, #8]
 80038e2:	687b      	ldr	r3, [r7, #4]
 80038e4:	60fb      	str	r3, [r7, #12]
 80038e6:	68fb      	ldr	r3, [r7, #12]
 80038e8:	f1b3 3fff 	cmp.w	r3, #4294967295
 80038ec:	d005      	beq.n	80038fa <HAL_Delay+0x26>
 80038ee:	4b0a      	ldr	r3, [pc, #40]	; (8003918 <HAL_Delay+0x44>)
 80038f0:	781b      	ldrb	r3, [r3, #0]
 80038f2:	461a      	mov	r2, r3
 80038f4:	68fb      	ldr	r3, [r7, #12]
 80038f6:	4413      	add	r3, r2
 80038f8:	60fb      	str	r3, [r7, #12]
 80038fa:	bf00      	nop
 80038fc:	f7ff ffe0 	bl	80038c0 <HAL_GetTick>
 8003900:	4602      	mov	r2, r0
 8003902:	68bb      	ldr	r3, [r7, #8]
 8003904:	1ad3      	subs	r3, r2, r3
 8003906:	68fa      	ldr	r2, [r7, #12]
 8003908:	429a      	cmp	r2, r3
 800390a:	d8f7      	bhi.n	80038fc <HAL_Delay+0x28>
 800390c:	bf00      	nop
 800390e:	bf00      	nop
 8003910:	3710      	adds	r7, #16
 8003912:	46bd      	mov	sp, r7
 8003914:	bd80      	pop	{r7, pc}
 8003916:	bf00      	nop
 8003918:	2000006c 	.word	0x2000006c

0800391c <__NVIC_SetPriorityGrouping>:
 800391c:	b480      	push	{r7}
 800391e:	b085      	sub	sp, #20
 8003920:	af00      	add	r7, sp, #0
 8003922:	6078      	str	r0, [r7, #4]
 8003924:	687b      	ldr	r3, [r7, #4]
 8003926:	f003 0307 	and.w	r3, r3, #7
 800392a:	60fb      	str	r3, [r7, #12]
 800392c:	4b0c      	ldr	r3, [pc, #48]	; (8003960 <__NVIC_SetPriorityGrouping+0x44>)
 800392e:	68db      	ldr	r3, [r3, #12]
 8003930:	60bb      	str	r3, [r7, #8]
 8003932:	68ba      	ldr	r2, [r7, #8]
 8003934:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8003938:	4013      	ands	r3, r2
 800393a:	60bb      	str	r3, [r7, #8]
 800393c:	68fb      	ldr	r3, [r7, #12]
 800393e:	021a      	lsls	r2, r3, #8
 8003940:	68bb      	ldr	r3, [r7, #8]
 8003942:	4313      	orrs	r3, r2
 8003944:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8003948:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800394c:	60bb      	str	r3, [r7, #8]
 800394e:	4a04      	ldr	r2, [pc, #16]	; (8003960 <__NVIC_SetPriorityGrouping+0x44>)
 8003950:	68bb      	ldr	r3, [r7, #8]
 8003952:	60d3      	str	r3, [r2, #12]
 8003954:	bf00      	nop
 8003956:	3714      	adds	r7, #20
 8003958:	46bd      	mov	sp, r7
 800395a:	bc80      	pop	{r7}
 800395c:	4770      	bx	lr
 800395e:	bf00      	nop
 8003960:	e000ed00 	.word	0xe000ed00

08003964 <__NVIC_GetPriorityGrouping>:
 8003964:	b480      	push	{r7}
 8003966:	af00      	add	r7, sp, #0
 8003968:	4b04      	ldr	r3, [pc, #16]	; (800397c <__NVIC_GetPriorityGrouping+0x18>)
 800396a:	68db      	ldr	r3, [r3, #12]
 800396c:	0a1b      	lsrs	r3, r3, #8
 800396e:	f003 0307 	and.w	r3, r3, #7
 8003972:	4618      	mov	r0, r3
 8003974:	46bd      	mov	sp, r7
 8003976:	bc80      	pop	{r7}
 8003978:	4770      	bx	lr
 800397a:	bf00      	nop
 800397c:	e000ed00 	.word	0xe000ed00

08003980 <__NVIC_EnableIRQ>:
 8003980:	b480      	push	{r7}
 8003982:	b083      	sub	sp, #12
 8003984:	af00      	add	r7, sp, #0
 8003986:	4603      	mov	r3, r0
 8003988:	71fb      	strb	r3, [r7, #7]
 800398a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800398e:	2b00      	cmp	r3, #0
 8003990:	db0b      	blt.n	80039aa <__NVIC_EnableIRQ+0x2a>
 8003992:	79fb      	ldrb	r3, [r7, #7]
 8003994:	f003 021f 	and.w	r2, r3, #31
 8003998:	4906      	ldr	r1, [pc, #24]	; (80039b4 <__NVIC_EnableIRQ+0x34>)
 800399a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800399e:	095b      	lsrs	r3, r3, #5
 80039a0:	2001      	movs	r0, #1
 80039a2:	fa00 f202 	lsl.w	r2, r0, r2
 80039a6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80039aa:	bf00      	nop
 80039ac:	370c      	adds	r7, #12
 80039ae:	46bd      	mov	sp, r7
 80039b0:	bc80      	pop	{r7}
 80039b2:	4770      	bx	lr
 80039b4:	e000e100 	.word	0xe000e100

080039b8 <__NVIC_SetPriority>:
 80039b8:	b480      	push	{r7}
 80039ba:	b083      	sub	sp, #12
 80039bc:	af00      	add	r7, sp, #0
 80039be:	4603      	mov	r3, r0
 80039c0:	6039      	str	r1, [r7, #0]
 80039c2:	71fb      	strb	r3, [r7, #7]
 80039c4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80039c8:	2b00      	cmp	r3, #0
 80039ca:	db0a      	blt.n	80039e2 <__NVIC_SetPriority+0x2a>
 80039cc:	683b      	ldr	r3, [r7, #0]
 80039ce:	b2da      	uxtb	r2, r3
 80039d0:	490c      	ldr	r1, [pc, #48]	; (8003a04 <__NVIC_SetPriority+0x4c>)
 80039d2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80039d6:	0112      	lsls	r2, r2, #4
 80039d8:	b2d2      	uxtb	r2, r2
 80039da:	440b      	add	r3, r1
 80039dc:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 80039e0:	e00a      	b.n	80039f8 <__NVIC_SetPriority+0x40>
 80039e2:	683b      	ldr	r3, [r7, #0]
 80039e4:	b2da      	uxtb	r2, r3
 80039e6:	4908      	ldr	r1, [pc, #32]	; (8003a08 <__NVIC_SetPriority+0x50>)
 80039e8:	79fb      	ldrb	r3, [r7, #7]
 80039ea:	f003 030f 	and.w	r3, r3, #15
 80039ee:	3b04      	subs	r3, #4
 80039f0:	0112      	lsls	r2, r2, #4
 80039f2:	b2d2      	uxtb	r2, r2
 80039f4:	440b      	add	r3, r1
 80039f6:	761a      	strb	r2, [r3, #24]
 80039f8:	bf00      	nop
 80039fa:	370c      	adds	r7, #12
 80039fc:	46bd      	mov	sp, r7
 80039fe:	bc80      	pop	{r7}
 8003a00:	4770      	bx	lr
 8003a02:	bf00      	nop
 8003a04:	e000e100 	.word	0xe000e100
 8003a08:	e000ed00 	.word	0xe000ed00

08003a0c <NVIC_EncodePriority>:
 8003a0c:	b480      	push	{r7}
 8003a0e:	b089      	sub	sp, #36	; 0x24
 8003a10:	af00      	add	r7, sp, #0
 8003a12:	60f8      	str	r0, [r7, #12]
 8003a14:	60b9      	str	r1, [r7, #8]
 8003a16:	607a      	str	r2, [r7, #4]
 8003a18:	68fb      	ldr	r3, [r7, #12]
 8003a1a:	f003 0307 	and.w	r3, r3, #7
 8003a1e:	61fb      	str	r3, [r7, #28]
 8003a20:	69fb      	ldr	r3, [r7, #28]
 8003a22:	f1c3 0307 	rsb	r3, r3, #7
 8003a26:	2b04      	cmp	r3, #4
 8003a28:	bf28      	it	cs
 8003a2a:	2304      	movcs	r3, #4
 8003a2c:	61bb      	str	r3, [r7, #24]
 8003a2e:	69fb      	ldr	r3, [r7, #28]
 8003a30:	3304      	adds	r3, #4
 8003a32:	2b06      	cmp	r3, #6
 8003a34:	d902      	bls.n	8003a3c <NVIC_EncodePriority+0x30>
 8003a36:	69fb      	ldr	r3, [r7, #28]
 8003a38:	3b03      	subs	r3, #3
 8003a3a:	e000      	b.n	8003a3e <NVIC_EncodePriority+0x32>
 8003a3c:	2300      	movs	r3, #0
 8003a3e:	617b      	str	r3, [r7, #20]
 8003a40:	f04f 32ff 	mov.w	r2, #4294967295
 8003a44:	69bb      	ldr	r3, [r7, #24]
 8003a46:	fa02 f303 	lsl.w	r3, r2, r3
 8003a4a:	43da      	mvns	r2, r3
 8003a4c:	68bb      	ldr	r3, [r7, #8]
 8003a4e:	401a      	ands	r2, r3
 8003a50:	697b      	ldr	r3, [r7, #20]
 8003a52:	409a      	lsls	r2, r3
 8003a54:	f04f 31ff 	mov.w	r1, #4294967295
 8003a58:	697b      	ldr	r3, [r7, #20]
 8003a5a:	fa01 f303 	lsl.w	r3, r1, r3
 8003a5e:	43d9      	mvns	r1, r3
 8003a60:	687b      	ldr	r3, [r7, #4]
 8003a62:	400b      	ands	r3, r1
 8003a64:	4313      	orrs	r3, r2
 8003a66:	4618      	mov	r0, r3
 8003a68:	3724      	adds	r7, #36	; 0x24
 8003a6a:	46bd      	mov	sp, r7
 8003a6c:	bc80      	pop	{r7}
 8003a6e:	4770      	bx	lr

08003a70 <HAL_NVIC_SetPriorityGrouping>:
 8003a70:	b580      	push	{r7, lr}
 8003a72:	b082      	sub	sp, #8
 8003a74:	af00      	add	r7, sp, #0
 8003a76:	6078      	str	r0, [r7, #4]
 8003a78:	6878      	ldr	r0, [r7, #4]
 8003a7a:	f7ff ff4f 	bl	800391c <__NVIC_SetPriorityGrouping>
 8003a7e:	bf00      	nop
 8003a80:	3708      	adds	r7, #8
 8003a82:	46bd      	mov	sp, r7
 8003a84:	bd80      	pop	{r7, pc}

08003a86 <HAL_NVIC_SetPriority>:
 8003a86:	b580      	push	{r7, lr}
 8003a88:	b086      	sub	sp, #24
 8003a8a:	af00      	add	r7, sp, #0
 8003a8c:	4603      	mov	r3, r0
 8003a8e:	60b9      	str	r1, [r7, #8]
 8003a90:	607a      	str	r2, [r7, #4]
 8003a92:	73fb      	strb	r3, [r7, #15]
 8003a94:	2300      	movs	r3, #0
 8003a96:	617b      	str	r3, [r7, #20]
 8003a98:	f7ff ff64 	bl	8003964 <__NVIC_GetPriorityGrouping>
 8003a9c:	6178      	str	r0, [r7, #20]
 8003a9e:	687a      	ldr	r2, [r7, #4]
 8003aa0:	68b9      	ldr	r1, [r7, #8]
 8003aa2:	6978      	ldr	r0, [r7, #20]
 8003aa4:	f7ff ffb2 	bl	8003a0c <NVIC_EncodePriority>
 8003aa8:	4602      	mov	r2, r0
 8003aaa:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8003aae:	4611      	mov	r1, r2
 8003ab0:	4618      	mov	r0, r3
 8003ab2:	f7ff ff81 	bl	80039b8 <__NVIC_SetPriority>
 8003ab6:	bf00      	nop
 8003ab8:	3718      	adds	r7, #24
 8003aba:	46bd      	mov	sp, r7
 8003abc:	bd80      	pop	{r7, pc}

08003abe <HAL_NVIC_EnableIRQ>:
 8003abe:	b580      	push	{r7, lr}
 8003ac0:	b082      	sub	sp, #8
 8003ac2:	af00      	add	r7, sp, #0
 8003ac4:	4603      	mov	r3, r0
 8003ac6:	71fb      	strb	r3, [r7, #7]
 8003ac8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003acc:	4618      	mov	r0, r3
 8003ace:	f7ff ff57 	bl	8003980 <__NVIC_EnableIRQ>
 8003ad2:	bf00      	nop
 8003ad4:	3708      	adds	r7, #8
 8003ad6:	46bd      	mov	sp, r7
 8003ad8:	bd80      	pop	{r7, pc}
	...

08003adc <HAL_GPIO_Init>:
 8003adc:	b480      	push	{r7}
 8003ade:	b08b      	sub	sp, #44	; 0x2c
 8003ae0:	af00      	add	r7, sp, #0
 8003ae2:	6078      	str	r0, [r7, #4]
 8003ae4:	6039      	str	r1, [r7, #0]
 8003ae6:	2300      	movs	r3, #0
 8003ae8:	627b      	str	r3, [r7, #36]	; 0x24
 8003aea:	2300      	movs	r3, #0
 8003aec:	623b      	str	r3, [r7, #32]
 8003aee:	e169      	b.n	8003dc4 <HAL_GPIO_Init+0x2e8>
 8003af0:	2201      	movs	r2, #1
 8003af2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003af4:	fa02 f303 	lsl.w	r3, r2, r3
 8003af8:	61fb      	str	r3, [r7, #28]
 8003afa:	683b      	ldr	r3, [r7, #0]
 8003afc:	681b      	ldr	r3, [r3, #0]
 8003afe:	69fa      	ldr	r2, [r7, #28]
 8003b00:	4013      	ands	r3, r2
 8003b02:	61bb      	str	r3, [r7, #24]
 8003b04:	69ba      	ldr	r2, [r7, #24]
 8003b06:	69fb      	ldr	r3, [r7, #28]
 8003b08:	429a      	cmp	r2, r3
 8003b0a:	f040 8158 	bne.w	8003dbe <HAL_GPIO_Init+0x2e2>
 8003b0e:	683b      	ldr	r3, [r7, #0]
 8003b10:	685b      	ldr	r3, [r3, #4]
 8003b12:	4a9a      	ldr	r2, [pc, #616]	; (8003d7c <HAL_GPIO_Init+0x2a0>)
 8003b14:	4293      	cmp	r3, r2
 8003b16:	d05e      	beq.n	8003bd6 <HAL_GPIO_Init+0xfa>
 8003b18:	4a98      	ldr	r2, [pc, #608]	; (8003d7c <HAL_GPIO_Init+0x2a0>)
 8003b1a:	4293      	cmp	r3, r2
 8003b1c:	d875      	bhi.n	8003c0a <HAL_GPIO_Init+0x12e>
 8003b1e:	4a98      	ldr	r2, [pc, #608]	; (8003d80 <HAL_GPIO_Init+0x2a4>)
 8003b20:	4293      	cmp	r3, r2
 8003b22:	d058      	beq.n	8003bd6 <HAL_GPIO_Init+0xfa>
 8003b24:	4a96      	ldr	r2, [pc, #600]	; (8003d80 <HAL_GPIO_Init+0x2a4>)
 8003b26:	4293      	cmp	r3, r2
 8003b28:	d86f      	bhi.n	8003c0a <HAL_GPIO_Init+0x12e>
 8003b2a:	4a96      	ldr	r2, [pc, #600]	; (8003d84 <HAL_GPIO_Init+0x2a8>)
 8003b2c:	4293      	cmp	r3, r2
 8003b2e:	d052      	beq.n	8003bd6 <HAL_GPIO_Init+0xfa>
 8003b30:	4a94      	ldr	r2, [pc, #592]	; (8003d84 <HAL_GPIO_Init+0x2a8>)
 8003b32:	4293      	cmp	r3, r2
 8003b34:	d869      	bhi.n	8003c0a <HAL_GPIO_Init+0x12e>
 8003b36:	4a94      	ldr	r2, [pc, #592]	; (8003d88 <HAL_GPIO_Init+0x2ac>)
 8003b38:	4293      	cmp	r3, r2
 8003b3a:	d04c      	beq.n	8003bd6 <HAL_GPIO_Init+0xfa>
 8003b3c:	4a92      	ldr	r2, [pc, #584]	; (8003d88 <HAL_GPIO_Init+0x2ac>)
 8003b3e:	4293      	cmp	r3, r2
 8003b40:	d863      	bhi.n	8003c0a <HAL_GPIO_Init+0x12e>
 8003b42:	4a92      	ldr	r2, [pc, #584]	; (8003d8c <HAL_GPIO_Init+0x2b0>)
 8003b44:	4293      	cmp	r3, r2
 8003b46:	d046      	beq.n	8003bd6 <HAL_GPIO_Init+0xfa>
 8003b48:	4a90      	ldr	r2, [pc, #576]	; (8003d8c <HAL_GPIO_Init+0x2b0>)
 8003b4a:	4293      	cmp	r3, r2
 8003b4c:	d85d      	bhi.n	8003c0a <HAL_GPIO_Init+0x12e>
 8003b4e:	2b12      	cmp	r3, #18
 8003b50:	d82a      	bhi.n	8003ba8 <HAL_GPIO_Init+0xcc>
 8003b52:	2b12      	cmp	r3, #18
 8003b54:	d859      	bhi.n	8003c0a <HAL_GPIO_Init+0x12e>
 8003b56:	a201      	add	r2, pc, #4	; (adr r2, 8003b5c <HAL_GPIO_Init+0x80>)
 8003b58:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003b5c:	08003bd7 	.word	0x08003bd7
 8003b60:	08003bb1 	.word	0x08003bb1
 8003b64:	08003bc3 	.word	0x08003bc3
 8003b68:	08003c05 	.word	0x08003c05
 8003b6c:	08003c0b 	.word	0x08003c0b
 8003b70:	08003c0b 	.word	0x08003c0b
 8003b74:	08003c0b 	.word	0x08003c0b
 8003b78:	08003c0b 	.word	0x08003c0b
 8003b7c:	08003c0b 	.word	0x08003c0b
 8003b80:	08003c0b 	.word	0x08003c0b
 8003b84:	08003c0b 	.word	0x08003c0b
 8003b88:	08003c0b 	.word	0x08003c0b
 8003b8c:	08003c0b 	.word	0x08003c0b
 8003b90:	08003c0b 	.word	0x08003c0b
 8003b94:	08003c0b 	.word	0x08003c0b
 8003b98:	08003c0b 	.word	0x08003c0b
 8003b9c:	08003c0b 	.word	0x08003c0b
 8003ba0:	08003bb9 	.word	0x08003bb9
 8003ba4:	08003bcd 	.word	0x08003bcd
 8003ba8:	4a79      	ldr	r2, [pc, #484]	; (8003d90 <HAL_GPIO_Init+0x2b4>)
 8003baa:	4293      	cmp	r3, r2
 8003bac:	d013      	beq.n	8003bd6 <HAL_GPIO_Init+0xfa>
 8003bae:	e02c      	b.n	8003c0a <HAL_GPIO_Init+0x12e>
 8003bb0:	683b      	ldr	r3, [r7, #0]
 8003bb2:	68db      	ldr	r3, [r3, #12]
 8003bb4:	623b      	str	r3, [r7, #32]
 8003bb6:	e029      	b.n	8003c0c <HAL_GPIO_Init+0x130>
 8003bb8:	683b      	ldr	r3, [r7, #0]
 8003bba:	68db      	ldr	r3, [r3, #12]
 8003bbc:	3304      	adds	r3, #4
 8003bbe:	623b      	str	r3, [r7, #32]
 8003bc0:	e024      	b.n	8003c0c <HAL_GPIO_Init+0x130>
 8003bc2:	683b      	ldr	r3, [r7, #0]
 8003bc4:	68db      	ldr	r3, [r3, #12]
 8003bc6:	3308      	adds	r3, #8
 8003bc8:	623b      	str	r3, [r7, #32]
 8003bca:	e01f      	b.n	8003c0c <HAL_GPIO_Init+0x130>
 8003bcc:	683b      	ldr	r3, [r7, #0]
 8003bce:	68db      	ldr	r3, [r3, #12]
 8003bd0:	330c      	adds	r3, #12
 8003bd2:	623b      	str	r3, [r7, #32]
 8003bd4:	e01a      	b.n	8003c0c <HAL_GPIO_Init+0x130>
 8003bd6:	683b      	ldr	r3, [r7, #0]
 8003bd8:	689b      	ldr	r3, [r3, #8]
 8003bda:	2b00      	cmp	r3, #0
 8003bdc:	d102      	bne.n	8003be4 <HAL_GPIO_Init+0x108>
 8003bde:	2304      	movs	r3, #4
 8003be0:	623b      	str	r3, [r7, #32]
 8003be2:	e013      	b.n	8003c0c <HAL_GPIO_Init+0x130>
 8003be4:	683b      	ldr	r3, [r7, #0]
 8003be6:	689b      	ldr	r3, [r3, #8]
 8003be8:	2b01      	cmp	r3, #1
 8003bea:	d105      	bne.n	8003bf8 <HAL_GPIO_Init+0x11c>
 8003bec:	2308      	movs	r3, #8
 8003bee:	623b      	str	r3, [r7, #32]
 8003bf0:	687b      	ldr	r3, [r7, #4]
 8003bf2:	69fa      	ldr	r2, [r7, #28]
 8003bf4:	611a      	str	r2, [r3, #16]
 8003bf6:	e009      	b.n	8003c0c <HAL_GPIO_Init+0x130>
 8003bf8:	2308      	movs	r3, #8
 8003bfa:	623b      	str	r3, [r7, #32]
 8003bfc:	687b      	ldr	r3, [r7, #4]
 8003bfe:	69fa      	ldr	r2, [r7, #28]
 8003c00:	615a      	str	r2, [r3, #20]
 8003c02:	e003      	b.n	8003c0c <HAL_GPIO_Init+0x130>
 8003c04:	2300      	movs	r3, #0
 8003c06:	623b      	str	r3, [r7, #32]
 8003c08:	e000      	b.n	8003c0c <HAL_GPIO_Init+0x130>
 8003c0a:	bf00      	nop
 8003c0c:	69bb      	ldr	r3, [r7, #24]
 8003c0e:	2bff      	cmp	r3, #255	; 0xff
 8003c10:	d801      	bhi.n	8003c16 <HAL_GPIO_Init+0x13a>
 8003c12:	687b      	ldr	r3, [r7, #4]
 8003c14:	e001      	b.n	8003c1a <HAL_GPIO_Init+0x13e>
 8003c16:	687b      	ldr	r3, [r7, #4]
 8003c18:	3304      	adds	r3, #4
 8003c1a:	617b      	str	r3, [r7, #20]
 8003c1c:	69bb      	ldr	r3, [r7, #24]
 8003c1e:	2bff      	cmp	r3, #255	; 0xff
 8003c20:	d802      	bhi.n	8003c28 <HAL_GPIO_Init+0x14c>
 8003c22:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003c24:	009b      	lsls	r3, r3, #2
 8003c26:	e002      	b.n	8003c2e <HAL_GPIO_Init+0x152>
 8003c28:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003c2a:	3b08      	subs	r3, #8
 8003c2c:	009b      	lsls	r3, r3, #2
 8003c2e:	613b      	str	r3, [r7, #16]
 8003c30:	697b      	ldr	r3, [r7, #20]
 8003c32:	681a      	ldr	r2, [r3, #0]
 8003c34:	210f      	movs	r1, #15
 8003c36:	693b      	ldr	r3, [r7, #16]
 8003c38:	fa01 f303 	lsl.w	r3, r1, r3
 8003c3c:	43db      	mvns	r3, r3
 8003c3e:	401a      	ands	r2, r3
 8003c40:	6a39      	ldr	r1, [r7, #32]
 8003c42:	693b      	ldr	r3, [r7, #16]
 8003c44:	fa01 f303 	lsl.w	r3, r1, r3
 8003c48:	431a      	orrs	r2, r3
 8003c4a:	697b      	ldr	r3, [r7, #20]
 8003c4c:	601a      	str	r2, [r3, #0]
 8003c4e:	683b      	ldr	r3, [r7, #0]
 8003c50:	685b      	ldr	r3, [r3, #4]
 8003c52:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003c56:	2b00      	cmp	r3, #0
 8003c58:	f000 80b1 	beq.w	8003dbe <HAL_GPIO_Init+0x2e2>
 8003c5c:	4b4d      	ldr	r3, [pc, #308]	; (8003d94 <HAL_GPIO_Init+0x2b8>)
 8003c5e:	699b      	ldr	r3, [r3, #24]
 8003c60:	4a4c      	ldr	r2, [pc, #304]	; (8003d94 <HAL_GPIO_Init+0x2b8>)
 8003c62:	f043 0301 	orr.w	r3, r3, #1
 8003c66:	6193      	str	r3, [r2, #24]
 8003c68:	4b4a      	ldr	r3, [pc, #296]	; (8003d94 <HAL_GPIO_Init+0x2b8>)
 8003c6a:	699b      	ldr	r3, [r3, #24]
 8003c6c:	f003 0301 	and.w	r3, r3, #1
 8003c70:	60bb      	str	r3, [r7, #8]
 8003c72:	68bb      	ldr	r3, [r7, #8]
 8003c74:	4a48      	ldr	r2, [pc, #288]	; (8003d98 <HAL_GPIO_Init+0x2bc>)
 8003c76:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003c78:	089b      	lsrs	r3, r3, #2
 8003c7a:	3302      	adds	r3, #2
 8003c7c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003c80:	60fb      	str	r3, [r7, #12]
 8003c82:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003c84:	f003 0303 	and.w	r3, r3, #3
 8003c88:	009b      	lsls	r3, r3, #2
 8003c8a:	220f      	movs	r2, #15
 8003c8c:	fa02 f303 	lsl.w	r3, r2, r3
 8003c90:	43db      	mvns	r3, r3
 8003c92:	68fa      	ldr	r2, [r7, #12]
 8003c94:	4013      	ands	r3, r2
 8003c96:	60fb      	str	r3, [r7, #12]
 8003c98:	687b      	ldr	r3, [r7, #4]
 8003c9a:	4a40      	ldr	r2, [pc, #256]	; (8003d9c <HAL_GPIO_Init+0x2c0>)
 8003c9c:	4293      	cmp	r3, r2
 8003c9e:	d013      	beq.n	8003cc8 <HAL_GPIO_Init+0x1ec>
 8003ca0:	687b      	ldr	r3, [r7, #4]
 8003ca2:	4a3f      	ldr	r2, [pc, #252]	; (8003da0 <HAL_GPIO_Init+0x2c4>)
 8003ca4:	4293      	cmp	r3, r2
 8003ca6:	d00d      	beq.n	8003cc4 <HAL_GPIO_Init+0x1e8>
 8003ca8:	687b      	ldr	r3, [r7, #4]
 8003caa:	4a3e      	ldr	r2, [pc, #248]	; (8003da4 <HAL_GPIO_Init+0x2c8>)
 8003cac:	4293      	cmp	r3, r2
 8003cae:	d007      	beq.n	8003cc0 <HAL_GPIO_Init+0x1e4>
 8003cb0:	687b      	ldr	r3, [r7, #4]
 8003cb2:	4a3d      	ldr	r2, [pc, #244]	; (8003da8 <HAL_GPIO_Init+0x2cc>)
 8003cb4:	4293      	cmp	r3, r2
 8003cb6:	d101      	bne.n	8003cbc <HAL_GPIO_Init+0x1e0>
 8003cb8:	2303      	movs	r3, #3
 8003cba:	e006      	b.n	8003cca <HAL_GPIO_Init+0x1ee>
 8003cbc:	2304      	movs	r3, #4
 8003cbe:	e004      	b.n	8003cca <HAL_GPIO_Init+0x1ee>
 8003cc0:	2302      	movs	r3, #2
 8003cc2:	e002      	b.n	8003cca <HAL_GPIO_Init+0x1ee>
 8003cc4:	2301      	movs	r3, #1
 8003cc6:	e000      	b.n	8003cca <HAL_GPIO_Init+0x1ee>
 8003cc8:	2300      	movs	r3, #0
 8003cca:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003ccc:	f002 0203 	and.w	r2, r2, #3
 8003cd0:	0092      	lsls	r2, r2, #2
 8003cd2:	4093      	lsls	r3, r2
 8003cd4:	68fa      	ldr	r2, [r7, #12]
 8003cd6:	4313      	orrs	r3, r2
 8003cd8:	60fb      	str	r3, [r7, #12]
 8003cda:	492f      	ldr	r1, [pc, #188]	; (8003d98 <HAL_GPIO_Init+0x2bc>)
 8003cdc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003cde:	089b      	lsrs	r3, r3, #2
 8003ce0:	3302      	adds	r3, #2
 8003ce2:	68fa      	ldr	r2, [r7, #12]
 8003ce4:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8003ce8:	683b      	ldr	r3, [r7, #0]
 8003cea:	685b      	ldr	r3, [r3, #4]
 8003cec:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8003cf0:	2b00      	cmp	r3, #0
 8003cf2:	d006      	beq.n	8003d02 <HAL_GPIO_Init+0x226>
 8003cf4:	4b2d      	ldr	r3, [pc, #180]	; (8003dac <HAL_GPIO_Init+0x2d0>)
 8003cf6:	689a      	ldr	r2, [r3, #8]
 8003cf8:	492c      	ldr	r1, [pc, #176]	; (8003dac <HAL_GPIO_Init+0x2d0>)
 8003cfa:	69bb      	ldr	r3, [r7, #24]
 8003cfc:	4313      	orrs	r3, r2
 8003cfe:	608b      	str	r3, [r1, #8]
 8003d00:	e006      	b.n	8003d10 <HAL_GPIO_Init+0x234>
 8003d02:	4b2a      	ldr	r3, [pc, #168]	; (8003dac <HAL_GPIO_Init+0x2d0>)
 8003d04:	689a      	ldr	r2, [r3, #8]
 8003d06:	69bb      	ldr	r3, [r7, #24]
 8003d08:	43db      	mvns	r3, r3
 8003d0a:	4928      	ldr	r1, [pc, #160]	; (8003dac <HAL_GPIO_Init+0x2d0>)
 8003d0c:	4013      	ands	r3, r2
 8003d0e:	608b      	str	r3, [r1, #8]
 8003d10:	683b      	ldr	r3, [r7, #0]
 8003d12:	685b      	ldr	r3, [r3, #4]
 8003d14:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8003d18:	2b00      	cmp	r3, #0
 8003d1a:	d006      	beq.n	8003d2a <HAL_GPIO_Init+0x24e>
 8003d1c:	4b23      	ldr	r3, [pc, #140]	; (8003dac <HAL_GPIO_Init+0x2d0>)
 8003d1e:	68da      	ldr	r2, [r3, #12]
 8003d20:	4922      	ldr	r1, [pc, #136]	; (8003dac <HAL_GPIO_Init+0x2d0>)
 8003d22:	69bb      	ldr	r3, [r7, #24]
 8003d24:	4313      	orrs	r3, r2
 8003d26:	60cb      	str	r3, [r1, #12]
 8003d28:	e006      	b.n	8003d38 <HAL_GPIO_Init+0x25c>
 8003d2a:	4b20      	ldr	r3, [pc, #128]	; (8003dac <HAL_GPIO_Init+0x2d0>)
 8003d2c:	68da      	ldr	r2, [r3, #12]
 8003d2e:	69bb      	ldr	r3, [r7, #24]
 8003d30:	43db      	mvns	r3, r3
 8003d32:	491e      	ldr	r1, [pc, #120]	; (8003dac <HAL_GPIO_Init+0x2d0>)
 8003d34:	4013      	ands	r3, r2
 8003d36:	60cb      	str	r3, [r1, #12]
 8003d38:	683b      	ldr	r3, [r7, #0]
 8003d3a:	685b      	ldr	r3, [r3, #4]
 8003d3c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003d40:	2b00      	cmp	r3, #0
 8003d42:	d006      	beq.n	8003d52 <HAL_GPIO_Init+0x276>
 8003d44:	4b19      	ldr	r3, [pc, #100]	; (8003dac <HAL_GPIO_Init+0x2d0>)
 8003d46:	685a      	ldr	r2, [r3, #4]
 8003d48:	4918      	ldr	r1, [pc, #96]	; (8003dac <HAL_GPIO_Init+0x2d0>)
 8003d4a:	69bb      	ldr	r3, [r7, #24]
 8003d4c:	4313      	orrs	r3, r2
 8003d4e:	604b      	str	r3, [r1, #4]
 8003d50:	e006      	b.n	8003d60 <HAL_GPIO_Init+0x284>
 8003d52:	4b16      	ldr	r3, [pc, #88]	; (8003dac <HAL_GPIO_Init+0x2d0>)
 8003d54:	685a      	ldr	r2, [r3, #4]
 8003d56:	69bb      	ldr	r3, [r7, #24]
 8003d58:	43db      	mvns	r3, r3
 8003d5a:	4914      	ldr	r1, [pc, #80]	; (8003dac <HAL_GPIO_Init+0x2d0>)
 8003d5c:	4013      	ands	r3, r2
 8003d5e:	604b      	str	r3, [r1, #4]
 8003d60:	683b      	ldr	r3, [r7, #0]
 8003d62:	685b      	ldr	r3, [r3, #4]
 8003d64:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8003d68:	2b00      	cmp	r3, #0
 8003d6a:	d021      	beq.n	8003db0 <HAL_GPIO_Init+0x2d4>
 8003d6c:	4b0f      	ldr	r3, [pc, #60]	; (8003dac <HAL_GPIO_Init+0x2d0>)
 8003d6e:	681a      	ldr	r2, [r3, #0]
 8003d70:	490e      	ldr	r1, [pc, #56]	; (8003dac <HAL_GPIO_Init+0x2d0>)
 8003d72:	69bb      	ldr	r3, [r7, #24]
 8003d74:	4313      	orrs	r3, r2
 8003d76:	600b      	str	r3, [r1, #0]
 8003d78:	e021      	b.n	8003dbe <HAL_GPIO_Init+0x2e2>
 8003d7a:	bf00      	nop
 8003d7c:	10320000 	.word	0x10320000
 8003d80:	10310000 	.word	0x10310000
 8003d84:	10220000 	.word	0x10220000
 8003d88:	10210000 	.word	0x10210000
 8003d8c:	10120000 	.word	0x10120000
 8003d90:	10110000 	.word	0x10110000
 8003d94:	40021000 	.word	0x40021000
 8003d98:	40010000 	.word	0x40010000
 8003d9c:	40010800 	.word	0x40010800
 8003da0:	40010c00 	.word	0x40010c00
 8003da4:	40011000 	.word	0x40011000
 8003da8:	40011400 	.word	0x40011400
 8003dac:	40010400 	.word	0x40010400
 8003db0:	4b0b      	ldr	r3, [pc, #44]	; (8003de0 <HAL_GPIO_Init+0x304>)
 8003db2:	681a      	ldr	r2, [r3, #0]
 8003db4:	69bb      	ldr	r3, [r7, #24]
 8003db6:	43db      	mvns	r3, r3
 8003db8:	4909      	ldr	r1, [pc, #36]	; (8003de0 <HAL_GPIO_Init+0x304>)
 8003dba:	4013      	ands	r3, r2
 8003dbc:	600b      	str	r3, [r1, #0]
 8003dbe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003dc0:	3301      	adds	r3, #1
 8003dc2:	627b      	str	r3, [r7, #36]	; 0x24
 8003dc4:	683b      	ldr	r3, [r7, #0]
 8003dc6:	681a      	ldr	r2, [r3, #0]
 8003dc8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003dca:	fa22 f303 	lsr.w	r3, r2, r3
 8003dce:	2b00      	cmp	r3, #0
 8003dd0:	f47f ae8e 	bne.w	8003af0 <HAL_GPIO_Init+0x14>
 8003dd4:	bf00      	nop
 8003dd6:	bf00      	nop
 8003dd8:	372c      	adds	r7, #44	; 0x2c
 8003dda:	46bd      	mov	sp, r7
 8003ddc:	bc80      	pop	{r7}
 8003dde:	4770      	bx	lr
 8003de0:	40010400 	.word	0x40010400

08003de4 <HAL_GPIO_WritePin>:
 8003de4:	b480      	push	{r7}
 8003de6:	b083      	sub	sp, #12
 8003de8:	af00      	add	r7, sp, #0
 8003dea:	6078      	str	r0, [r7, #4]
 8003dec:	460b      	mov	r3, r1
 8003dee:	807b      	strh	r3, [r7, #2]
 8003df0:	4613      	mov	r3, r2
 8003df2:	707b      	strb	r3, [r7, #1]
 8003df4:	787b      	ldrb	r3, [r7, #1]
 8003df6:	2b00      	cmp	r3, #0
 8003df8:	d003      	beq.n	8003e02 <HAL_GPIO_WritePin+0x1e>
 8003dfa:	887a      	ldrh	r2, [r7, #2]
 8003dfc:	687b      	ldr	r3, [r7, #4]
 8003dfe:	611a      	str	r2, [r3, #16]
 8003e00:	e003      	b.n	8003e0a <HAL_GPIO_WritePin+0x26>
 8003e02:	887b      	ldrh	r3, [r7, #2]
 8003e04:	041a      	lsls	r2, r3, #16
 8003e06:	687b      	ldr	r3, [r7, #4]
 8003e08:	611a      	str	r2, [r3, #16]
 8003e0a:	bf00      	nop
 8003e0c:	370c      	adds	r7, #12
 8003e0e:	46bd      	mov	sp, r7
 8003e10:	bc80      	pop	{r7}
 8003e12:	4770      	bx	lr

08003e14 <HAL_GPIO_TogglePin>:
 8003e14:	b480      	push	{r7}
 8003e16:	b085      	sub	sp, #20
 8003e18:	af00      	add	r7, sp, #0
 8003e1a:	6078      	str	r0, [r7, #4]
 8003e1c:	460b      	mov	r3, r1
 8003e1e:	807b      	strh	r3, [r7, #2]
 8003e20:	687b      	ldr	r3, [r7, #4]
 8003e22:	68db      	ldr	r3, [r3, #12]
 8003e24:	60fb      	str	r3, [r7, #12]
 8003e26:	887a      	ldrh	r2, [r7, #2]
 8003e28:	68fb      	ldr	r3, [r7, #12]
 8003e2a:	4013      	ands	r3, r2
 8003e2c:	041a      	lsls	r2, r3, #16
 8003e2e:	68fb      	ldr	r3, [r7, #12]
 8003e30:	43d9      	mvns	r1, r3
 8003e32:	887b      	ldrh	r3, [r7, #2]
 8003e34:	400b      	ands	r3, r1
 8003e36:	431a      	orrs	r2, r3
 8003e38:	687b      	ldr	r3, [r7, #4]
 8003e3a:	611a      	str	r2, [r3, #16]
 8003e3c:	bf00      	nop
 8003e3e:	3714      	adds	r7, #20
 8003e40:	46bd      	mov	sp, r7
 8003e42:	bc80      	pop	{r7}
 8003e44:	4770      	bx	lr
	...

08003e48 <HAL_GPIO_EXTI_IRQHandler>:
 8003e48:	b580      	push	{r7, lr}
 8003e4a:	b082      	sub	sp, #8
 8003e4c:	af00      	add	r7, sp, #0
 8003e4e:	4603      	mov	r3, r0
 8003e50:	80fb      	strh	r3, [r7, #6]
 8003e52:	4b08      	ldr	r3, [pc, #32]	; (8003e74 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8003e54:	695a      	ldr	r2, [r3, #20]
 8003e56:	88fb      	ldrh	r3, [r7, #6]
 8003e58:	4013      	ands	r3, r2
 8003e5a:	2b00      	cmp	r3, #0
 8003e5c:	d006      	beq.n	8003e6c <HAL_GPIO_EXTI_IRQHandler+0x24>
 8003e5e:	4a05      	ldr	r2, [pc, #20]	; (8003e74 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8003e60:	88fb      	ldrh	r3, [r7, #6]
 8003e62:	6153      	str	r3, [r2, #20]
 8003e64:	88fb      	ldrh	r3, [r7, #6]
 8003e66:	4618      	mov	r0, r3
 8003e68:	f7fe f83b 	bl	8001ee2 <HAL_GPIO_EXTI_Callback>
 8003e6c:	bf00      	nop
 8003e6e:	3708      	adds	r7, #8
 8003e70:	46bd      	mov	sp, r7
 8003e72:	bd80      	pop	{r7, pc}
 8003e74:	40010400 	.word	0x40010400

08003e78 <HAL_I2C_Init>:
 8003e78:	b580      	push	{r7, lr}
 8003e7a:	b084      	sub	sp, #16
 8003e7c:	af00      	add	r7, sp, #0
 8003e7e:	6078      	str	r0, [r7, #4]
 8003e80:	687b      	ldr	r3, [r7, #4]
 8003e82:	2b00      	cmp	r3, #0
 8003e84:	d101      	bne.n	8003e8a <HAL_I2C_Init+0x12>
 8003e86:	2301      	movs	r3, #1
 8003e88:	e12b      	b.n	80040e2 <HAL_I2C_Init+0x26a>
 8003e8a:	687b      	ldr	r3, [r7, #4]
 8003e8c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003e90:	b2db      	uxtb	r3, r3
 8003e92:	2b00      	cmp	r3, #0
 8003e94:	d106      	bne.n	8003ea4 <HAL_I2C_Init+0x2c>
 8003e96:	687b      	ldr	r3, [r7, #4]
 8003e98:	2200      	movs	r2, #0
 8003e9a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003e9e:	6878      	ldr	r0, [r7, #4]
 8003ea0:	f7fd ff0e 	bl	8001cc0 <HAL_I2C_MspInit>
 8003ea4:	687b      	ldr	r3, [r7, #4]
 8003ea6:	2224      	movs	r2, #36	; 0x24
 8003ea8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003eac:	687b      	ldr	r3, [r7, #4]
 8003eae:	681b      	ldr	r3, [r3, #0]
 8003eb0:	681a      	ldr	r2, [r3, #0]
 8003eb2:	687b      	ldr	r3, [r7, #4]
 8003eb4:	681b      	ldr	r3, [r3, #0]
 8003eb6:	f022 0201 	bic.w	r2, r2, #1
 8003eba:	601a      	str	r2, [r3, #0]
 8003ebc:	687b      	ldr	r3, [r7, #4]
 8003ebe:	681b      	ldr	r3, [r3, #0]
 8003ec0:	681a      	ldr	r2, [r3, #0]
 8003ec2:	687b      	ldr	r3, [r7, #4]
 8003ec4:	681b      	ldr	r3, [r3, #0]
 8003ec6:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8003eca:	601a      	str	r2, [r3, #0]
 8003ecc:	687b      	ldr	r3, [r7, #4]
 8003ece:	681b      	ldr	r3, [r3, #0]
 8003ed0:	681a      	ldr	r2, [r3, #0]
 8003ed2:	687b      	ldr	r3, [r7, #4]
 8003ed4:	681b      	ldr	r3, [r3, #0]
 8003ed6:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8003eda:	601a      	str	r2, [r3, #0]
 8003edc:	f000 fe10 	bl	8004b00 <HAL_RCC_GetPCLK1Freq>
 8003ee0:	60f8      	str	r0, [r7, #12]
 8003ee2:	687b      	ldr	r3, [r7, #4]
 8003ee4:	685b      	ldr	r3, [r3, #4]
 8003ee6:	4a81      	ldr	r2, [pc, #516]	; (80040ec <HAL_I2C_Init+0x274>)
 8003ee8:	4293      	cmp	r3, r2
 8003eea:	d807      	bhi.n	8003efc <HAL_I2C_Init+0x84>
 8003eec:	68fb      	ldr	r3, [r7, #12]
 8003eee:	4a80      	ldr	r2, [pc, #512]	; (80040f0 <HAL_I2C_Init+0x278>)
 8003ef0:	4293      	cmp	r3, r2
 8003ef2:	bf94      	ite	ls
 8003ef4:	2301      	movls	r3, #1
 8003ef6:	2300      	movhi	r3, #0
 8003ef8:	b2db      	uxtb	r3, r3
 8003efa:	e006      	b.n	8003f0a <HAL_I2C_Init+0x92>
 8003efc:	68fb      	ldr	r3, [r7, #12]
 8003efe:	4a7d      	ldr	r2, [pc, #500]	; (80040f4 <HAL_I2C_Init+0x27c>)
 8003f00:	4293      	cmp	r3, r2
 8003f02:	bf94      	ite	ls
 8003f04:	2301      	movls	r3, #1
 8003f06:	2300      	movhi	r3, #0
 8003f08:	b2db      	uxtb	r3, r3
 8003f0a:	2b00      	cmp	r3, #0
 8003f0c:	d001      	beq.n	8003f12 <HAL_I2C_Init+0x9a>
 8003f0e:	2301      	movs	r3, #1
 8003f10:	e0e7      	b.n	80040e2 <HAL_I2C_Init+0x26a>
 8003f12:	68fb      	ldr	r3, [r7, #12]
 8003f14:	4a78      	ldr	r2, [pc, #480]	; (80040f8 <HAL_I2C_Init+0x280>)
 8003f16:	fba2 2303 	umull	r2, r3, r2, r3
 8003f1a:	0c9b      	lsrs	r3, r3, #18
 8003f1c:	60bb      	str	r3, [r7, #8]
 8003f1e:	687b      	ldr	r3, [r7, #4]
 8003f20:	681b      	ldr	r3, [r3, #0]
 8003f22:	685b      	ldr	r3, [r3, #4]
 8003f24:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8003f28:	687b      	ldr	r3, [r7, #4]
 8003f2a:	681b      	ldr	r3, [r3, #0]
 8003f2c:	68ba      	ldr	r2, [r7, #8]
 8003f2e:	430a      	orrs	r2, r1
 8003f30:	605a      	str	r2, [r3, #4]
 8003f32:	687b      	ldr	r3, [r7, #4]
 8003f34:	681b      	ldr	r3, [r3, #0]
 8003f36:	6a1b      	ldr	r3, [r3, #32]
 8003f38:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8003f3c:	687b      	ldr	r3, [r7, #4]
 8003f3e:	685b      	ldr	r3, [r3, #4]
 8003f40:	4a6a      	ldr	r2, [pc, #424]	; (80040ec <HAL_I2C_Init+0x274>)
 8003f42:	4293      	cmp	r3, r2
 8003f44:	d802      	bhi.n	8003f4c <HAL_I2C_Init+0xd4>
 8003f46:	68bb      	ldr	r3, [r7, #8]
 8003f48:	3301      	adds	r3, #1
 8003f4a:	e009      	b.n	8003f60 <HAL_I2C_Init+0xe8>
 8003f4c:	68bb      	ldr	r3, [r7, #8]
 8003f4e:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8003f52:	fb02 f303 	mul.w	r3, r2, r3
 8003f56:	4a69      	ldr	r2, [pc, #420]	; (80040fc <HAL_I2C_Init+0x284>)
 8003f58:	fba2 2303 	umull	r2, r3, r2, r3
 8003f5c:	099b      	lsrs	r3, r3, #6
 8003f5e:	3301      	adds	r3, #1
 8003f60:	687a      	ldr	r2, [r7, #4]
 8003f62:	6812      	ldr	r2, [r2, #0]
 8003f64:	430b      	orrs	r3, r1
 8003f66:	6213      	str	r3, [r2, #32]
 8003f68:	687b      	ldr	r3, [r7, #4]
 8003f6a:	681b      	ldr	r3, [r3, #0]
 8003f6c:	69db      	ldr	r3, [r3, #28]
 8003f6e:	f423 424f 	bic.w	r2, r3, #52992	; 0xcf00
 8003f72:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 8003f76:	687b      	ldr	r3, [r7, #4]
 8003f78:	685b      	ldr	r3, [r3, #4]
 8003f7a:	495c      	ldr	r1, [pc, #368]	; (80040ec <HAL_I2C_Init+0x274>)
 8003f7c:	428b      	cmp	r3, r1
 8003f7e:	d819      	bhi.n	8003fb4 <HAL_I2C_Init+0x13c>
 8003f80:	68fb      	ldr	r3, [r7, #12]
 8003f82:	1e59      	subs	r1, r3, #1
 8003f84:	687b      	ldr	r3, [r7, #4]
 8003f86:	685b      	ldr	r3, [r3, #4]
 8003f88:	005b      	lsls	r3, r3, #1
 8003f8a:	fbb1 f3f3 	udiv	r3, r1, r3
 8003f8e:	1c59      	adds	r1, r3, #1
 8003f90:	f640 73fc 	movw	r3, #4092	; 0xffc
 8003f94:	400b      	ands	r3, r1
 8003f96:	2b00      	cmp	r3, #0
 8003f98:	d00a      	beq.n	8003fb0 <HAL_I2C_Init+0x138>
 8003f9a:	68fb      	ldr	r3, [r7, #12]
 8003f9c:	1e59      	subs	r1, r3, #1
 8003f9e:	687b      	ldr	r3, [r7, #4]
 8003fa0:	685b      	ldr	r3, [r3, #4]
 8003fa2:	005b      	lsls	r3, r3, #1
 8003fa4:	fbb1 f3f3 	udiv	r3, r1, r3
 8003fa8:	3301      	adds	r3, #1
 8003faa:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003fae:	e051      	b.n	8004054 <HAL_I2C_Init+0x1dc>
 8003fb0:	2304      	movs	r3, #4
 8003fb2:	e04f      	b.n	8004054 <HAL_I2C_Init+0x1dc>
 8003fb4:	687b      	ldr	r3, [r7, #4]
 8003fb6:	689b      	ldr	r3, [r3, #8]
 8003fb8:	2b00      	cmp	r3, #0
 8003fba:	d111      	bne.n	8003fe0 <HAL_I2C_Init+0x168>
 8003fbc:	68fb      	ldr	r3, [r7, #12]
 8003fbe:	1e58      	subs	r0, r3, #1
 8003fc0:	687b      	ldr	r3, [r7, #4]
 8003fc2:	6859      	ldr	r1, [r3, #4]
 8003fc4:	460b      	mov	r3, r1
 8003fc6:	005b      	lsls	r3, r3, #1
 8003fc8:	440b      	add	r3, r1
 8003fca:	fbb0 f3f3 	udiv	r3, r0, r3
 8003fce:	3301      	adds	r3, #1
 8003fd0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003fd4:	2b00      	cmp	r3, #0
 8003fd6:	bf0c      	ite	eq
 8003fd8:	2301      	moveq	r3, #1
 8003fda:	2300      	movne	r3, #0
 8003fdc:	b2db      	uxtb	r3, r3
 8003fde:	e012      	b.n	8004006 <HAL_I2C_Init+0x18e>
 8003fe0:	68fb      	ldr	r3, [r7, #12]
 8003fe2:	1e58      	subs	r0, r3, #1
 8003fe4:	687b      	ldr	r3, [r7, #4]
 8003fe6:	6859      	ldr	r1, [r3, #4]
 8003fe8:	460b      	mov	r3, r1
 8003fea:	009b      	lsls	r3, r3, #2
 8003fec:	440b      	add	r3, r1
 8003fee:	0099      	lsls	r1, r3, #2
 8003ff0:	440b      	add	r3, r1
 8003ff2:	fbb0 f3f3 	udiv	r3, r0, r3
 8003ff6:	3301      	adds	r3, #1
 8003ff8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003ffc:	2b00      	cmp	r3, #0
 8003ffe:	bf0c      	ite	eq
 8004000:	2301      	moveq	r3, #1
 8004002:	2300      	movne	r3, #0
 8004004:	b2db      	uxtb	r3, r3
 8004006:	2b00      	cmp	r3, #0
 8004008:	d001      	beq.n	800400e <HAL_I2C_Init+0x196>
 800400a:	2301      	movs	r3, #1
 800400c:	e022      	b.n	8004054 <HAL_I2C_Init+0x1dc>
 800400e:	687b      	ldr	r3, [r7, #4]
 8004010:	689b      	ldr	r3, [r3, #8]
 8004012:	2b00      	cmp	r3, #0
 8004014:	d10e      	bne.n	8004034 <HAL_I2C_Init+0x1bc>
 8004016:	68fb      	ldr	r3, [r7, #12]
 8004018:	1e58      	subs	r0, r3, #1
 800401a:	687b      	ldr	r3, [r7, #4]
 800401c:	6859      	ldr	r1, [r3, #4]
 800401e:	460b      	mov	r3, r1
 8004020:	005b      	lsls	r3, r3, #1
 8004022:	440b      	add	r3, r1
 8004024:	fbb0 f3f3 	udiv	r3, r0, r3
 8004028:	3301      	adds	r3, #1
 800402a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800402e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8004032:	e00f      	b.n	8004054 <HAL_I2C_Init+0x1dc>
 8004034:	68fb      	ldr	r3, [r7, #12]
 8004036:	1e58      	subs	r0, r3, #1
 8004038:	687b      	ldr	r3, [r7, #4]
 800403a:	6859      	ldr	r1, [r3, #4]
 800403c:	460b      	mov	r3, r1
 800403e:	009b      	lsls	r3, r3, #2
 8004040:	440b      	add	r3, r1
 8004042:	0099      	lsls	r1, r3, #2
 8004044:	440b      	add	r3, r1
 8004046:	fbb0 f3f3 	udiv	r3, r0, r3
 800404a:	3301      	adds	r3, #1
 800404c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004050:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8004054:	6879      	ldr	r1, [r7, #4]
 8004056:	6809      	ldr	r1, [r1, #0]
 8004058:	4313      	orrs	r3, r2
 800405a:	61cb      	str	r3, [r1, #28]
 800405c:	687b      	ldr	r3, [r7, #4]
 800405e:	681b      	ldr	r3, [r3, #0]
 8004060:	681b      	ldr	r3, [r3, #0]
 8004062:	f023 01c0 	bic.w	r1, r3, #192	; 0xc0
 8004066:	687b      	ldr	r3, [r7, #4]
 8004068:	69da      	ldr	r2, [r3, #28]
 800406a:	687b      	ldr	r3, [r7, #4]
 800406c:	6a1b      	ldr	r3, [r3, #32]
 800406e:	431a      	orrs	r2, r3
 8004070:	687b      	ldr	r3, [r7, #4]
 8004072:	681b      	ldr	r3, [r3, #0]
 8004074:	430a      	orrs	r2, r1
 8004076:	601a      	str	r2, [r3, #0]
 8004078:	687b      	ldr	r3, [r7, #4]
 800407a:	681b      	ldr	r3, [r3, #0]
 800407c:	689b      	ldr	r3, [r3, #8]
 800407e:	f423 4303 	bic.w	r3, r3, #33536	; 0x8300
 8004082:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 8004086:	687a      	ldr	r2, [r7, #4]
 8004088:	6911      	ldr	r1, [r2, #16]
 800408a:	687a      	ldr	r2, [r7, #4]
 800408c:	68d2      	ldr	r2, [r2, #12]
 800408e:	4311      	orrs	r1, r2
 8004090:	687a      	ldr	r2, [r7, #4]
 8004092:	6812      	ldr	r2, [r2, #0]
 8004094:	430b      	orrs	r3, r1
 8004096:	6093      	str	r3, [r2, #8]
 8004098:	687b      	ldr	r3, [r7, #4]
 800409a:	681b      	ldr	r3, [r3, #0]
 800409c:	68db      	ldr	r3, [r3, #12]
 800409e:	f023 01ff 	bic.w	r1, r3, #255	; 0xff
 80040a2:	687b      	ldr	r3, [r7, #4]
 80040a4:	695a      	ldr	r2, [r3, #20]
 80040a6:	687b      	ldr	r3, [r7, #4]
 80040a8:	699b      	ldr	r3, [r3, #24]
 80040aa:	431a      	orrs	r2, r3
 80040ac:	687b      	ldr	r3, [r7, #4]
 80040ae:	681b      	ldr	r3, [r3, #0]
 80040b0:	430a      	orrs	r2, r1
 80040b2:	60da      	str	r2, [r3, #12]
 80040b4:	687b      	ldr	r3, [r7, #4]
 80040b6:	681b      	ldr	r3, [r3, #0]
 80040b8:	681a      	ldr	r2, [r3, #0]
 80040ba:	687b      	ldr	r3, [r7, #4]
 80040bc:	681b      	ldr	r3, [r3, #0]
 80040be:	f042 0201 	orr.w	r2, r2, #1
 80040c2:	601a      	str	r2, [r3, #0]
 80040c4:	687b      	ldr	r3, [r7, #4]
 80040c6:	2200      	movs	r2, #0
 80040c8:	641a      	str	r2, [r3, #64]	; 0x40
 80040ca:	687b      	ldr	r3, [r7, #4]
 80040cc:	2220      	movs	r2, #32
 80040ce:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80040d2:	687b      	ldr	r3, [r7, #4]
 80040d4:	2200      	movs	r2, #0
 80040d6:	631a      	str	r2, [r3, #48]	; 0x30
 80040d8:	687b      	ldr	r3, [r7, #4]
 80040da:	2200      	movs	r2, #0
 80040dc:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80040e0:	2300      	movs	r3, #0
 80040e2:	4618      	mov	r0, r3
 80040e4:	3710      	adds	r7, #16
 80040e6:	46bd      	mov	sp, r7
 80040e8:	bd80      	pop	{r7, pc}
 80040ea:	bf00      	nop
 80040ec:	000186a0 	.word	0x000186a0
 80040f0:	001e847f 	.word	0x001e847f
 80040f4:	003d08ff 	.word	0x003d08ff
 80040f8:	431bde83 	.word	0x431bde83
 80040fc:	10624dd3 	.word	0x10624dd3

08004100 <HAL_RCC_OscConfig>:
 8004100:	b580      	push	{r7, lr}
 8004102:	b086      	sub	sp, #24
 8004104:	af00      	add	r7, sp, #0
 8004106:	6078      	str	r0, [r7, #4]
 8004108:	687b      	ldr	r3, [r7, #4]
 800410a:	2b00      	cmp	r3, #0
 800410c:	d101      	bne.n	8004112 <HAL_RCC_OscConfig+0x12>
 800410e:	2301      	movs	r3, #1
 8004110:	e304      	b.n	800471c <HAL_RCC_OscConfig+0x61c>
 8004112:	687b      	ldr	r3, [r7, #4]
 8004114:	681b      	ldr	r3, [r3, #0]
 8004116:	f003 0301 	and.w	r3, r3, #1
 800411a:	2b00      	cmp	r3, #0
 800411c:	f000 8087 	beq.w	800422e <HAL_RCC_OscConfig+0x12e>
 8004120:	4b92      	ldr	r3, [pc, #584]	; (800436c <HAL_RCC_OscConfig+0x26c>)
 8004122:	685b      	ldr	r3, [r3, #4]
 8004124:	f003 030c 	and.w	r3, r3, #12
 8004128:	2b04      	cmp	r3, #4
 800412a:	d00c      	beq.n	8004146 <HAL_RCC_OscConfig+0x46>
 800412c:	4b8f      	ldr	r3, [pc, #572]	; (800436c <HAL_RCC_OscConfig+0x26c>)
 800412e:	685b      	ldr	r3, [r3, #4]
 8004130:	f003 030c 	and.w	r3, r3, #12
 8004134:	2b08      	cmp	r3, #8
 8004136:	d112      	bne.n	800415e <HAL_RCC_OscConfig+0x5e>
 8004138:	4b8c      	ldr	r3, [pc, #560]	; (800436c <HAL_RCC_OscConfig+0x26c>)
 800413a:	685b      	ldr	r3, [r3, #4]
 800413c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8004140:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8004144:	d10b      	bne.n	800415e <HAL_RCC_OscConfig+0x5e>
 8004146:	4b89      	ldr	r3, [pc, #548]	; (800436c <HAL_RCC_OscConfig+0x26c>)
 8004148:	681b      	ldr	r3, [r3, #0]
 800414a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800414e:	2b00      	cmp	r3, #0
 8004150:	d06c      	beq.n	800422c <HAL_RCC_OscConfig+0x12c>
 8004152:	687b      	ldr	r3, [r7, #4]
 8004154:	689b      	ldr	r3, [r3, #8]
 8004156:	2b00      	cmp	r3, #0
 8004158:	d168      	bne.n	800422c <HAL_RCC_OscConfig+0x12c>
 800415a:	2301      	movs	r3, #1
 800415c:	e2de      	b.n	800471c <HAL_RCC_OscConfig+0x61c>
 800415e:	687b      	ldr	r3, [r7, #4]
 8004160:	689b      	ldr	r3, [r3, #8]
 8004162:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8004166:	d106      	bne.n	8004176 <HAL_RCC_OscConfig+0x76>
 8004168:	4b80      	ldr	r3, [pc, #512]	; (800436c <HAL_RCC_OscConfig+0x26c>)
 800416a:	681b      	ldr	r3, [r3, #0]
 800416c:	4a7f      	ldr	r2, [pc, #508]	; (800436c <HAL_RCC_OscConfig+0x26c>)
 800416e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8004172:	6013      	str	r3, [r2, #0]
 8004174:	e02e      	b.n	80041d4 <HAL_RCC_OscConfig+0xd4>
 8004176:	687b      	ldr	r3, [r7, #4]
 8004178:	689b      	ldr	r3, [r3, #8]
 800417a:	2b00      	cmp	r3, #0
 800417c:	d10c      	bne.n	8004198 <HAL_RCC_OscConfig+0x98>
 800417e:	4b7b      	ldr	r3, [pc, #492]	; (800436c <HAL_RCC_OscConfig+0x26c>)
 8004180:	681b      	ldr	r3, [r3, #0]
 8004182:	4a7a      	ldr	r2, [pc, #488]	; (800436c <HAL_RCC_OscConfig+0x26c>)
 8004184:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8004188:	6013      	str	r3, [r2, #0]
 800418a:	4b78      	ldr	r3, [pc, #480]	; (800436c <HAL_RCC_OscConfig+0x26c>)
 800418c:	681b      	ldr	r3, [r3, #0]
 800418e:	4a77      	ldr	r2, [pc, #476]	; (800436c <HAL_RCC_OscConfig+0x26c>)
 8004190:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8004194:	6013      	str	r3, [r2, #0]
 8004196:	e01d      	b.n	80041d4 <HAL_RCC_OscConfig+0xd4>
 8004198:	687b      	ldr	r3, [r7, #4]
 800419a:	689b      	ldr	r3, [r3, #8]
 800419c:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80041a0:	d10c      	bne.n	80041bc <HAL_RCC_OscConfig+0xbc>
 80041a2:	4b72      	ldr	r3, [pc, #456]	; (800436c <HAL_RCC_OscConfig+0x26c>)
 80041a4:	681b      	ldr	r3, [r3, #0]
 80041a6:	4a71      	ldr	r2, [pc, #452]	; (800436c <HAL_RCC_OscConfig+0x26c>)
 80041a8:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80041ac:	6013      	str	r3, [r2, #0]
 80041ae:	4b6f      	ldr	r3, [pc, #444]	; (800436c <HAL_RCC_OscConfig+0x26c>)
 80041b0:	681b      	ldr	r3, [r3, #0]
 80041b2:	4a6e      	ldr	r2, [pc, #440]	; (800436c <HAL_RCC_OscConfig+0x26c>)
 80041b4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80041b8:	6013      	str	r3, [r2, #0]
 80041ba:	e00b      	b.n	80041d4 <HAL_RCC_OscConfig+0xd4>
 80041bc:	4b6b      	ldr	r3, [pc, #428]	; (800436c <HAL_RCC_OscConfig+0x26c>)
 80041be:	681b      	ldr	r3, [r3, #0]
 80041c0:	4a6a      	ldr	r2, [pc, #424]	; (800436c <HAL_RCC_OscConfig+0x26c>)
 80041c2:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80041c6:	6013      	str	r3, [r2, #0]
 80041c8:	4b68      	ldr	r3, [pc, #416]	; (800436c <HAL_RCC_OscConfig+0x26c>)
 80041ca:	681b      	ldr	r3, [r3, #0]
 80041cc:	4a67      	ldr	r2, [pc, #412]	; (800436c <HAL_RCC_OscConfig+0x26c>)
 80041ce:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80041d2:	6013      	str	r3, [r2, #0]
 80041d4:	687b      	ldr	r3, [r7, #4]
 80041d6:	689b      	ldr	r3, [r3, #8]
 80041d8:	2b00      	cmp	r3, #0
 80041da:	d013      	beq.n	8004204 <HAL_RCC_OscConfig+0x104>
 80041dc:	f7ff fb70 	bl	80038c0 <HAL_GetTick>
 80041e0:	6138      	str	r0, [r7, #16]
 80041e2:	e008      	b.n	80041f6 <HAL_RCC_OscConfig+0xf6>
 80041e4:	f7ff fb6c 	bl	80038c0 <HAL_GetTick>
 80041e8:	4602      	mov	r2, r0
 80041ea:	693b      	ldr	r3, [r7, #16]
 80041ec:	1ad3      	subs	r3, r2, r3
 80041ee:	2b64      	cmp	r3, #100	; 0x64
 80041f0:	d901      	bls.n	80041f6 <HAL_RCC_OscConfig+0xf6>
 80041f2:	2303      	movs	r3, #3
 80041f4:	e292      	b.n	800471c <HAL_RCC_OscConfig+0x61c>
 80041f6:	4b5d      	ldr	r3, [pc, #372]	; (800436c <HAL_RCC_OscConfig+0x26c>)
 80041f8:	681b      	ldr	r3, [r3, #0]
 80041fa:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80041fe:	2b00      	cmp	r3, #0
 8004200:	d0f0      	beq.n	80041e4 <HAL_RCC_OscConfig+0xe4>
 8004202:	e014      	b.n	800422e <HAL_RCC_OscConfig+0x12e>
 8004204:	f7ff fb5c 	bl	80038c0 <HAL_GetTick>
 8004208:	6138      	str	r0, [r7, #16]
 800420a:	e008      	b.n	800421e <HAL_RCC_OscConfig+0x11e>
 800420c:	f7ff fb58 	bl	80038c0 <HAL_GetTick>
 8004210:	4602      	mov	r2, r0
 8004212:	693b      	ldr	r3, [r7, #16]
 8004214:	1ad3      	subs	r3, r2, r3
 8004216:	2b64      	cmp	r3, #100	; 0x64
 8004218:	d901      	bls.n	800421e <HAL_RCC_OscConfig+0x11e>
 800421a:	2303      	movs	r3, #3
 800421c:	e27e      	b.n	800471c <HAL_RCC_OscConfig+0x61c>
 800421e:	4b53      	ldr	r3, [pc, #332]	; (800436c <HAL_RCC_OscConfig+0x26c>)
 8004220:	681b      	ldr	r3, [r3, #0]
 8004222:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004226:	2b00      	cmp	r3, #0
 8004228:	d1f0      	bne.n	800420c <HAL_RCC_OscConfig+0x10c>
 800422a:	e000      	b.n	800422e <HAL_RCC_OscConfig+0x12e>
 800422c:	bf00      	nop
 800422e:	687b      	ldr	r3, [r7, #4]
 8004230:	681b      	ldr	r3, [r3, #0]
 8004232:	f003 0302 	and.w	r3, r3, #2
 8004236:	2b00      	cmp	r3, #0
 8004238:	d063      	beq.n	8004302 <HAL_RCC_OscConfig+0x202>
 800423a:	4b4c      	ldr	r3, [pc, #304]	; (800436c <HAL_RCC_OscConfig+0x26c>)
 800423c:	685b      	ldr	r3, [r3, #4]
 800423e:	f003 030c 	and.w	r3, r3, #12
 8004242:	2b00      	cmp	r3, #0
 8004244:	d00b      	beq.n	800425e <HAL_RCC_OscConfig+0x15e>
 8004246:	4b49      	ldr	r3, [pc, #292]	; (800436c <HAL_RCC_OscConfig+0x26c>)
 8004248:	685b      	ldr	r3, [r3, #4]
 800424a:	f003 030c 	and.w	r3, r3, #12
 800424e:	2b08      	cmp	r3, #8
 8004250:	d11c      	bne.n	800428c <HAL_RCC_OscConfig+0x18c>
 8004252:	4b46      	ldr	r3, [pc, #280]	; (800436c <HAL_RCC_OscConfig+0x26c>)
 8004254:	685b      	ldr	r3, [r3, #4]
 8004256:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800425a:	2b00      	cmp	r3, #0
 800425c:	d116      	bne.n	800428c <HAL_RCC_OscConfig+0x18c>
 800425e:	4b43      	ldr	r3, [pc, #268]	; (800436c <HAL_RCC_OscConfig+0x26c>)
 8004260:	681b      	ldr	r3, [r3, #0]
 8004262:	f003 0302 	and.w	r3, r3, #2
 8004266:	2b00      	cmp	r3, #0
 8004268:	d005      	beq.n	8004276 <HAL_RCC_OscConfig+0x176>
 800426a:	687b      	ldr	r3, [r7, #4]
 800426c:	695b      	ldr	r3, [r3, #20]
 800426e:	2b01      	cmp	r3, #1
 8004270:	d001      	beq.n	8004276 <HAL_RCC_OscConfig+0x176>
 8004272:	2301      	movs	r3, #1
 8004274:	e252      	b.n	800471c <HAL_RCC_OscConfig+0x61c>
 8004276:	4b3d      	ldr	r3, [pc, #244]	; (800436c <HAL_RCC_OscConfig+0x26c>)
 8004278:	681b      	ldr	r3, [r3, #0]
 800427a:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800427e:	687b      	ldr	r3, [r7, #4]
 8004280:	699b      	ldr	r3, [r3, #24]
 8004282:	00db      	lsls	r3, r3, #3
 8004284:	4939      	ldr	r1, [pc, #228]	; (800436c <HAL_RCC_OscConfig+0x26c>)
 8004286:	4313      	orrs	r3, r2
 8004288:	600b      	str	r3, [r1, #0]
 800428a:	e03a      	b.n	8004302 <HAL_RCC_OscConfig+0x202>
 800428c:	687b      	ldr	r3, [r7, #4]
 800428e:	695b      	ldr	r3, [r3, #20]
 8004290:	2b00      	cmp	r3, #0
 8004292:	d020      	beq.n	80042d6 <HAL_RCC_OscConfig+0x1d6>
 8004294:	4b36      	ldr	r3, [pc, #216]	; (8004370 <HAL_RCC_OscConfig+0x270>)
 8004296:	2201      	movs	r2, #1
 8004298:	601a      	str	r2, [r3, #0]
 800429a:	f7ff fb11 	bl	80038c0 <HAL_GetTick>
 800429e:	6138      	str	r0, [r7, #16]
 80042a0:	e008      	b.n	80042b4 <HAL_RCC_OscConfig+0x1b4>
 80042a2:	f7ff fb0d 	bl	80038c0 <HAL_GetTick>
 80042a6:	4602      	mov	r2, r0
 80042a8:	693b      	ldr	r3, [r7, #16]
 80042aa:	1ad3      	subs	r3, r2, r3
 80042ac:	2b02      	cmp	r3, #2
 80042ae:	d901      	bls.n	80042b4 <HAL_RCC_OscConfig+0x1b4>
 80042b0:	2303      	movs	r3, #3
 80042b2:	e233      	b.n	800471c <HAL_RCC_OscConfig+0x61c>
 80042b4:	4b2d      	ldr	r3, [pc, #180]	; (800436c <HAL_RCC_OscConfig+0x26c>)
 80042b6:	681b      	ldr	r3, [r3, #0]
 80042b8:	f003 0302 	and.w	r3, r3, #2
 80042bc:	2b00      	cmp	r3, #0
 80042be:	d0f0      	beq.n	80042a2 <HAL_RCC_OscConfig+0x1a2>
 80042c0:	4b2a      	ldr	r3, [pc, #168]	; (800436c <HAL_RCC_OscConfig+0x26c>)
 80042c2:	681b      	ldr	r3, [r3, #0]
 80042c4:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80042c8:	687b      	ldr	r3, [r7, #4]
 80042ca:	699b      	ldr	r3, [r3, #24]
 80042cc:	00db      	lsls	r3, r3, #3
 80042ce:	4927      	ldr	r1, [pc, #156]	; (800436c <HAL_RCC_OscConfig+0x26c>)
 80042d0:	4313      	orrs	r3, r2
 80042d2:	600b      	str	r3, [r1, #0]
 80042d4:	e015      	b.n	8004302 <HAL_RCC_OscConfig+0x202>
 80042d6:	4b26      	ldr	r3, [pc, #152]	; (8004370 <HAL_RCC_OscConfig+0x270>)
 80042d8:	2200      	movs	r2, #0
 80042da:	601a      	str	r2, [r3, #0]
 80042dc:	f7ff faf0 	bl	80038c0 <HAL_GetTick>
 80042e0:	6138      	str	r0, [r7, #16]
 80042e2:	e008      	b.n	80042f6 <HAL_RCC_OscConfig+0x1f6>
 80042e4:	f7ff faec 	bl	80038c0 <HAL_GetTick>
 80042e8:	4602      	mov	r2, r0
 80042ea:	693b      	ldr	r3, [r7, #16]
 80042ec:	1ad3      	subs	r3, r2, r3
 80042ee:	2b02      	cmp	r3, #2
 80042f0:	d901      	bls.n	80042f6 <HAL_RCC_OscConfig+0x1f6>
 80042f2:	2303      	movs	r3, #3
 80042f4:	e212      	b.n	800471c <HAL_RCC_OscConfig+0x61c>
 80042f6:	4b1d      	ldr	r3, [pc, #116]	; (800436c <HAL_RCC_OscConfig+0x26c>)
 80042f8:	681b      	ldr	r3, [r3, #0]
 80042fa:	f003 0302 	and.w	r3, r3, #2
 80042fe:	2b00      	cmp	r3, #0
 8004300:	d1f0      	bne.n	80042e4 <HAL_RCC_OscConfig+0x1e4>
 8004302:	687b      	ldr	r3, [r7, #4]
 8004304:	681b      	ldr	r3, [r3, #0]
 8004306:	f003 0308 	and.w	r3, r3, #8
 800430a:	2b00      	cmp	r3, #0
 800430c:	d03a      	beq.n	8004384 <HAL_RCC_OscConfig+0x284>
 800430e:	687b      	ldr	r3, [r7, #4]
 8004310:	69db      	ldr	r3, [r3, #28]
 8004312:	2b00      	cmp	r3, #0
 8004314:	d019      	beq.n	800434a <HAL_RCC_OscConfig+0x24a>
 8004316:	4b17      	ldr	r3, [pc, #92]	; (8004374 <HAL_RCC_OscConfig+0x274>)
 8004318:	2201      	movs	r2, #1
 800431a:	601a      	str	r2, [r3, #0]
 800431c:	f7ff fad0 	bl	80038c0 <HAL_GetTick>
 8004320:	6138      	str	r0, [r7, #16]
 8004322:	e008      	b.n	8004336 <HAL_RCC_OscConfig+0x236>
 8004324:	f7ff facc 	bl	80038c0 <HAL_GetTick>
 8004328:	4602      	mov	r2, r0
 800432a:	693b      	ldr	r3, [r7, #16]
 800432c:	1ad3      	subs	r3, r2, r3
 800432e:	2b02      	cmp	r3, #2
 8004330:	d901      	bls.n	8004336 <HAL_RCC_OscConfig+0x236>
 8004332:	2303      	movs	r3, #3
 8004334:	e1f2      	b.n	800471c <HAL_RCC_OscConfig+0x61c>
 8004336:	4b0d      	ldr	r3, [pc, #52]	; (800436c <HAL_RCC_OscConfig+0x26c>)
 8004338:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800433a:	f003 0302 	and.w	r3, r3, #2
 800433e:	2b00      	cmp	r3, #0
 8004340:	d0f0      	beq.n	8004324 <HAL_RCC_OscConfig+0x224>
 8004342:	2001      	movs	r0, #1
 8004344:	f000 fc34 	bl	8004bb0 <RCC_Delay>
 8004348:	e01c      	b.n	8004384 <HAL_RCC_OscConfig+0x284>
 800434a:	4b0a      	ldr	r3, [pc, #40]	; (8004374 <HAL_RCC_OscConfig+0x274>)
 800434c:	2200      	movs	r2, #0
 800434e:	601a      	str	r2, [r3, #0]
 8004350:	f7ff fab6 	bl	80038c0 <HAL_GetTick>
 8004354:	6138      	str	r0, [r7, #16]
 8004356:	e00f      	b.n	8004378 <HAL_RCC_OscConfig+0x278>
 8004358:	f7ff fab2 	bl	80038c0 <HAL_GetTick>
 800435c:	4602      	mov	r2, r0
 800435e:	693b      	ldr	r3, [r7, #16]
 8004360:	1ad3      	subs	r3, r2, r3
 8004362:	2b02      	cmp	r3, #2
 8004364:	d908      	bls.n	8004378 <HAL_RCC_OscConfig+0x278>
 8004366:	2303      	movs	r3, #3
 8004368:	e1d8      	b.n	800471c <HAL_RCC_OscConfig+0x61c>
 800436a:	bf00      	nop
 800436c:	40021000 	.word	0x40021000
 8004370:	42420000 	.word	0x42420000
 8004374:	42420480 	.word	0x42420480
 8004378:	4b9b      	ldr	r3, [pc, #620]	; (80045e8 <HAL_RCC_OscConfig+0x4e8>)
 800437a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800437c:	f003 0302 	and.w	r3, r3, #2
 8004380:	2b00      	cmp	r3, #0
 8004382:	d1e9      	bne.n	8004358 <HAL_RCC_OscConfig+0x258>
 8004384:	687b      	ldr	r3, [r7, #4]
 8004386:	681b      	ldr	r3, [r3, #0]
 8004388:	f003 0304 	and.w	r3, r3, #4
 800438c:	2b00      	cmp	r3, #0
 800438e:	f000 80a6 	beq.w	80044de <HAL_RCC_OscConfig+0x3de>
 8004392:	2300      	movs	r3, #0
 8004394:	75fb      	strb	r3, [r7, #23]
 8004396:	4b94      	ldr	r3, [pc, #592]	; (80045e8 <HAL_RCC_OscConfig+0x4e8>)
 8004398:	69db      	ldr	r3, [r3, #28]
 800439a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800439e:	2b00      	cmp	r3, #0
 80043a0:	d10d      	bne.n	80043be <HAL_RCC_OscConfig+0x2be>
 80043a2:	4b91      	ldr	r3, [pc, #580]	; (80045e8 <HAL_RCC_OscConfig+0x4e8>)
 80043a4:	69db      	ldr	r3, [r3, #28]
 80043a6:	4a90      	ldr	r2, [pc, #576]	; (80045e8 <HAL_RCC_OscConfig+0x4e8>)
 80043a8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80043ac:	61d3      	str	r3, [r2, #28]
 80043ae:	4b8e      	ldr	r3, [pc, #568]	; (80045e8 <HAL_RCC_OscConfig+0x4e8>)
 80043b0:	69db      	ldr	r3, [r3, #28]
 80043b2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80043b6:	60bb      	str	r3, [r7, #8]
 80043b8:	68bb      	ldr	r3, [r7, #8]
 80043ba:	2301      	movs	r3, #1
 80043bc:	75fb      	strb	r3, [r7, #23]
 80043be:	4b8b      	ldr	r3, [pc, #556]	; (80045ec <HAL_RCC_OscConfig+0x4ec>)
 80043c0:	681b      	ldr	r3, [r3, #0]
 80043c2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80043c6:	2b00      	cmp	r3, #0
 80043c8:	d118      	bne.n	80043fc <HAL_RCC_OscConfig+0x2fc>
 80043ca:	4b88      	ldr	r3, [pc, #544]	; (80045ec <HAL_RCC_OscConfig+0x4ec>)
 80043cc:	681b      	ldr	r3, [r3, #0]
 80043ce:	4a87      	ldr	r2, [pc, #540]	; (80045ec <HAL_RCC_OscConfig+0x4ec>)
 80043d0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80043d4:	6013      	str	r3, [r2, #0]
 80043d6:	f7ff fa73 	bl	80038c0 <HAL_GetTick>
 80043da:	6138      	str	r0, [r7, #16]
 80043dc:	e008      	b.n	80043f0 <HAL_RCC_OscConfig+0x2f0>
 80043de:	f7ff fa6f 	bl	80038c0 <HAL_GetTick>
 80043e2:	4602      	mov	r2, r0
 80043e4:	693b      	ldr	r3, [r7, #16]
 80043e6:	1ad3      	subs	r3, r2, r3
 80043e8:	2b64      	cmp	r3, #100	; 0x64
 80043ea:	d901      	bls.n	80043f0 <HAL_RCC_OscConfig+0x2f0>
 80043ec:	2303      	movs	r3, #3
 80043ee:	e195      	b.n	800471c <HAL_RCC_OscConfig+0x61c>
 80043f0:	4b7e      	ldr	r3, [pc, #504]	; (80045ec <HAL_RCC_OscConfig+0x4ec>)
 80043f2:	681b      	ldr	r3, [r3, #0]
 80043f4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80043f8:	2b00      	cmp	r3, #0
 80043fa:	d0f0      	beq.n	80043de <HAL_RCC_OscConfig+0x2de>
 80043fc:	687b      	ldr	r3, [r7, #4]
 80043fe:	691b      	ldr	r3, [r3, #16]
 8004400:	2b01      	cmp	r3, #1
 8004402:	d106      	bne.n	8004412 <HAL_RCC_OscConfig+0x312>
 8004404:	4b78      	ldr	r3, [pc, #480]	; (80045e8 <HAL_RCC_OscConfig+0x4e8>)
 8004406:	6a1b      	ldr	r3, [r3, #32]
 8004408:	4a77      	ldr	r2, [pc, #476]	; (80045e8 <HAL_RCC_OscConfig+0x4e8>)
 800440a:	f043 0301 	orr.w	r3, r3, #1
 800440e:	6213      	str	r3, [r2, #32]
 8004410:	e02d      	b.n	800446e <HAL_RCC_OscConfig+0x36e>
 8004412:	687b      	ldr	r3, [r7, #4]
 8004414:	691b      	ldr	r3, [r3, #16]
 8004416:	2b00      	cmp	r3, #0
 8004418:	d10c      	bne.n	8004434 <HAL_RCC_OscConfig+0x334>
 800441a:	4b73      	ldr	r3, [pc, #460]	; (80045e8 <HAL_RCC_OscConfig+0x4e8>)
 800441c:	6a1b      	ldr	r3, [r3, #32]
 800441e:	4a72      	ldr	r2, [pc, #456]	; (80045e8 <HAL_RCC_OscConfig+0x4e8>)
 8004420:	f023 0301 	bic.w	r3, r3, #1
 8004424:	6213      	str	r3, [r2, #32]
 8004426:	4b70      	ldr	r3, [pc, #448]	; (80045e8 <HAL_RCC_OscConfig+0x4e8>)
 8004428:	6a1b      	ldr	r3, [r3, #32]
 800442a:	4a6f      	ldr	r2, [pc, #444]	; (80045e8 <HAL_RCC_OscConfig+0x4e8>)
 800442c:	f023 0304 	bic.w	r3, r3, #4
 8004430:	6213      	str	r3, [r2, #32]
 8004432:	e01c      	b.n	800446e <HAL_RCC_OscConfig+0x36e>
 8004434:	687b      	ldr	r3, [r7, #4]
 8004436:	691b      	ldr	r3, [r3, #16]
 8004438:	2b05      	cmp	r3, #5
 800443a:	d10c      	bne.n	8004456 <HAL_RCC_OscConfig+0x356>
 800443c:	4b6a      	ldr	r3, [pc, #424]	; (80045e8 <HAL_RCC_OscConfig+0x4e8>)
 800443e:	6a1b      	ldr	r3, [r3, #32]
 8004440:	4a69      	ldr	r2, [pc, #420]	; (80045e8 <HAL_RCC_OscConfig+0x4e8>)
 8004442:	f043 0304 	orr.w	r3, r3, #4
 8004446:	6213      	str	r3, [r2, #32]
 8004448:	4b67      	ldr	r3, [pc, #412]	; (80045e8 <HAL_RCC_OscConfig+0x4e8>)
 800444a:	6a1b      	ldr	r3, [r3, #32]
 800444c:	4a66      	ldr	r2, [pc, #408]	; (80045e8 <HAL_RCC_OscConfig+0x4e8>)
 800444e:	f043 0301 	orr.w	r3, r3, #1
 8004452:	6213      	str	r3, [r2, #32]
 8004454:	e00b      	b.n	800446e <HAL_RCC_OscConfig+0x36e>
 8004456:	4b64      	ldr	r3, [pc, #400]	; (80045e8 <HAL_RCC_OscConfig+0x4e8>)
 8004458:	6a1b      	ldr	r3, [r3, #32]
 800445a:	4a63      	ldr	r2, [pc, #396]	; (80045e8 <HAL_RCC_OscConfig+0x4e8>)
 800445c:	f023 0301 	bic.w	r3, r3, #1
 8004460:	6213      	str	r3, [r2, #32]
 8004462:	4b61      	ldr	r3, [pc, #388]	; (80045e8 <HAL_RCC_OscConfig+0x4e8>)
 8004464:	6a1b      	ldr	r3, [r3, #32]
 8004466:	4a60      	ldr	r2, [pc, #384]	; (80045e8 <HAL_RCC_OscConfig+0x4e8>)
 8004468:	f023 0304 	bic.w	r3, r3, #4
 800446c:	6213      	str	r3, [r2, #32]
 800446e:	687b      	ldr	r3, [r7, #4]
 8004470:	691b      	ldr	r3, [r3, #16]
 8004472:	2b00      	cmp	r3, #0
 8004474:	d015      	beq.n	80044a2 <HAL_RCC_OscConfig+0x3a2>
 8004476:	f7ff fa23 	bl	80038c0 <HAL_GetTick>
 800447a:	6138      	str	r0, [r7, #16]
 800447c:	e00a      	b.n	8004494 <HAL_RCC_OscConfig+0x394>
 800447e:	f7ff fa1f 	bl	80038c0 <HAL_GetTick>
 8004482:	4602      	mov	r2, r0
 8004484:	693b      	ldr	r3, [r7, #16]
 8004486:	1ad3      	subs	r3, r2, r3
 8004488:	f241 3288 	movw	r2, #5000	; 0x1388
 800448c:	4293      	cmp	r3, r2
 800448e:	d901      	bls.n	8004494 <HAL_RCC_OscConfig+0x394>
 8004490:	2303      	movs	r3, #3
 8004492:	e143      	b.n	800471c <HAL_RCC_OscConfig+0x61c>
 8004494:	4b54      	ldr	r3, [pc, #336]	; (80045e8 <HAL_RCC_OscConfig+0x4e8>)
 8004496:	6a1b      	ldr	r3, [r3, #32]
 8004498:	f003 0302 	and.w	r3, r3, #2
 800449c:	2b00      	cmp	r3, #0
 800449e:	d0ee      	beq.n	800447e <HAL_RCC_OscConfig+0x37e>
 80044a0:	e014      	b.n	80044cc <HAL_RCC_OscConfig+0x3cc>
 80044a2:	f7ff fa0d 	bl	80038c0 <HAL_GetTick>
 80044a6:	6138      	str	r0, [r7, #16]
 80044a8:	e00a      	b.n	80044c0 <HAL_RCC_OscConfig+0x3c0>
 80044aa:	f7ff fa09 	bl	80038c0 <HAL_GetTick>
 80044ae:	4602      	mov	r2, r0
 80044b0:	693b      	ldr	r3, [r7, #16]
 80044b2:	1ad3      	subs	r3, r2, r3
 80044b4:	f241 3288 	movw	r2, #5000	; 0x1388
 80044b8:	4293      	cmp	r3, r2
 80044ba:	d901      	bls.n	80044c0 <HAL_RCC_OscConfig+0x3c0>
 80044bc:	2303      	movs	r3, #3
 80044be:	e12d      	b.n	800471c <HAL_RCC_OscConfig+0x61c>
 80044c0:	4b49      	ldr	r3, [pc, #292]	; (80045e8 <HAL_RCC_OscConfig+0x4e8>)
 80044c2:	6a1b      	ldr	r3, [r3, #32]
 80044c4:	f003 0302 	and.w	r3, r3, #2
 80044c8:	2b00      	cmp	r3, #0
 80044ca:	d1ee      	bne.n	80044aa <HAL_RCC_OscConfig+0x3aa>
 80044cc:	7dfb      	ldrb	r3, [r7, #23]
 80044ce:	2b01      	cmp	r3, #1
 80044d0:	d105      	bne.n	80044de <HAL_RCC_OscConfig+0x3de>
 80044d2:	4b45      	ldr	r3, [pc, #276]	; (80045e8 <HAL_RCC_OscConfig+0x4e8>)
 80044d4:	69db      	ldr	r3, [r3, #28]
 80044d6:	4a44      	ldr	r2, [pc, #272]	; (80045e8 <HAL_RCC_OscConfig+0x4e8>)
 80044d8:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80044dc:	61d3      	str	r3, [r2, #28]
 80044de:	687b      	ldr	r3, [r7, #4]
 80044e0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80044e2:	2b00      	cmp	r3, #0
 80044e4:	f000 808c 	beq.w	8004600 <HAL_RCC_OscConfig+0x500>
 80044e8:	4b3f      	ldr	r3, [pc, #252]	; (80045e8 <HAL_RCC_OscConfig+0x4e8>)
 80044ea:	685b      	ldr	r3, [r3, #4]
 80044ec:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80044f0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80044f4:	d10e      	bne.n	8004514 <HAL_RCC_OscConfig+0x414>
 80044f6:	4b3c      	ldr	r3, [pc, #240]	; (80045e8 <HAL_RCC_OscConfig+0x4e8>)
 80044f8:	685b      	ldr	r3, [r3, #4]
 80044fa:	f003 030c 	and.w	r3, r3, #12
 80044fe:	2b08      	cmp	r3, #8
 8004500:	d108      	bne.n	8004514 <HAL_RCC_OscConfig+0x414>
 8004502:	4b39      	ldr	r3, [pc, #228]	; (80045e8 <HAL_RCC_OscConfig+0x4e8>)
 8004504:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004506:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800450a:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800450e:	d101      	bne.n	8004514 <HAL_RCC_OscConfig+0x414>
 8004510:	2301      	movs	r3, #1
 8004512:	e103      	b.n	800471c <HAL_RCC_OscConfig+0x61c>
 8004514:	687b      	ldr	r3, [r7, #4]
 8004516:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004518:	2b02      	cmp	r3, #2
 800451a:	d14e      	bne.n	80045ba <HAL_RCC_OscConfig+0x4ba>
 800451c:	4b32      	ldr	r3, [pc, #200]	; (80045e8 <HAL_RCC_OscConfig+0x4e8>)
 800451e:	681b      	ldr	r3, [r3, #0]
 8004520:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004524:	2b00      	cmp	r3, #0
 8004526:	d009      	beq.n	800453c <HAL_RCC_OscConfig+0x43c>
 8004528:	4b2f      	ldr	r3, [pc, #188]	; (80045e8 <HAL_RCC_OscConfig+0x4e8>)
 800452a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800452c:	f003 02f0 	and.w	r2, r3, #240	; 0xf0
 8004530:	687b      	ldr	r3, [r7, #4]
 8004532:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004534:	429a      	cmp	r2, r3
 8004536:	d001      	beq.n	800453c <HAL_RCC_OscConfig+0x43c>
 8004538:	2301      	movs	r3, #1
 800453a:	e0ef      	b.n	800471c <HAL_RCC_OscConfig+0x61c>
 800453c:	4b2c      	ldr	r3, [pc, #176]	; (80045f0 <HAL_RCC_OscConfig+0x4f0>)
 800453e:	2200      	movs	r2, #0
 8004540:	601a      	str	r2, [r3, #0]
 8004542:	f7ff f9bd 	bl	80038c0 <HAL_GetTick>
 8004546:	6138      	str	r0, [r7, #16]
 8004548:	e008      	b.n	800455c <HAL_RCC_OscConfig+0x45c>
 800454a:	f7ff f9b9 	bl	80038c0 <HAL_GetTick>
 800454e:	4602      	mov	r2, r0
 8004550:	693b      	ldr	r3, [r7, #16]
 8004552:	1ad3      	subs	r3, r2, r3
 8004554:	2b64      	cmp	r3, #100	; 0x64
 8004556:	d901      	bls.n	800455c <HAL_RCC_OscConfig+0x45c>
 8004558:	2303      	movs	r3, #3
 800455a:	e0df      	b.n	800471c <HAL_RCC_OscConfig+0x61c>
 800455c:	4b22      	ldr	r3, [pc, #136]	; (80045e8 <HAL_RCC_OscConfig+0x4e8>)
 800455e:	681b      	ldr	r3, [r3, #0]
 8004560:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8004564:	2b00      	cmp	r3, #0
 8004566:	d1f0      	bne.n	800454a <HAL_RCC_OscConfig+0x44a>
 8004568:	4b1f      	ldr	r3, [pc, #124]	; (80045e8 <HAL_RCC_OscConfig+0x4e8>)
 800456a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800456c:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8004570:	687b      	ldr	r3, [r7, #4]
 8004572:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004574:	491c      	ldr	r1, [pc, #112]	; (80045e8 <HAL_RCC_OscConfig+0x4e8>)
 8004576:	4313      	orrs	r3, r2
 8004578:	62cb      	str	r3, [r1, #44]	; 0x2c
 800457a:	4b1b      	ldr	r3, [pc, #108]	; (80045e8 <HAL_RCC_OscConfig+0x4e8>)
 800457c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800457e:	f423 6270 	bic.w	r2, r3, #3840	; 0xf00
 8004582:	687b      	ldr	r3, [r7, #4]
 8004584:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004586:	4918      	ldr	r1, [pc, #96]	; (80045e8 <HAL_RCC_OscConfig+0x4e8>)
 8004588:	4313      	orrs	r3, r2
 800458a:	62cb      	str	r3, [r1, #44]	; 0x2c
 800458c:	4b18      	ldr	r3, [pc, #96]	; (80045f0 <HAL_RCC_OscConfig+0x4f0>)
 800458e:	2201      	movs	r2, #1
 8004590:	601a      	str	r2, [r3, #0]
 8004592:	f7ff f995 	bl	80038c0 <HAL_GetTick>
 8004596:	6138      	str	r0, [r7, #16]
 8004598:	e008      	b.n	80045ac <HAL_RCC_OscConfig+0x4ac>
 800459a:	f7ff f991 	bl	80038c0 <HAL_GetTick>
 800459e:	4602      	mov	r2, r0
 80045a0:	693b      	ldr	r3, [r7, #16]
 80045a2:	1ad3      	subs	r3, r2, r3
 80045a4:	2b64      	cmp	r3, #100	; 0x64
 80045a6:	d901      	bls.n	80045ac <HAL_RCC_OscConfig+0x4ac>
 80045a8:	2303      	movs	r3, #3
 80045aa:	e0b7      	b.n	800471c <HAL_RCC_OscConfig+0x61c>
 80045ac:	4b0e      	ldr	r3, [pc, #56]	; (80045e8 <HAL_RCC_OscConfig+0x4e8>)
 80045ae:	681b      	ldr	r3, [r3, #0]
 80045b0:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 80045b4:	2b00      	cmp	r3, #0
 80045b6:	d0f0      	beq.n	800459a <HAL_RCC_OscConfig+0x49a>
 80045b8:	e022      	b.n	8004600 <HAL_RCC_OscConfig+0x500>
 80045ba:	4b0b      	ldr	r3, [pc, #44]	; (80045e8 <HAL_RCC_OscConfig+0x4e8>)
 80045bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80045be:	4a0a      	ldr	r2, [pc, #40]	; (80045e8 <HAL_RCC_OscConfig+0x4e8>)
 80045c0:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80045c4:	62d3      	str	r3, [r2, #44]	; 0x2c
 80045c6:	4b0a      	ldr	r3, [pc, #40]	; (80045f0 <HAL_RCC_OscConfig+0x4f0>)
 80045c8:	2200      	movs	r2, #0
 80045ca:	601a      	str	r2, [r3, #0]
 80045cc:	f7ff f978 	bl	80038c0 <HAL_GetTick>
 80045d0:	6138      	str	r0, [r7, #16]
 80045d2:	e00f      	b.n	80045f4 <HAL_RCC_OscConfig+0x4f4>
 80045d4:	f7ff f974 	bl	80038c0 <HAL_GetTick>
 80045d8:	4602      	mov	r2, r0
 80045da:	693b      	ldr	r3, [r7, #16]
 80045dc:	1ad3      	subs	r3, r2, r3
 80045de:	2b64      	cmp	r3, #100	; 0x64
 80045e0:	d908      	bls.n	80045f4 <HAL_RCC_OscConfig+0x4f4>
 80045e2:	2303      	movs	r3, #3
 80045e4:	e09a      	b.n	800471c <HAL_RCC_OscConfig+0x61c>
 80045e6:	bf00      	nop
 80045e8:	40021000 	.word	0x40021000
 80045ec:	40007000 	.word	0x40007000
 80045f0:	42420068 	.word	0x42420068
 80045f4:	4b4b      	ldr	r3, [pc, #300]	; (8004724 <HAL_RCC_OscConfig+0x624>)
 80045f6:	681b      	ldr	r3, [r3, #0]
 80045f8:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 80045fc:	2b00      	cmp	r3, #0
 80045fe:	d1e9      	bne.n	80045d4 <HAL_RCC_OscConfig+0x4d4>
 8004600:	687b      	ldr	r3, [r7, #4]
 8004602:	6a1b      	ldr	r3, [r3, #32]
 8004604:	2b00      	cmp	r3, #0
 8004606:	f000 8088 	beq.w	800471a <HAL_RCC_OscConfig+0x61a>
 800460a:	4b46      	ldr	r3, [pc, #280]	; (8004724 <HAL_RCC_OscConfig+0x624>)
 800460c:	685b      	ldr	r3, [r3, #4]
 800460e:	f003 030c 	and.w	r3, r3, #12
 8004612:	2b08      	cmp	r3, #8
 8004614:	d068      	beq.n	80046e8 <HAL_RCC_OscConfig+0x5e8>
 8004616:	687b      	ldr	r3, [r7, #4]
 8004618:	6a1b      	ldr	r3, [r3, #32]
 800461a:	2b02      	cmp	r3, #2
 800461c:	d14d      	bne.n	80046ba <HAL_RCC_OscConfig+0x5ba>
 800461e:	4b42      	ldr	r3, [pc, #264]	; (8004728 <HAL_RCC_OscConfig+0x628>)
 8004620:	2200      	movs	r2, #0
 8004622:	601a      	str	r2, [r3, #0]
 8004624:	f7ff f94c 	bl	80038c0 <HAL_GetTick>
 8004628:	6138      	str	r0, [r7, #16]
 800462a:	e008      	b.n	800463e <HAL_RCC_OscConfig+0x53e>
 800462c:	f7ff f948 	bl	80038c0 <HAL_GetTick>
 8004630:	4602      	mov	r2, r0
 8004632:	693b      	ldr	r3, [r7, #16]
 8004634:	1ad3      	subs	r3, r2, r3
 8004636:	2b02      	cmp	r3, #2
 8004638:	d901      	bls.n	800463e <HAL_RCC_OscConfig+0x53e>
 800463a:	2303      	movs	r3, #3
 800463c:	e06e      	b.n	800471c <HAL_RCC_OscConfig+0x61c>
 800463e:	4b39      	ldr	r3, [pc, #228]	; (8004724 <HAL_RCC_OscConfig+0x624>)
 8004640:	681b      	ldr	r3, [r3, #0]
 8004642:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8004646:	2b00      	cmp	r3, #0
 8004648:	d1f0      	bne.n	800462c <HAL_RCC_OscConfig+0x52c>
 800464a:	687b      	ldr	r3, [r7, #4]
 800464c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800464e:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8004652:	d10f      	bne.n	8004674 <HAL_RCC_OscConfig+0x574>
 8004654:	4b33      	ldr	r3, [pc, #204]	; (8004724 <HAL_RCC_OscConfig+0x624>)
 8004656:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004658:	687b      	ldr	r3, [r7, #4]
 800465a:	685b      	ldr	r3, [r3, #4]
 800465c:	4931      	ldr	r1, [pc, #196]	; (8004724 <HAL_RCC_OscConfig+0x624>)
 800465e:	4313      	orrs	r3, r2
 8004660:	62cb      	str	r3, [r1, #44]	; 0x2c
 8004662:	4b30      	ldr	r3, [pc, #192]	; (8004724 <HAL_RCC_OscConfig+0x624>)
 8004664:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004666:	f023 020f 	bic.w	r2, r3, #15
 800466a:	687b      	ldr	r3, [r7, #4]
 800466c:	68db      	ldr	r3, [r3, #12]
 800466e:	492d      	ldr	r1, [pc, #180]	; (8004724 <HAL_RCC_OscConfig+0x624>)
 8004670:	4313      	orrs	r3, r2
 8004672:	62cb      	str	r3, [r1, #44]	; 0x2c
 8004674:	4b2b      	ldr	r3, [pc, #172]	; (8004724 <HAL_RCC_OscConfig+0x624>)
 8004676:	685b      	ldr	r3, [r3, #4]
 8004678:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 800467c:	687b      	ldr	r3, [r7, #4]
 800467e:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8004680:	687b      	ldr	r3, [r7, #4]
 8004682:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004684:	430b      	orrs	r3, r1
 8004686:	4927      	ldr	r1, [pc, #156]	; (8004724 <HAL_RCC_OscConfig+0x624>)
 8004688:	4313      	orrs	r3, r2
 800468a:	604b      	str	r3, [r1, #4]
 800468c:	4b26      	ldr	r3, [pc, #152]	; (8004728 <HAL_RCC_OscConfig+0x628>)
 800468e:	2201      	movs	r2, #1
 8004690:	601a      	str	r2, [r3, #0]
 8004692:	f7ff f915 	bl	80038c0 <HAL_GetTick>
 8004696:	6138      	str	r0, [r7, #16]
 8004698:	e008      	b.n	80046ac <HAL_RCC_OscConfig+0x5ac>
 800469a:	f7ff f911 	bl	80038c0 <HAL_GetTick>
 800469e:	4602      	mov	r2, r0
 80046a0:	693b      	ldr	r3, [r7, #16]
 80046a2:	1ad3      	subs	r3, r2, r3
 80046a4:	2b02      	cmp	r3, #2
 80046a6:	d901      	bls.n	80046ac <HAL_RCC_OscConfig+0x5ac>
 80046a8:	2303      	movs	r3, #3
 80046aa:	e037      	b.n	800471c <HAL_RCC_OscConfig+0x61c>
 80046ac:	4b1d      	ldr	r3, [pc, #116]	; (8004724 <HAL_RCC_OscConfig+0x624>)
 80046ae:	681b      	ldr	r3, [r3, #0]
 80046b0:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80046b4:	2b00      	cmp	r3, #0
 80046b6:	d0f0      	beq.n	800469a <HAL_RCC_OscConfig+0x59a>
 80046b8:	e02f      	b.n	800471a <HAL_RCC_OscConfig+0x61a>
 80046ba:	4b1b      	ldr	r3, [pc, #108]	; (8004728 <HAL_RCC_OscConfig+0x628>)
 80046bc:	2200      	movs	r2, #0
 80046be:	601a      	str	r2, [r3, #0]
 80046c0:	f7ff f8fe 	bl	80038c0 <HAL_GetTick>
 80046c4:	6138      	str	r0, [r7, #16]
 80046c6:	e008      	b.n	80046da <HAL_RCC_OscConfig+0x5da>
 80046c8:	f7ff f8fa 	bl	80038c0 <HAL_GetTick>
 80046cc:	4602      	mov	r2, r0
 80046ce:	693b      	ldr	r3, [r7, #16]
 80046d0:	1ad3      	subs	r3, r2, r3
 80046d2:	2b02      	cmp	r3, #2
 80046d4:	d901      	bls.n	80046da <HAL_RCC_OscConfig+0x5da>
 80046d6:	2303      	movs	r3, #3
 80046d8:	e020      	b.n	800471c <HAL_RCC_OscConfig+0x61c>
 80046da:	4b12      	ldr	r3, [pc, #72]	; (8004724 <HAL_RCC_OscConfig+0x624>)
 80046dc:	681b      	ldr	r3, [r3, #0]
 80046de:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80046e2:	2b00      	cmp	r3, #0
 80046e4:	d1f0      	bne.n	80046c8 <HAL_RCC_OscConfig+0x5c8>
 80046e6:	e018      	b.n	800471a <HAL_RCC_OscConfig+0x61a>
 80046e8:	687b      	ldr	r3, [r7, #4]
 80046ea:	6a1b      	ldr	r3, [r3, #32]
 80046ec:	2b01      	cmp	r3, #1
 80046ee:	d101      	bne.n	80046f4 <HAL_RCC_OscConfig+0x5f4>
 80046f0:	2301      	movs	r3, #1
 80046f2:	e013      	b.n	800471c <HAL_RCC_OscConfig+0x61c>
 80046f4:	4b0b      	ldr	r3, [pc, #44]	; (8004724 <HAL_RCC_OscConfig+0x624>)
 80046f6:	685b      	ldr	r3, [r3, #4]
 80046f8:	60fb      	str	r3, [r7, #12]
 80046fa:	68fb      	ldr	r3, [r7, #12]
 80046fc:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8004700:	687b      	ldr	r3, [r7, #4]
 8004702:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004704:	429a      	cmp	r2, r3
 8004706:	d106      	bne.n	8004716 <HAL_RCC_OscConfig+0x616>
 8004708:	68fb      	ldr	r3, [r7, #12]
 800470a:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 800470e:	687b      	ldr	r3, [r7, #4]
 8004710:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004712:	429a      	cmp	r2, r3
 8004714:	d001      	beq.n	800471a <HAL_RCC_OscConfig+0x61a>
 8004716:	2301      	movs	r3, #1
 8004718:	e000      	b.n	800471c <HAL_RCC_OscConfig+0x61c>
 800471a:	2300      	movs	r3, #0
 800471c:	4618      	mov	r0, r3
 800471e:	3718      	adds	r7, #24
 8004720:	46bd      	mov	sp, r7
 8004722:	bd80      	pop	{r7, pc}
 8004724:	40021000 	.word	0x40021000
 8004728:	42420060 	.word	0x42420060

0800472c <HAL_RCC_ClockConfig>:
 800472c:	b580      	push	{r7, lr}
 800472e:	b084      	sub	sp, #16
 8004730:	af00      	add	r7, sp, #0
 8004732:	6078      	str	r0, [r7, #4]
 8004734:	6039      	str	r1, [r7, #0]
 8004736:	687b      	ldr	r3, [r7, #4]
 8004738:	2b00      	cmp	r3, #0
 800473a:	d101      	bne.n	8004740 <HAL_RCC_ClockConfig+0x14>
 800473c:	2301      	movs	r3, #1
 800473e:	e0d0      	b.n	80048e2 <HAL_RCC_ClockConfig+0x1b6>
 8004740:	4b6a      	ldr	r3, [pc, #424]	; (80048ec <HAL_RCC_ClockConfig+0x1c0>)
 8004742:	681b      	ldr	r3, [r3, #0]
 8004744:	f003 0307 	and.w	r3, r3, #7
 8004748:	683a      	ldr	r2, [r7, #0]
 800474a:	429a      	cmp	r2, r3
 800474c:	d910      	bls.n	8004770 <HAL_RCC_ClockConfig+0x44>
 800474e:	4b67      	ldr	r3, [pc, #412]	; (80048ec <HAL_RCC_ClockConfig+0x1c0>)
 8004750:	681b      	ldr	r3, [r3, #0]
 8004752:	f023 0207 	bic.w	r2, r3, #7
 8004756:	4965      	ldr	r1, [pc, #404]	; (80048ec <HAL_RCC_ClockConfig+0x1c0>)
 8004758:	683b      	ldr	r3, [r7, #0]
 800475a:	4313      	orrs	r3, r2
 800475c:	600b      	str	r3, [r1, #0]
 800475e:	4b63      	ldr	r3, [pc, #396]	; (80048ec <HAL_RCC_ClockConfig+0x1c0>)
 8004760:	681b      	ldr	r3, [r3, #0]
 8004762:	f003 0307 	and.w	r3, r3, #7
 8004766:	683a      	ldr	r2, [r7, #0]
 8004768:	429a      	cmp	r2, r3
 800476a:	d001      	beq.n	8004770 <HAL_RCC_ClockConfig+0x44>
 800476c:	2301      	movs	r3, #1
 800476e:	e0b8      	b.n	80048e2 <HAL_RCC_ClockConfig+0x1b6>
 8004770:	687b      	ldr	r3, [r7, #4]
 8004772:	681b      	ldr	r3, [r3, #0]
 8004774:	f003 0302 	and.w	r3, r3, #2
 8004778:	2b00      	cmp	r3, #0
 800477a:	d020      	beq.n	80047be <HAL_RCC_ClockConfig+0x92>
 800477c:	687b      	ldr	r3, [r7, #4]
 800477e:	681b      	ldr	r3, [r3, #0]
 8004780:	f003 0304 	and.w	r3, r3, #4
 8004784:	2b00      	cmp	r3, #0
 8004786:	d005      	beq.n	8004794 <HAL_RCC_ClockConfig+0x68>
 8004788:	4b59      	ldr	r3, [pc, #356]	; (80048f0 <HAL_RCC_ClockConfig+0x1c4>)
 800478a:	685b      	ldr	r3, [r3, #4]
 800478c:	4a58      	ldr	r2, [pc, #352]	; (80048f0 <HAL_RCC_ClockConfig+0x1c4>)
 800478e:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 8004792:	6053      	str	r3, [r2, #4]
 8004794:	687b      	ldr	r3, [r7, #4]
 8004796:	681b      	ldr	r3, [r3, #0]
 8004798:	f003 0308 	and.w	r3, r3, #8
 800479c:	2b00      	cmp	r3, #0
 800479e:	d005      	beq.n	80047ac <HAL_RCC_ClockConfig+0x80>
 80047a0:	4b53      	ldr	r3, [pc, #332]	; (80048f0 <HAL_RCC_ClockConfig+0x1c4>)
 80047a2:	685b      	ldr	r3, [r3, #4]
 80047a4:	4a52      	ldr	r2, [pc, #328]	; (80048f0 <HAL_RCC_ClockConfig+0x1c4>)
 80047a6:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 80047aa:	6053      	str	r3, [r2, #4]
 80047ac:	4b50      	ldr	r3, [pc, #320]	; (80048f0 <HAL_RCC_ClockConfig+0x1c4>)
 80047ae:	685b      	ldr	r3, [r3, #4]
 80047b0:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80047b4:	687b      	ldr	r3, [r7, #4]
 80047b6:	689b      	ldr	r3, [r3, #8]
 80047b8:	494d      	ldr	r1, [pc, #308]	; (80048f0 <HAL_RCC_ClockConfig+0x1c4>)
 80047ba:	4313      	orrs	r3, r2
 80047bc:	604b      	str	r3, [r1, #4]
 80047be:	687b      	ldr	r3, [r7, #4]
 80047c0:	681b      	ldr	r3, [r3, #0]
 80047c2:	f003 0301 	and.w	r3, r3, #1
 80047c6:	2b00      	cmp	r3, #0
 80047c8:	d040      	beq.n	800484c <HAL_RCC_ClockConfig+0x120>
 80047ca:	687b      	ldr	r3, [r7, #4]
 80047cc:	685b      	ldr	r3, [r3, #4]
 80047ce:	2b01      	cmp	r3, #1
 80047d0:	d107      	bne.n	80047e2 <HAL_RCC_ClockConfig+0xb6>
 80047d2:	4b47      	ldr	r3, [pc, #284]	; (80048f0 <HAL_RCC_ClockConfig+0x1c4>)
 80047d4:	681b      	ldr	r3, [r3, #0]
 80047d6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80047da:	2b00      	cmp	r3, #0
 80047dc:	d115      	bne.n	800480a <HAL_RCC_ClockConfig+0xde>
 80047de:	2301      	movs	r3, #1
 80047e0:	e07f      	b.n	80048e2 <HAL_RCC_ClockConfig+0x1b6>
 80047e2:	687b      	ldr	r3, [r7, #4]
 80047e4:	685b      	ldr	r3, [r3, #4]
 80047e6:	2b02      	cmp	r3, #2
 80047e8:	d107      	bne.n	80047fa <HAL_RCC_ClockConfig+0xce>
 80047ea:	4b41      	ldr	r3, [pc, #260]	; (80048f0 <HAL_RCC_ClockConfig+0x1c4>)
 80047ec:	681b      	ldr	r3, [r3, #0]
 80047ee:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80047f2:	2b00      	cmp	r3, #0
 80047f4:	d109      	bne.n	800480a <HAL_RCC_ClockConfig+0xde>
 80047f6:	2301      	movs	r3, #1
 80047f8:	e073      	b.n	80048e2 <HAL_RCC_ClockConfig+0x1b6>
 80047fa:	4b3d      	ldr	r3, [pc, #244]	; (80048f0 <HAL_RCC_ClockConfig+0x1c4>)
 80047fc:	681b      	ldr	r3, [r3, #0]
 80047fe:	f003 0302 	and.w	r3, r3, #2
 8004802:	2b00      	cmp	r3, #0
 8004804:	d101      	bne.n	800480a <HAL_RCC_ClockConfig+0xde>
 8004806:	2301      	movs	r3, #1
 8004808:	e06b      	b.n	80048e2 <HAL_RCC_ClockConfig+0x1b6>
 800480a:	4b39      	ldr	r3, [pc, #228]	; (80048f0 <HAL_RCC_ClockConfig+0x1c4>)
 800480c:	685b      	ldr	r3, [r3, #4]
 800480e:	f023 0203 	bic.w	r2, r3, #3
 8004812:	687b      	ldr	r3, [r7, #4]
 8004814:	685b      	ldr	r3, [r3, #4]
 8004816:	4936      	ldr	r1, [pc, #216]	; (80048f0 <HAL_RCC_ClockConfig+0x1c4>)
 8004818:	4313      	orrs	r3, r2
 800481a:	604b      	str	r3, [r1, #4]
 800481c:	f7ff f850 	bl	80038c0 <HAL_GetTick>
 8004820:	60f8      	str	r0, [r7, #12]
 8004822:	e00a      	b.n	800483a <HAL_RCC_ClockConfig+0x10e>
 8004824:	f7ff f84c 	bl	80038c0 <HAL_GetTick>
 8004828:	4602      	mov	r2, r0
 800482a:	68fb      	ldr	r3, [r7, #12]
 800482c:	1ad3      	subs	r3, r2, r3
 800482e:	f241 3288 	movw	r2, #5000	; 0x1388
 8004832:	4293      	cmp	r3, r2
 8004834:	d901      	bls.n	800483a <HAL_RCC_ClockConfig+0x10e>
 8004836:	2303      	movs	r3, #3
 8004838:	e053      	b.n	80048e2 <HAL_RCC_ClockConfig+0x1b6>
 800483a:	4b2d      	ldr	r3, [pc, #180]	; (80048f0 <HAL_RCC_ClockConfig+0x1c4>)
 800483c:	685b      	ldr	r3, [r3, #4]
 800483e:	f003 020c 	and.w	r2, r3, #12
 8004842:	687b      	ldr	r3, [r7, #4]
 8004844:	685b      	ldr	r3, [r3, #4]
 8004846:	009b      	lsls	r3, r3, #2
 8004848:	429a      	cmp	r2, r3
 800484a:	d1eb      	bne.n	8004824 <HAL_RCC_ClockConfig+0xf8>
 800484c:	4b27      	ldr	r3, [pc, #156]	; (80048ec <HAL_RCC_ClockConfig+0x1c0>)
 800484e:	681b      	ldr	r3, [r3, #0]
 8004850:	f003 0307 	and.w	r3, r3, #7
 8004854:	683a      	ldr	r2, [r7, #0]
 8004856:	429a      	cmp	r2, r3
 8004858:	d210      	bcs.n	800487c <HAL_RCC_ClockConfig+0x150>
 800485a:	4b24      	ldr	r3, [pc, #144]	; (80048ec <HAL_RCC_ClockConfig+0x1c0>)
 800485c:	681b      	ldr	r3, [r3, #0]
 800485e:	f023 0207 	bic.w	r2, r3, #7
 8004862:	4922      	ldr	r1, [pc, #136]	; (80048ec <HAL_RCC_ClockConfig+0x1c0>)
 8004864:	683b      	ldr	r3, [r7, #0]
 8004866:	4313      	orrs	r3, r2
 8004868:	600b      	str	r3, [r1, #0]
 800486a:	4b20      	ldr	r3, [pc, #128]	; (80048ec <HAL_RCC_ClockConfig+0x1c0>)
 800486c:	681b      	ldr	r3, [r3, #0]
 800486e:	f003 0307 	and.w	r3, r3, #7
 8004872:	683a      	ldr	r2, [r7, #0]
 8004874:	429a      	cmp	r2, r3
 8004876:	d001      	beq.n	800487c <HAL_RCC_ClockConfig+0x150>
 8004878:	2301      	movs	r3, #1
 800487a:	e032      	b.n	80048e2 <HAL_RCC_ClockConfig+0x1b6>
 800487c:	687b      	ldr	r3, [r7, #4]
 800487e:	681b      	ldr	r3, [r3, #0]
 8004880:	f003 0304 	and.w	r3, r3, #4
 8004884:	2b00      	cmp	r3, #0
 8004886:	d008      	beq.n	800489a <HAL_RCC_ClockConfig+0x16e>
 8004888:	4b19      	ldr	r3, [pc, #100]	; (80048f0 <HAL_RCC_ClockConfig+0x1c4>)
 800488a:	685b      	ldr	r3, [r3, #4]
 800488c:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8004890:	687b      	ldr	r3, [r7, #4]
 8004892:	68db      	ldr	r3, [r3, #12]
 8004894:	4916      	ldr	r1, [pc, #88]	; (80048f0 <HAL_RCC_ClockConfig+0x1c4>)
 8004896:	4313      	orrs	r3, r2
 8004898:	604b      	str	r3, [r1, #4]
 800489a:	687b      	ldr	r3, [r7, #4]
 800489c:	681b      	ldr	r3, [r3, #0]
 800489e:	f003 0308 	and.w	r3, r3, #8
 80048a2:	2b00      	cmp	r3, #0
 80048a4:	d009      	beq.n	80048ba <HAL_RCC_ClockConfig+0x18e>
 80048a6:	4b12      	ldr	r3, [pc, #72]	; (80048f0 <HAL_RCC_ClockConfig+0x1c4>)
 80048a8:	685b      	ldr	r3, [r3, #4]
 80048aa:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 80048ae:	687b      	ldr	r3, [r7, #4]
 80048b0:	691b      	ldr	r3, [r3, #16]
 80048b2:	00db      	lsls	r3, r3, #3
 80048b4:	490e      	ldr	r1, [pc, #56]	; (80048f0 <HAL_RCC_ClockConfig+0x1c4>)
 80048b6:	4313      	orrs	r3, r2
 80048b8:	604b      	str	r3, [r1, #4]
 80048ba:	f000 f821 	bl	8004900 <HAL_RCC_GetSysClockFreq>
 80048be:	4602      	mov	r2, r0
 80048c0:	4b0b      	ldr	r3, [pc, #44]	; (80048f0 <HAL_RCC_ClockConfig+0x1c4>)
 80048c2:	685b      	ldr	r3, [r3, #4]
 80048c4:	091b      	lsrs	r3, r3, #4
 80048c6:	f003 030f 	and.w	r3, r3, #15
 80048ca:	490a      	ldr	r1, [pc, #40]	; (80048f4 <HAL_RCC_ClockConfig+0x1c8>)
 80048cc:	5ccb      	ldrb	r3, [r1, r3]
 80048ce:	fa22 f303 	lsr.w	r3, r2, r3
 80048d2:	4a09      	ldr	r2, [pc, #36]	; (80048f8 <HAL_RCC_ClockConfig+0x1cc>)
 80048d4:	6013      	str	r3, [r2, #0]
 80048d6:	4b09      	ldr	r3, [pc, #36]	; (80048fc <HAL_RCC_ClockConfig+0x1d0>)
 80048d8:	681b      	ldr	r3, [r3, #0]
 80048da:	4618      	mov	r0, r3
 80048dc:	f7fe fb50 	bl	8002f80 <HAL_InitTick>
 80048e0:	2300      	movs	r3, #0
 80048e2:	4618      	mov	r0, r3
 80048e4:	3710      	adds	r7, #16
 80048e6:	46bd      	mov	sp, r7
 80048e8:	bd80      	pop	{r7, pc}
 80048ea:	bf00      	nop
 80048ec:	40022000 	.word	0x40022000
 80048f0:	40021000 	.word	0x40021000
 80048f4:	0800c2dc 	.word	0x0800c2dc
 80048f8:	20000064 	.word	0x20000064
 80048fc:	20000068 	.word	0x20000068

08004900 <HAL_RCC_GetSysClockFreq>:
 8004900:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8004904:	b092      	sub	sp, #72	; 0x48
 8004906:	af00      	add	r7, sp, #0
 8004908:	2300      	movs	r3, #0
 800490a:	63fb      	str	r3, [r7, #60]	; 0x3c
 800490c:	2300      	movs	r3, #0
 800490e:	63bb      	str	r3, [r7, #56]	; 0x38
 8004910:	2300      	movs	r3, #0
 8004912:	647b      	str	r3, [r7, #68]	; 0x44
 8004914:	2300      	movs	r3, #0
 8004916:	637b      	str	r3, [r7, #52]	; 0x34
 8004918:	2300      	movs	r3, #0
 800491a:	643b      	str	r3, [r7, #64]	; 0x40
 800491c:	2300      	movs	r3, #0
 800491e:	633b      	str	r3, [r7, #48]	; 0x30
 8004920:	2300      	movs	r3, #0
 8004922:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004924:	4b6b      	ldr	r3, [pc, #428]	; (8004ad4 <HAL_RCC_GetSysClockFreq+0x1d4>)
 8004926:	685b      	ldr	r3, [r3, #4]
 8004928:	63fb      	str	r3, [r7, #60]	; 0x3c
 800492a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800492c:	f003 030c 	and.w	r3, r3, #12
 8004930:	2b04      	cmp	r3, #4
 8004932:	d002      	beq.n	800493a <HAL_RCC_GetSysClockFreq+0x3a>
 8004934:	2b08      	cmp	r3, #8
 8004936:	d003      	beq.n	8004940 <HAL_RCC_GetSysClockFreq+0x40>
 8004938:	e0c3      	b.n	8004ac2 <HAL_RCC_GetSysClockFreq+0x1c2>
 800493a:	4b67      	ldr	r3, [pc, #412]	; (8004ad8 <HAL_RCC_GetSysClockFreq+0x1d8>)
 800493c:	643b      	str	r3, [r7, #64]	; 0x40
 800493e:	e0c3      	b.n	8004ac8 <HAL_RCC_GetSysClockFreq+0x1c8>
 8004940:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8004942:	0c9b      	lsrs	r3, r3, #18
 8004944:	f003 020f 	and.w	r2, r3, #15
 8004948:	4b64      	ldr	r3, [pc, #400]	; (8004adc <HAL_RCC_GetSysClockFreq+0x1dc>)
 800494a:	5c9b      	ldrb	r3, [r3, r2]
 800494c:	637b      	str	r3, [r7, #52]	; 0x34
 800494e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8004950:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8004954:	2b00      	cmp	r3, #0
 8004956:	f000 80ac 	beq.w	8004ab2 <HAL_RCC_GetSysClockFreq+0x1b2>
 800495a:	4b5e      	ldr	r3, [pc, #376]	; (8004ad4 <HAL_RCC_GetSysClockFreq+0x1d4>)
 800495c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800495e:	f003 020f 	and.w	r2, r3, #15
 8004962:	4b5f      	ldr	r3, [pc, #380]	; (8004ae0 <HAL_RCC_GetSysClockFreq+0x1e0>)
 8004964:	5c9b      	ldrb	r3, [r3, r2]
 8004966:	63bb      	str	r3, [r7, #56]	; 0x38
 8004968:	4b5a      	ldr	r3, [pc, #360]	; (8004ad4 <HAL_RCC_GetSysClockFreq+0x1d4>)
 800496a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800496c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8004970:	2b00      	cmp	r3, #0
 8004972:	f000 808c 	beq.w	8004a8e <HAL_RCC_GetSysClockFreq+0x18e>
 8004976:	4b57      	ldr	r3, [pc, #348]	; (8004ad4 <HAL_RCC_GetSysClockFreq+0x1d4>)
 8004978:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800497a:	091b      	lsrs	r3, r3, #4
 800497c:	f003 030f 	and.w	r3, r3, #15
 8004980:	3301      	adds	r3, #1
 8004982:	633b      	str	r3, [r7, #48]	; 0x30
 8004984:	4b53      	ldr	r3, [pc, #332]	; (8004ad4 <HAL_RCC_GetSysClockFreq+0x1d4>)
 8004986:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004988:	0a1b      	lsrs	r3, r3, #8
 800498a:	f003 030f 	and.w	r3, r3, #15
 800498e:	3302      	adds	r3, #2
 8004990:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004992:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004994:	2200      	movs	r2, #0
 8004996:	623b      	str	r3, [r7, #32]
 8004998:	627a      	str	r2, [r7, #36]	; 0x24
 800499a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800499c:	2200      	movs	r2, #0
 800499e:	4618      	mov	r0, r3
 80049a0:	4611      	mov	r1, r2
 80049a2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80049a4:	fb00 f203 	mul.w	r2, r0, r3
 80049a8:	6a3b      	ldr	r3, [r7, #32]
 80049aa:	fb03 f301 	mul.w	r3, r3, r1
 80049ae:	4413      	add	r3, r2
 80049b0:	6a3a      	ldr	r2, [r7, #32]
 80049b2:	fba2 4500 	umull	r4, r5, r2, r0
 80049b6:	442b      	add	r3, r5
 80049b8:	461d      	mov	r5, r3
 80049ba:	4622      	mov	r2, r4
 80049bc:	462b      	mov	r3, r5
 80049be:	f04f 0000 	mov.w	r0, #0
 80049c2:	f04f 0100 	mov.w	r1, #0
 80049c6:	0159      	lsls	r1, r3, #5
 80049c8:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80049cc:	0150      	lsls	r0, r2, #5
 80049ce:	4602      	mov	r2, r0
 80049d0:	460b      	mov	r3, r1
 80049d2:	ebb2 0a04 	subs.w	sl, r2, r4
 80049d6:	eb63 0b05 	sbc.w	fp, r3, r5
 80049da:	f04f 0200 	mov.w	r2, #0
 80049de:	f04f 0300 	mov.w	r3, #0
 80049e2:	ea4f 138b 	mov.w	r3, fp, lsl #6
 80049e6:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 80049ea:	ea4f 128a 	mov.w	r2, sl, lsl #6
 80049ee:	ebb2 080a 	subs.w	r8, r2, sl
 80049f2:	eb63 090b 	sbc.w	r9, r3, fp
 80049f6:	f04f 0200 	mov.w	r2, #0
 80049fa:	f04f 0300 	mov.w	r3, #0
 80049fe:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8004a02:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8004a06:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8004a0a:	4690      	mov	r8, r2
 8004a0c:	4699      	mov	r9, r3
 8004a0e:	eb18 0304 	adds.w	r3, r8, r4
 8004a12:	603b      	str	r3, [r7, #0]
 8004a14:	eb49 0305 	adc.w	r3, r9, r5
 8004a18:	607b      	str	r3, [r7, #4]
 8004a1a:	f04f 0200 	mov.w	r2, #0
 8004a1e:	f04f 0300 	mov.w	r3, #0
 8004a22:	e9d7 4500 	ldrd	r4, r5, [r7]
 8004a26:	4629      	mov	r1, r5
 8004a28:	028b      	lsls	r3, r1, #10
 8004a2a:	4620      	mov	r0, r4
 8004a2c:	4629      	mov	r1, r5
 8004a2e:	4604      	mov	r4, r0
 8004a30:	ea43 5394 	orr.w	r3, r3, r4, lsr #22
 8004a34:	4601      	mov	r1, r0
 8004a36:	028a      	lsls	r2, r1, #10
 8004a38:	4610      	mov	r0, r2
 8004a3a:	4619      	mov	r1, r3
 8004a3c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004a3e:	2200      	movs	r2, #0
 8004a40:	613b      	str	r3, [r7, #16]
 8004a42:	617a      	str	r2, [r7, #20]
 8004a44:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004a46:	2200      	movs	r2, #0
 8004a48:	60bb      	str	r3, [r7, #8]
 8004a4a:	60fa      	str	r2, [r7, #12]
 8004a4c:	e9d7 3404 	ldrd	r3, r4, [r7, #16]
 8004a50:	4622      	mov	r2, r4
 8004a52:	e9d7 8902 	ldrd	r8, r9, [r7, #8]
 8004a56:	4645      	mov	r5, r8
 8004a58:	fb05 f202 	mul.w	r2, r5, r2
 8004a5c:	46cc      	mov	ip, r9
 8004a5e:	4625      	mov	r5, r4
 8004a60:	461c      	mov	r4, r3
 8004a62:	4623      	mov	r3, r4
 8004a64:	fb03 f30c 	mul.w	r3, r3, ip
 8004a68:	4413      	add	r3, r2
 8004a6a:	4622      	mov	r2, r4
 8004a6c:	4644      	mov	r4, r8
 8004a6e:	fba2 2404 	umull	r2, r4, r2, r4
 8004a72:	61fc      	str	r4, [r7, #28]
 8004a74:	61ba      	str	r2, [r7, #24]
 8004a76:	69fa      	ldr	r2, [r7, #28]
 8004a78:	4413      	add	r3, r2
 8004a7a:	61fb      	str	r3, [r7, #28]
 8004a7c:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8004a80:	f7fc fb6c 	bl	800115c <__aeabi_uldivmod>
 8004a84:	4602      	mov	r2, r0
 8004a86:	460b      	mov	r3, r1
 8004a88:	4613      	mov	r3, r2
 8004a8a:	647b      	str	r3, [r7, #68]	; 0x44
 8004a8c:	e007      	b.n	8004a9e <HAL_RCC_GetSysClockFreq+0x19e>
 8004a8e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8004a90:	4a11      	ldr	r2, [pc, #68]	; (8004ad8 <HAL_RCC_GetSysClockFreq+0x1d8>)
 8004a92:	fb03 f202 	mul.w	r2, r3, r2
 8004a96:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004a98:	fbb2 f3f3 	udiv	r3, r2, r3
 8004a9c:	647b      	str	r3, [r7, #68]	; 0x44
 8004a9e:	4b0f      	ldr	r3, [pc, #60]	; (8004adc <HAL_RCC_GetSysClockFreq+0x1dc>)
 8004aa0:	7b5b      	ldrb	r3, [r3, #13]
 8004aa2:	461a      	mov	r2, r3
 8004aa4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8004aa6:	4293      	cmp	r3, r2
 8004aa8:	d108      	bne.n	8004abc <HAL_RCC_GetSysClockFreq+0x1bc>
 8004aaa:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8004aac:	085b      	lsrs	r3, r3, #1
 8004aae:	647b      	str	r3, [r7, #68]	; 0x44
 8004ab0:	e004      	b.n	8004abc <HAL_RCC_GetSysClockFreq+0x1bc>
 8004ab2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8004ab4:	4a0b      	ldr	r2, [pc, #44]	; (8004ae4 <HAL_RCC_GetSysClockFreq+0x1e4>)
 8004ab6:	fb02 f303 	mul.w	r3, r2, r3
 8004aba:	647b      	str	r3, [r7, #68]	; 0x44
 8004abc:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8004abe:	643b      	str	r3, [r7, #64]	; 0x40
 8004ac0:	e002      	b.n	8004ac8 <HAL_RCC_GetSysClockFreq+0x1c8>
 8004ac2:	4b09      	ldr	r3, [pc, #36]	; (8004ae8 <HAL_RCC_GetSysClockFreq+0x1e8>)
 8004ac4:	643b      	str	r3, [r7, #64]	; 0x40
 8004ac6:	bf00      	nop
 8004ac8:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8004aca:	4618      	mov	r0, r3
 8004acc:	3748      	adds	r7, #72	; 0x48
 8004ace:	46bd      	mov	sp, r7
 8004ad0:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8004ad4:	40021000 	.word	0x40021000
 8004ad8:	00f42400 	.word	0x00f42400
 8004adc:	0800c2f4 	.word	0x0800c2f4
 8004ae0:	0800c304 	.word	0x0800c304
 8004ae4:	003d0900 	.word	0x003d0900
 8004ae8:	007a1200 	.word	0x007a1200

08004aec <HAL_RCC_GetHCLKFreq>:
 8004aec:	b480      	push	{r7}
 8004aee:	af00      	add	r7, sp, #0
 8004af0:	4b02      	ldr	r3, [pc, #8]	; (8004afc <HAL_RCC_GetHCLKFreq+0x10>)
 8004af2:	681b      	ldr	r3, [r3, #0]
 8004af4:	4618      	mov	r0, r3
 8004af6:	46bd      	mov	sp, r7
 8004af8:	bc80      	pop	{r7}
 8004afa:	4770      	bx	lr
 8004afc:	20000064 	.word	0x20000064

08004b00 <HAL_RCC_GetPCLK1Freq>:
 8004b00:	b580      	push	{r7, lr}
 8004b02:	af00      	add	r7, sp, #0
 8004b04:	f7ff fff2 	bl	8004aec <HAL_RCC_GetHCLKFreq>
 8004b08:	4602      	mov	r2, r0
 8004b0a:	4b05      	ldr	r3, [pc, #20]	; (8004b20 <HAL_RCC_GetPCLK1Freq+0x20>)
 8004b0c:	685b      	ldr	r3, [r3, #4]
 8004b0e:	0a1b      	lsrs	r3, r3, #8
 8004b10:	f003 0307 	and.w	r3, r3, #7
 8004b14:	4903      	ldr	r1, [pc, #12]	; (8004b24 <HAL_RCC_GetPCLK1Freq+0x24>)
 8004b16:	5ccb      	ldrb	r3, [r1, r3]
 8004b18:	fa22 f303 	lsr.w	r3, r2, r3
 8004b1c:	4618      	mov	r0, r3
 8004b1e:	bd80      	pop	{r7, pc}
 8004b20:	40021000 	.word	0x40021000
 8004b24:	0800c2ec 	.word	0x0800c2ec

08004b28 <HAL_RCC_GetPCLK2Freq>:
 8004b28:	b580      	push	{r7, lr}
 8004b2a:	af00      	add	r7, sp, #0
 8004b2c:	f7ff ffde 	bl	8004aec <HAL_RCC_GetHCLKFreq>
 8004b30:	4602      	mov	r2, r0
 8004b32:	4b05      	ldr	r3, [pc, #20]	; (8004b48 <HAL_RCC_GetPCLK2Freq+0x20>)
 8004b34:	685b      	ldr	r3, [r3, #4]
 8004b36:	0adb      	lsrs	r3, r3, #11
 8004b38:	f003 0307 	and.w	r3, r3, #7
 8004b3c:	4903      	ldr	r1, [pc, #12]	; (8004b4c <HAL_RCC_GetPCLK2Freq+0x24>)
 8004b3e:	5ccb      	ldrb	r3, [r1, r3]
 8004b40:	fa22 f303 	lsr.w	r3, r2, r3
 8004b44:	4618      	mov	r0, r3
 8004b46:	bd80      	pop	{r7, pc}
 8004b48:	40021000 	.word	0x40021000
 8004b4c:	0800c2ec 	.word	0x0800c2ec

08004b50 <HAL_RCC_GetClockConfig>:
 8004b50:	b480      	push	{r7}
 8004b52:	b083      	sub	sp, #12
 8004b54:	af00      	add	r7, sp, #0
 8004b56:	6078      	str	r0, [r7, #4]
 8004b58:	6039      	str	r1, [r7, #0]
 8004b5a:	687b      	ldr	r3, [r7, #4]
 8004b5c:	220f      	movs	r2, #15
 8004b5e:	601a      	str	r2, [r3, #0]
 8004b60:	4b11      	ldr	r3, [pc, #68]	; (8004ba8 <HAL_RCC_GetClockConfig+0x58>)
 8004b62:	685b      	ldr	r3, [r3, #4]
 8004b64:	f003 0203 	and.w	r2, r3, #3
 8004b68:	687b      	ldr	r3, [r7, #4]
 8004b6a:	605a      	str	r2, [r3, #4]
 8004b6c:	4b0e      	ldr	r3, [pc, #56]	; (8004ba8 <HAL_RCC_GetClockConfig+0x58>)
 8004b6e:	685b      	ldr	r3, [r3, #4]
 8004b70:	f003 02f0 	and.w	r2, r3, #240	; 0xf0
 8004b74:	687b      	ldr	r3, [r7, #4]
 8004b76:	609a      	str	r2, [r3, #8]
 8004b78:	4b0b      	ldr	r3, [pc, #44]	; (8004ba8 <HAL_RCC_GetClockConfig+0x58>)
 8004b7a:	685b      	ldr	r3, [r3, #4]
 8004b7c:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
 8004b80:	687b      	ldr	r3, [r7, #4]
 8004b82:	60da      	str	r2, [r3, #12]
 8004b84:	4b08      	ldr	r3, [pc, #32]	; (8004ba8 <HAL_RCC_GetClockConfig+0x58>)
 8004b86:	685b      	ldr	r3, [r3, #4]
 8004b88:	08db      	lsrs	r3, r3, #3
 8004b8a:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
 8004b8e:	687b      	ldr	r3, [r7, #4]
 8004b90:	611a      	str	r2, [r3, #16]
 8004b92:	4b06      	ldr	r3, [pc, #24]	; (8004bac <HAL_RCC_GetClockConfig+0x5c>)
 8004b94:	681b      	ldr	r3, [r3, #0]
 8004b96:	f003 0207 	and.w	r2, r3, #7
 8004b9a:	683b      	ldr	r3, [r7, #0]
 8004b9c:	601a      	str	r2, [r3, #0]
 8004b9e:	bf00      	nop
 8004ba0:	370c      	adds	r7, #12
 8004ba2:	46bd      	mov	sp, r7
 8004ba4:	bc80      	pop	{r7}
 8004ba6:	4770      	bx	lr
 8004ba8:	40021000 	.word	0x40021000
 8004bac:	40022000 	.word	0x40022000

08004bb0 <RCC_Delay>:
 8004bb0:	b480      	push	{r7}
 8004bb2:	b085      	sub	sp, #20
 8004bb4:	af00      	add	r7, sp, #0
 8004bb6:	6078      	str	r0, [r7, #4]
 8004bb8:	4b0a      	ldr	r3, [pc, #40]	; (8004be4 <RCC_Delay+0x34>)
 8004bba:	681b      	ldr	r3, [r3, #0]
 8004bbc:	4a0a      	ldr	r2, [pc, #40]	; (8004be8 <RCC_Delay+0x38>)
 8004bbe:	fba2 2303 	umull	r2, r3, r2, r3
 8004bc2:	0a5b      	lsrs	r3, r3, #9
 8004bc4:	687a      	ldr	r2, [r7, #4]
 8004bc6:	fb02 f303 	mul.w	r3, r2, r3
 8004bca:	60fb      	str	r3, [r7, #12]
 8004bcc:	bf00      	nop
 8004bce:	68fb      	ldr	r3, [r7, #12]
 8004bd0:	1e5a      	subs	r2, r3, #1
 8004bd2:	60fa      	str	r2, [r7, #12]
 8004bd4:	2b00      	cmp	r3, #0
 8004bd6:	d1f9      	bne.n	8004bcc <RCC_Delay+0x1c>
 8004bd8:	bf00      	nop
 8004bda:	bf00      	nop
 8004bdc:	3714      	adds	r7, #20
 8004bde:	46bd      	mov	sp, r7
 8004be0:	bc80      	pop	{r7}
 8004be2:	4770      	bx	lr
 8004be4:	20000064 	.word	0x20000064
 8004be8:	10624dd3 	.word	0x10624dd3

08004bec <HAL_SPI_Init>:
 8004bec:	b580      	push	{r7, lr}
 8004bee:	b082      	sub	sp, #8
 8004bf0:	af00      	add	r7, sp, #0
 8004bf2:	6078      	str	r0, [r7, #4]
 8004bf4:	687b      	ldr	r3, [r7, #4]
 8004bf6:	2b00      	cmp	r3, #0
 8004bf8:	d101      	bne.n	8004bfe <HAL_SPI_Init+0x12>
 8004bfa:	2301      	movs	r3, #1
 8004bfc:	e076      	b.n	8004cec <HAL_SPI_Init+0x100>
 8004bfe:	687b      	ldr	r3, [r7, #4]
 8004c00:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c02:	2b00      	cmp	r3, #0
 8004c04:	d108      	bne.n	8004c18 <HAL_SPI_Init+0x2c>
 8004c06:	687b      	ldr	r3, [r7, #4]
 8004c08:	685b      	ldr	r3, [r3, #4]
 8004c0a:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8004c0e:	d009      	beq.n	8004c24 <HAL_SPI_Init+0x38>
 8004c10:	687b      	ldr	r3, [r7, #4]
 8004c12:	2200      	movs	r2, #0
 8004c14:	61da      	str	r2, [r3, #28]
 8004c16:	e005      	b.n	8004c24 <HAL_SPI_Init+0x38>
 8004c18:	687b      	ldr	r3, [r7, #4]
 8004c1a:	2200      	movs	r2, #0
 8004c1c:	611a      	str	r2, [r3, #16]
 8004c1e:	687b      	ldr	r3, [r7, #4]
 8004c20:	2200      	movs	r2, #0
 8004c22:	615a      	str	r2, [r3, #20]
 8004c24:	687b      	ldr	r3, [r7, #4]
 8004c26:	2200      	movs	r2, #0
 8004c28:	629a      	str	r2, [r3, #40]	; 0x28
 8004c2a:	687b      	ldr	r3, [r7, #4]
 8004c2c:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8004c30:	b2db      	uxtb	r3, r3
 8004c32:	2b00      	cmp	r3, #0
 8004c34:	d106      	bne.n	8004c44 <HAL_SPI_Init+0x58>
 8004c36:	687b      	ldr	r3, [r7, #4]
 8004c38:	2200      	movs	r2, #0
 8004c3a:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8004c3e:	6878      	ldr	r0, [r7, #4]
 8004c40:	f7fe f90a 	bl	8002e58 <HAL_SPI_MspInit>
 8004c44:	687b      	ldr	r3, [r7, #4]
 8004c46:	2202      	movs	r2, #2
 8004c48:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8004c4c:	687b      	ldr	r3, [r7, #4]
 8004c4e:	681b      	ldr	r3, [r3, #0]
 8004c50:	681a      	ldr	r2, [r3, #0]
 8004c52:	687b      	ldr	r3, [r7, #4]
 8004c54:	681b      	ldr	r3, [r3, #0]
 8004c56:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8004c5a:	601a      	str	r2, [r3, #0]
 8004c5c:	687b      	ldr	r3, [r7, #4]
 8004c5e:	685b      	ldr	r3, [r3, #4]
 8004c60:	f403 7282 	and.w	r2, r3, #260	; 0x104
 8004c64:	687b      	ldr	r3, [r7, #4]
 8004c66:	689b      	ldr	r3, [r3, #8]
 8004c68:	f403 4304 	and.w	r3, r3, #33792	; 0x8400
 8004c6c:	431a      	orrs	r2, r3
 8004c6e:	687b      	ldr	r3, [r7, #4]
 8004c70:	68db      	ldr	r3, [r3, #12]
 8004c72:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8004c76:	431a      	orrs	r2, r3
 8004c78:	687b      	ldr	r3, [r7, #4]
 8004c7a:	691b      	ldr	r3, [r3, #16]
 8004c7c:	f003 0302 	and.w	r3, r3, #2
 8004c80:	431a      	orrs	r2, r3
 8004c82:	687b      	ldr	r3, [r7, #4]
 8004c84:	695b      	ldr	r3, [r3, #20]
 8004c86:	f003 0301 	and.w	r3, r3, #1
 8004c8a:	431a      	orrs	r2, r3
 8004c8c:	687b      	ldr	r3, [r7, #4]
 8004c8e:	699b      	ldr	r3, [r3, #24]
 8004c90:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8004c94:	431a      	orrs	r2, r3
 8004c96:	687b      	ldr	r3, [r7, #4]
 8004c98:	69db      	ldr	r3, [r3, #28]
 8004c9a:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8004c9e:	431a      	orrs	r2, r3
 8004ca0:	687b      	ldr	r3, [r7, #4]
 8004ca2:	6a1b      	ldr	r3, [r3, #32]
 8004ca4:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004ca8:	ea42 0103 	orr.w	r1, r2, r3
 8004cac:	687b      	ldr	r3, [r7, #4]
 8004cae:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004cb0:	f403 5200 	and.w	r2, r3, #8192	; 0x2000
 8004cb4:	687b      	ldr	r3, [r7, #4]
 8004cb6:	681b      	ldr	r3, [r3, #0]
 8004cb8:	430a      	orrs	r2, r1
 8004cba:	601a      	str	r2, [r3, #0]
 8004cbc:	687b      	ldr	r3, [r7, #4]
 8004cbe:	699b      	ldr	r3, [r3, #24]
 8004cc0:	0c1a      	lsrs	r2, r3, #16
 8004cc2:	687b      	ldr	r3, [r7, #4]
 8004cc4:	681b      	ldr	r3, [r3, #0]
 8004cc6:	f002 0204 	and.w	r2, r2, #4
 8004cca:	605a      	str	r2, [r3, #4]
 8004ccc:	687b      	ldr	r3, [r7, #4]
 8004cce:	681b      	ldr	r3, [r3, #0]
 8004cd0:	69da      	ldr	r2, [r3, #28]
 8004cd2:	687b      	ldr	r3, [r7, #4]
 8004cd4:	681b      	ldr	r3, [r3, #0]
 8004cd6:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8004cda:	61da      	str	r2, [r3, #28]
 8004cdc:	687b      	ldr	r3, [r7, #4]
 8004cde:	2200      	movs	r2, #0
 8004ce0:	655a      	str	r2, [r3, #84]	; 0x54
 8004ce2:	687b      	ldr	r3, [r7, #4]
 8004ce4:	2201      	movs	r2, #1
 8004ce6:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8004cea:	2300      	movs	r3, #0
 8004cec:	4618      	mov	r0, r3
 8004cee:	3708      	adds	r7, #8
 8004cf0:	46bd      	mov	sp, r7
 8004cf2:	bd80      	pop	{r7, pc}

08004cf4 <HAL_SPI_Transmit>:
 8004cf4:	b580      	push	{r7, lr}
 8004cf6:	b088      	sub	sp, #32
 8004cf8:	af00      	add	r7, sp, #0
 8004cfa:	60f8      	str	r0, [r7, #12]
 8004cfc:	60b9      	str	r1, [r7, #8]
 8004cfe:	603b      	str	r3, [r7, #0]
 8004d00:	4613      	mov	r3, r2
 8004d02:	80fb      	strh	r3, [r7, #6]
 8004d04:	2300      	movs	r3, #0
 8004d06:	77fb      	strb	r3, [r7, #31]
 8004d08:	68fb      	ldr	r3, [r7, #12]
 8004d0a:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8004d0e:	2b01      	cmp	r3, #1
 8004d10:	d101      	bne.n	8004d16 <HAL_SPI_Transmit+0x22>
 8004d12:	2302      	movs	r3, #2
 8004d14:	e12d      	b.n	8004f72 <HAL_SPI_Transmit+0x27e>
 8004d16:	68fb      	ldr	r3, [r7, #12]
 8004d18:	2201      	movs	r2, #1
 8004d1a:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8004d1e:	f7fe fdcf 	bl	80038c0 <HAL_GetTick>
 8004d22:	61b8      	str	r0, [r7, #24]
 8004d24:	88fb      	ldrh	r3, [r7, #6]
 8004d26:	82fb      	strh	r3, [r7, #22]
 8004d28:	68fb      	ldr	r3, [r7, #12]
 8004d2a:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8004d2e:	b2db      	uxtb	r3, r3
 8004d30:	2b01      	cmp	r3, #1
 8004d32:	d002      	beq.n	8004d3a <HAL_SPI_Transmit+0x46>
 8004d34:	2302      	movs	r3, #2
 8004d36:	77fb      	strb	r3, [r7, #31]
 8004d38:	e116      	b.n	8004f68 <HAL_SPI_Transmit+0x274>
 8004d3a:	68bb      	ldr	r3, [r7, #8]
 8004d3c:	2b00      	cmp	r3, #0
 8004d3e:	d002      	beq.n	8004d46 <HAL_SPI_Transmit+0x52>
 8004d40:	88fb      	ldrh	r3, [r7, #6]
 8004d42:	2b00      	cmp	r3, #0
 8004d44:	d102      	bne.n	8004d4c <HAL_SPI_Transmit+0x58>
 8004d46:	2301      	movs	r3, #1
 8004d48:	77fb      	strb	r3, [r7, #31]
 8004d4a:	e10d      	b.n	8004f68 <HAL_SPI_Transmit+0x274>
 8004d4c:	68fb      	ldr	r3, [r7, #12]
 8004d4e:	2203      	movs	r2, #3
 8004d50:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8004d54:	68fb      	ldr	r3, [r7, #12]
 8004d56:	2200      	movs	r2, #0
 8004d58:	655a      	str	r2, [r3, #84]	; 0x54
 8004d5a:	68fb      	ldr	r3, [r7, #12]
 8004d5c:	68ba      	ldr	r2, [r7, #8]
 8004d5e:	631a      	str	r2, [r3, #48]	; 0x30
 8004d60:	68fb      	ldr	r3, [r7, #12]
 8004d62:	88fa      	ldrh	r2, [r7, #6]
 8004d64:	869a      	strh	r2, [r3, #52]	; 0x34
 8004d66:	68fb      	ldr	r3, [r7, #12]
 8004d68:	88fa      	ldrh	r2, [r7, #6]
 8004d6a:	86da      	strh	r2, [r3, #54]	; 0x36
 8004d6c:	68fb      	ldr	r3, [r7, #12]
 8004d6e:	2200      	movs	r2, #0
 8004d70:	639a      	str	r2, [r3, #56]	; 0x38
 8004d72:	68fb      	ldr	r3, [r7, #12]
 8004d74:	2200      	movs	r2, #0
 8004d76:	879a      	strh	r2, [r3, #60]	; 0x3c
 8004d78:	68fb      	ldr	r3, [r7, #12]
 8004d7a:	2200      	movs	r2, #0
 8004d7c:	87da      	strh	r2, [r3, #62]	; 0x3e
 8004d7e:	68fb      	ldr	r3, [r7, #12]
 8004d80:	2200      	movs	r2, #0
 8004d82:	645a      	str	r2, [r3, #68]	; 0x44
 8004d84:	68fb      	ldr	r3, [r7, #12]
 8004d86:	2200      	movs	r2, #0
 8004d88:	641a      	str	r2, [r3, #64]	; 0x40
 8004d8a:	68fb      	ldr	r3, [r7, #12]
 8004d8c:	689b      	ldr	r3, [r3, #8]
 8004d8e:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8004d92:	d10f      	bne.n	8004db4 <HAL_SPI_Transmit+0xc0>
 8004d94:	68fb      	ldr	r3, [r7, #12]
 8004d96:	681b      	ldr	r3, [r3, #0]
 8004d98:	681a      	ldr	r2, [r3, #0]
 8004d9a:	68fb      	ldr	r3, [r7, #12]
 8004d9c:	681b      	ldr	r3, [r3, #0]
 8004d9e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8004da2:	601a      	str	r2, [r3, #0]
 8004da4:	68fb      	ldr	r3, [r7, #12]
 8004da6:	681b      	ldr	r3, [r3, #0]
 8004da8:	681a      	ldr	r2, [r3, #0]
 8004daa:	68fb      	ldr	r3, [r7, #12]
 8004dac:	681b      	ldr	r3, [r3, #0]
 8004dae:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8004db2:	601a      	str	r2, [r3, #0]
 8004db4:	68fb      	ldr	r3, [r7, #12]
 8004db6:	681b      	ldr	r3, [r3, #0]
 8004db8:	681b      	ldr	r3, [r3, #0]
 8004dba:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004dbe:	2b40      	cmp	r3, #64	; 0x40
 8004dc0:	d007      	beq.n	8004dd2 <HAL_SPI_Transmit+0xde>
 8004dc2:	68fb      	ldr	r3, [r7, #12]
 8004dc4:	681b      	ldr	r3, [r3, #0]
 8004dc6:	681a      	ldr	r2, [r3, #0]
 8004dc8:	68fb      	ldr	r3, [r7, #12]
 8004dca:	681b      	ldr	r3, [r3, #0]
 8004dcc:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8004dd0:	601a      	str	r2, [r3, #0]
 8004dd2:	68fb      	ldr	r3, [r7, #12]
 8004dd4:	68db      	ldr	r3, [r3, #12]
 8004dd6:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8004dda:	d14f      	bne.n	8004e7c <HAL_SPI_Transmit+0x188>
 8004ddc:	68fb      	ldr	r3, [r7, #12]
 8004dde:	685b      	ldr	r3, [r3, #4]
 8004de0:	2b00      	cmp	r3, #0
 8004de2:	d002      	beq.n	8004dea <HAL_SPI_Transmit+0xf6>
 8004de4:	8afb      	ldrh	r3, [r7, #22]
 8004de6:	2b01      	cmp	r3, #1
 8004de8:	d142      	bne.n	8004e70 <HAL_SPI_Transmit+0x17c>
 8004dea:	68fb      	ldr	r3, [r7, #12]
 8004dec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004dee:	881a      	ldrh	r2, [r3, #0]
 8004df0:	68fb      	ldr	r3, [r7, #12]
 8004df2:	681b      	ldr	r3, [r3, #0]
 8004df4:	60da      	str	r2, [r3, #12]
 8004df6:	68fb      	ldr	r3, [r7, #12]
 8004df8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004dfa:	1c9a      	adds	r2, r3, #2
 8004dfc:	68fb      	ldr	r3, [r7, #12]
 8004dfe:	631a      	str	r2, [r3, #48]	; 0x30
 8004e00:	68fb      	ldr	r3, [r7, #12]
 8004e02:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8004e04:	b29b      	uxth	r3, r3
 8004e06:	3b01      	subs	r3, #1
 8004e08:	b29a      	uxth	r2, r3
 8004e0a:	68fb      	ldr	r3, [r7, #12]
 8004e0c:	86da      	strh	r2, [r3, #54]	; 0x36
 8004e0e:	e02f      	b.n	8004e70 <HAL_SPI_Transmit+0x17c>
 8004e10:	68fb      	ldr	r3, [r7, #12]
 8004e12:	681b      	ldr	r3, [r3, #0]
 8004e14:	689b      	ldr	r3, [r3, #8]
 8004e16:	f003 0302 	and.w	r3, r3, #2
 8004e1a:	2b02      	cmp	r3, #2
 8004e1c:	d112      	bne.n	8004e44 <HAL_SPI_Transmit+0x150>
 8004e1e:	68fb      	ldr	r3, [r7, #12]
 8004e20:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004e22:	881a      	ldrh	r2, [r3, #0]
 8004e24:	68fb      	ldr	r3, [r7, #12]
 8004e26:	681b      	ldr	r3, [r3, #0]
 8004e28:	60da      	str	r2, [r3, #12]
 8004e2a:	68fb      	ldr	r3, [r7, #12]
 8004e2c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004e2e:	1c9a      	adds	r2, r3, #2
 8004e30:	68fb      	ldr	r3, [r7, #12]
 8004e32:	631a      	str	r2, [r3, #48]	; 0x30
 8004e34:	68fb      	ldr	r3, [r7, #12]
 8004e36:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8004e38:	b29b      	uxth	r3, r3
 8004e3a:	3b01      	subs	r3, #1
 8004e3c:	b29a      	uxth	r2, r3
 8004e3e:	68fb      	ldr	r3, [r7, #12]
 8004e40:	86da      	strh	r2, [r3, #54]	; 0x36
 8004e42:	e015      	b.n	8004e70 <HAL_SPI_Transmit+0x17c>
 8004e44:	f7fe fd3c 	bl	80038c0 <HAL_GetTick>
 8004e48:	4602      	mov	r2, r0
 8004e4a:	69bb      	ldr	r3, [r7, #24]
 8004e4c:	1ad3      	subs	r3, r2, r3
 8004e4e:	683a      	ldr	r2, [r7, #0]
 8004e50:	429a      	cmp	r2, r3
 8004e52:	d803      	bhi.n	8004e5c <HAL_SPI_Transmit+0x168>
 8004e54:	683b      	ldr	r3, [r7, #0]
 8004e56:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004e5a:	d102      	bne.n	8004e62 <HAL_SPI_Transmit+0x16e>
 8004e5c:	683b      	ldr	r3, [r7, #0]
 8004e5e:	2b00      	cmp	r3, #0
 8004e60:	d106      	bne.n	8004e70 <HAL_SPI_Transmit+0x17c>
 8004e62:	2303      	movs	r3, #3
 8004e64:	77fb      	strb	r3, [r7, #31]
 8004e66:	68fb      	ldr	r3, [r7, #12]
 8004e68:	2201      	movs	r2, #1
 8004e6a:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8004e6e:	e07b      	b.n	8004f68 <HAL_SPI_Transmit+0x274>
 8004e70:	68fb      	ldr	r3, [r7, #12]
 8004e72:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8004e74:	b29b      	uxth	r3, r3
 8004e76:	2b00      	cmp	r3, #0
 8004e78:	d1ca      	bne.n	8004e10 <HAL_SPI_Transmit+0x11c>
 8004e7a:	e050      	b.n	8004f1e <HAL_SPI_Transmit+0x22a>
 8004e7c:	68fb      	ldr	r3, [r7, #12]
 8004e7e:	685b      	ldr	r3, [r3, #4]
 8004e80:	2b00      	cmp	r3, #0
 8004e82:	d002      	beq.n	8004e8a <HAL_SPI_Transmit+0x196>
 8004e84:	8afb      	ldrh	r3, [r7, #22]
 8004e86:	2b01      	cmp	r3, #1
 8004e88:	d144      	bne.n	8004f14 <HAL_SPI_Transmit+0x220>
 8004e8a:	68fb      	ldr	r3, [r7, #12]
 8004e8c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004e8e:	68fb      	ldr	r3, [r7, #12]
 8004e90:	681b      	ldr	r3, [r3, #0]
 8004e92:	330c      	adds	r3, #12
 8004e94:	7812      	ldrb	r2, [r2, #0]
 8004e96:	701a      	strb	r2, [r3, #0]
 8004e98:	68fb      	ldr	r3, [r7, #12]
 8004e9a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004e9c:	1c5a      	adds	r2, r3, #1
 8004e9e:	68fb      	ldr	r3, [r7, #12]
 8004ea0:	631a      	str	r2, [r3, #48]	; 0x30
 8004ea2:	68fb      	ldr	r3, [r7, #12]
 8004ea4:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8004ea6:	b29b      	uxth	r3, r3
 8004ea8:	3b01      	subs	r3, #1
 8004eaa:	b29a      	uxth	r2, r3
 8004eac:	68fb      	ldr	r3, [r7, #12]
 8004eae:	86da      	strh	r2, [r3, #54]	; 0x36
 8004eb0:	e030      	b.n	8004f14 <HAL_SPI_Transmit+0x220>
 8004eb2:	68fb      	ldr	r3, [r7, #12]
 8004eb4:	681b      	ldr	r3, [r3, #0]
 8004eb6:	689b      	ldr	r3, [r3, #8]
 8004eb8:	f003 0302 	and.w	r3, r3, #2
 8004ebc:	2b02      	cmp	r3, #2
 8004ebe:	d113      	bne.n	8004ee8 <HAL_SPI_Transmit+0x1f4>
 8004ec0:	68fb      	ldr	r3, [r7, #12]
 8004ec2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004ec4:	68fb      	ldr	r3, [r7, #12]
 8004ec6:	681b      	ldr	r3, [r3, #0]
 8004ec8:	330c      	adds	r3, #12
 8004eca:	7812      	ldrb	r2, [r2, #0]
 8004ecc:	701a      	strb	r2, [r3, #0]
 8004ece:	68fb      	ldr	r3, [r7, #12]
 8004ed0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004ed2:	1c5a      	adds	r2, r3, #1
 8004ed4:	68fb      	ldr	r3, [r7, #12]
 8004ed6:	631a      	str	r2, [r3, #48]	; 0x30
 8004ed8:	68fb      	ldr	r3, [r7, #12]
 8004eda:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8004edc:	b29b      	uxth	r3, r3
 8004ede:	3b01      	subs	r3, #1
 8004ee0:	b29a      	uxth	r2, r3
 8004ee2:	68fb      	ldr	r3, [r7, #12]
 8004ee4:	86da      	strh	r2, [r3, #54]	; 0x36
 8004ee6:	e015      	b.n	8004f14 <HAL_SPI_Transmit+0x220>
 8004ee8:	f7fe fcea 	bl	80038c0 <HAL_GetTick>
 8004eec:	4602      	mov	r2, r0
 8004eee:	69bb      	ldr	r3, [r7, #24]
 8004ef0:	1ad3      	subs	r3, r2, r3
 8004ef2:	683a      	ldr	r2, [r7, #0]
 8004ef4:	429a      	cmp	r2, r3
 8004ef6:	d803      	bhi.n	8004f00 <HAL_SPI_Transmit+0x20c>
 8004ef8:	683b      	ldr	r3, [r7, #0]
 8004efa:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004efe:	d102      	bne.n	8004f06 <HAL_SPI_Transmit+0x212>
 8004f00:	683b      	ldr	r3, [r7, #0]
 8004f02:	2b00      	cmp	r3, #0
 8004f04:	d106      	bne.n	8004f14 <HAL_SPI_Transmit+0x220>
 8004f06:	2303      	movs	r3, #3
 8004f08:	77fb      	strb	r3, [r7, #31]
 8004f0a:	68fb      	ldr	r3, [r7, #12]
 8004f0c:	2201      	movs	r2, #1
 8004f0e:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8004f12:	e029      	b.n	8004f68 <HAL_SPI_Transmit+0x274>
 8004f14:	68fb      	ldr	r3, [r7, #12]
 8004f16:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8004f18:	b29b      	uxth	r3, r3
 8004f1a:	2b00      	cmp	r3, #0
 8004f1c:	d1c9      	bne.n	8004eb2 <HAL_SPI_Transmit+0x1be>
 8004f1e:	69ba      	ldr	r2, [r7, #24]
 8004f20:	6839      	ldr	r1, [r7, #0]
 8004f22:	68f8      	ldr	r0, [r7, #12]
 8004f24:	f000 fbcc 	bl	80056c0 <SPI_EndRxTxTransaction>
 8004f28:	4603      	mov	r3, r0
 8004f2a:	2b00      	cmp	r3, #0
 8004f2c:	d002      	beq.n	8004f34 <HAL_SPI_Transmit+0x240>
 8004f2e:	68fb      	ldr	r3, [r7, #12]
 8004f30:	2220      	movs	r2, #32
 8004f32:	655a      	str	r2, [r3, #84]	; 0x54
 8004f34:	68fb      	ldr	r3, [r7, #12]
 8004f36:	689b      	ldr	r3, [r3, #8]
 8004f38:	2b00      	cmp	r3, #0
 8004f3a:	d10a      	bne.n	8004f52 <HAL_SPI_Transmit+0x25e>
 8004f3c:	2300      	movs	r3, #0
 8004f3e:	613b      	str	r3, [r7, #16]
 8004f40:	68fb      	ldr	r3, [r7, #12]
 8004f42:	681b      	ldr	r3, [r3, #0]
 8004f44:	68db      	ldr	r3, [r3, #12]
 8004f46:	613b      	str	r3, [r7, #16]
 8004f48:	68fb      	ldr	r3, [r7, #12]
 8004f4a:	681b      	ldr	r3, [r3, #0]
 8004f4c:	689b      	ldr	r3, [r3, #8]
 8004f4e:	613b      	str	r3, [r7, #16]
 8004f50:	693b      	ldr	r3, [r7, #16]
 8004f52:	68fb      	ldr	r3, [r7, #12]
 8004f54:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004f56:	2b00      	cmp	r3, #0
 8004f58:	d002      	beq.n	8004f60 <HAL_SPI_Transmit+0x26c>
 8004f5a:	2301      	movs	r3, #1
 8004f5c:	77fb      	strb	r3, [r7, #31]
 8004f5e:	e003      	b.n	8004f68 <HAL_SPI_Transmit+0x274>
 8004f60:	68fb      	ldr	r3, [r7, #12]
 8004f62:	2201      	movs	r2, #1
 8004f64:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8004f68:	68fb      	ldr	r3, [r7, #12]
 8004f6a:	2200      	movs	r2, #0
 8004f6c:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8004f70:	7ffb      	ldrb	r3, [r7, #31]
 8004f72:	4618      	mov	r0, r3
 8004f74:	3720      	adds	r7, #32
 8004f76:	46bd      	mov	sp, r7
 8004f78:	bd80      	pop	{r7, pc}

08004f7a <HAL_SPI_Receive>:
 8004f7a:	b580      	push	{r7, lr}
 8004f7c:	b088      	sub	sp, #32
 8004f7e:	af02      	add	r7, sp, #8
 8004f80:	60f8      	str	r0, [r7, #12]
 8004f82:	60b9      	str	r1, [r7, #8]
 8004f84:	603b      	str	r3, [r7, #0]
 8004f86:	4613      	mov	r3, r2
 8004f88:	80fb      	strh	r3, [r7, #6]
 8004f8a:	2300      	movs	r3, #0
 8004f8c:	75fb      	strb	r3, [r7, #23]
 8004f8e:	68fb      	ldr	r3, [r7, #12]
 8004f90:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8004f94:	b2db      	uxtb	r3, r3
 8004f96:	2b01      	cmp	r3, #1
 8004f98:	d002      	beq.n	8004fa0 <HAL_SPI_Receive+0x26>
 8004f9a:	2302      	movs	r3, #2
 8004f9c:	75fb      	strb	r3, [r7, #23]
 8004f9e:	e0fb      	b.n	8005198 <HAL_SPI_Receive+0x21e>
 8004fa0:	68fb      	ldr	r3, [r7, #12]
 8004fa2:	685b      	ldr	r3, [r3, #4]
 8004fa4:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8004fa8:	d112      	bne.n	8004fd0 <HAL_SPI_Receive+0x56>
 8004faa:	68fb      	ldr	r3, [r7, #12]
 8004fac:	689b      	ldr	r3, [r3, #8]
 8004fae:	2b00      	cmp	r3, #0
 8004fb0:	d10e      	bne.n	8004fd0 <HAL_SPI_Receive+0x56>
 8004fb2:	68fb      	ldr	r3, [r7, #12]
 8004fb4:	2204      	movs	r2, #4
 8004fb6:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8004fba:	88fa      	ldrh	r2, [r7, #6]
 8004fbc:	683b      	ldr	r3, [r7, #0]
 8004fbe:	9300      	str	r3, [sp, #0]
 8004fc0:	4613      	mov	r3, r2
 8004fc2:	68ba      	ldr	r2, [r7, #8]
 8004fc4:	68b9      	ldr	r1, [r7, #8]
 8004fc6:	68f8      	ldr	r0, [r7, #12]
 8004fc8:	f000 f8ef 	bl	80051aa <HAL_SPI_TransmitReceive>
 8004fcc:	4603      	mov	r3, r0
 8004fce:	e0e8      	b.n	80051a2 <HAL_SPI_Receive+0x228>
 8004fd0:	68fb      	ldr	r3, [r7, #12]
 8004fd2:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8004fd6:	2b01      	cmp	r3, #1
 8004fd8:	d101      	bne.n	8004fde <HAL_SPI_Receive+0x64>
 8004fda:	2302      	movs	r3, #2
 8004fdc:	e0e1      	b.n	80051a2 <HAL_SPI_Receive+0x228>
 8004fde:	68fb      	ldr	r3, [r7, #12]
 8004fe0:	2201      	movs	r2, #1
 8004fe2:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8004fe6:	f7fe fc6b 	bl	80038c0 <HAL_GetTick>
 8004fea:	6138      	str	r0, [r7, #16]
 8004fec:	68bb      	ldr	r3, [r7, #8]
 8004fee:	2b00      	cmp	r3, #0
 8004ff0:	d002      	beq.n	8004ff8 <HAL_SPI_Receive+0x7e>
 8004ff2:	88fb      	ldrh	r3, [r7, #6]
 8004ff4:	2b00      	cmp	r3, #0
 8004ff6:	d102      	bne.n	8004ffe <HAL_SPI_Receive+0x84>
 8004ff8:	2301      	movs	r3, #1
 8004ffa:	75fb      	strb	r3, [r7, #23]
 8004ffc:	e0cc      	b.n	8005198 <HAL_SPI_Receive+0x21e>
 8004ffe:	68fb      	ldr	r3, [r7, #12]
 8005000:	2204      	movs	r2, #4
 8005002:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8005006:	68fb      	ldr	r3, [r7, #12]
 8005008:	2200      	movs	r2, #0
 800500a:	655a      	str	r2, [r3, #84]	; 0x54
 800500c:	68fb      	ldr	r3, [r7, #12]
 800500e:	68ba      	ldr	r2, [r7, #8]
 8005010:	639a      	str	r2, [r3, #56]	; 0x38
 8005012:	68fb      	ldr	r3, [r7, #12]
 8005014:	88fa      	ldrh	r2, [r7, #6]
 8005016:	879a      	strh	r2, [r3, #60]	; 0x3c
 8005018:	68fb      	ldr	r3, [r7, #12]
 800501a:	88fa      	ldrh	r2, [r7, #6]
 800501c:	87da      	strh	r2, [r3, #62]	; 0x3e
 800501e:	68fb      	ldr	r3, [r7, #12]
 8005020:	2200      	movs	r2, #0
 8005022:	631a      	str	r2, [r3, #48]	; 0x30
 8005024:	68fb      	ldr	r3, [r7, #12]
 8005026:	2200      	movs	r2, #0
 8005028:	869a      	strh	r2, [r3, #52]	; 0x34
 800502a:	68fb      	ldr	r3, [r7, #12]
 800502c:	2200      	movs	r2, #0
 800502e:	86da      	strh	r2, [r3, #54]	; 0x36
 8005030:	68fb      	ldr	r3, [r7, #12]
 8005032:	2200      	movs	r2, #0
 8005034:	641a      	str	r2, [r3, #64]	; 0x40
 8005036:	68fb      	ldr	r3, [r7, #12]
 8005038:	2200      	movs	r2, #0
 800503a:	645a      	str	r2, [r3, #68]	; 0x44
 800503c:	68fb      	ldr	r3, [r7, #12]
 800503e:	689b      	ldr	r3, [r3, #8]
 8005040:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8005044:	d10f      	bne.n	8005066 <HAL_SPI_Receive+0xec>
 8005046:	68fb      	ldr	r3, [r7, #12]
 8005048:	681b      	ldr	r3, [r3, #0]
 800504a:	681a      	ldr	r2, [r3, #0]
 800504c:	68fb      	ldr	r3, [r7, #12]
 800504e:	681b      	ldr	r3, [r3, #0]
 8005050:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8005054:	601a      	str	r2, [r3, #0]
 8005056:	68fb      	ldr	r3, [r7, #12]
 8005058:	681b      	ldr	r3, [r3, #0]
 800505a:	681a      	ldr	r2, [r3, #0]
 800505c:	68fb      	ldr	r3, [r7, #12]
 800505e:	681b      	ldr	r3, [r3, #0]
 8005060:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8005064:	601a      	str	r2, [r3, #0]
 8005066:	68fb      	ldr	r3, [r7, #12]
 8005068:	681b      	ldr	r3, [r3, #0]
 800506a:	681b      	ldr	r3, [r3, #0]
 800506c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005070:	2b40      	cmp	r3, #64	; 0x40
 8005072:	d007      	beq.n	8005084 <HAL_SPI_Receive+0x10a>
 8005074:	68fb      	ldr	r3, [r7, #12]
 8005076:	681b      	ldr	r3, [r3, #0]
 8005078:	681a      	ldr	r2, [r3, #0]
 800507a:	68fb      	ldr	r3, [r7, #12]
 800507c:	681b      	ldr	r3, [r3, #0]
 800507e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8005082:	601a      	str	r2, [r3, #0]
 8005084:	68fb      	ldr	r3, [r7, #12]
 8005086:	68db      	ldr	r3, [r3, #12]
 8005088:	2b00      	cmp	r3, #0
 800508a:	d16a      	bne.n	8005162 <HAL_SPI_Receive+0x1e8>
 800508c:	e032      	b.n	80050f4 <HAL_SPI_Receive+0x17a>
 800508e:	68fb      	ldr	r3, [r7, #12]
 8005090:	681b      	ldr	r3, [r3, #0]
 8005092:	689b      	ldr	r3, [r3, #8]
 8005094:	f003 0301 	and.w	r3, r3, #1
 8005098:	2b01      	cmp	r3, #1
 800509a:	d115      	bne.n	80050c8 <HAL_SPI_Receive+0x14e>
 800509c:	68fb      	ldr	r3, [r7, #12]
 800509e:	681b      	ldr	r3, [r3, #0]
 80050a0:	f103 020c 	add.w	r2, r3, #12
 80050a4:	68fb      	ldr	r3, [r7, #12]
 80050a6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80050a8:	7812      	ldrb	r2, [r2, #0]
 80050aa:	b2d2      	uxtb	r2, r2
 80050ac:	701a      	strb	r2, [r3, #0]
 80050ae:	68fb      	ldr	r3, [r7, #12]
 80050b0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80050b2:	1c5a      	adds	r2, r3, #1
 80050b4:	68fb      	ldr	r3, [r7, #12]
 80050b6:	639a      	str	r2, [r3, #56]	; 0x38
 80050b8:	68fb      	ldr	r3, [r7, #12]
 80050ba:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80050bc:	b29b      	uxth	r3, r3
 80050be:	3b01      	subs	r3, #1
 80050c0:	b29a      	uxth	r2, r3
 80050c2:	68fb      	ldr	r3, [r7, #12]
 80050c4:	87da      	strh	r2, [r3, #62]	; 0x3e
 80050c6:	e015      	b.n	80050f4 <HAL_SPI_Receive+0x17a>
 80050c8:	f7fe fbfa 	bl	80038c0 <HAL_GetTick>
 80050cc:	4602      	mov	r2, r0
 80050ce:	693b      	ldr	r3, [r7, #16]
 80050d0:	1ad3      	subs	r3, r2, r3
 80050d2:	683a      	ldr	r2, [r7, #0]
 80050d4:	429a      	cmp	r2, r3
 80050d6:	d803      	bhi.n	80050e0 <HAL_SPI_Receive+0x166>
 80050d8:	683b      	ldr	r3, [r7, #0]
 80050da:	f1b3 3fff 	cmp.w	r3, #4294967295
 80050de:	d102      	bne.n	80050e6 <HAL_SPI_Receive+0x16c>
 80050e0:	683b      	ldr	r3, [r7, #0]
 80050e2:	2b00      	cmp	r3, #0
 80050e4:	d106      	bne.n	80050f4 <HAL_SPI_Receive+0x17a>
 80050e6:	2303      	movs	r3, #3
 80050e8:	75fb      	strb	r3, [r7, #23]
 80050ea:	68fb      	ldr	r3, [r7, #12]
 80050ec:	2201      	movs	r2, #1
 80050ee:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 80050f2:	e051      	b.n	8005198 <HAL_SPI_Receive+0x21e>
 80050f4:	68fb      	ldr	r3, [r7, #12]
 80050f6:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80050f8:	b29b      	uxth	r3, r3
 80050fa:	2b00      	cmp	r3, #0
 80050fc:	d1c7      	bne.n	800508e <HAL_SPI_Receive+0x114>
 80050fe:	e035      	b.n	800516c <HAL_SPI_Receive+0x1f2>
 8005100:	68fb      	ldr	r3, [r7, #12]
 8005102:	681b      	ldr	r3, [r3, #0]
 8005104:	689b      	ldr	r3, [r3, #8]
 8005106:	f003 0301 	and.w	r3, r3, #1
 800510a:	2b01      	cmp	r3, #1
 800510c:	d113      	bne.n	8005136 <HAL_SPI_Receive+0x1bc>
 800510e:	68fb      	ldr	r3, [r7, #12]
 8005110:	681b      	ldr	r3, [r3, #0]
 8005112:	68da      	ldr	r2, [r3, #12]
 8005114:	68fb      	ldr	r3, [r7, #12]
 8005116:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005118:	b292      	uxth	r2, r2
 800511a:	801a      	strh	r2, [r3, #0]
 800511c:	68fb      	ldr	r3, [r7, #12]
 800511e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005120:	1c9a      	adds	r2, r3, #2
 8005122:	68fb      	ldr	r3, [r7, #12]
 8005124:	639a      	str	r2, [r3, #56]	; 0x38
 8005126:	68fb      	ldr	r3, [r7, #12]
 8005128:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800512a:	b29b      	uxth	r3, r3
 800512c:	3b01      	subs	r3, #1
 800512e:	b29a      	uxth	r2, r3
 8005130:	68fb      	ldr	r3, [r7, #12]
 8005132:	87da      	strh	r2, [r3, #62]	; 0x3e
 8005134:	e015      	b.n	8005162 <HAL_SPI_Receive+0x1e8>
 8005136:	f7fe fbc3 	bl	80038c0 <HAL_GetTick>
 800513a:	4602      	mov	r2, r0
 800513c:	693b      	ldr	r3, [r7, #16]
 800513e:	1ad3      	subs	r3, r2, r3
 8005140:	683a      	ldr	r2, [r7, #0]
 8005142:	429a      	cmp	r2, r3
 8005144:	d803      	bhi.n	800514e <HAL_SPI_Receive+0x1d4>
 8005146:	683b      	ldr	r3, [r7, #0]
 8005148:	f1b3 3fff 	cmp.w	r3, #4294967295
 800514c:	d102      	bne.n	8005154 <HAL_SPI_Receive+0x1da>
 800514e:	683b      	ldr	r3, [r7, #0]
 8005150:	2b00      	cmp	r3, #0
 8005152:	d106      	bne.n	8005162 <HAL_SPI_Receive+0x1e8>
 8005154:	2303      	movs	r3, #3
 8005156:	75fb      	strb	r3, [r7, #23]
 8005158:	68fb      	ldr	r3, [r7, #12]
 800515a:	2201      	movs	r2, #1
 800515c:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8005160:	e01a      	b.n	8005198 <HAL_SPI_Receive+0x21e>
 8005162:	68fb      	ldr	r3, [r7, #12]
 8005164:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8005166:	b29b      	uxth	r3, r3
 8005168:	2b00      	cmp	r3, #0
 800516a:	d1c9      	bne.n	8005100 <HAL_SPI_Receive+0x186>
 800516c:	693a      	ldr	r2, [r7, #16]
 800516e:	6839      	ldr	r1, [r7, #0]
 8005170:	68f8      	ldr	r0, [r7, #12]
 8005172:	f000 fa53 	bl	800561c <SPI_EndRxTransaction>
 8005176:	4603      	mov	r3, r0
 8005178:	2b00      	cmp	r3, #0
 800517a:	d002      	beq.n	8005182 <HAL_SPI_Receive+0x208>
 800517c:	68fb      	ldr	r3, [r7, #12]
 800517e:	2220      	movs	r2, #32
 8005180:	655a      	str	r2, [r3, #84]	; 0x54
 8005182:	68fb      	ldr	r3, [r7, #12]
 8005184:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8005186:	2b00      	cmp	r3, #0
 8005188:	d002      	beq.n	8005190 <HAL_SPI_Receive+0x216>
 800518a:	2301      	movs	r3, #1
 800518c:	75fb      	strb	r3, [r7, #23]
 800518e:	e003      	b.n	8005198 <HAL_SPI_Receive+0x21e>
 8005190:	68fb      	ldr	r3, [r7, #12]
 8005192:	2201      	movs	r2, #1
 8005194:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8005198:	68fb      	ldr	r3, [r7, #12]
 800519a:	2200      	movs	r2, #0
 800519c:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80051a0:	7dfb      	ldrb	r3, [r7, #23]
 80051a2:	4618      	mov	r0, r3
 80051a4:	3718      	adds	r7, #24
 80051a6:	46bd      	mov	sp, r7
 80051a8:	bd80      	pop	{r7, pc}

080051aa <HAL_SPI_TransmitReceive>:
 80051aa:	b580      	push	{r7, lr}
 80051ac:	b08c      	sub	sp, #48	; 0x30
 80051ae:	af00      	add	r7, sp, #0
 80051b0:	60f8      	str	r0, [r7, #12]
 80051b2:	60b9      	str	r1, [r7, #8]
 80051b4:	607a      	str	r2, [r7, #4]
 80051b6:	807b      	strh	r3, [r7, #2]
 80051b8:	2301      	movs	r3, #1
 80051ba:	62fb      	str	r3, [r7, #44]	; 0x2c
 80051bc:	2300      	movs	r3, #0
 80051be:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 80051c2:	68fb      	ldr	r3, [r7, #12]
 80051c4:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 80051c8:	2b01      	cmp	r3, #1
 80051ca:	d101      	bne.n	80051d0 <HAL_SPI_TransmitReceive+0x26>
 80051cc:	2302      	movs	r3, #2
 80051ce:	e198      	b.n	8005502 <HAL_SPI_TransmitReceive+0x358>
 80051d0:	68fb      	ldr	r3, [r7, #12]
 80051d2:	2201      	movs	r2, #1
 80051d4:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80051d8:	f7fe fb72 	bl	80038c0 <HAL_GetTick>
 80051dc:	6278      	str	r0, [r7, #36]	; 0x24
 80051de:	68fb      	ldr	r3, [r7, #12]
 80051e0:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 80051e4:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80051e8:	68fb      	ldr	r3, [r7, #12]
 80051ea:	685b      	ldr	r3, [r3, #4]
 80051ec:	61fb      	str	r3, [r7, #28]
 80051ee:	887b      	ldrh	r3, [r7, #2]
 80051f0:	837b      	strh	r3, [r7, #26]
 80051f2:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 80051f6:	2b01      	cmp	r3, #1
 80051f8:	d00f      	beq.n	800521a <HAL_SPI_TransmitReceive+0x70>
 80051fa:	69fb      	ldr	r3, [r7, #28]
 80051fc:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8005200:	d107      	bne.n	8005212 <HAL_SPI_TransmitReceive+0x68>
 8005202:	68fb      	ldr	r3, [r7, #12]
 8005204:	689b      	ldr	r3, [r3, #8]
 8005206:	2b00      	cmp	r3, #0
 8005208:	d103      	bne.n	8005212 <HAL_SPI_TransmitReceive+0x68>
 800520a:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 800520e:	2b04      	cmp	r3, #4
 8005210:	d003      	beq.n	800521a <HAL_SPI_TransmitReceive+0x70>
 8005212:	2302      	movs	r3, #2
 8005214:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8005218:	e16d      	b.n	80054f6 <HAL_SPI_TransmitReceive+0x34c>
 800521a:	68bb      	ldr	r3, [r7, #8]
 800521c:	2b00      	cmp	r3, #0
 800521e:	d005      	beq.n	800522c <HAL_SPI_TransmitReceive+0x82>
 8005220:	687b      	ldr	r3, [r7, #4]
 8005222:	2b00      	cmp	r3, #0
 8005224:	d002      	beq.n	800522c <HAL_SPI_TransmitReceive+0x82>
 8005226:	887b      	ldrh	r3, [r7, #2]
 8005228:	2b00      	cmp	r3, #0
 800522a:	d103      	bne.n	8005234 <HAL_SPI_TransmitReceive+0x8a>
 800522c:	2301      	movs	r3, #1
 800522e:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8005232:	e160      	b.n	80054f6 <HAL_SPI_TransmitReceive+0x34c>
 8005234:	68fb      	ldr	r3, [r7, #12]
 8005236:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 800523a:	b2db      	uxtb	r3, r3
 800523c:	2b04      	cmp	r3, #4
 800523e:	d003      	beq.n	8005248 <HAL_SPI_TransmitReceive+0x9e>
 8005240:	68fb      	ldr	r3, [r7, #12]
 8005242:	2205      	movs	r2, #5
 8005244:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8005248:	68fb      	ldr	r3, [r7, #12]
 800524a:	2200      	movs	r2, #0
 800524c:	655a      	str	r2, [r3, #84]	; 0x54
 800524e:	68fb      	ldr	r3, [r7, #12]
 8005250:	687a      	ldr	r2, [r7, #4]
 8005252:	639a      	str	r2, [r3, #56]	; 0x38
 8005254:	68fb      	ldr	r3, [r7, #12]
 8005256:	887a      	ldrh	r2, [r7, #2]
 8005258:	87da      	strh	r2, [r3, #62]	; 0x3e
 800525a:	68fb      	ldr	r3, [r7, #12]
 800525c:	887a      	ldrh	r2, [r7, #2]
 800525e:	879a      	strh	r2, [r3, #60]	; 0x3c
 8005260:	68fb      	ldr	r3, [r7, #12]
 8005262:	68ba      	ldr	r2, [r7, #8]
 8005264:	631a      	str	r2, [r3, #48]	; 0x30
 8005266:	68fb      	ldr	r3, [r7, #12]
 8005268:	887a      	ldrh	r2, [r7, #2]
 800526a:	86da      	strh	r2, [r3, #54]	; 0x36
 800526c:	68fb      	ldr	r3, [r7, #12]
 800526e:	887a      	ldrh	r2, [r7, #2]
 8005270:	869a      	strh	r2, [r3, #52]	; 0x34
 8005272:	68fb      	ldr	r3, [r7, #12]
 8005274:	2200      	movs	r2, #0
 8005276:	641a      	str	r2, [r3, #64]	; 0x40
 8005278:	68fb      	ldr	r3, [r7, #12]
 800527a:	2200      	movs	r2, #0
 800527c:	645a      	str	r2, [r3, #68]	; 0x44
 800527e:	68fb      	ldr	r3, [r7, #12]
 8005280:	681b      	ldr	r3, [r3, #0]
 8005282:	681b      	ldr	r3, [r3, #0]
 8005284:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005288:	2b40      	cmp	r3, #64	; 0x40
 800528a:	d007      	beq.n	800529c <HAL_SPI_TransmitReceive+0xf2>
 800528c:	68fb      	ldr	r3, [r7, #12]
 800528e:	681b      	ldr	r3, [r3, #0]
 8005290:	681a      	ldr	r2, [r3, #0]
 8005292:	68fb      	ldr	r3, [r7, #12]
 8005294:	681b      	ldr	r3, [r3, #0]
 8005296:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800529a:	601a      	str	r2, [r3, #0]
 800529c:	68fb      	ldr	r3, [r7, #12]
 800529e:	68db      	ldr	r3, [r3, #12]
 80052a0:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80052a4:	d17c      	bne.n	80053a0 <HAL_SPI_TransmitReceive+0x1f6>
 80052a6:	68fb      	ldr	r3, [r7, #12]
 80052a8:	685b      	ldr	r3, [r3, #4]
 80052aa:	2b00      	cmp	r3, #0
 80052ac:	d002      	beq.n	80052b4 <HAL_SPI_TransmitReceive+0x10a>
 80052ae:	8b7b      	ldrh	r3, [r7, #26]
 80052b0:	2b01      	cmp	r3, #1
 80052b2:	d16a      	bne.n	800538a <HAL_SPI_TransmitReceive+0x1e0>
 80052b4:	68fb      	ldr	r3, [r7, #12]
 80052b6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80052b8:	881a      	ldrh	r2, [r3, #0]
 80052ba:	68fb      	ldr	r3, [r7, #12]
 80052bc:	681b      	ldr	r3, [r3, #0]
 80052be:	60da      	str	r2, [r3, #12]
 80052c0:	68fb      	ldr	r3, [r7, #12]
 80052c2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80052c4:	1c9a      	adds	r2, r3, #2
 80052c6:	68fb      	ldr	r3, [r7, #12]
 80052c8:	631a      	str	r2, [r3, #48]	; 0x30
 80052ca:	68fb      	ldr	r3, [r7, #12]
 80052cc:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80052ce:	b29b      	uxth	r3, r3
 80052d0:	3b01      	subs	r3, #1
 80052d2:	b29a      	uxth	r2, r3
 80052d4:	68fb      	ldr	r3, [r7, #12]
 80052d6:	86da      	strh	r2, [r3, #54]	; 0x36
 80052d8:	e057      	b.n	800538a <HAL_SPI_TransmitReceive+0x1e0>
 80052da:	68fb      	ldr	r3, [r7, #12]
 80052dc:	681b      	ldr	r3, [r3, #0]
 80052de:	689b      	ldr	r3, [r3, #8]
 80052e0:	f003 0302 	and.w	r3, r3, #2
 80052e4:	2b02      	cmp	r3, #2
 80052e6:	d11b      	bne.n	8005320 <HAL_SPI_TransmitReceive+0x176>
 80052e8:	68fb      	ldr	r3, [r7, #12]
 80052ea:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80052ec:	b29b      	uxth	r3, r3
 80052ee:	2b00      	cmp	r3, #0
 80052f0:	d016      	beq.n	8005320 <HAL_SPI_TransmitReceive+0x176>
 80052f2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80052f4:	2b01      	cmp	r3, #1
 80052f6:	d113      	bne.n	8005320 <HAL_SPI_TransmitReceive+0x176>
 80052f8:	68fb      	ldr	r3, [r7, #12]
 80052fa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80052fc:	881a      	ldrh	r2, [r3, #0]
 80052fe:	68fb      	ldr	r3, [r7, #12]
 8005300:	681b      	ldr	r3, [r3, #0]
 8005302:	60da      	str	r2, [r3, #12]
 8005304:	68fb      	ldr	r3, [r7, #12]
 8005306:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005308:	1c9a      	adds	r2, r3, #2
 800530a:	68fb      	ldr	r3, [r7, #12]
 800530c:	631a      	str	r2, [r3, #48]	; 0x30
 800530e:	68fb      	ldr	r3, [r7, #12]
 8005310:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8005312:	b29b      	uxth	r3, r3
 8005314:	3b01      	subs	r3, #1
 8005316:	b29a      	uxth	r2, r3
 8005318:	68fb      	ldr	r3, [r7, #12]
 800531a:	86da      	strh	r2, [r3, #54]	; 0x36
 800531c:	2300      	movs	r3, #0
 800531e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005320:	68fb      	ldr	r3, [r7, #12]
 8005322:	681b      	ldr	r3, [r3, #0]
 8005324:	689b      	ldr	r3, [r3, #8]
 8005326:	f003 0301 	and.w	r3, r3, #1
 800532a:	2b01      	cmp	r3, #1
 800532c:	d119      	bne.n	8005362 <HAL_SPI_TransmitReceive+0x1b8>
 800532e:	68fb      	ldr	r3, [r7, #12]
 8005330:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8005332:	b29b      	uxth	r3, r3
 8005334:	2b00      	cmp	r3, #0
 8005336:	d014      	beq.n	8005362 <HAL_SPI_TransmitReceive+0x1b8>
 8005338:	68fb      	ldr	r3, [r7, #12]
 800533a:	681b      	ldr	r3, [r3, #0]
 800533c:	68da      	ldr	r2, [r3, #12]
 800533e:	68fb      	ldr	r3, [r7, #12]
 8005340:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005342:	b292      	uxth	r2, r2
 8005344:	801a      	strh	r2, [r3, #0]
 8005346:	68fb      	ldr	r3, [r7, #12]
 8005348:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800534a:	1c9a      	adds	r2, r3, #2
 800534c:	68fb      	ldr	r3, [r7, #12]
 800534e:	639a      	str	r2, [r3, #56]	; 0x38
 8005350:	68fb      	ldr	r3, [r7, #12]
 8005352:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8005354:	b29b      	uxth	r3, r3
 8005356:	3b01      	subs	r3, #1
 8005358:	b29a      	uxth	r2, r3
 800535a:	68fb      	ldr	r3, [r7, #12]
 800535c:	87da      	strh	r2, [r3, #62]	; 0x3e
 800535e:	2301      	movs	r3, #1
 8005360:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005362:	f7fe faad 	bl	80038c0 <HAL_GetTick>
 8005366:	4602      	mov	r2, r0
 8005368:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800536a:	1ad3      	subs	r3, r2, r3
 800536c:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800536e:	429a      	cmp	r2, r3
 8005370:	d80b      	bhi.n	800538a <HAL_SPI_TransmitReceive+0x1e0>
 8005372:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8005374:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005378:	d007      	beq.n	800538a <HAL_SPI_TransmitReceive+0x1e0>
 800537a:	2303      	movs	r3, #3
 800537c:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8005380:	68fb      	ldr	r3, [r7, #12]
 8005382:	2201      	movs	r2, #1
 8005384:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8005388:	e0b5      	b.n	80054f6 <HAL_SPI_TransmitReceive+0x34c>
 800538a:	68fb      	ldr	r3, [r7, #12]
 800538c:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800538e:	b29b      	uxth	r3, r3
 8005390:	2b00      	cmp	r3, #0
 8005392:	d1a2      	bne.n	80052da <HAL_SPI_TransmitReceive+0x130>
 8005394:	68fb      	ldr	r3, [r7, #12]
 8005396:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8005398:	b29b      	uxth	r3, r3
 800539a:	2b00      	cmp	r3, #0
 800539c:	d19d      	bne.n	80052da <HAL_SPI_TransmitReceive+0x130>
 800539e:	e080      	b.n	80054a2 <HAL_SPI_TransmitReceive+0x2f8>
 80053a0:	68fb      	ldr	r3, [r7, #12]
 80053a2:	685b      	ldr	r3, [r3, #4]
 80053a4:	2b00      	cmp	r3, #0
 80053a6:	d002      	beq.n	80053ae <HAL_SPI_TransmitReceive+0x204>
 80053a8:	8b7b      	ldrh	r3, [r7, #26]
 80053aa:	2b01      	cmp	r3, #1
 80053ac:	d16f      	bne.n	800548e <HAL_SPI_TransmitReceive+0x2e4>
 80053ae:	68fb      	ldr	r3, [r7, #12]
 80053b0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80053b2:	68fb      	ldr	r3, [r7, #12]
 80053b4:	681b      	ldr	r3, [r3, #0]
 80053b6:	330c      	adds	r3, #12
 80053b8:	7812      	ldrb	r2, [r2, #0]
 80053ba:	701a      	strb	r2, [r3, #0]
 80053bc:	68fb      	ldr	r3, [r7, #12]
 80053be:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80053c0:	1c5a      	adds	r2, r3, #1
 80053c2:	68fb      	ldr	r3, [r7, #12]
 80053c4:	631a      	str	r2, [r3, #48]	; 0x30
 80053c6:	68fb      	ldr	r3, [r7, #12]
 80053c8:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80053ca:	b29b      	uxth	r3, r3
 80053cc:	3b01      	subs	r3, #1
 80053ce:	b29a      	uxth	r2, r3
 80053d0:	68fb      	ldr	r3, [r7, #12]
 80053d2:	86da      	strh	r2, [r3, #54]	; 0x36
 80053d4:	e05b      	b.n	800548e <HAL_SPI_TransmitReceive+0x2e4>
 80053d6:	68fb      	ldr	r3, [r7, #12]
 80053d8:	681b      	ldr	r3, [r3, #0]
 80053da:	689b      	ldr	r3, [r3, #8]
 80053dc:	f003 0302 	and.w	r3, r3, #2
 80053e0:	2b02      	cmp	r3, #2
 80053e2:	d11c      	bne.n	800541e <HAL_SPI_TransmitReceive+0x274>
 80053e4:	68fb      	ldr	r3, [r7, #12]
 80053e6:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 80053e8:	b29b      	uxth	r3, r3
 80053ea:	2b00      	cmp	r3, #0
 80053ec:	d017      	beq.n	800541e <HAL_SPI_TransmitReceive+0x274>
 80053ee:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80053f0:	2b01      	cmp	r3, #1
 80053f2:	d114      	bne.n	800541e <HAL_SPI_TransmitReceive+0x274>
 80053f4:	68fb      	ldr	r3, [r7, #12]
 80053f6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80053f8:	68fb      	ldr	r3, [r7, #12]
 80053fa:	681b      	ldr	r3, [r3, #0]
 80053fc:	330c      	adds	r3, #12
 80053fe:	7812      	ldrb	r2, [r2, #0]
 8005400:	701a      	strb	r2, [r3, #0]
 8005402:	68fb      	ldr	r3, [r7, #12]
 8005404:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005406:	1c5a      	adds	r2, r3, #1
 8005408:	68fb      	ldr	r3, [r7, #12]
 800540a:	631a      	str	r2, [r3, #48]	; 0x30
 800540c:	68fb      	ldr	r3, [r7, #12]
 800540e:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8005410:	b29b      	uxth	r3, r3
 8005412:	3b01      	subs	r3, #1
 8005414:	b29a      	uxth	r2, r3
 8005416:	68fb      	ldr	r3, [r7, #12]
 8005418:	86da      	strh	r2, [r3, #54]	; 0x36
 800541a:	2300      	movs	r3, #0
 800541c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800541e:	68fb      	ldr	r3, [r7, #12]
 8005420:	681b      	ldr	r3, [r3, #0]
 8005422:	689b      	ldr	r3, [r3, #8]
 8005424:	f003 0301 	and.w	r3, r3, #1
 8005428:	2b01      	cmp	r3, #1
 800542a:	d119      	bne.n	8005460 <HAL_SPI_TransmitReceive+0x2b6>
 800542c:	68fb      	ldr	r3, [r7, #12]
 800542e:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8005430:	b29b      	uxth	r3, r3
 8005432:	2b00      	cmp	r3, #0
 8005434:	d014      	beq.n	8005460 <HAL_SPI_TransmitReceive+0x2b6>
 8005436:	68fb      	ldr	r3, [r7, #12]
 8005438:	681b      	ldr	r3, [r3, #0]
 800543a:	68da      	ldr	r2, [r3, #12]
 800543c:	68fb      	ldr	r3, [r7, #12]
 800543e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005440:	b2d2      	uxtb	r2, r2
 8005442:	701a      	strb	r2, [r3, #0]
 8005444:	68fb      	ldr	r3, [r7, #12]
 8005446:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005448:	1c5a      	adds	r2, r3, #1
 800544a:	68fb      	ldr	r3, [r7, #12]
 800544c:	639a      	str	r2, [r3, #56]	; 0x38
 800544e:	68fb      	ldr	r3, [r7, #12]
 8005450:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8005452:	b29b      	uxth	r3, r3
 8005454:	3b01      	subs	r3, #1
 8005456:	b29a      	uxth	r2, r3
 8005458:	68fb      	ldr	r3, [r7, #12]
 800545a:	87da      	strh	r2, [r3, #62]	; 0x3e
 800545c:	2301      	movs	r3, #1
 800545e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005460:	f7fe fa2e 	bl	80038c0 <HAL_GetTick>
 8005464:	4602      	mov	r2, r0
 8005466:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005468:	1ad3      	subs	r3, r2, r3
 800546a:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800546c:	429a      	cmp	r2, r3
 800546e:	d803      	bhi.n	8005478 <HAL_SPI_TransmitReceive+0x2ce>
 8005470:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8005472:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005476:	d102      	bne.n	800547e <HAL_SPI_TransmitReceive+0x2d4>
 8005478:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800547a:	2b00      	cmp	r3, #0
 800547c:	d107      	bne.n	800548e <HAL_SPI_TransmitReceive+0x2e4>
 800547e:	2303      	movs	r3, #3
 8005480:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8005484:	68fb      	ldr	r3, [r7, #12]
 8005486:	2201      	movs	r2, #1
 8005488:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800548c:	e033      	b.n	80054f6 <HAL_SPI_TransmitReceive+0x34c>
 800548e:	68fb      	ldr	r3, [r7, #12]
 8005490:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8005492:	b29b      	uxth	r3, r3
 8005494:	2b00      	cmp	r3, #0
 8005496:	d19e      	bne.n	80053d6 <HAL_SPI_TransmitReceive+0x22c>
 8005498:	68fb      	ldr	r3, [r7, #12]
 800549a:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800549c:	b29b      	uxth	r3, r3
 800549e:	2b00      	cmp	r3, #0
 80054a0:	d199      	bne.n	80053d6 <HAL_SPI_TransmitReceive+0x22c>
 80054a2:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80054a4:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 80054a6:	68f8      	ldr	r0, [r7, #12]
 80054a8:	f000 f90a 	bl	80056c0 <SPI_EndRxTxTransaction>
 80054ac:	4603      	mov	r3, r0
 80054ae:	2b00      	cmp	r3, #0
 80054b0:	d006      	beq.n	80054c0 <HAL_SPI_TransmitReceive+0x316>
 80054b2:	2301      	movs	r3, #1
 80054b4:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 80054b8:	68fb      	ldr	r3, [r7, #12]
 80054ba:	2220      	movs	r2, #32
 80054bc:	655a      	str	r2, [r3, #84]	; 0x54
 80054be:	e01a      	b.n	80054f6 <HAL_SPI_TransmitReceive+0x34c>
 80054c0:	68fb      	ldr	r3, [r7, #12]
 80054c2:	689b      	ldr	r3, [r3, #8]
 80054c4:	2b00      	cmp	r3, #0
 80054c6:	d10a      	bne.n	80054de <HAL_SPI_TransmitReceive+0x334>
 80054c8:	2300      	movs	r3, #0
 80054ca:	617b      	str	r3, [r7, #20]
 80054cc:	68fb      	ldr	r3, [r7, #12]
 80054ce:	681b      	ldr	r3, [r3, #0]
 80054d0:	68db      	ldr	r3, [r3, #12]
 80054d2:	617b      	str	r3, [r7, #20]
 80054d4:	68fb      	ldr	r3, [r7, #12]
 80054d6:	681b      	ldr	r3, [r3, #0]
 80054d8:	689b      	ldr	r3, [r3, #8]
 80054da:	617b      	str	r3, [r7, #20]
 80054dc:	697b      	ldr	r3, [r7, #20]
 80054de:	68fb      	ldr	r3, [r7, #12]
 80054e0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80054e2:	2b00      	cmp	r3, #0
 80054e4:	d003      	beq.n	80054ee <HAL_SPI_TransmitReceive+0x344>
 80054e6:	2301      	movs	r3, #1
 80054e8:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 80054ec:	e003      	b.n	80054f6 <HAL_SPI_TransmitReceive+0x34c>
 80054ee:	68fb      	ldr	r3, [r7, #12]
 80054f0:	2201      	movs	r2, #1
 80054f2:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 80054f6:	68fb      	ldr	r3, [r7, #12]
 80054f8:	2200      	movs	r2, #0
 80054fa:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80054fe:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 8005502:	4618      	mov	r0, r3
 8005504:	3730      	adds	r7, #48	; 0x30
 8005506:	46bd      	mov	sp, r7
 8005508:	bd80      	pop	{r7, pc}
	...

0800550c <SPI_WaitFlagStateUntilTimeout>:
 800550c:	b580      	push	{r7, lr}
 800550e:	b088      	sub	sp, #32
 8005510:	af00      	add	r7, sp, #0
 8005512:	60f8      	str	r0, [r7, #12]
 8005514:	60b9      	str	r1, [r7, #8]
 8005516:	603b      	str	r3, [r7, #0]
 8005518:	4613      	mov	r3, r2
 800551a:	71fb      	strb	r3, [r7, #7]
 800551c:	f7fe f9d0 	bl	80038c0 <HAL_GetTick>
 8005520:	4602      	mov	r2, r0
 8005522:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005524:	1a9b      	subs	r3, r3, r2
 8005526:	683a      	ldr	r2, [r7, #0]
 8005528:	4413      	add	r3, r2
 800552a:	61fb      	str	r3, [r7, #28]
 800552c:	f7fe f9c8 	bl	80038c0 <HAL_GetTick>
 8005530:	61b8      	str	r0, [r7, #24]
 8005532:	4b39      	ldr	r3, [pc, #228]	; (8005618 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 8005534:	681b      	ldr	r3, [r3, #0]
 8005536:	015b      	lsls	r3, r3, #5
 8005538:	0d1b      	lsrs	r3, r3, #20
 800553a:	69fa      	ldr	r2, [r7, #28]
 800553c:	fb02 f303 	mul.w	r3, r2, r3
 8005540:	617b      	str	r3, [r7, #20]
 8005542:	e054      	b.n	80055ee <SPI_WaitFlagStateUntilTimeout+0xe2>
 8005544:	683b      	ldr	r3, [r7, #0]
 8005546:	f1b3 3fff 	cmp.w	r3, #4294967295
 800554a:	d050      	beq.n	80055ee <SPI_WaitFlagStateUntilTimeout+0xe2>
 800554c:	f7fe f9b8 	bl	80038c0 <HAL_GetTick>
 8005550:	4602      	mov	r2, r0
 8005552:	69bb      	ldr	r3, [r7, #24]
 8005554:	1ad3      	subs	r3, r2, r3
 8005556:	69fa      	ldr	r2, [r7, #28]
 8005558:	429a      	cmp	r2, r3
 800555a:	d902      	bls.n	8005562 <SPI_WaitFlagStateUntilTimeout+0x56>
 800555c:	69fb      	ldr	r3, [r7, #28]
 800555e:	2b00      	cmp	r3, #0
 8005560:	d13d      	bne.n	80055de <SPI_WaitFlagStateUntilTimeout+0xd2>
 8005562:	68fb      	ldr	r3, [r7, #12]
 8005564:	681b      	ldr	r3, [r3, #0]
 8005566:	685a      	ldr	r2, [r3, #4]
 8005568:	68fb      	ldr	r3, [r7, #12]
 800556a:	681b      	ldr	r3, [r3, #0]
 800556c:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8005570:	605a      	str	r2, [r3, #4]
 8005572:	68fb      	ldr	r3, [r7, #12]
 8005574:	685b      	ldr	r3, [r3, #4]
 8005576:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800557a:	d111      	bne.n	80055a0 <SPI_WaitFlagStateUntilTimeout+0x94>
 800557c:	68fb      	ldr	r3, [r7, #12]
 800557e:	689b      	ldr	r3, [r3, #8]
 8005580:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8005584:	d004      	beq.n	8005590 <SPI_WaitFlagStateUntilTimeout+0x84>
 8005586:	68fb      	ldr	r3, [r7, #12]
 8005588:	689b      	ldr	r3, [r3, #8]
 800558a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800558e:	d107      	bne.n	80055a0 <SPI_WaitFlagStateUntilTimeout+0x94>
 8005590:	68fb      	ldr	r3, [r7, #12]
 8005592:	681b      	ldr	r3, [r3, #0]
 8005594:	681a      	ldr	r2, [r3, #0]
 8005596:	68fb      	ldr	r3, [r7, #12]
 8005598:	681b      	ldr	r3, [r3, #0]
 800559a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800559e:	601a      	str	r2, [r3, #0]
 80055a0:	68fb      	ldr	r3, [r7, #12]
 80055a2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80055a4:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80055a8:	d10f      	bne.n	80055ca <SPI_WaitFlagStateUntilTimeout+0xbe>
 80055aa:	68fb      	ldr	r3, [r7, #12]
 80055ac:	681b      	ldr	r3, [r3, #0]
 80055ae:	681a      	ldr	r2, [r3, #0]
 80055b0:	68fb      	ldr	r3, [r7, #12]
 80055b2:	681b      	ldr	r3, [r3, #0]
 80055b4:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80055b8:	601a      	str	r2, [r3, #0]
 80055ba:	68fb      	ldr	r3, [r7, #12]
 80055bc:	681b      	ldr	r3, [r3, #0]
 80055be:	681a      	ldr	r2, [r3, #0]
 80055c0:	68fb      	ldr	r3, [r7, #12]
 80055c2:	681b      	ldr	r3, [r3, #0]
 80055c4:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80055c8:	601a      	str	r2, [r3, #0]
 80055ca:	68fb      	ldr	r3, [r7, #12]
 80055cc:	2201      	movs	r2, #1
 80055ce:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 80055d2:	68fb      	ldr	r3, [r7, #12]
 80055d4:	2200      	movs	r2, #0
 80055d6:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80055da:	2303      	movs	r3, #3
 80055dc:	e017      	b.n	800560e <SPI_WaitFlagStateUntilTimeout+0x102>
 80055de:	697b      	ldr	r3, [r7, #20]
 80055e0:	2b00      	cmp	r3, #0
 80055e2:	d101      	bne.n	80055e8 <SPI_WaitFlagStateUntilTimeout+0xdc>
 80055e4:	2300      	movs	r3, #0
 80055e6:	61fb      	str	r3, [r7, #28]
 80055e8:	697b      	ldr	r3, [r7, #20]
 80055ea:	3b01      	subs	r3, #1
 80055ec:	617b      	str	r3, [r7, #20]
 80055ee:	68fb      	ldr	r3, [r7, #12]
 80055f0:	681b      	ldr	r3, [r3, #0]
 80055f2:	689a      	ldr	r2, [r3, #8]
 80055f4:	68bb      	ldr	r3, [r7, #8]
 80055f6:	4013      	ands	r3, r2
 80055f8:	68ba      	ldr	r2, [r7, #8]
 80055fa:	429a      	cmp	r2, r3
 80055fc:	bf0c      	ite	eq
 80055fe:	2301      	moveq	r3, #1
 8005600:	2300      	movne	r3, #0
 8005602:	b2db      	uxtb	r3, r3
 8005604:	461a      	mov	r2, r3
 8005606:	79fb      	ldrb	r3, [r7, #7]
 8005608:	429a      	cmp	r2, r3
 800560a:	d19b      	bne.n	8005544 <SPI_WaitFlagStateUntilTimeout+0x38>
 800560c:	2300      	movs	r3, #0
 800560e:	4618      	mov	r0, r3
 8005610:	3720      	adds	r7, #32
 8005612:	46bd      	mov	sp, r7
 8005614:	bd80      	pop	{r7, pc}
 8005616:	bf00      	nop
 8005618:	20000064 	.word	0x20000064

0800561c <SPI_EndRxTransaction>:
 800561c:	b580      	push	{r7, lr}
 800561e:	b086      	sub	sp, #24
 8005620:	af02      	add	r7, sp, #8
 8005622:	60f8      	str	r0, [r7, #12]
 8005624:	60b9      	str	r1, [r7, #8]
 8005626:	607a      	str	r2, [r7, #4]
 8005628:	68fb      	ldr	r3, [r7, #12]
 800562a:	685b      	ldr	r3, [r3, #4]
 800562c:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8005630:	d111      	bne.n	8005656 <SPI_EndRxTransaction+0x3a>
 8005632:	68fb      	ldr	r3, [r7, #12]
 8005634:	689b      	ldr	r3, [r3, #8]
 8005636:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800563a:	d004      	beq.n	8005646 <SPI_EndRxTransaction+0x2a>
 800563c:	68fb      	ldr	r3, [r7, #12]
 800563e:	689b      	ldr	r3, [r3, #8]
 8005640:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8005644:	d107      	bne.n	8005656 <SPI_EndRxTransaction+0x3a>
 8005646:	68fb      	ldr	r3, [r7, #12]
 8005648:	681b      	ldr	r3, [r3, #0]
 800564a:	681a      	ldr	r2, [r3, #0]
 800564c:	68fb      	ldr	r3, [r7, #12]
 800564e:	681b      	ldr	r3, [r3, #0]
 8005650:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8005654:	601a      	str	r2, [r3, #0]
 8005656:	68fb      	ldr	r3, [r7, #12]
 8005658:	685b      	ldr	r3, [r3, #4]
 800565a:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800565e:	d117      	bne.n	8005690 <SPI_EndRxTransaction+0x74>
 8005660:	68fb      	ldr	r3, [r7, #12]
 8005662:	689b      	ldr	r3, [r3, #8]
 8005664:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8005668:	d112      	bne.n	8005690 <SPI_EndRxTransaction+0x74>
 800566a:	687b      	ldr	r3, [r7, #4]
 800566c:	9300      	str	r3, [sp, #0]
 800566e:	68bb      	ldr	r3, [r7, #8]
 8005670:	2200      	movs	r2, #0
 8005672:	2101      	movs	r1, #1
 8005674:	68f8      	ldr	r0, [r7, #12]
 8005676:	f7ff ff49 	bl	800550c <SPI_WaitFlagStateUntilTimeout>
 800567a:	4603      	mov	r3, r0
 800567c:	2b00      	cmp	r3, #0
 800567e:	d01a      	beq.n	80056b6 <SPI_EndRxTransaction+0x9a>
 8005680:	68fb      	ldr	r3, [r7, #12]
 8005682:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8005684:	f043 0220 	orr.w	r2, r3, #32
 8005688:	68fb      	ldr	r3, [r7, #12]
 800568a:	655a      	str	r2, [r3, #84]	; 0x54
 800568c:	2303      	movs	r3, #3
 800568e:	e013      	b.n	80056b8 <SPI_EndRxTransaction+0x9c>
 8005690:	687b      	ldr	r3, [r7, #4]
 8005692:	9300      	str	r3, [sp, #0]
 8005694:	68bb      	ldr	r3, [r7, #8]
 8005696:	2200      	movs	r2, #0
 8005698:	2180      	movs	r1, #128	; 0x80
 800569a:	68f8      	ldr	r0, [r7, #12]
 800569c:	f7ff ff36 	bl	800550c <SPI_WaitFlagStateUntilTimeout>
 80056a0:	4603      	mov	r3, r0
 80056a2:	2b00      	cmp	r3, #0
 80056a4:	d007      	beq.n	80056b6 <SPI_EndRxTransaction+0x9a>
 80056a6:	68fb      	ldr	r3, [r7, #12]
 80056a8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80056aa:	f043 0220 	orr.w	r2, r3, #32
 80056ae:	68fb      	ldr	r3, [r7, #12]
 80056b0:	655a      	str	r2, [r3, #84]	; 0x54
 80056b2:	2303      	movs	r3, #3
 80056b4:	e000      	b.n	80056b8 <SPI_EndRxTransaction+0x9c>
 80056b6:	2300      	movs	r3, #0
 80056b8:	4618      	mov	r0, r3
 80056ba:	3710      	adds	r7, #16
 80056bc:	46bd      	mov	sp, r7
 80056be:	bd80      	pop	{r7, pc}

080056c0 <SPI_EndRxTxTransaction>:
 80056c0:	b580      	push	{r7, lr}
 80056c2:	b086      	sub	sp, #24
 80056c4:	af02      	add	r7, sp, #8
 80056c6:	60f8      	str	r0, [r7, #12]
 80056c8:	60b9      	str	r1, [r7, #8]
 80056ca:	607a      	str	r2, [r7, #4]
 80056cc:	687b      	ldr	r3, [r7, #4]
 80056ce:	9300      	str	r3, [sp, #0]
 80056d0:	68bb      	ldr	r3, [r7, #8]
 80056d2:	2200      	movs	r2, #0
 80056d4:	2180      	movs	r1, #128	; 0x80
 80056d6:	68f8      	ldr	r0, [r7, #12]
 80056d8:	f7ff ff18 	bl	800550c <SPI_WaitFlagStateUntilTimeout>
 80056dc:	4603      	mov	r3, r0
 80056de:	2b00      	cmp	r3, #0
 80056e0:	d007      	beq.n	80056f2 <SPI_EndRxTxTransaction+0x32>
 80056e2:	68fb      	ldr	r3, [r7, #12]
 80056e4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80056e6:	f043 0220 	orr.w	r2, r3, #32
 80056ea:	68fb      	ldr	r3, [r7, #12]
 80056ec:	655a      	str	r2, [r3, #84]	; 0x54
 80056ee:	2303      	movs	r3, #3
 80056f0:	e000      	b.n	80056f4 <SPI_EndRxTxTransaction+0x34>
 80056f2:	2300      	movs	r3, #0
 80056f4:	4618      	mov	r0, r3
 80056f6:	3710      	adds	r7, #16
 80056f8:	46bd      	mov	sp, r7
 80056fa:	bd80      	pop	{r7, pc}

080056fc <HAL_TIM_Base_Init>:
 80056fc:	b580      	push	{r7, lr}
 80056fe:	b082      	sub	sp, #8
 8005700:	af00      	add	r7, sp, #0
 8005702:	6078      	str	r0, [r7, #4]
 8005704:	687b      	ldr	r3, [r7, #4]
 8005706:	2b00      	cmp	r3, #0
 8005708:	d101      	bne.n	800570e <HAL_TIM_Base_Init+0x12>
 800570a:	2301      	movs	r3, #1
 800570c:	e041      	b.n	8005792 <HAL_TIM_Base_Init+0x96>
 800570e:	687b      	ldr	r3, [r7, #4]
 8005710:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005714:	b2db      	uxtb	r3, r3
 8005716:	2b00      	cmp	r3, #0
 8005718:	d106      	bne.n	8005728 <HAL_TIM_Base_Init+0x2c>
 800571a:	687b      	ldr	r3, [r7, #4]
 800571c:	2200      	movs	r2, #0
 800571e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005722:	6878      	ldr	r0, [r7, #4]
 8005724:	f7fd ff88 	bl	8003638 <HAL_TIM_Base_MspInit>
 8005728:	687b      	ldr	r3, [r7, #4]
 800572a:	2202      	movs	r2, #2
 800572c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005730:	687b      	ldr	r3, [r7, #4]
 8005732:	681a      	ldr	r2, [r3, #0]
 8005734:	687b      	ldr	r3, [r7, #4]
 8005736:	3304      	adds	r3, #4
 8005738:	4619      	mov	r1, r3
 800573a:	4610      	mov	r0, r2
 800573c:	f000 fd70 	bl	8006220 <TIM_Base_SetConfig>
 8005740:	687b      	ldr	r3, [r7, #4]
 8005742:	2201      	movs	r2, #1
 8005744:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8005748:	687b      	ldr	r3, [r7, #4]
 800574a:	2201      	movs	r2, #1
 800574c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005750:	687b      	ldr	r3, [r7, #4]
 8005752:	2201      	movs	r2, #1
 8005754:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8005758:	687b      	ldr	r3, [r7, #4]
 800575a:	2201      	movs	r2, #1
 800575c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8005760:	687b      	ldr	r3, [r7, #4]
 8005762:	2201      	movs	r2, #1
 8005764:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8005768:	687b      	ldr	r3, [r7, #4]
 800576a:	2201      	movs	r2, #1
 800576c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8005770:	687b      	ldr	r3, [r7, #4]
 8005772:	2201      	movs	r2, #1
 8005774:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8005778:	687b      	ldr	r3, [r7, #4]
 800577a:	2201      	movs	r2, #1
 800577c:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8005780:	687b      	ldr	r3, [r7, #4]
 8005782:	2201      	movs	r2, #1
 8005784:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8005788:	687b      	ldr	r3, [r7, #4]
 800578a:	2201      	movs	r2, #1
 800578c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005790:	2300      	movs	r3, #0
 8005792:	4618      	mov	r0, r3
 8005794:	3708      	adds	r7, #8
 8005796:	46bd      	mov	sp, r7
 8005798:	bd80      	pop	{r7, pc}
	...

0800579c <HAL_TIM_Base_Start_IT>:
 800579c:	b480      	push	{r7}
 800579e:	b085      	sub	sp, #20
 80057a0:	af00      	add	r7, sp, #0
 80057a2:	6078      	str	r0, [r7, #4]
 80057a4:	687b      	ldr	r3, [r7, #4]
 80057a6:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80057aa:	b2db      	uxtb	r3, r3
 80057ac:	2b01      	cmp	r3, #1
 80057ae:	d001      	beq.n	80057b4 <HAL_TIM_Base_Start_IT+0x18>
 80057b0:	2301      	movs	r3, #1
 80057b2:	e03f      	b.n	8005834 <HAL_TIM_Base_Start_IT+0x98>
 80057b4:	687b      	ldr	r3, [r7, #4]
 80057b6:	2202      	movs	r2, #2
 80057b8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80057bc:	687b      	ldr	r3, [r7, #4]
 80057be:	681b      	ldr	r3, [r3, #0]
 80057c0:	68da      	ldr	r2, [r3, #12]
 80057c2:	687b      	ldr	r3, [r7, #4]
 80057c4:	681b      	ldr	r3, [r3, #0]
 80057c6:	f042 0201 	orr.w	r2, r2, #1
 80057ca:	60da      	str	r2, [r3, #12]
 80057cc:	687b      	ldr	r3, [r7, #4]
 80057ce:	681b      	ldr	r3, [r3, #0]
 80057d0:	4a1b      	ldr	r2, [pc, #108]	; (8005840 <HAL_TIM_Base_Start_IT+0xa4>)
 80057d2:	4293      	cmp	r3, r2
 80057d4:	d013      	beq.n	80057fe <HAL_TIM_Base_Start_IT+0x62>
 80057d6:	687b      	ldr	r3, [r7, #4]
 80057d8:	681b      	ldr	r3, [r3, #0]
 80057da:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80057de:	d00e      	beq.n	80057fe <HAL_TIM_Base_Start_IT+0x62>
 80057e0:	687b      	ldr	r3, [r7, #4]
 80057e2:	681b      	ldr	r3, [r3, #0]
 80057e4:	4a17      	ldr	r2, [pc, #92]	; (8005844 <HAL_TIM_Base_Start_IT+0xa8>)
 80057e6:	4293      	cmp	r3, r2
 80057e8:	d009      	beq.n	80057fe <HAL_TIM_Base_Start_IT+0x62>
 80057ea:	687b      	ldr	r3, [r7, #4]
 80057ec:	681b      	ldr	r3, [r3, #0]
 80057ee:	4a16      	ldr	r2, [pc, #88]	; (8005848 <HAL_TIM_Base_Start_IT+0xac>)
 80057f0:	4293      	cmp	r3, r2
 80057f2:	d004      	beq.n	80057fe <HAL_TIM_Base_Start_IT+0x62>
 80057f4:	687b      	ldr	r3, [r7, #4]
 80057f6:	681b      	ldr	r3, [r3, #0]
 80057f8:	4a14      	ldr	r2, [pc, #80]	; (800584c <HAL_TIM_Base_Start_IT+0xb0>)
 80057fa:	4293      	cmp	r3, r2
 80057fc:	d111      	bne.n	8005822 <HAL_TIM_Base_Start_IT+0x86>
 80057fe:	687b      	ldr	r3, [r7, #4]
 8005800:	681b      	ldr	r3, [r3, #0]
 8005802:	689b      	ldr	r3, [r3, #8]
 8005804:	f003 0307 	and.w	r3, r3, #7
 8005808:	60fb      	str	r3, [r7, #12]
 800580a:	68fb      	ldr	r3, [r7, #12]
 800580c:	2b06      	cmp	r3, #6
 800580e:	d010      	beq.n	8005832 <HAL_TIM_Base_Start_IT+0x96>
 8005810:	687b      	ldr	r3, [r7, #4]
 8005812:	681b      	ldr	r3, [r3, #0]
 8005814:	681a      	ldr	r2, [r3, #0]
 8005816:	687b      	ldr	r3, [r7, #4]
 8005818:	681b      	ldr	r3, [r3, #0]
 800581a:	f042 0201 	orr.w	r2, r2, #1
 800581e:	601a      	str	r2, [r3, #0]
 8005820:	e007      	b.n	8005832 <HAL_TIM_Base_Start_IT+0x96>
 8005822:	687b      	ldr	r3, [r7, #4]
 8005824:	681b      	ldr	r3, [r3, #0]
 8005826:	681a      	ldr	r2, [r3, #0]
 8005828:	687b      	ldr	r3, [r7, #4]
 800582a:	681b      	ldr	r3, [r3, #0]
 800582c:	f042 0201 	orr.w	r2, r2, #1
 8005830:	601a      	str	r2, [r3, #0]
 8005832:	2300      	movs	r3, #0
 8005834:	4618      	mov	r0, r3
 8005836:	3714      	adds	r7, #20
 8005838:	46bd      	mov	sp, r7
 800583a:	bc80      	pop	{r7}
 800583c:	4770      	bx	lr
 800583e:	bf00      	nop
 8005840:	40012c00 	.word	0x40012c00
 8005844:	40000400 	.word	0x40000400
 8005848:	40000800 	.word	0x40000800
 800584c:	40000c00 	.word	0x40000c00

08005850 <HAL_TIM_PWM_Init>:
 8005850:	b580      	push	{r7, lr}
 8005852:	b082      	sub	sp, #8
 8005854:	af00      	add	r7, sp, #0
 8005856:	6078      	str	r0, [r7, #4]
 8005858:	687b      	ldr	r3, [r7, #4]
 800585a:	2b00      	cmp	r3, #0
 800585c:	d101      	bne.n	8005862 <HAL_TIM_PWM_Init+0x12>
 800585e:	2301      	movs	r3, #1
 8005860:	e041      	b.n	80058e6 <HAL_TIM_PWM_Init+0x96>
 8005862:	687b      	ldr	r3, [r7, #4]
 8005864:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005868:	b2db      	uxtb	r3, r3
 800586a:	2b00      	cmp	r3, #0
 800586c:	d106      	bne.n	800587c <HAL_TIM_PWM_Init+0x2c>
 800586e:	687b      	ldr	r3, [r7, #4]
 8005870:	2200      	movs	r2, #0
 8005872:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005876:	6878      	ldr	r0, [r7, #4]
 8005878:	f000 f839 	bl	80058ee <HAL_TIM_PWM_MspInit>
 800587c:	687b      	ldr	r3, [r7, #4]
 800587e:	2202      	movs	r2, #2
 8005880:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005884:	687b      	ldr	r3, [r7, #4]
 8005886:	681a      	ldr	r2, [r3, #0]
 8005888:	687b      	ldr	r3, [r7, #4]
 800588a:	3304      	adds	r3, #4
 800588c:	4619      	mov	r1, r3
 800588e:	4610      	mov	r0, r2
 8005890:	f000 fcc6 	bl	8006220 <TIM_Base_SetConfig>
 8005894:	687b      	ldr	r3, [r7, #4]
 8005896:	2201      	movs	r2, #1
 8005898:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800589c:	687b      	ldr	r3, [r7, #4]
 800589e:	2201      	movs	r2, #1
 80058a0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80058a4:	687b      	ldr	r3, [r7, #4]
 80058a6:	2201      	movs	r2, #1
 80058a8:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80058ac:	687b      	ldr	r3, [r7, #4]
 80058ae:	2201      	movs	r2, #1
 80058b0:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80058b4:	687b      	ldr	r3, [r7, #4]
 80058b6:	2201      	movs	r2, #1
 80058b8:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80058bc:	687b      	ldr	r3, [r7, #4]
 80058be:	2201      	movs	r2, #1
 80058c0:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80058c4:	687b      	ldr	r3, [r7, #4]
 80058c6:	2201      	movs	r2, #1
 80058c8:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 80058cc:	687b      	ldr	r3, [r7, #4]
 80058ce:	2201      	movs	r2, #1
 80058d0:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80058d4:	687b      	ldr	r3, [r7, #4]
 80058d6:	2201      	movs	r2, #1
 80058d8:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 80058dc:	687b      	ldr	r3, [r7, #4]
 80058de:	2201      	movs	r2, #1
 80058e0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80058e4:	2300      	movs	r3, #0
 80058e6:	4618      	mov	r0, r3
 80058e8:	3708      	adds	r7, #8
 80058ea:	46bd      	mov	sp, r7
 80058ec:	bd80      	pop	{r7, pc}

080058ee <HAL_TIM_PWM_MspInit>:
 80058ee:	b480      	push	{r7}
 80058f0:	b083      	sub	sp, #12
 80058f2:	af00      	add	r7, sp, #0
 80058f4:	6078      	str	r0, [r7, #4]
 80058f6:	bf00      	nop
 80058f8:	370c      	adds	r7, #12
 80058fa:	46bd      	mov	sp, r7
 80058fc:	bc80      	pop	{r7}
 80058fe:	4770      	bx	lr

08005900 <HAL_TIM_PWM_Start>:
 8005900:	b580      	push	{r7, lr}
 8005902:	b084      	sub	sp, #16
 8005904:	af00      	add	r7, sp, #0
 8005906:	6078      	str	r0, [r7, #4]
 8005908:	6039      	str	r1, [r7, #0]
 800590a:	683b      	ldr	r3, [r7, #0]
 800590c:	2b00      	cmp	r3, #0
 800590e:	d109      	bne.n	8005924 <HAL_TIM_PWM_Start+0x24>
 8005910:	687b      	ldr	r3, [r7, #4]
 8005912:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8005916:	b2db      	uxtb	r3, r3
 8005918:	2b01      	cmp	r3, #1
 800591a:	bf14      	ite	ne
 800591c:	2301      	movne	r3, #1
 800591e:	2300      	moveq	r3, #0
 8005920:	b2db      	uxtb	r3, r3
 8005922:	e022      	b.n	800596a <HAL_TIM_PWM_Start+0x6a>
 8005924:	683b      	ldr	r3, [r7, #0]
 8005926:	2b04      	cmp	r3, #4
 8005928:	d109      	bne.n	800593e <HAL_TIM_PWM_Start+0x3e>
 800592a:	687b      	ldr	r3, [r7, #4]
 800592c:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 8005930:	b2db      	uxtb	r3, r3
 8005932:	2b01      	cmp	r3, #1
 8005934:	bf14      	ite	ne
 8005936:	2301      	movne	r3, #1
 8005938:	2300      	moveq	r3, #0
 800593a:	b2db      	uxtb	r3, r3
 800593c:	e015      	b.n	800596a <HAL_TIM_PWM_Start+0x6a>
 800593e:	683b      	ldr	r3, [r7, #0]
 8005940:	2b08      	cmp	r3, #8
 8005942:	d109      	bne.n	8005958 <HAL_TIM_PWM_Start+0x58>
 8005944:	687b      	ldr	r3, [r7, #4]
 8005946:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800594a:	b2db      	uxtb	r3, r3
 800594c:	2b01      	cmp	r3, #1
 800594e:	bf14      	ite	ne
 8005950:	2301      	movne	r3, #1
 8005952:	2300      	moveq	r3, #0
 8005954:	b2db      	uxtb	r3, r3
 8005956:	e008      	b.n	800596a <HAL_TIM_PWM_Start+0x6a>
 8005958:	687b      	ldr	r3, [r7, #4]
 800595a:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800595e:	b2db      	uxtb	r3, r3
 8005960:	2b01      	cmp	r3, #1
 8005962:	bf14      	ite	ne
 8005964:	2301      	movne	r3, #1
 8005966:	2300      	moveq	r3, #0
 8005968:	b2db      	uxtb	r3, r3
 800596a:	2b00      	cmp	r3, #0
 800596c:	d001      	beq.n	8005972 <HAL_TIM_PWM_Start+0x72>
 800596e:	2301      	movs	r3, #1
 8005970:	e063      	b.n	8005a3a <HAL_TIM_PWM_Start+0x13a>
 8005972:	683b      	ldr	r3, [r7, #0]
 8005974:	2b00      	cmp	r3, #0
 8005976:	d104      	bne.n	8005982 <HAL_TIM_PWM_Start+0x82>
 8005978:	687b      	ldr	r3, [r7, #4]
 800597a:	2202      	movs	r2, #2
 800597c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005980:	e013      	b.n	80059aa <HAL_TIM_PWM_Start+0xaa>
 8005982:	683b      	ldr	r3, [r7, #0]
 8005984:	2b04      	cmp	r3, #4
 8005986:	d104      	bne.n	8005992 <HAL_TIM_PWM_Start+0x92>
 8005988:	687b      	ldr	r3, [r7, #4]
 800598a:	2202      	movs	r2, #2
 800598c:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8005990:	e00b      	b.n	80059aa <HAL_TIM_PWM_Start+0xaa>
 8005992:	683b      	ldr	r3, [r7, #0]
 8005994:	2b08      	cmp	r3, #8
 8005996:	d104      	bne.n	80059a2 <HAL_TIM_PWM_Start+0xa2>
 8005998:	687b      	ldr	r3, [r7, #4]
 800599a:	2202      	movs	r2, #2
 800599c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80059a0:	e003      	b.n	80059aa <HAL_TIM_PWM_Start+0xaa>
 80059a2:	687b      	ldr	r3, [r7, #4]
 80059a4:	2202      	movs	r2, #2
 80059a6:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80059aa:	687b      	ldr	r3, [r7, #4]
 80059ac:	681b      	ldr	r3, [r3, #0]
 80059ae:	2201      	movs	r2, #1
 80059b0:	6839      	ldr	r1, [r7, #0]
 80059b2:	4618      	mov	r0, r3
 80059b4:	f000 febe 	bl	8006734 <TIM_CCxChannelCmd>
 80059b8:	687b      	ldr	r3, [r7, #4]
 80059ba:	681b      	ldr	r3, [r3, #0]
 80059bc:	4a21      	ldr	r2, [pc, #132]	; (8005a44 <HAL_TIM_PWM_Start+0x144>)
 80059be:	4293      	cmp	r3, r2
 80059c0:	d107      	bne.n	80059d2 <HAL_TIM_PWM_Start+0xd2>
 80059c2:	687b      	ldr	r3, [r7, #4]
 80059c4:	681b      	ldr	r3, [r3, #0]
 80059c6:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80059c8:	687b      	ldr	r3, [r7, #4]
 80059ca:	681b      	ldr	r3, [r3, #0]
 80059cc:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80059d0:	645a      	str	r2, [r3, #68]	; 0x44
 80059d2:	687b      	ldr	r3, [r7, #4]
 80059d4:	681b      	ldr	r3, [r3, #0]
 80059d6:	4a1b      	ldr	r2, [pc, #108]	; (8005a44 <HAL_TIM_PWM_Start+0x144>)
 80059d8:	4293      	cmp	r3, r2
 80059da:	d013      	beq.n	8005a04 <HAL_TIM_PWM_Start+0x104>
 80059dc:	687b      	ldr	r3, [r7, #4]
 80059de:	681b      	ldr	r3, [r3, #0]
 80059e0:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80059e4:	d00e      	beq.n	8005a04 <HAL_TIM_PWM_Start+0x104>
 80059e6:	687b      	ldr	r3, [r7, #4]
 80059e8:	681b      	ldr	r3, [r3, #0]
 80059ea:	4a17      	ldr	r2, [pc, #92]	; (8005a48 <HAL_TIM_PWM_Start+0x148>)
 80059ec:	4293      	cmp	r3, r2
 80059ee:	d009      	beq.n	8005a04 <HAL_TIM_PWM_Start+0x104>
 80059f0:	687b      	ldr	r3, [r7, #4]
 80059f2:	681b      	ldr	r3, [r3, #0]
 80059f4:	4a15      	ldr	r2, [pc, #84]	; (8005a4c <HAL_TIM_PWM_Start+0x14c>)
 80059f6:	4293      	cmp	r3, r2
 80059f8:	d004      	beq.n	8005a04 <HAL_TIM_PWM_Start+0x104>
 80059fa:	687b      	ldr	r3, [r7, #4]
 80059fc:	681b      	ldr	r3, [r3, #0]
 80059fe:	4a14      	ldr	r2, [pc, #80]	; (8005a50 <HAL_TIM_PWM_Start+0x150>)
 8005a00:	4293      	cmp	r3, r2
 8005a02:	d111      	bne.n	8005a28 <HAL_TIM_PWM_Start+0x128>
 8005a04:	687b      	ldr	r3, [r7, #4]
 8005a06:	681b      	ldr	r3, [r3, #0]
 8005a08:	689b      	ldr	r3, [r3, #8]
 8005a0a:	f003 0307 	and.w	r3, r3, #7
 8005a0e:	60fb      	str	r3, [r7, #12]
 8005a10:	68fb      	ldr	r3, [r7, #12]
 8005a12:	2b06      	cmp	r3, #6
 8005a14:	d010      	beq.n	8005a38 <HAL_TIM_PWM_Start+0x138>
 8005a16:	687b      	ldr	r3, [r7, #4]
 8005a18:	681b      	ldr	r3, [r3, #0]
 8005a1a:	681a      	ldr	r2, [r3, #0]
 8005a1c:	687b      	ldr	r3, [r7, #4]
 8005a1e:	681b      	ldr	r3, [r3, #0]
 8005a20:	f042 0201 	orr.w	r2, r2, #1
 8005a24:	601a      	str	r2, [r3, #0]
 8005a26:	e007      	b.n	8005a38 <HAL_TIM_PWM_Start+0x138>
 8005a28:	687b      	ldr	r3, [r7, #4]
 8005a2a:	681b      	ldr	r3, [r3, #0]
 8005a2c:	681a      	ldr	r2, [r3, #0]
 8005a2e:	687b      	ldr	r3, [r7, #4]
 8005a30:	681b      	ldr	r3, [r3, #0]
 8005a32:	f042 0201 	orr.w	r2, r2, #1
 8005a36:	601a      	str	r2, [r3, #0]
 8005a38:	2300      	movs	r3, #0
 8005a3a:	4618      	mov	r0, r3
 8005a3c:	3710      	adds	r7, #16
 8005a3e:	46bd      	mov	sp, r7
 8005a40:	bd80      	pop	{r7, pc}
 8005a42:	bf00      	nop
 8005a44:	40012c00 	.word	0x40012c00
 8005a48:	40000400 	.word	0x40000400
 8005a4c:	40000800 	.word	0x40000800
 8005a50:	40000c00 	.word	0x40000c00

08005a54 <HAL_TIM_Encoder_Init>:
 8005a54:	b580      	push	{r7, lr}
 8005a56:	b086      	sub	sp, #24
 8005a58:	af00      	add	r7, sp, #0
 8005a5a:	6078      	str	r0, [r7, #4]
 8005a5c:	6039      	str	r1, [r7, #0]
 8005a5e:	687b      	ldr	r3, [r7, #4]
 8005a60:	2b00      	cmp	r3, #0
 8005a62:	d101      	bne.n	8005a68 <HAL_TIM_Encoder_Init+0x14>
 8005a64:	2301      	movs	r3, #1
 8005a66:	e093      	b.n	8005b90 <HAL_TIM_Encoder_Init+0x13c>
 8005a68:	687b      	ldr	r3, [r7, #4]
 8005a6a:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005a6e:	b2db      	uxtb	r3, r3
 8005a70:	2b00      	cmp	r3, #0
 8005a72:	d106      	bne.n	8005a82 <HAL_TIM_Encoder_Init+0x2e>
 8005a74:	687b      	ldr	r3, [r7, #4]
 8005a76:	2200      	movs	r2, #0
 8005a78:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005a7c:	6878      	ldr	r0, [r7, #4]
 8005a7e:	f7fd fd6d 	bl	800355c <HAL_TIM_Encoder_MspInit>
 8005a82:	687b      	ldr	r3, [r7, #4]
 8005a84:	2202      	movs	r2, #2
 8005a86:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005a8a:	687b      	ldr	r3, [r7, #4]
 8005a8c:	681b      	ldr	r3, [r3, #0]
 8005a8e:	689b      	ldr	r3, [r3, #8]
 8005a90:	687a      	ldr	r2, [r7, #4]
 8005a92:	6812      	ldr	r2, [r2, #0]
 8005a94:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8005a98:	f023 0307 	bic.w	r3, r3, #7
 8005a9c:	6093      	str	r3, [r2, #8]
 8005a9e:	687b      	ldr	r3, [r7, #4]
 8005aa0:	681a      	ldr	r2, [r3, #0]
 8005aa2:	687b      	ldr	r3, [r7, #4]
 8005aa4:	3304      	adds	r3, #4
 8005aa6:	4619      	mov	r1, r3
 8005aa8:	4610      	mov	r0, r2
 8005aaa:	f000 fbb9 	bl	8006220 <TIM_Base_SetConfig>
 8005aae:	687b      	ldr	r3, [r7, #4]
 8005ab0:	681b      	ldr	r3, [r3, #0]
 8005ab2:	689b      	ldr	r3, [r3, #8]
 8005ab4:	617b      	str	r3, [r7, #20]
 8005ab6:	687b      	ldr	r3, [r7, #4]
 8005ab8:	681b      	ldr	r3, [r3, #0]
 8005aba:	699b      	ldr	r3, [r3, #24]
 8005abc:	613b      	str	r3, [r7, #16]
 8005abe:	687b      	ldr	r3, [r7, #4]
 8005ac0:	681b      	ldr	r3, [r3, #0]
 8005ac2:	6a1b      	ldr	r3, [r3, #32]
 8005ac4:	60fb      	str	r3, [r7, #12]
 8005ac6:	683b      	ldr	r3, [r7, #0]
 8005ac8:	681b      	ldr	r3, [r3, #0]
 8005aca:	697a      	ldr	r2, [r7, #20]
 8005acc:	4313      	orrs	r3, r2
 8005ace:	617b      	str	r3, [r7, #20]
 8005ad0:	693b      	ldr	r3, [r7, #16]
 8005ad2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8005ad6:	f023 0303 	bic.w	r3, r3, #3
 8005ada:	613b      	str	r3, [r7, #16]
 8005adc:	683b      	ldr	r3, [r7, #0]
 8005ade:	689a      	ldr	r2, [r3, #8]
 8005ae0:	683b      	ldr	r3, [r7, #0]
 8005ae2:	699b      	ldr	r3, [r3, #24]
 8005ae4:	021b      	lsls	r3, r3, #8
 8005ae6:	4313      	orrs	r3, r2
 8005ae8:	693a      	ldr	r2, [r7, #16]
 8005aea:	4313      	orrs	r3, r2
 8005aec:	613b      	str	r3, [r7, #16]
 8005aee:	693b      	ldr	r3, [r7, #16]
 8005af0:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
 8005af4:	f023 030c 	bic.w	r3, r3, #12
 8005af8:	613b      	str	r3, [r7, #16]
 8005afa:	693b      	ldr	r3, [r7, #16]
 8005afc:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8005b00:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8005b04:	613b      	str	r3, [r7, #16]
 8005b06:	683b      	ldr	r3, [r7, #0]
 8005b08:	68da      	ldr	r2, [r3, #12]
 8005b0a:	683b      	ldr	r3, [r7, #0]
 8005b0c:	69db      	ldr	r3, [r3, #28]
 8005b0e:	021b      	lsls	r3, r3, #8
 8005b10:	4313      	orrs	r3, r2
 8005b12:	693a      	ldr	r2, [r7, #16]
 8005b14:	4313      	orrs	r3, r2
 8005b16:	613b      	str	r3, [r7, #16]
 8005b18:	683b      	ldr	r3, [r7, #0]
 8005b1a:	691b      	ldr	r3, [r3, #16]
 8005b1c:	011a      	lsls	r2, r3, #4
 8005b1e:	683b      	ldr	r3, [r7, #0]
 8005b20:	6a1b      	ldr	r3, [r3, #32]
 8005b22:	031b      	lsls	r3, r3, #12
 8005b24:	4313      	orrs	r3, r2
 8005b26:	693a      	ldr	r2, [r7, #16]
 8005b28:	4313      	orrs	r3, r2
 8005b2a:	613b      	str	r3, [r7, #16]
 8005b2c:	68fb      	ldr	r3, [r7, #12]
 8005b2e:	f023 0322 	bic.w	r3, r3, #34	; 0x22
 8005b32:	60fb      	str	r3, [r7, #12]
 8005b34:	683b      	ldr	r3, [r7, #0]
 8005b36:	685a      	ldr	r2, [r3, #4]
 8005b38:	683b      	ldr	r3, [r7, #0]
 8005b3a:	695b      	ldr	r3, [r3, #20]
 8005b3c:	011b      	lsls	r3, r3, #4
 8005b3e:	4313      	orrs	r3, r2
 8005b40:	68fa      	ldr	r2, [r7, #12]
 8005b42:	4313      	orrs	r3, r2
 8005b44:	60fb      	str	r3, [r7, #12]
 8005b46:	687b      	ldr	r3, [r7, #4]
 8005b48:	681b      	ldr	r3, [r3, #0]
 8005b4a:	697a      	ldr	r2, [r7, #20]
 8005b4c:	609a      	str	r2, [r3, #8]
 8005b4e:	687b      	ldr	r3, [r7, #4]
 8005b50:	681b      	ldr	r3, [r3, #0]
 8005b52:	693a      	ldr	r2, [r7, #16]
 8005b54:	619a      	str	r2, [r3, #24]
 8005b56:	687b      	ldr	r3, [r7, #4]
 8005b58:	681b      	ldr	r3, [r3, #0]
 8005b5a:	68fa      	ldr	r2, [r7, #12]
 8005b5c:	621a      	str	r2, [r3, #32]
 8005b5e:	687b      	ldr	r3, [r7, #4]
 8005b60:	2201      	movs	r2, #1
 8005b62:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8005b66:	687b      	ldr	r3, [r7, #4]
 8005b68:	2201      	movs	r2, #1
 8005b6a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005b6e:	687b      	ldr	r3, [r7, #4]
 8005b70:	2201      	movs	r2, #1
 8005b72:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8005b76:	687b      	ldr	r3, [r7, #4]
 8005b78:	2201      	movs	r2, #1
 8005b7a:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8005b7e:	687b      	ldr	r3, [r7, #4]
 8005b80:	2201      	movs	r2, #1
 8005b82:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8005b86:	687b      	ldr	r3, [r7, #4]
 8005b88:	2201      	movs	r2, #1
 8005b8a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005b8e:	2300      	movs	r3, #0
 8005b90:	4618      	mov	r0, r3
 8005b92:	3718      	adds	r7, #24
 8005b94:	46bd      	mov	sp, r7
 8005b96:	bd80      	pop	{r7, pc}

08005b98 <HAL_TIM_Encoder_Start>:
 8005b98:	b580      	push	{r7, lr}
 8005b9a:	b084      	sub	sp, #16
 8005b9c:	af00      	add	r7, sp, #0
 8005b9e:	6078      	str	r0, [r7, #4]
 8005ba0:	6039      	str	r1, [r7, #0]
 8005ba2:	687b      	ldr	r3, [r7, #4]
 8005ba4:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8005ba8:	73fb      	strb	r3, [r7, #15]
 8005baa:	687b      	ldr	r3, [r7, #4]
 8005bac:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 8005bb0:	73bb      	strb	r3, [r7, #14]
 8005bb2:	687b      	ldr	r3, [r7, #4]
 8005bb4:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 8005bb8:	737b      	strb	r3, [r7, #13]
 8005bba:	687b      	ldr	r3, [r7, #4]
 8005bbc:	f893 3043 	ldrb.w	r3, [r3, #67]	; 0x43
 8005bc0:	733b      	strb	r3, [r7, #12]
 8005bc2:	683b      	ldr	r3, [r7, #0]
 8005bc4:	2b00      	cmp	r3, #0
 8005bc6:	d110      	bne.n	8005bea <HAL_TIM_Encoder_Start+0x52>
 8005bc8:	7bfb      	ldrb	r3, [r7, #15]
 8005bca:	2b01      	cmp	r3, #1
 8005bcc:	d102      	bne.n	8005bd4 <HAL_TIM_Encoder_Start+0x3c>
 8005bce:	7b7b      	ldrb	r3, [r7, #13]
 8005bd0:	2b01      	cmp	r3, #1
 8005bd2:	d001      	beq.n	8005bd8 <HAL_TIM_Encoder_Start+0x40>
 8005bd4:	2301      	movs	r3, #1
 8005bd6:	e069      	b.n	8005cac <HAL_TIM_Encoder_Start+0x114>
 8005bd8:	687b      	ldr	r3, [r7, #4]
 8005bda:	2202      	movs	r2, #2
 8005bdc:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005be0:	687b      	ldr	r3, [r7, #4]
 8005be2:	2202      	movs	r2, #2
 8005be4:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8005be8:	e031      	b.n	8005c4e <HAL_TIM_Encoder_Start+0xb6>
 8005bea:	683b      	ldr	r3, [r7, #0]
 8005bec:	2b04      	cmp	r3, #4
 8005bee:	d110      	bne.n	8005c12 <HAL_TIM_Encoder_Start+0x7a>
 8005bf0:	7bbb      	ldrb	r3, [r7, #14]
 8005bf2:	2b01      	cmp	r3, #1
 8005bf4:	d102      	bne.n	8005bfc <HAL_TIM_Encoder_Start+0x64>
 8005bf6:	7b3b      	ldrb	r3, [r7, #12]
 8005bf8:	2b01      	cmp	r3, #1
 8005bfa:	d001      	beq.n	8005c00 <HAL_TIM_Encoder_Start+0x68>
 8005bfc:	2301      	movs	r3, #1
 8005bfe:	e055      	b.n	8005cac <HAL_TIM_Encoder_Start+0x114>
 8005c00:	687b      	ldr	r3, [r7, #4]
 8005c02:	2202      	movs	r2, #2
 8005c04:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8005c08:	687b      	ldr	r3, [r7, #4]
 8005c0a:	2202      	movs	r2, #2
 8005c0c:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8005c10:	e01d      	b.n	8005c4e <HAL_TIM_Encoder_Start+0xb6>
 8005c12:	7bfb      	ldrb	r3, [r7, #15]
 8005c14:	2b01      	cmp	r3, #1
 8005c16:	d108      	bne.n	8005c2a <HAL_TIM_Encoder_Start+0x92>
 8005c18:	7bbb      	ldrb	r3, [r7, #14]
 8005c1a:	2b01      	cmp	r3, #1
 8005c1c:	d105      	bne.n	8005c2a <HAL_TIM_Encoder_Start+0x92>
 8005c1e:	7b7b      	ldrb	r3, [r7, #13]
 8005c20:	2b01      	cmp	r3, #1
 8005c22:	d102      	bne.n	8005c2a <HAL_TIM_Encoder_Start+0x92>
 8005c24:	7b3b      	ldrb	r3, [r7, #12]
 8005c26:	2b01      	cmp	r3, #1
 8005c28:	d001      	beq.n	8005c2e <HAL_TIM_Encoder_Start+0x96>
 8005c2a:	2301      	movs	r3, #1
 8005c2c:	e03e      	b.n	8005cac <HAL_TIM_Encoder_Start+0x114>
 8005c2e:	687b      	ldr	r3, [r7, #4]
 8005c30:	2202      	movs	r2, #2
 8005c32:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005c36:	687b      	ldr	r3, [r7, #4]
 8005c38:	2202      	movs	r2, #2
 8005c3a:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8005c3e:	687b      	ldr	r3, [r7, #4]
 8005c40:	2202      	movs	r2, #2
 8005c42:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8005c46:	687b      	ldr	r3, [r7, #4]
 8005c48:	2202      	movs	r2, #2
 8005c4a:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8005c4e:	683b      	ldr	r3, [r7, #0]
 8005c50:	2b00      	cmp	r3, #0
 8005c52:	d003      	beq.n	8005c5c <HAL_TIM_Encoder_Start+0xc4>
 8005c54:	683b      	ldr	r3, [r7, #0]
 8005c56:	2b04      	cmp	r3, #4
 8005c58:	d008      	beq.n	8005c6c <HAL_TIM_Encoder_Start+0xd4>
 8005c5a:	e00f      	b.n	8005c7c <HAL_TIM_Encoder_Start+0xe4>
 8005c5c:	687b      	ldr	r3, [r7, #4]
 8005c5e:	681b      	ldr	r3, [r3, #0]
 8005c60:	2201      	movs	r2, #1
 8005c62:	2100      	movs	r1, #0
 8005c64:	4618      	mov	r0, r3
 8005c66:	f000 fd65 	bl	8006734 <TIM_CCxChannelCmd>
 8005c6a:	e016      	b.n	8005c9a <HAL_TIM_Encoder_Start+0x102>
 8005c6c:	687b      	ldr	r3, [r7, #4]
 8005c6e:	681b      	ldr	r3, [r3, #0]
 8005c70:	2201      	movs	r2, #1
 8005c72:	2104      	movs	r1, #4
 8005c74:	4618      	mov	r0, r3
 8005c76:	f000 fd5d 	bl	8006734 <TIM_CCxChannelCmd>
 8005c7a:	e00e      	b.n	8005c9a <HAL_TIM_Encoder_Start+0x102>
 8005c7c:	687b      	ldr	r3, [r7, #4]
 8005c7e:	681b      	ldr	r3, [r3, #0]
 8005c80:	2201      	movs	r2, #1
 8005c82:	2100      	movs	r1, #0
 8005c84:	4618      	mov	r0, r3
 8005c86:	f000 fd55 	bl	8006734 <TIM_CCxChannelCmd>
 8005c8a:	687b      	ldr	r3, [r7, #4]
 8005c8c:	681b      	ldr	r3, [r3, #0]
 8005c8e:	2201      	movs	r2, #1
 8005c90:	2104      	movs	r1, #4
 8005c92:	4618      	mov	r0, r3
 8005c94:	f000 fd4e 	bl	8006734 <TIM_CCxChannelCmd>
 8005c98:	bf00      	nop
 8005c9a:	687b      	ldr	r3, [r7, #4]
 8005c9c:	681b      	ldr	r3, [r3, #0]
 8005c9e:	681a      	ldr	r2, [r3, #0]
 8005ca0:	687b      	ldr	r3, [r7, #4]
 8005ca2:	681b      	ldr	r3, [r3, #0]
 8005ca4:	f042 0201 	orr.w	r2, r2, #1
 8005ca8:	601a      	str	r2, [r3, #0]
 8005caa:	2300      	movs	r3, #0
 8005cac:	4618      	mov	r0, r3
 8005cae:	3710      	adds	r7, #16
 8005cb0:	46bd      	mov	sp, r7
 8005cb2:	bd80      	pop	{r7, pc}

08005cb4 <HAL_TIM_IRQHandler>:
 8005cb4:	b580      	push	{r7, lr}
 8005cb6:	b082      	sub	sp, #8
 8005cb8:	af00      	add	r7, sp, #0
 8005cba:	6078      	str	r0, [r7, #4]
 8005cbc:	687b      	ldr	r3, [r7, #4]
 8005cbe:	681b      	ldr	r3, [r3, #0]
 8005cc0:	691b      	ldr	r3, [r3, #16]
 8005cc2:	f003 0302 	and.w	r3, r3, #2
 8005cc6:	2b02      	cmp	r3, #2
 8005cc8:	d122      	bne.n	8005d10 <HAL_TIM_IRQHandler+0x5c>
 8005cca:	687b      	ldr	r3, [r7, #4]
 8005ccc:	681b      	ldr	r3, [r3, #0]
 8005cce:	68db      	ldr	r3, [r3, #12]
 8005cd0:	f003 0302 	and.w	r3, r3, #2
 8005cd4:	2b02      	cmp	r3, #2
 8005cd6:	d11b      	bne.n	8005d10 <HAL_TIM_IRQHandler+0x5c>
 8005cd8:	687b      	ldr	r3, [r7, #4]
 8005cda:	681b      	ldr	r3, [r3, #0]
 8005cdc:	f06f 0202 	mvn.w	r2, #2
 8005ce0:	611a      	str	r2, [r3, #16]
 8005ce2:	687b      	ldr	r3, [r7, #4]
 8005ce4:	2201      	movs	r2, #1
 8005ce6:	771a      	strb	r2, [r3, #28]
 8005ce8:	687b      	ldr	r3, [r7, #4]
 8005cea:	681b      	ldr	r3, [r3, #0]
 8005cec:	699b      	ldr	r3, [r3, #24]
 8005cee:	f003 0303 	and.w	r3, r3, #3
 8005cf2:	2b00      	cmp	r3, #0
 8005cf4:	d003      	beq.n	8005cfe <HAL_TIM_IRQHandler+0x4a>
 8005cf6:	6878      	ldr	r0, [r7, #4]
 8005cf8:	f000 fa76 	bl	80061e8 <HAL_TIM_IC_CaptureCallback>
 8005cfc:	e005      	b.n	8005d0a <HAL_TIM_IRQHandler+0x56>
 8005cfe:	6878      	ldr	r0, [r7, #4]
 8005d00:	f000 fa69 	bl	80061d6 <HAL_TIM_OC_DelayElapsedCallback>
 8005d04:	6878      	ldr	r0, [r7, #4]
 8005d06:	f000 fa78 	bl	80061fa <HAL_TIM_PWM_PulseFinishedCallback>
 8005d0a:	687b      	ldr	r3, [r7, #4]
 8005d0c:	2200      	movs	r2, #0
 8005d0e:	771a      	strb	r2, [r3, #28]
 8005d10:	687b      	ldr	r3, [r7, #4]
 8005d12:	681b      	ldr	r3, [r3, #0]
 8005d14:	691b      	ldr	r3, [r3, #16]
 8005d16:	f003 0304 	and.w	r3, r3, #4
 8005d1a:	2b04      	cmp	r3, #4
 8005d1c:	d122      	bne.n	8005d64 <HAL_TIM_IRQHandler+0xb0>
 8005d1e:	687b      	ldr	r3, [r7, #4]
 8005d20:	681b      	ldr	r3, [r3, #0]
 8005d22:	68db      	ldr	r3, [r3, #12]
 8005d24:	f003 0304 	and.w	r3, r3, #4
 8005d28:	2b04      	cmp	r3, #4
 8005d2a:	d11b      	bne.n	8005d64 <HAL_TIM_IRQHandler+0xb0>
 8005d2c:	687b      	ldr	r3, [r7, #4]
 8005d2e:	681b      	ldr	r3, [r3, #0]
 8005d30:	f06f 0204 	mvn.w	r2, #4
 8005d34:	611a      	str	r2, [r3, #16]
 8005d36:	687b      	ldr	r3, [r7, #4]
 8005d38:	2202      	movs	r2, #2
 8005d3a:	771a      	strb	r2, [r3, #28]
 8005d3c:	687b      	ldr	r3, [r7, #4]
 8005d3e:	681b      	ldr	r3, [r3, #0]
 8005d40:	699b      	ldr	r3, [r3, #24]
 8005d42:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8005d46:	2b00      	cmp	r3, #0
 8005d48:	d003      	beq.n	8005d52 <HAL_TIM_IRQHandler+0x9e>
 8005d4a:	6878      	ldr	r0, [r7, #4]
 8005d4c:	f000 fa4c 	bl	80061e8 <HAL_TIM_IC_CaptureCallback>
 8005d50:	e005      	b.n	8005d5e <HAL_TIM_IRQHandler+0xaa>
 8005d52:	6878      	ldr	r0, [r7, #4]
 8005d54:	f000 fa3f 	bl	80061d6 <HAL_TIM_OC_DelayElapsedCallback>
 8005d58:	6878      	ldr	r0, [r7, #4]
 8005d5a:	f000 fa4e 	bl	80061fa <HAL_TIM_PWM_PulseFinishedCallback>
 8005d5e:	687b      	ldr	r3, [r7, #4]
 8005d60:	2200      	movs	r2, #0
 8005d62:	771a      	strb	r2, [r3, #28]
 8005d64:	687b      	ldr	r3, [r7, #4]
 8005d66:	681b      	ldr	r3, [r3, #0]
 8005d68:	691b      	ldr	r3, [r3, #16]
 8005d6a:	f003 0308 	and.w	r3, r3, #8
 8005d6e:	2b08      	cmp	r3, #8
 8005d70:	d122      	bne.n	8005db8 <HAL_TIM_IRQHandler+0x104>
 8005d72:	687b      	ldr	r3, [r7, #4]
 8005d74:	681b      	ldr	r3, [r3, #0]
 8005d76:	68db      	ldr	r3, [r3, #12]
 8005d78:	f003 0308 	and.w	r3, r3, #8
 8005d7c:	2b08      	cmp	r3, #8
 8005d7e:	d11b      	bne.n	8005db8 <HAL_TIM_IRQHandler+0x104>
 8005d80:	687b      	ldr	r3, [r7, #4]
 8005d82:	681b      	ldr	r3, [r3, #0]
 8005d84:	f06f 0208 	mvn.w	r2, #8
 8005d88:	611a      	str	r2, [r3, #16]
 8005d8a:	687b      	ldr	r3, [r7, #4]
 8005d8c:	2204      	movs	r2, #4
 8005d8e:	771a      	strb	r2, [r3, #28]
 8005d90:	687b      	ldr	r3, [r7, #4]
 8005d92:	681b      	ldr	r3, [r3, #0]
 8005d94:	69db      	ldr	r3, [r3, #28]
 8005d96:	f003 0303 	and.w	r3, r3, #3
 8005d9a:	2b00      	cmp	r3, #0
 8005d9c:	d003      	beq.n	8005da6 <HAL_TIM_IRQHandler+0xf2>
 8005d9e:	6878      	ldr	r0, [r7, #4]
 8005da0:	f000 fa22 	bl	80061e8 <HAL_TIM_IC_CaptureCallback>
 8005da4:	e005      	b.n	8005db2 <HAL_TIM_IRQHandler+0xfe>
 8005da6:	6878      	ldr	r0, [r7, #4]
 8005da8:	f000 fa15 	bl	80061d6 <HAL_TIM_OC_DelayElapsedCallback>
 8005dac:	6878      	ldr	r0, [r7, #4]
 8005dae:	f000 fa24 	bl	80061fa <HAL_TIM_PWM_PulseFinishedCallback>
 8005db2:	687b      	ldr	r3, [r7, #4]
 8005db4:	2200      	movs	r2, #0
 8005db6:	771a      	strb	r2, [r3, #28]
 8005db8:	687b      	ldr	r3, [r7, #4]
 8005dba:	681b      	ldr	r3, [r3, #0]
 8005dbc:	691b      	ldr	r3, [r3, #16]
 8005dbe:	f003 0310 	and.w	r3, r3, #16
 8005dc2:	2b10      	cmp	r3, #16
 8005dc4:	d122      	bne.n	8005e0c <HAL_TIM_IRQHandler+0x158>
 8005dc6:	687b      	ldr	r3, [r7, #4]
 8005dc8:	681b      	ldr	r3, [r3, #0]
 8005dca:	68db      	ldr	r3, [r3, #12]
 8005dcc:	f003 0310 	and.w	r3, r3, #16
 8005dd0:	2b10      	cmp	r3, #16
 8005dd2:	d11b      	bne.n	8005e0c <HAL_TIM_IRQHandler+0x158>
 8005dd4:	687b      	ldr	r3, [r7, #4]
 8005dd6:	681b      	ldr	r3, [r3, #0]
 8005dd8:	f06f 0210 	mvn.w	r2, #16
 8005ddc:	611a      	str	r2, [r3, #16]
 8005dde:	687b      	ldr	r3, [r7, #4]
 8005de0:	2208      	movs	r2, #8
 8005de2:	771a      	strb	r2, [r3, #28]
 8005de4:	687b      	ldr	r3, [r7, #4]
 8005de6:	681b      	ldr	r3, [r3, #0]
 8005de8:	69db      	ldr	r3, [r3, #28]
 8005dea:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8005dee:	2b00      	cmp	r3, #0
 8005df0:	d003      	beq.n	8005dfa <HAL_TIM_IRQHandler+0x146>
 8005df2:	6878      	ldr	r0, [r7, #4]
 8005df4:	f000 f9f8 	bl	80061e8 <HAL_TIM_IC_CaptureCallback>
 8005df8:	e005      	b.n	8005e06 <HAL_TIM_IRQHandler+0x152>
 8005dfa:	6878      	ldr	r0, [r7, #4]
 8005dfc:	f000 f9eb 	bl	80061d6 <HAL_TIM_OC_DelayElapsedCallback>
 8005e00:	6878      	ldr	r0, [r7, #4]
 8005e02:	f000 f9fa 	bl	80061fa <HAL_TIM_PWM_PulseFinishedCallback>
 8005e06:	687b      	ldr	r3, [r7, #4]
 8005e08:	2200      	movs	r2, #0
 8005e0a:	771a      	strb	r2, [r3, #28]
 8005e0c:	687b      	ldr	r3, [r7, #4]
 8005e0e:	681b      	ldr	r3, [r3, #0]
 8005e10:	691b      	ldr	r3, [r3, #16]
 8005e12:	f003 0301 	and.w	r3, r3, #1
 8005e16:	2b01      	cmp	r3, #1
 8005e18:	d10e      	bne.n	8005e38 <HAL_TIM_IRQHandler+0x184>
 8005e1a:	687b      	ldr	r3, [r7, #4]
 8005e1c:	681b      	ldr	r3, [r3, #0]
 8005e1e:	68db      	ldr	r3, [r3, #12]
 8005e20:	f003 0301 	and.w	r3, r3, #1
 8005e24:	2b01      	cmp	r3, #1
 8005e26:	d107      	bne.n	8005e38 <HAL_TIM_IRQHandler+0x184>
 8005e28:	687b      	ldr	r3, [r7, #4]
 8005e2a:	681b      	ldr	r3, [r3, #0]
 8005e2c:	f06f 0201 	mvn.w	r2, #1
 8005e30:	611a      	str	r2, [r3, #16]
 8005e32:	6878      	ldr	r0, [r7, #4]
 8005e34:	f7fc f864 	bl	8001f00 <HAL_TIM_PeriodElapsedCallback>
 8005e38:	687b      	ldr	r3, [r7, #4]
 8005e3a:	681b      	ldr	r3, [r3, #0]
 8005e3c:	691b      	ldr	r3, [r3, #16]
 8005e3e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005e42:	2b80      	cmp	r3, #128	; 0x80
 8005e44:	d10e      	bne.n	8005e64 <HAL_TIM_IRQHandler+0x1b0>
 8005e46:	687b      	ldr	r3, [r7, #4]
 8005e48:	681b      	ldr	r3, [r3, #0]
 8005e4a:	68db      	ldr	r3, [r3, #12]
 8005e4c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005e50:	2b80      	cmp	r3, #128	; 0x80
 8005e52:	d107      	bne.n	8005e64 <HAL_TIM_IRQHandler+0x1b0>
 8005e54:	687b      	ldr	r3, [r7, #4]
 8005e56:	681b      	ldr	r3, [r3, #0]
 8005e58:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8005e5c:	611a      	str	r2, [r3, #16]
 8005e5e:	6878      	ldr	r0, [r7, #4]
 8005e60:	f000 fcfb 	bl	800685a <HAL_TIMEx_BreakCallback>
 8005e64:	687b      	ldr	r3, [r7, #4]
 8005e66:	681b      	ldr	r3, [r3, #0]
 8005e68:	691b      	ldr	r3, [r3, #16]
 8005e6a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005e6e:	2b40      	cmp	r3, #64	; 0x40
 8005e70:	d10e      	bne.n	8005e90 <HAL_TIM_IRQHandler+0x1dc>
 8005e72:	687b      	ldr	r3, [r7, #4]
 8005e74:	681b      	ldr	r3, [r3, #0]
 8005e76:	68db      	ldr	r3, [r3, #12]
 8005e78:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005e7c:	2b40      	cmp	r3, #64	; 0x40
 8005e7e:	d107      	bne.n	8005e90 <HAL_TIM_IRQHandler+0x1dc>
 8005e80:	687b      	ldr	r3, [r7, #4]
 8005e82:	681b      	ldr	r3, [r3, #0]
 8005e84:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8005e88:	611a      	str	r2, [r3, #16]
 8005e8a:	6878      	ldr	r0, [r7, #4]
 8005e8c:	f000 f9be 	bl	800620c <HAL_TIM_TriggerCallback>
 8005e90:	687b      	ldr	r3, [r7, #4]
 8005e92:	681b      	ldr	r3, [r3, #0]
 8005e94:	691b      	ldr	r3, [r3, #16]
 8005e96:	f003 0320 	and.w	r3, r3, #32
 8005e9a:	2b20      	cmp	r3, #32
 8005e9c:	d10e      	bne.n	8005ebc <HAL_TIM_IRQHandler+0x208>
 8005e9e:	687b      	ldr	r3, [r7, #4]
 8005ea0:	681b      	ldr	r3, [r3, #0]
 8005ea2:	68db      	ldr	r3, [r3, #12]
 8005ea4:	f003 0320 	and.w	r3, r3, #32
 8005ea8:	2b20      	cmp	r3, #32
 8005eaa:	d107      	bne.n	8005ebc <HAL_TIM_IRQHandler+0x208>
 8005eac:	687b      	ldr	r3, [r7, #4]
 8005eae:	681b      	ldr	r3, [r3, #0]
 8005eb0:	f06f 0220 	mvn.w	r2, #32
 8005eb4:	611a      	str	r2, [r3, #16]
 8005eb6:	6878      	ldr	r0, [r7, #4]
 8005eb8:	f000 fcc6 	bl	8006848 <HAL_TIMEx_CommutCallback>
 8005ebc:	bf00      	nop
 8005ebe:	3708      	adds	r7, #8
 8005ec0:	46bd      	mov	sp, r7
 8005ec2:	bd80      	pop	{r7, pc}

08005ec4 <HAL_TIM_PWM_ConfigChannel>:
 8005ec4:	b580      	push	{r7, lr}
 8005ec6:	b086      	sub	sp, #24
 8005ec8:	af00      	add	r7, sp, #0
 8005eca:	60f8      	str	r0, [r7, #12]
 8005ecc:	60b9      	str	r1, [r7, #8]
 8005ece:	607a      	str	r2, [r7, #4]
 8005ed0:	2300      	movs	r3, #0
 8005ed2:	75fb      	strb	r3, [r7, #23]
 8005ed4:	68fb      	ldr	r3, [r7, #12]
 8005ed6:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8005eda:	2b01      	cmp	r3, #1
 8005edc:	d101      	bne.n	8005ee2 <HAL_TIM_PWM_ConfigChannel+0x1e>
 8005ede:	2302      	movs	r3, #2
 8005ee0:	e0ae      	b.n	8006040 <HAL_TIM_PWM_ConfigChannel+0x17c>
 8005ee2:	68fb      	ldr	r3, [r7, #12]
 8005ee4:	2201      	movs	r2, #1
 8005ee6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005eea:	687b      	ldr	r3, [r7, #4]
 8005eec:	2b0c      	cmp	r3, #12
 8005eee:	f200 809f 	bhi.w	8006030 <HAL_TIM_PWM_ConfigChannel+0x16c>
 8005ef2:	a201      	add	r2, pc, #4	; (adr r2, 8005ef8 <HAL_TIM_PWM_ConfigChannel+0x34>)
 8005ef4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005ef8:	08005f2d 	.word	0x08005f2d
 8005efc:	08006031 	.word	0x08006031
 8005f00:	08006031 	.word	0x08006031
 8005f04:	08006031 	.word	0x08006031
 8005f08:	08005f6d 	.word	0x08005f6d
 8005f0c:	08006031 	.word	0x08006031
 8005f10:	08006031 	.word	0x08006031
 8005f14:	08006031 	.word	0x08006031
 8005f18:	08005faf 	.word	0x08005faf
 8005f1c:	08006031 	.word	0x08006031
 8005f20:	08006031 	.word	0x08006031
 8005f24:	08006031 	.word	0x08006031
 8005f28:	08005fef 	.word	0x08005fef
 8005f2c:	68fb      	ldr	r3, [r7, #12]
 8005f2e:	681b      	ldr	r3, [r3, #0]
 8005f30:	68b9      	ldr	r1, [r7, #8]
 8005f32:	4618      	mov	r0, r3
 8005f34:	f000 f9e0 	bl	80062f8 <TIM_OC1_SetConfig>
 8005f38:	68fb      	ldr	r3, [r7, #12]
 8005f3a:	681b      	ldr	r3, [r3, #0]
 8005f3c:	699a      	ldr	r2, [r3, #24]
 8005f3e:	68fb      	ldr	r3, [r7, #12]
 8005f40:	681b      	ldr	r3, [r3, #0]
 8005f42:	f042 0208 	orr.w	r2, r2, #8
 8005f46:	619a      	str	r2, [r3, #24]
 8005f48:	68fb      	ldr	r3, [r7, #12]
 8005f4a:	681b      	ldr	r3, [r3, #0]
 8005f4c:	699a      	ldr	r2, [r3, #24]
 8005f4e:	68fb      	ldr	r3, [r7, #12]
 8005f50:	681b      	ldr	r3, [r3, #0]
 8005f52:	f022 0204 	bic.w	r2, r2, #4
 8005f56:	619a      	str	r2, [r3, #24]
 8005f58:	68fb      	ldr	r3, [r7, #12]
 8005f5a:	681b      	ldr	r3, [r3, #0]
 8005f5c:	6999      	ldr	r1, [r3, #24]
 8005f5e:	68bb      	ldr	r3, [r7, #8]
 8005f60:	691a      	ldr	r2, [r3, #16]
 8005f62:	68fb      	ldr	r3, [r7, #12]
 8005f64:	681b      	ldr	r3, [r3, #0]
 8005f66:	430a      	orrs	r2, r1
 8005f68:	619a      	str	r2, [r3, #24]
 8005f6a:	e064      	b.n	8006036 <HAL_TIM_PWM_ConfigChannel+0x172>
 8005f6c:	68fb      	ldr	r3, [r7, #12]
 8005f6e:	681b      	ldr	r3, [r3, #0]
 8005f70:	68b9      	ldr	r1, [r7, #8]
 8005f72:	4618      	mov	r0, r3
 8005f74:	f000 fa26 	bl	80063c4 <TIM_OC2_SetConfig>
 8005f78:	68fb      	ldr	r3, [r7, #12]
 8005f7a:	681b      	ldr	r3, [r3, #0]
 8005f7c:	699a      	ldr	r2, [r3, #24]
 8005f7e:	68fb      	ldr	r3, [r7, #12]
 8005f80:	681b      	ldr	r3, [r3, #0]
 8005f82:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8005f86:	619a      	str	r2, [r3, #24]
 8005f88:	68fb      	ldr	r3, [r7, #12]
 8005f8a:	681b      	ldr	r3, [r3, #0]
 8005f8c:	699a      	ldr	r2, [r3, #24]
 8005f8e:	68fb      	ldr	r3, [r7, #12]
 8005f90:	681b      	ldr	r3, [r3, #0]
 8005f92:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005f96:	619a      	str	r2, [r3, #24]
 8005f98:	68fb      	ldr	r3, [r7, #12]
 8005f9a:	681b      	ldr	r3, [r3, #0]
 8005f9c:	6999      	ldr	r1, [r3, #24]
 8005f9e:	68bb      	ldr	r3, [r7, #8]
 8005fa0:	691b      	ldr	r3, [r3, #16]
 8005fa2:	021a      	lsls	r2, r3, #8
 8005fa4:	68fb      	ldr	r3, [r7, #12]
 8005fa6:	681b      	ldr	r3, [r3, #0]
 8005fa8:	430a      	orrs	r2, r1
 8005faa:	619a      	str	r2, [r3, #24]
 8005fac:	e043      	b.n	8006036 <HAL_TIM_PWM_ConfigChannel+0x172>
 8005fae:	68fb      	ldr	r3, [r7, #12]
 8005fb0:	681b      	ldr	r3, [r3, #0]
 8005fb2:	68b9      	ldr	r1, [r7, #8]
 8005fb4:	4618      	mov	r0, r3
 8005fb6:	f000 fa6f 	bl	8006498 <TIM_OC3_SetConfig>
 8005fba:	68fb      	ldr	r3, [r7, #12]
 8005fbc:	681b      	ldr	r3, [r3, #0]
 8005fbe:	69da      	ldr	r2, [r3, #28]
 8005fc0:	68fb      	ldr	r3, [r7, #12]
 8005fc2:	681b      	ldr	r3, [r3, #0]
 8005fc4:	f042 0208 	orr.w	r2, r2, #8
 8005fc8:	61da      	str	r2, [r3, #28]
 8005fca:	68fb      	ldr	r3, [r7, #12]
 8005fcc:	681b      	ldr	r3, [r3, #0]
 8005fce:	69da      	ldr	r2, [r3, #28]
 8005fd0:	68fb      	ldr	r3, [r7, #12]
 8005fd2:	681b      	ldr	r3, [r3, #0]
 8005fd4:	f022 0204 	bic.w	r2, r2, #4
 8005fd8:	61da      	str	r2, [r3, #28]
 8005fda:	68fb      	ldr	r3, [r7, #12]
 8005fdc:	681b      	ldr	r3, [r3, #0]
 8005fde:	69d9      	ldr	r1, [r3, #28]
 8005fe0:	68bb      	ldr	r3, [r7, #8]
 8005fe2:	691a      	ldr	r2, [r3, #16]
 8005fe4:	68fb      	ldr	r3, [r7, #12]
 8005fe6:	681b      	ldr	r3, [r3, #0]
 8005fe8:	430a      	orrs	r2, r1
 8005fea:	61da      	str	r2, [r3, #28]
 8005fec:	e023      	b.n	8006036 <HAL_TIM_PWM_ConfigChannel+0x172>
 8005fee:	68fb      	ldr	r3, [r7, #12]
 8005ff0:	681b      	ldr	r3, [r3, #0]
 8005ff2:	68b9      	ldr	r1, [r7, #8]
 8005ff4:	4618      	mov	r0, r3
 8005ff6:	f000 fab9 	bl	800656c <TIM_OC4_SetConfig>
 8005ffa:	68fb      	ldr	r3, [r7, #12]
 8005ffc:	681b      	ldr	r3, [r3, #0]
 8005ffe:	69da      	ldr	r2, [r3, #28]
 8006000:	68fb      	ldr	r3, [r7, #12]
 8006002:	681b      	ldr	r3, [r3, #0]
 8006004:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8006008:	61da      	str	r2, [r3, #28]
 800600a:	68fb      	ldr	r3, [r7, #12]
 800600c:	681b      	ldr	r3, [r3, #0]
 800600e:	69da      	ldr	r2, [r3, #28]
 8006010:	68fb      	ldr	r3, [r7, #12]
 8006012:	681b      	ldr	r3, [r3, #0]
 8006014:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006018:	61da      	str	r2, [r3, #28]
 800601a:	68fb      	ldr	r3, [r7, #12]
 800601c:	681b      	ldr	r3, [r3, #0]
 800601e:	69d9      	ldr	r1, [r3, #28]
 8006020:	68bb      	ldr	r3, [r7, #8]
 8006022:	691b      	ldr	r3, [r3, #16]
 8006024:	021a      	lsls	r2, r3, #8
 8006026:	68fb      	ldr	r3, [r7, #12]
 8006028:	681b      	ldr	r3, [r3, #0]
 800602a:	430a      	orrs	r2, r1
 800602c:	61da      	str	r2, [r3, #28]
 800602e:	e002      	b.n	8006036 <HAL_TIM_PWM_ConfigChannel+0x172>
 8006030:	2301      	movs	r3, #1
 8006032:	75fb      	strb	r3, [r7, #23]
 8006034:	bf00      	nop
 8006036:	68fb      	ldr	r3, [r7, #12]
 8006038:	2200      	movs	r2, #0
 800603a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800603e:	7dfb      	ldrb	r3, [r7, #23]
 8006040:	4618      	mov	r0, r3
 8006042:	3718      	adds	r7, #24
 8006044:	46bd      	mov	sp, r7
 8006046:	bd80      	pop	{r7, pc}

08006048 <HAL_TIM_ConfigClockSource>:
 8006048:	b580      	push	{r7, lr}
 800604a:	b084      	sub	sp, #16
 800604c:	af00      	add	r7, sp, #0
 800604e:	6078      	str	r0, [r7, #4]
 8006050:	6039      	str	r1, [r7, #0]
 8006052:	2300      	movs	r3, #0
 8006054:	73fb      	strb	r3, [r7, #15]
 8006056:	687b      	ldr	r3, [r7, #4]
 8006058:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800605c:	2b01      	cmp	r3, #1
 800605e:	d101      	bne.n	8006064 <HAL_TIM_ConfigClockSource+0x1c>
 8006060:	2302      	movs	r3, #2
 8006062:	e0b4      	b.n	80061ce <HAL_TIM_ConfigClockSource+0x186>
 8006064:	687b      	ldr	r3, [r7, #4]
 8006066:	2201      	movs	r2, #1
 8006068:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800606c:	687b      	ldr	r3, [r7, #4]
 800606e:	2202      	movs	r2, #2
 8006070:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006074:	687b      	ldr	r3, [r7, #4]
 8006076:	681b      	ldr	r3, [r3, #0]
 8006078:	689b      	ldr	r3, [r3, #8]
 800607a:	60bb      	str	r3, [r7, #8]
 800607c:	68bb      	ldr	r3, [r7, #8]
 800607e:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8006082:	60bb      	str	r3, [r7, #8]
 8006084:	68bb      	ldr	r3, [r7, #8]
 8006086:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800608a:	60bb      	str	r3, [r7, #8]
 800608c:	687b      	ldr	r3, [r7, #4]
 800608e:	681b      	ldr	r3, [r3, #0]
 8006090:	68ba      	ldr	r2, [r7, #8]
 8006092:	609a      	str	r2, [r3, #8]
 8006094:	683b      	ldr	r3, [r7, #0]
 8006096:	681b      	ldr	r3, [r3, #0]
 8006098:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800609c:	d03e      	beq.n	800611c <HAL_TIM_ConfigClockSource+0xd4>
 800609e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80060a2:	f200 8087 	bhi.w	80061b4 <HAL_TIM_ConfigClockSource+0x16c>
 80060a6:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80060aa:	f000 8086 	beq.w	80061ba <HAL_TIM_ConfigClockSource+0x172>
 80060ae:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80060b2:	d87f      	bhi.n	80061b4 <HAL_TIM_ConfigClockSource+0x16c>
 80060b4:	2b70      	cmp	r3, #112	; 0x70
 80060b6:	d01a      	beq.n	80060ee <HAL_TIM_ConfigClockSource+0xa6>
 80060b8:	2b70      	cmp	r3, #112	; 0x70
 80060ba:	d87b      	bhi.n	80061b4 <HAL_TIM_ConfigClockSource+0x16c>
 80060bc:	2b60      	cmp	r3, #96	; 0x60
 80060be:	d050      	beq.n	8006162 <HAL_TIM_ConfigClockSource+0x11a>
 80060c0:	2b60      	cmp	r3, #96	; 0x60
 80060c2:	d877      	bhi.n	80061b4 <HAL_TIM_ConfigClockSource+0x16c>
 80060c4:	2b50      	cmp	r3, #80	; 0x50
 80060c6:	d03c      	beq.n	8006142 <HAL_TIM_ConfigClockSource+0xfa>
 80060c8:	2b50      	cmp	r3, #80	; 0x50
 80060ca:	d873      	bhi.n	80061b4 <HAL_TIM_ConfigClockSource+0x16c>
 80060cc:	2b40      	cmp	r3, #64	; 0x40
 80060ce:	d058      	beq.n	8006182 <HAL_TIM_ConfigClockSource+0x13a>
 80060d0:	2b40      	cmp	r3, #64	; 0x40
 80060d2:	d86f      	bhi.n	80061b4 <HAL_TIM_ConfigClockSource+0x16c>
 80060d4:	2b30      	cmp	r3, #48	; 0x30
 80060d6:	d064      	beq.n	80061a2 <HAL_TIM_ConfigClockSource+0x15a>
 80060d8:	2b30      	cmp	r3, #48	; 0x30
 80060da:	d86b      	bhi.n	80061b4 <HAL_TIM_ConfigClockSource+0x16c>
 80060dc:	2b20      	cmp	r3, #32
 80060de:	d060      	beq.n	80061a2 <HAL_TIM_ConfigClockSource+0x15a>
 80060e0:	2b20      	cmp	r3, #32
 80060e2:	d867      	bhi.n	80061b4 <HAL_TIM_ConfigClockSource+0x16c>
 80060e4:	2b00      	cmp	r3, #0
 80060e6:	d05c      	beq.n	80061a2 <HAL_TIM_ConfigClockSource+0x15a>
 80060e8:	2b10      	cmp	r3, #16
 80060ea:	d05a      	beq.n	80061a2 <HAL_TIM_ConfigClockSource+0x15a>
 80060ec:	e062      	b.n	80061b4 <HAL_TIM_ConfigClockSource+0x16c>
 80060ee:	687b      	ldr	r3, [r7, #4]
 80060f0:	6818      	ldr	r0, [r3, #0]
 80060f2:	683b      	ldr	r3, [r7, #0]
 80060f4:	6899      	ldr	r1, [r3, #8]
 80060f6:	683b      	ldr	r3, [r7, #0]
 80060f8:	685a      	ldr	r2, [r3, #4]
 80060fa:	683b      	ldr	r3, [r7, #0]
 80060fc:	68db      	ldr	r3, [r3, #12]
 80060fe:	f000 fafa 	bl	80066f6 <TIM_ETR_SetConfig>
 8006102:	687b      	ldr	r3, [r7, #4]
 8006104:	681b      	ldr	r3, [r3, #0]
 8006106:	689b      	ldr	r3, [r3, #8]
 8006108:	60bb      	str	r3, [r7, #8]
 800610a:	68bb      	ldr	r3, [r7, #8]
 800610c:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8006110:	60bb      	str	r3, [r7, #8]
 8006112:	687b      	ldr	r3, [r7, #4]
 8006114:	681b      	ldr	r3, [r3, #0]
 8006116:	68ba      	ldr	r2, [r7, #8]
 8006118:	609a      	str	r2, [r3, #8]
 800611a:	e04f      	b.n	80061bc <HAL_TIM_ConfigClockSource+0x174>
 800611c:	687b      	ldr	r3, [r7, #4]
 800611e:	6818      	ldr	r0, [r3, #0]
 8006120:	683b      	ldr	r3, [r7, #0]
 8006122:	6899      	ldr	r1, [r3, #8]
 8006124:	683b      	ldr	r3, [r7, #0]
 8006126:	685a      	ldr	r2, [r3, #4]
 8006128:	683b      	ldr	r3, [r7, #0]
 800612a:	68db      	ldr	r3, [r3, #12]
 800612c:	f000 fae3 	bl	80066f6 <TIM_ETR_SetConfig>
 8006130:	687b      	ldr	r3, [r7, #4]
 8006132:	681b      	ldr	r3, [r3, #0]
 8006134:	689a      	ldr	r2, [r3, #8]
 8006136:	687b      	ldr	r3, [r7, #4]
 8006138:	681b      	ldr	r3, [r3, #0]
 800613a:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800613e:	609a      	str	r2, [r3, #8]
 8006140:	e03c      	b.n	80061bc <HAL_TIM_ConfigClockSource+0x174>
 8006142:	687b      	ldr	r3, [r7, #4]
 8006144:	6818      	ldr	r0, [r3, #0]
 8006146:	683b      	ldr	r3, [r7, #0]
 8006148:	6859      	ldr	r1, [r3, #4]
 800614a:	683b      	ldr	r3, [r7, #0]
 800614c:	68db      	ldr	r3, [r3, #12]
 800614e:	461a      	mov	r2, r3
 8006150:	f000 fa5a 	bl	8006608 <TIM_TI1_ConfigInputStage>
 8006154:	687b      	ldr	r3, [r7, #4]
 8006156:	681b      	ldr	r3, [r3, #0]
 8006158:	2150      	movs	r1, #80	; 0x50
 800615a:	4618      	mov	r0, r3
 800615c:	f000 fab1 	bl	80066c2 <TIM_ITRx_SetConfig>
 8006160:	e02c      	b.n	80061bc <HAL_TIM_ConfigClockSource+0x174>
 8006162:	687b      	ldr	r3, [r7, #4]
 8006164:	6818      	ldr	r0, [r3, #0]
 8006166:	683b      	ldr	r3, [r7, #0]
 8006168:	6859      	ldr	r1, [r3, #4]
 800616a:	683b      	ldr	r3, [r7, #0]
 800616c:	68db      	ldr	r3, [r3, #12]
 800616e:	461a      	mov	r2, r3
 8006170:	f000 fa78 	bl	8006664 <TIM_TI2_ConfigInputStage>
 8006174:	687b      	ldr	r3, [r7, #4]
 8006176:	681b      	ldr	r3, [r3, #0]
 8006178:	2160      	movs	r1, #96	; 0x60
 800617a:	4618      	mov	r0, r3
 800617c:	f000 faa1 	bl	80066c2 <TIM_ITRx_SetConfig>
 8006180:	e01c      	b.n	80061bc <HAL_TIM_ConfigClockSource+0x174>
 8006182:	687b      	ldr	r3, [r7, #4]
 8006184:	6818      	ldr	r0, [r3, #0]
 8006186:	683b      	ldr	r3, [r7, #0]
 8006188:	6859      	ldr	r1, [r3, #4]
 800618a:	683b      	ldr	r3, [r7, #0]
 800618c:	68db      	ldr	r3, [r3, #12]
 800618e:	461a      	mov	r2, r3
 8006190:	f000 fa3a 	bl	8006608 <TIM_TI1_ConfigInputStage>
 8006194:	687b      	ldr	r3, [r7, #4]
 8006196:	681b      	ldr	r3, [r3, #0]
 8006198:	2140      	movs	r1, #64	; 0x40
 800619a:	4618      	mov	r0, r3
 800619c:	f000 fa91 	bl	80066c2 <TIM_ITRx_SetConfig>
 80061a0:	e00c      	b.n	80061bc <HAL_TIM_ConfigClockSource+0x174>
 80061a2:	687b      	ldr	r3, [r7, #4]
 80061a4:	681a      	ldr	r2, [r3, #0]
 80061a6:	683b      	ldr	r3, [r7, #0]
 80061a8:	681b      	ldr	r3, [r3, #0]
 80061aa:	4619      	mov	r1, r3
 80061ac:	4610      	mov	r0, r2
 80061ae:	f000 fa88 	bl	80066c2 <TIM_ITRx_SetConfig>
 80061b2:	e003      	b.n	80061bc <HAL_TIM_ConfigClockSource+0x174>
 80061b4:	2301      	movs	r3, #1
 80061b6:	73fb      	strb	r3, [r7, #15]
 80061b8:	e000      	b.n	80061bc <HAL_TIM_ConfigClockSource+0x174>
 80061ba:	bf00      	nop
 80061bc:	687b      	ldr	r3, [r7, #4]
 80061be:	2201      	movs	r2, #1
 80061c0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80061c4:	687b      	ldr	r3, [r7, #4]
 80061c6:	2200      	movs	r2, #0
 80061c8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80061cc:	7bfb      	ldrb	r3, [r7, #15]
 80061ce:	4618      	mov	r0, r3
 80061d0:	3710      	adds	r7, #16
 80061d2:	46bd      	mov	sp, r7
 80061d4:	bd80      	pop	{r7, pc}

080061d6 <HAL_TIM_OC_DelayElapsedCallback>:
 80061d6:	b480      	push	{r7}
 80061d8:	b083      	sub	sp, #12
 80061da:	af00      	add	r7, sp, #0
 80061dc:	6078      	str	r0, [r7, #4]
 80061de:	bf00      	nop
 80061e0:	370c      	adds	r7, #12
 80061e2:	46bd      	mov	sp, r7
 80061e4:	bc80      	pop	{r7}
 80061e6:	4770      	bx	lr

080061e8 <HAL_TIM_IC_CaptureCallback>:
 80061e8:	b480      	push	{r7}
 80061ea:	b083      	sub	sp, #12
 80061ec:	af00      	add	r7, sp, #0
 80061ee:	6078      	str	r0, [r7, #4]
 80061f0:	bf00      	nop
 80061f2:	370c      	adds	r7, #12
 80061f4:	46bd      	mov	sp, r7
 80061f6:	bc80      	pop	{r7}
 80061f8:	4770      	bx	lr

080061fa <HAL_TIM_PWM_PulseFinishedCallback>:
 80061fa:	b480      	push	{r7}
 80061fc:	b083      	sub	sp, #12
 80061fe:	af00      	add	r7, sp, #0
 8006200:	6078      	str	r0, [r7, #4]
 8006202:	bf00      	nop
 8006204:	370c      	adds	r7, #12
 8006206:	46bd      	mov	sp, r7
 8006208:	bc80      	pop	{r7}
 800620a:	4770      	bx	lr

0800620c <HAL_TIM_TriggerCallback>:
 800620c:	b480      	push	{r7}
 800620e:	b083      	sub	sp, #12
 8006210:	af00      	add	r7, sp, #0
 8006212:	6078      	str	r0, [r7, #4]
 8006214:	bf00      	nop
 8006216:	370c      	adds	r7, #12
 8006218:	46bd      	mov	sp, r7
 800621a:	bc80      	pop	{r7}
 800621c:	4770      	bx	lr
	...

08006220 <TIM_Base_SetConfig>:
 8006220:	b480      	push	{r7}
 8006222:	b085      	sub	sp, #20
 8006224:	af00      	add	r7, sp, #0
 8006226:	6078      	str	r0, [r7, #4]
 8006228:	6039      	str	r1, [r7, #0]
 800622a:	687b      	ldr	r3, [r7, #4]
 800622c:	681b      	ldr	r3, [r3, #0]
 800622e:	60fb      	str	r3, [r7, #12]
 8006230:	687b      	ldr	r3, [r7, #4]
 8006232:	4a2d      	ldr	r2, [pc, #180]	; (80062e8 <TIM_Base_SetConfig+0xc8>)
 8006234:	4293      	cmp	r3, r2
 8006236:	d00f      	beq.n	8006258 <TIM_Base_SetConfig+0x38>
 8006238:	687b      	ldr	r3, [r7, #4]
 800623a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800623e:	d00b      	beq.n	8006258 <TIM_Base_SetConfig+0x38>
 8006240:	687b      	ldr	r3, [r7, #4]
 8006242:	4a2a      	ldr	r2, [pc, #168]	; (80062ec <TIM_Base_SetConfig+0xcc>)
 8006244:	4293      	cmp	r3, r2
 8006246:	d007      	beq.n	8006258 <TIM_Base_SetConfig+0x38>
 8006248:	687b      	ldr	r3, [r7, #4]
 800624a:	4a29      	ldr	r2, [pc, #164]	; (80062f0 <TIM_Base_SetConfig+0xd0>)
 800624c:	4293      	cmp	r3, r2
 800624e:	d003      	beq.n	8006258 <TIM_Base_SetConfig+0x38>
 8006250:	687b      	ldr	r3, [r7, #4]
 8006252:	4a28      	ldr	r2, [pc, #160]	; (80062f4 <TIM_Base_SetConfig+0xd4>)
 8006254:	4293      	cmp	r3, r2
 8006256:	d108      	bne.n	800626a <TIM_Base_SetConfig+0x4a>
 8006258:	68fb      	ldr	r3, [r7, #12]
 800625a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800625e:	60fb      	str	r3, [r7, #12]
 8006260:	683b      	ldr	r3, [r7, #0]
 8006262:	685b      	ldr	r3, [r3, #4]
 8006264:	68fa      	ldr	r2, [r7, #12]
 8006266:	4313      	orrs	r3, r2
 8006268:	60fb      	str	r3, [r7, #12]
 800626a:	687b      	ldr	r3, [r7, #4]
 800626c:	4a1e      	ldr	r2, [pc, #120]	; (80062e8 <TIM_Base_SetConfig+0xc8>)
 800626e:	4293      	cmp	r3, r2
 8006270:	d00f      	beq.n	8006292 <TIM_Base_SetConfig+0x72>
 8006272:	687b      	ldr	r3, [r7, #4]
 8006274:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8006278:	d00b      	beq.n	8006292 <TIM_Base_SetConfig+0x72>
 800627a:	687b      	ldr	r3, [r7, #4]
 800627c:	4a1b      	ldr	r2, [pc, #108]	; (80062ec <TIM_Base_SetConfig+0xcc>)
 800627e:	4293      	cmp	r3, r2
 8006280:	d007      	beq.n	8006292 <TIM_Base_SetConfig+0x72>
 8006282:	687b      	ldr	r3, [r7, #4]
 8006284:	4a1a      	ldr	r2, [pc, #104]	; (80062f0 <TIM_Base_SetConfig+0xd0>)
 8006286:	4293      	cmp	r3, r2
 8006288:	d003      	beq.n	8006292 <TIM_Base_SetConfig+0x72>
 800628a:	687b      	ldr	r3, [r7, #4]
 800628c:	4a19      	ldr	r2, [pc, #100]	; (80062f4 <TIM_Base_SetConfig+0xd4>)
 800628e:	4293      	cmp	r3, r2
 8006290:	d108      	bne.n	80062a4 <TIM_Base_SetConfig+0x84>
 8006292:	68fb      	ldr	r3, [r7, #12]
 8006294:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8006298:	60fb      	str	r3, [r7, #12]
 800629a:	683b      	ldr	r3, [r7, #0]
 800629c:	68db      	ldr	r3, [r3, #12]
 800629e:	68fa      	ldr	r2, [r7, #12]
 80062a0:	4313      	orrs	r3, r2
 80062a2:	60fb      	str	r3, [r7, #12]
 80062a4:	68fb      	ldr	r3, [r7, #12]
 80062a6:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 80062aa:	683b      	ldr	r3, [r7, #0]
 80062ac:	695b      	ldr	r3, [r3, #20]
 80062ae:	4313      	orrs	r3, r2
 80062b0:	60fb      	str	r3, [r7, #12]
 80062b2:	687b      	ldr	r3, [r7, #4]
 80062b4:	68fa      	ldr	r2, [r7, #12]
 80062b6:	601a      	str	r2, [r3, #0]
 80062b8:	683b      	ldr	r3, [r7, #0]
 80062ba:	689a      	ldr	r2, [r3, #8]
 80062bc:	687b      	ldr	r3, [r7, #4]
 80062be:	62da      	str	r2, [r3, #44]	; 0x2c
 80062c0:	683b      	ldr	r3, [r7, #0]
 80062c2:	681a      	ldr	r2, [r3, #0]
 80062c4:	687b      	ldr	r3, [r7, #4]
 80062c6:	629a      	str	r2, [r3, #40]	; 0x28
 80062c8:	687b      	ldr	r3, [r7, #4]
 80062ca:	4a07      	ldr	r2, [pc, #28]	; (80062e8 <TIM_Base_SetConfig+0xc8>)
 80062cc:	4293      	cmp	r3, r2
 80062ce:	d103      	bne.n	80062d8 <TIM_Base_SetConfig+0xb8>
 80062d0:	683b      	ldr	r3, [r7, #0]
 80062d2:	691a      	ldr	r2, [r3, #16]
 80062d4:	687b      	ldr	r3, [r7, #4]
 80062d6:	631a      	str	r2, [r3, #48]	; 0x30
 80062d8:	687b      	ldr	r3, [r7, #4]
 80062da:	2201      	movs	r2, #1
 80062dc:	615a      	str	r2, [r3, #20]
 80062de:	bf00      	nop
 80062e0:	3714      	adds	r7, #20
 80062e2:	46bd      	mov	sp, r7
 80062e4:	bc80      	pop	{r7}
 80062e6:	4770      	bx	lr
 80062e8:	40012c00 	.word	0x40012c00
 80062ec:	40000400 	.word	0x40000400
 80062f0:	40000800 	.word	0x40000800
 80062f4:	40000c00 	.word	0x40000c00

080062f8 <TIM_OC1_SetConfig>:
 80062f8:	b480      	push	{r7}
 80062fa:	b087      	sub	sp, #28
 80062fc:	af00      	add	r7, sp, #0
 80062fe:	6078      	str	r0, [r7, #4]
 8006300:	6039      	str	r1, [r7, #0]
 8006302:	687b      	ldr	r3, [r7, #4]
 8006304:	6a1b      	ldr	r3, [r3, #32]
 8006306:	617b      	str	r3, [r7, #20]
 8006308:	687b      	ldr	r3, [r7, #4]
 800630a:	6a1b      	ldr	r3, [r3, #32]
 800630c:	f023 0201 	bic.w	r2, r3, #1
 8006310:	687b      	ldr	r3, [r7, #4]
 8006312:	621a      	str	r2, [r3, #32]
 8006314:	687b      	ldr	r3, [r7, #4]
 8006316:	685b      	ldr	r3, [r3, #4]
 8006318:	613b      	str	r3, [r7, #16]
 800631a:	687b      	ldr	r3, [r7, #4]
 800631c:	699b      	ldr	r3, [r3, #24]
 800631e:	60fb      	str	r3, [r7, #12]
 8006320:	68fb      	ldr	r3, [r7, #12]
 8006322:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8006326:	60fb      	str	r3, [r7, #12]
 8006328:	68fb      	ldr	r3, [r7, #12]
 800632a:	f023 0303 	bic.w	r3, r3, #3
 800632e:	60fb      	str	r3, [r7, #12]
 8006330:	683b      	ldr	r3, [r7, #0]
 8006332:	681b      	ldr	r3, [r3, #0]
 8006334:	68fa      	ldr	r2, [r7, #12]
 8006336:	4313      	orrs	r3, r2
 8006338:	60fb      	str	r3, [r7, #12]
 800633a:	697b      	ldr	r3, [r7, #20]
 800633c:	f023 0302 	bic.w	r3, r3, #2
 8006340:	617b      	str	r3, [r7, #20]
 8006342:	683b      	ldr	r3, [r7, #0]
 8006344:	689b      	ldr	r3, [r3, #8]
 8006346:	697a      	ldr	r2, [r7, #20]
 8006348:	4313      	orrs	r3, r2
 800634a:	617b      	str	r3, [r7, #20]
 800634c:	687b      	ldr	r3, [r7, #4]
 800634e:	4a1c      	ldr	r2, [pc, #112]	; (80063c0 <TIM_OC1_SetConfig+0xc8>)
 8006350:	4293      	cmp	r3, r2
 8006352:	d10c      	bne.n	800636e <TIM_OC1_SetConfig+0x76>
 8006354:	697b      	ldr	r3, [r7, #20]
 8006356:	f023 0308 	bic.w	r3, r3, #8
 800635a:	617b      	str	r3, [r7, #20]
 800635c:	683b      	ldr	r3, [r7, #0]
 800635e:	68db      	ldr	r3, [r3, #12]
 8006360:	697a      	ldr	r2, [r7, #20]
 8006362:	4313      	orrs	r3, r2
 8006364:	617b      	str	r3, [r7, #20]
 8006366:	697b      	ldr	r3, [r7, #20]
 8006368:	f023 0304 	bic.w	r3, r3, #4
 800636c:	617b      	str	r3, [r7, #20]
 800636e:	687b      	ldr	r3, [r7, #4]
 8006370:	4a13      	ldr	r2, [pc, #76]	; (80063c0 <TIM_OC1_SetConfig+0xc8>)
 8006372:	4293      	cmp	r3, r2
 8006374:	d111      	bne.n	800639a <TIM_OC1_SetConfig+0xa2>
 8006376:	693b      	ldr	r3, [r7, #16]
 8006378:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800637c:	613b      	str	r3, [r7, #16]
 800637e:	693b      	ldr	r3, [r7, #16]
 8006380:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8006384:	613b      	str	r3, [r7, #16]
 8006386:	683b      	ldr	r3, [r7, #0]
 8006388:	695b      	ldr	r3, [r3, #20]
 800638a:	693a      	ldr	r2, [r7, #16]
 800638c:	4313      	orrs	r3, r2
 800638e:	613b      	str	r3, [r7, #16]
 8006390:	683b      	ldr	r3, [r7, #0]
 8006392:	699b      	ldr	r3, [r3, #24]
 8006394:	693a      	ldr	r2, [r7, #16]
 8006396:	4313      	orrs	r3, r2
 8006398:	613b      	str	r3, [r7, #16]
 800639a:	687b      	ldr	r3, [r7, #4]
 800639c:	693a      	ldr	r2, [r7, #16]
 800639e:	605a      	str	r2, [r3, #4]
 80063a0:	687b      	ldr	r3, [r7, #4]
 80063a2:	68fa      	ldr	r2, [r7, #12]
 80063a4:	619a      	str	r2, [r3, #24]
 80063a6:	683b      	ldr	r3, [r7, #0]
 80063a8:	685a      	ldr	r2, [r3, #4]
 80063aa:	687b      	ldr	r3, [r7, #4]
 80063ac:	635a      	str	r2, [r3, #52]	; 0x34
 80063ae:	687b      	ldr	r3, [r7, #4]
 80063b0:	697a      	ldr	r2, [r7, #20]
 80063b2:	621a      	str	r2, [r3, #32]
 80063b4:	bf00      	nop
 80063b6:	371c      	adds	r7, #28
 80063b8:	46bd      	mov	sp, r7
 80063ba:	bc80      	pop	{r7}
 80063bc:	4770      	bx	lr
 80063be:	bf00      	nop
 80063c0:	40012c00 	.word	0x40012c00

080063c4 <TIM_OC2_SetConfig>:
 80063c4:	b480      	push	{r7}
 80063c6:	b087      	sub	sp, #28
 80063c8:	af00      	add	r7, sp, #0
 80063ca:	6078      	str	r0, [r7, #4]
 80063cc:	6039      	str	r1, [r7, #0]
 80063ce:	687b      	ldr	r3, [r7, #4]
 80063d0:	6a1b      	ldr	r3, [r3, #32]
 80063d2:	617b      	str	r3, [r7, #20]
 80063d4:	687b      	ldr	r3, [r7, #4]
 80063d6:	6a1b      	ldr	r3, [r3, #32]
 80063d8:	f023 0210 	bic.w	r2, r3, #16
 80063dc:	687b      	ldr	r3, [r7, #4]
 80063de:	621a      	str	r2, [r3, #32]
 80063e0:	687b      	ldr	r3, [r7, #4]
 80063e2:	685b      	ldr	r3, [r3, #4]
 80063e4:	613b      	str	r3, [r7, #16]
 80063e6:	687b      	ldr	r3, [r7, #4]
 80063e8:	699b      	ldr	r3, [r3, #24]
 80063ea:	60fb      	str	r3, [r7, #12]
 80063ec:	68fb      	ldr	r3, [r7, #12]
 80063ee:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80063f2:	60fb      	str	r3, [r7, #12]
 80063f4:	68fb      	ldr	r3, [r7, #12]
 80063f6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80063fa:	60fb      	str	r3, [r7, #12]
 80063fc:	683b      	ldr	r3, [r7, #0]
 80063fe:	681b      	ldr	r3, [r3, #0]
 8006400:	021b      	lsls	r3, r3, #8
 8006402:	68fa      	ldr	r2, [r7, #12]
 8006404:	4313      	orrs	r3, r2
 8006406:	60fb      	str	r3, [r7, #12]
 8006408:	697b      	ldr	r3, [r7, #20]
 800640a:	f023 0320 	bic.w	r3, r3, #32
 800640e:	617b      	str	r3, [r7, #20]
 8006410:	683b      	ldr	r3, [r7, #0]
 8006412:	689b      	ldr	r3, [r3, #8]
 8006414:	011b      	lsls	r3, r3, #4
 8006416:	697a      	ldr	r2, [r7, #20]
 8006418:	4313      	orrs	r3, r2
 800641a:	617b      	str	r3, [r7, #20]
 800641c:	687b      	ldr	r3, [r7, #4]
 800641e:	4a1d      	ldr	r2, [pc, #116]	; (8006494 <TIM_OC2_SetConfig+0xd0>)
 8006420:	4293      	cmp	r3, r2
 8006422:	d10d      	bne.n	8006440 <TIM_OC2_SetConfig+0x7c>
 8006424:	697b      	ldr	r3, [r7, #20]
 8006426:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800642a:	617b      	str	r3, [r7, #20]
 800642c:	683b      	ldr	r3, [r7, #0]
 800642e:	68db      	ldr	r3, [r3, #12]
 8006430:	011b      	lsls	r3, r3, #4
 8006432:	697a      	ldr	r2, [r7, #20]
 8006434:	4313      	orrs	r3, r2
 8006436:	617b      	str	r3, [r7, #20]
 8006438:	697b      	ldr	r3, [r7, #20]
 800643a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800643e:	617b      	str	r3, [r7, #20]
 8006440:	687b      	ldr	r3, [r7, #4]
 8006442:	4a14      	ldr	r2, [pc, #80]	; (8006494 <TIM_OC2_SetConfig+0xd0>)
 8006444:	4293      	cmp	r3, r2
 8006446:	d113      	bne.n	8006470 <TIM_OC2_SetConfig+0xac>
 8006448:	693b      	ldr	r3, [r7, #16]
 800644a:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800644e:	613b      	str	r3, [r7, #16]
 8006450:	693b      	ldr	r3, [r7, #16]
 8006452:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8006456:	613b      	str	r3, [r7, #16]
 8006458:	683b      	ldr	r3, [r7, #0]
 800645a:	695b      	ldr	r3, [r3, #20]
 800645c:	009b      	lsls	r3, r3, #2
 800645e:	693a      	ldr	r2, [r7, #16]
 8006460:	4313      	orrs	r3, r2
 8006462:	613b      	str	r3, [r7, #16]
 8006464:	683b      	ldr	r3, [r7, #0]
 8006466:	699b      	ldr	r3, [r3, #24]
 8006468:	009b      	lsls	r3, r3, #2
 800646a:	693a      	ldr	r2, [r7, #16]
 800646c:	4313      	orrs	r3, r2
 800646e:	613b      	str	r3, [r7, #16]
 8006470:	687b      	ldr	r3, [r7, #4]
 8006472:	693a      	ldr	r2, [r7, #16]
 8006474:	605a      	str	r2, [r3, #4]
 8006476:	687b      	ldr	r3, [r7, #4]
 8006478:	68fa      	ldr	r2, [r7, #12]
 800647a:	619a      	str	r2, [r3, #24]
 800647c:	683b      	ldr	r3, [r7, #0]
 800647e:	685a      	ldr	r2, [r3, #4]
 8006480:	687b      	ldr	r3, [r7, #4]
 8006482:	639a      	str	r2, [r3, #56]	; 0x38
 8006484:	687b      	ldr	r3, [r7, #4]
 8006486:	697a      	ldr	r2, [r7, #20]
 8006488:	621a      	str	r2, [r3, #32]
 800648a:	bf00      	nop
 800648c:	371c      	adds	r7, #28
 800648e:	46bd      	mov	sp, r7
 8006490:	bc80      	pop	{r7}
 8006492:	4770      	bx	lr
 8006494:	40012c00 	.word	0x40012c00

08006498 <TIM_OC3_SetConfig>:
 8006498:	b480      	push	{r7}
 800649a:	b087      	sub	sp, #28
 800649c:	af00      	add	r7, sp, #0
 800649e:	6078      	str	r0, [r7, #4]
 80064a0:	6039      	str	r1, [r7, #0]
 80064a2:	687b      	ldr	r3, [r7, #4]
 80064a4:	6a1b      	ldr	r3, [r3, #32]
 80064a6:	617b      	str	r3, [r7, #20]
 80064a8:	687b      	ldr	r3, [r7, #4]
 80064aa:	6a1b      	ldr	r3, [r3, #32]
 80064ac:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 80064b0:	687b      	ldr	r3, [r7, #4]
 80064b2:	621a      	str	r2, [r3, #32]
 80064b4:	687b      	ldr	r3, [r7, #4]
 80064b6:	685b      	ldr	r3, [r3, #4]
 80064b8:	613b      	str	r3, [r7, #16]
 80064ba:	687b      	ldr	r3, [r7, #4]
 80064bc:	69db      	ldr	r3, [r3, #28]
 80064be:	60fb      	str	r3, [r7, #12]
 80064c0:	68fb      	ldr	r3, [r7, #12]
 80064c2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80064c6:	60fb      	str	r3, [r7, #12]
 80064c8:	68fb      	ldr	r3, [r7, #12]
 80064ca:	f023 0303 	bic.w	r3, r3, #3
 80064ce:	60fb      	str	r3, [r7, #12]
 80064d0:	683b      	ldr	r3, [r7, #0]
 80064d2:	681b      	ldr	r3, [r3, #0]
 80064d4:	68fa      	ldr	r2, [r7, #12]
 80064d6:	4313      	orrs	r3, r2
 80064d8:	60fb      	str	r3, [r7, #12]
 80064da:	697b      	ldr	r3, [r7, #20]
 80064dc:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80064e0:	617b      	str	r3, [r7, #20]
 80064e2:	683b      	ldr	r3, [r7, #0]
 80064e4:	689b      	ldr	r3, [r3, #8]
 80064e6:	021b      	lsls	r3, r3, #8
 80064e8:	697a      	ldr	r2, [r7, #20]
 80064ea:	4313      	orrs	r3, r2
 80064ec:	617b      	str	r3, [r7, #20]
 80064ee:	687b      	ldr	r3, [r7, #4]
 80064f0:	4a1d      	ldr	r2, [pc, #116]	; (8006568 <TIM_OC3_SetConfig+0xd0>)
 80064f2:	4293      	cmp	r3, r2
 80064f4:	d10d      	bne.n	8006512 <TIM_OC3_SetConfig+0x7a>
 80064f6:	697b      	ldr	r3, [r7, #20]
 80064f8:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80064fc:	617b      	str	r3, [r7, #20]
 80064fe:	683b      	ldr	r3, [r7, #0]
 8006500:	68db      	ldr	r3, [r3, #12]
 8006502:	021b      	lsls	r3, r3, #8
 8006504:	697a      	ldr	r2, [r7, #20]
 8006506:	4313      	orrs	r3, r2
 8006508:	617b      	str	r3, [r7, #20]
 800650a:	697b      	ldr	r3, [r7, #20]
 800650c:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8006510:	617b      	str	r3, [r7, #20]
 8006512:	687b      	ldr	r3, [r7, #4]
 8006514:	4a14      	ldr	r2, [pc, #80]	; (8006568 <TIM_OC3_SetConfig+0xd0>)
 8006516:	4293      	cmp	r3, r2
 8006518:	d113      	bne.n	8006542 <TIM_OC3_SetConfig+0xaa>
 800651a:	693b      	ldr	r3, [r7, #16]
 800651c:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8006520:	613b      	str	r3, [r7, #16]
 8006522:	693b      	ldr	r3, [r7, #16]
 8006524:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8006528:	613b      	str	r3, [r7, #16]
 800652a:	683b      	ldr	r3, [r7, #0]
 800652c:	695b      	ldr	r3, [r3, #20]
 800652e:	011b      	lsls	r3, r3, #4
 8006530:	693a      	ldr	r2, [r7, #16]
 8006532:	4313      	orrs	r3, r2
 8006534:	613b      	str	r3, [r7, #16]
 8006536:	683b      	ldr	r3, [r7, #0]
 8006538:	699b      	ldr	r3, [r3, #24]
 800653a:	011b      	lsls	r3, r3, #4
 800653c:	693a      	ldr	r2, [r7, #16]
 800653e:	4313      	orrs	r3, r2
 8006540:	613b      	str	r3, [r7, #16]
 8006542:	687b      	ldr	r3, [r7, #4]
 8006544:	693a      	ldr	r2, [r7, #16]
 8006546:	605a      	str	r2, [r3, #4]
 8006548:	687b      	ldr	r3, [r7, #4]
 800654a:	68fa      	ldr	r2, [r7, #12]
 800654c:	61da      	str	r2, [r3, #28]
 800654e:	683b      	ldr	r3, [r7, #0]
 8006550:	685a      	ldr	r2, [r3, #4]
 8006552:	687b      	ldr	r3, [r7, #4]
 8006554:	63da      	str	r2, [r3, #60]	; 0x3c
 8006556:	687b      	ldr	r3, [r7, #4]
 8006558:	697a      	ldr	r2, [r7, #20]
 800655a:	621a      	str	r2, [r3, #32]
 800655c:	bf00      	nop
 800655e:	371c      	adds	r7, #28
 8006560:	46bd      	mov	sp, r7
 8006562:	bc80      	pop	{r7}
 8006564:	4770      	bx	lr
 8006566:	bf00      	nop
 8006568:	40012c00 	.word	0x40012c00

0800656c <TIM_OC4_SetConfig>:
 800656c:	b480      	push	{r7}
 800656e:	b087      	sub	sp, #28
 8006570:	af00      	add	r7, sp, #0
 8006572:	6078      	str	r0, [r7, #4]
 8006574:	6039      	str	r1, [r7, #0]
 8006576:	687b      	ldr	r3, [r7, #4]
 8006578:	6a1b      	ldr	r3, [r3, #32]
 800657a:	613b      	str	r3, [r7, #16]
 800657c:	687b      	ldr	r3, [r7, #4]
 800657e:	6a1b      	ldr	r3, [r3, #32]
 8006580:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8006584:	687b      	ldr	r3, [r7, #4]
 8006586:	621a      	str	r2, [r3, #32]
 8006588:	687b      	ldr	r3, [r7, #4]
 800658a:	685b      	ldr	r3, [r3, #4]
 800658c:	617b      	str	r3, [r7, #20]
 800658e:	687b      	ldr	r3, [r7, #4]
 8006590:	69db      	ldr	r3, [r3, #28]
 8006592:	60fb      	str	r3, [r7, #12]
 8006594:	68fb      	ldr	r3, [r7, #12]
 8006596:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800659a:	60fb      	str	r3, [r7, #12]
 800659c:	68fb      	ldr	r3, [r7, #12]
 800659e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80065a2:	60fb      	str	r3, [r7, #12]
 80065a4:	683b      	ldr	r3, [r7, #0]
 80065a6:	681b      	ldr	r3, [r3, #0]
 80065a8:	021b      	lsls	r3, r3, #8
 80065aa:	68fa      	ldr	r2, [r7, #12]
 80065ac:	4313      	orrs	r3, r2
 80065ae:	60fb      	str	r3, [r7, #12]
 80065b0:	693b      	ldr	r3, [r7, #16]
 80065b2:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80065b6:	613b      	str	r3, [r7, #16]
 80065b8:	683b      	ldr	r3, [r7, #0]
 80065ba:	689b      	ldr	r3, [r3, #8]
 80065bc:	031b      	lsls	r3, r3, #12
 80065be:	693a      	ldr	r2, [r7, #16]
 80065c0:	4313      	orrs	r3, r2
 80065c2:	613b      	str	r3, [r7, #16]
 80065c4:	687b      	ldr	r3, [r7, #4]
 80065c6:	4a0f      	ldr	r2, [pc, #60]	; (8006604 <TIM_OC4_SetConfig+0x98>)
 80065c8:	4293      	cmp	r3, r2
 80065ca:	d109      	bne.n	80065e0 <TIM_OC4_SetConfig+0x74>
 80065cc:	697b      	ldr	r3, [r7, #20]
 80065ce:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80065d2:	617b      	str	r3, [r7, #20]
 80065d4:	683b      	ldr	r3, [r7, #0]
 80065d6:	695b      	ldr	r3, [r3, #20]
 80065d8:	019b      	lsls	r3, r3, #6
 80065da:	697a      	ldr	r2, [r7, #20]
 80065dc:	4313      	orrs	r3, r2
 80065de:	617b      	str	r3, [r7, #20]
 80065e0:	687b      	ldr	r3, [r7, #4]
 80065e2:	697a      	ldr	r2, [r7, #20]
 80065e4:	605a      	str	r2, [r3, #4]
 80065e6:	687b      	ldr	r3, [r7, #4]
 80065e8:	68fa      	ldr	r2, [r7, #12]
 80065ea:	61da      	str	r2, [r3, #28]
 80065ec:	683b      	ldr	r3, [r7, #0]
 80065ee:	685a      	ldr	r2, [r3, #4]
 80065f0:	687b      	ldr	r3, [r7, #4]
 80065f2:	641a      	str	r2, [r3, #64]	; 0x40
 80065f4:	687b      	ldr	r3, [r7, #4]
 80065f6:	693a      	ldr	r2, [r7, #16]
 80065f8:	621a      	str	r2, [r3, #32]
 80065fa:	bf00      	nop
 80065fc:	371c      	adds	r7, #28
 80065fe:	46bd      	mov	sp, r7
 8006600:	bc80      	pop	{r7}
 8006602:	4770      	bx	lr
 8006604:	40012c00 	.word	0x40012c00

08006608 <TIM_TI1_ConfigInputStage>:
 8006608:	b480      	push	{r7}
 800660a:	b087      	sub	sp, #28
 800660c:	af00      	add	r7, sp, #0
 800660e:	60f8      	str	r0, [r7, #12]
 8006610:	60b9      	str	r1, [r7, #8]
 8006612:	607a      	str	r2, [r7, #4]
 8006614:	68fb      	ldr	r3, [r7, #12]
 8006616:	6a1b      	ldr	r3, [r3, #32]
 8006618:	617b      	str	r3, [r7, #20]
 800661a:	68fb      	ldr	r3, [r7, #12]
 800661c:	6a1b      	ldr	r3, [r3, #32]
 800661e:	f023 0201 	bic.w	r2, r3, #1
 8006622:	68fb      	ldr	r3, [r7, #12]
 8006624:	621a      	str	r2, [r3, #32]
 8006626:	68fb      	ldr	r3, [r7, #12]
 8006628:	699b      	ldr	r3, [r3, #24]
 800662a:	613b      	str	r3, [r7, #16]
 800662c:	693b      	ldr	r3, [r7, #16]
 800662e:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8006632:	613b      	str	r3, [r7, #16]
 8006634:	687b      	ldr	r3, [r7, #4]
 8006636:	011b      	lsls	r3, r3, #4
 8006638:	693a      	ldr	r2, [r7, #16]
 800663a:	4313      	orrs	r3, r2
 800663c:	613b      	str	r3, [r7, #16]
 800663e:	697b      	ldr	r3, [r7, #20]
 8006640:	f023 030a 	bic.w	r3, r3, #10
 8006644:	617b      	str	r3, [r7, #20]
 8006646:	697a      	ldr	r2, [r7, #20]
 8006648:	68bb      	ldr	r3, [r7, #8]
 800664a:	4313      	orrs	r3, r2
 800664c:	617b      	str	r3, [r7, #20]
 800664e:	68fb      	ldr	r3, [r7, #12]
 8006650:	693a      	ldr	r2, [r7, #16]
 8006652:	619a      	str	r2, [r3, #24]
 8006654:	68fb      	ldr	r3, [r7, #12]
 8006656:	697a      	ldr	r2, [r7, #20]
 8006658:	621a      	str	r2, [r3, #32]
 800665a:	bf00      	nop
 800665c:	371c      	adds	r7, #28
 800665e:	46bd      	mov	sp, r7
 8006660:	bc80      	pop	{r7}
 8006662:	4770      	bx	lr

08006664 <TIM_TI2_ConfigInputStage>:
 8006664:	b480      	push	{r7}
 8006666:	b087      	sub	sp, #28
 8006668:	af00      	add	r7, sp, #0
 800666a:	60f8      	str	r0, [r7, #12]
 800666c:	60b9      	str	r1, [r7, #8]
 800666e:	607a      	str	r2, [r7, #4]
 8006670:	68fb      	ldr	r3, [r7, #12]
 8006672:	6a1b      	ldr	r3, [r3, #32]
 8006674:	617b      	str	r3, [r7, #20]
 8006676:	68fb      	ldr	r3, [r7, #12]
 8006678:	6a1b      	ldr	r3, [r3, #32]
 800667a:	f023 0210 	bic.w	r2, r3, #16
 800667e:	68fb      	ldr	r3, [r7, #12]
 8006680:	621a      	str	r2, [r3, #32]
 8006682:	68fb      	ldr	r3, [r7, #12]
 8006684:	699b      	ldr	r3, [r3, #24]
 8006686:	613b      	str	r3, [r7, #16]
 8006688:	693b      	ldr	r3, [r7, #16]
 800668a:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800668e:	613b      	str	r3, [r7, #16]
 8006690:	687b      	ldr	r3, [r7, #4]
 8006692:	031b      	lsls	r3, r3, #12
 8006694:	693a      	ldr	r2, [r7, #16]
 8006696:	4313      	orrs	r3, r2
 8006698:	613b      	str	r3, [r7, #16]
 800669a:	697b      	ldr	r3, [r7, #20]
 800669c:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 80066a0:	617b      	str	r3, [r7, #20]
 80066a2:	68bb      	ldr	r3, [r7, #8]
 80066a4:	011b      	lsls	r3, r3, #4
 80066a6:	697a      	ldr	r2, [r7, #20]
 80066a8:	4313      	orrs	r3, r2
 80066aa:	617b      	str	r3, [r7, #20]
 80066ac:	68fb      	ldr	r3, [r7, #12]
 80066ae:	693a      	ldr	r2, [r7, #16]
 80066b0:	619a      	str	r2, [r3, #24]
 80066b2:	68fb      	ldr	r3, [r7, #12]
 80066b4:	697a      	ldr	r2, [r7, #20]
 80066b6:	621a      	str	r2, [r3, #32]
 80066b8:	bf00      	nop
 80066ba:	371c      	adds	r7, #28
 80066bc:	46bd      	mov	sp, r7
 80066be:	bc80      	pop	{r7}
 80066c0:	4770      	bx	lr

080066c2 <TIM_ITRx_SetConfig>:
 80066c2:	b480      	push	{r7}
 80066c4:	b085      	sub	sp, #20
 80066c6:	af00      	add	r7, sp, #0
 80066c8:	6078      	str	r0, [r7, #4]
 80066ca:	6039      	str	r1, [r7, #0]
 80066cc:	687b      	ldr	r3, [r7, #4]
 80066ce:	689b      	ldr	r3, [r3, #8]
 80066d0:	60fb      	str	r3, [r7, #12]
 80066d2:	68fb      	ldr	r3, [r7, #12]
 80066d4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80066d8:	60fb      	str	r3, [r7, #12]
 80066da:	683a      	ldr	r2, [r7, #0]
 80066dc:	68fb      	ldr	r3, [r7, #12]
 80066de:	4313      	orrs	r3, r2
 80066e0:	f043 0307 	orr.w	r3, r3, #7
 80066e4:	60fb      	str	r3, [r7, #12]
 80066e6:	687b      	ldr	r3, [r7, #4]
 80066e8:	68fa      	ldr	r2, [r7, #12]
 80066ea:	609a      	str	r2, [r3, #8]
 80066ec:	bf00      	nop
 80066ee:	3714      	adds	r7, #20
 80066f0:	46bd      	mov	sp, r7
 80066f2:	bc80      	pop	{r7}
 80066f4:	4770      	bx	lr

080066f6 <TIM_ETR_SetConfig>:
 80066f6:	b480      	push	{r7}
 80066f8:	b087      	sub	sp, #28
 80066fa:	af00      	add	r7, sp, #0
 80066fc:	60f8      	str	r0, [r7, #12]
 80066fe:	60b9      	str	r1, [r7, #8]
 8006700:	607a      	str	r2, [r7, #4]
 8006702:	603b      	str	r3, [r7, #0]
 8006704:	68fb      	ldr	r3, [r7, #12]
 8006706:	689b      	ldr	r3, [r3, #8]
 8006708:	617b      	str	r3, [r7, #20]
 800670a:	697b      	ldr	r3, [r7, #20]
 800670c:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8006710:	617b      	str	r3, [r7, #20]
 8006712:	683b      	ldr	r3, [r7, #0]
 8006714:	021a      	lsls	r2, r3, #8
 8006716:	687b      	ldr	r3, [r7, #4]
 8006718:	431a      	orrs	r2, r3
 800671a:	68bb      	ldr	r3, [r7, #8]
 800671c:	4313      	orrs	r3, r2
 800671e:	697a      	ldr	r2, [r7, #20]
 8006720:	4313      	orrs	r3, r2
 8006722:	617b      	str	r3, [r7, #20]
 8006724:	68fb      	ldr	r3, [r7, #12]
 8006726:	697a      	ldr	r2, [r7, #20]
 8006728:	609a      	str	r2, [r3, #8]
 800672a:	bf00      	nop
 800672c:	371c      	adds	r7, #28
 800672e:	46bd      	mov	sp, r7
 8006730:	bc80      	pop	{r7}
 8006732:	4770      	bx	lr

08006734 <TIM_CCxChannelCmd>:
 8006734:	b480      	push	{r7}
 8006736:	b087      	sub	sp, #28
 8006738:	af00      	add	r7, sp, #0
 800673a:	60f8      	str	r0, [r7, #12]
 800673c:	60b9      	str	r1, [r7, #8]
 800673e:	607a      	str	r2, [r7, #4]
 8006740:	68bb      	ldr	r3, [r7, #8]
 8006742:	f003 031f 	and.w	r3, r3, #31
 8006746:	2201      	movs	r2, #1
 8006748:	fa02 f303 	lsl.w	r3, r2, r3
 800674c:	617b      	str	r3, [r7, #20]
 800674e:	68fb      	ldr	r3, [r7, #12]
 8006750:	6a1a      	ldr	r2, [r3, #32]
 8006752:	697b      	ldr	r3, [r7, #20]
 8006754:	43db      	mvns	r3, r3
 8006756:	401a      	ands	r2, r3
 8006758:	68fb      	ldr	r3, [r7, #12]
 800675a:	621a      	str	r2, [r3, #32]
 800675c:	68fb      	ldr	r3, [r7, #12]
 800675e:	6a1a      	ldr	r2, [r3, #32]
 8006760:	68bb      	ldr	r3, [r7, #8]
 8006762:	f003 031f 	and.w	r3, r3, #31
 8006766:	6879      	ldr	r1, [r7, #4]
 8006768:	fa01 f303 	lsl.w	r3, r1, r3
 800676c:	431a      	orrs	r2, r3
 800676e:	68fb      	ldr	r3, [r7, #12]
 8006770:	621a      	str	r2, [r3, #32]
 8006772:	bf00      	nop
 8006774:	371c      	adds	r7, #28
 8006776:	46bd      	mov	sp, r7
 8006778:	bc80      	pop	{r7}
 800677a:	4770      	bx	lr

0800677c <HAL_TIMEx_MasterConfigSynchronization>:
 800677c:	b480      	push	{r7}
 800677e:	b085      	sub	sp, #20
 8006780:	af00      	add	r7, sp, #0
 8006782:	6078      	str	r0, [r7, #4]
 8006784:	6039      	str	r1, [r7, #0]
 8006786:	687b      	ldr	r3, [r7, #4]
 8006788:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800678c:	2b01      	cmp	r3, #1
 800678e:	d101      	bne.n	8006794 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8006790:	2302      	movs	r3, #2
 8006792:	e04b      	b.n	800682c <HAL_TIMEx_MasterConfigSynchronization+0xb0>
 8006794:	687b      	ldr	r3, [r7, #4]
 8006796:	2201      	movs	r2, #1
 8006798:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800679c:	687b      	ldr	r3, [r7, #4]
 800679e:	2202      	movs	r2, #2
 80067a0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80067a4:	687b      	ldr	r3, [r7, #4]
 80067a6:	681b      	ldr	r3, [r3, #0]
 80067a8:	685b      	ldr	r3, [r3, #4]
 80067aa:	60fb      	str	r3, [r7, #12]
 80067ac:	687b      	ldr	r3, [r7, #4]
 80067ae:	681b      	ldr	r3, [r3, #0]
 80067b0:	689b      	ldr	r3, [r3, #8]
 80067b2:	60bb      	str	r3, [r7, #8]
 80067b4:	68fb      	ldr	r3, [r7, #12]
 80067b6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80067ba:	60fb      	str	r3, [r7, #12]
 80067bc:	683b      	ldr	r3, [r7, #0]
 80067be:	681b      	ldr	r3, [r3, #0]
 80067c0:	68fa      	ldr	r2, [r7, #12]
 80067c2:	4313      	orrs	r3, r2
 80067c4:	60fb      	str	r3, [r7, #12]
 80067c6:	687b      	ldr	r3, [r7, #4]
 80067c8:	681b      	ldr	r3, [r3, #0]
 80067ca:	68fa      	ldr	r2, [r7, #12]
 80067cc:	605a      	str	r2, [r3, #4]
 80067ce:	687b      	ldr	r3, [r7, #4]
 80067d0:	681b      	ldr	r3, [r3, #0]
 80067d2:	4a19      	ldr	r2, [pc, #100]	; (8006838 <HAL_TIMEx_MasterConfigSynchronization+0xbc>)
 80067d4:	4293      	cmp	r3, r2
 80067d6:	d013      	beq.n	8006800 <HAL_TIMEx_MasterConfigSynchronization+0x84>
 80067d8:	687b      	ldr	r3, [r7, #4]
 80067da:	681b      	ldr	r3, [r3, #0]
 80067dc:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80067e0:	d00e      	beq.n	8006800 <HAL_TIMEx_MasterConfigSynchronization+0x84>
 80067e2:	687b      	ldr	r3, [r7, #4]
 80067e4:	681b      	ldr	r3, [r3, #0]
 80067e6:	4a15      	ldr	r2, [pc, #84]	; (800683c <HAL_TIMEx_MasterConfigSynchronization+0xc0>)
 80067e8:	4293      	cmp	r3, r2
 80067ea:	d009      	beq.n	8006800 <HAL_TIMEx_MasterConfigSynchronization+0x84>
 80067ec:	687b      	ldr	r3, [r7, #4]
 80067ee:	681b      	ldr	r3, [r3, #0]
 80067f0:	4a13      	ldr	r2, [pc, #76]	; (8006840 <HAL_TIMEx_MasterConfigSynchronization+0xc4>)
 80067f2:	4293      	cmp	r3, r2
 80067f4:	d004      	beq.n	8006800 <HAL_TIMEx_MasterConfigSynchronization+0x84>
 80067f6:	687b      	ldr	r3, [r7, #4]
 80067f8:	681b      	ldr	r3, [r3, #0]
 80067fa:	4a12      	ldr	r2, [pc, #72]	; (8006844 <HAL_TIMEx_MasterConfigSynchronization+0xc8>)
 80067fc:	4293      	cmp	r3, r2
 80067fe:	d10c      	bne.n	800681a <HAL_TIMEx_MasterConfigSynchronization+0x9e>
 8006800:	68bb      	ldr	r3, [r7, #8]
 8006802:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8006806:	60bb      	str	r3, [r7, #8]
 8006808:	683b      	ldr	r3, [r7, #0]
 800680a:	685b      	ldr	r3, [r3, #4]
 800680c:	68ba      	ldr	r2, [r7, #8]
 800680e:	4313      	orrs	r3, r2
 8006810:	60bb      	str	r3, [r7, #8]
 8006812:	687b      	ldr	r3, [r7, #4]
 8006814:	681b      	ldr	r3, [r3, #0]
 8006816:	68ba      	ldr	r2, [r7, #8]
 8006818:	609a      	str	r2, [r3, #8]
 800681a:	687b      	ldr	r3, [r7, #4]
 800681c:	2201      	movs	r2, #1
 800681e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006822:	687b      	ldr	r3, [r7, #4]
 8006824:	2200      	movs	r2, #0
 8006826:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800682a:	2300      	movs	r3, #0
 800682c:	4618      	mov	r0, r3
 800682e:	3714      	adds	r7, #20
 8006830:	46bd      	mov	sp, r7
 8006832:	bc80      	pop	{r7}
 8006834:	4770      	bx	lr
 8006836:	bf00      	nop
 8006838:	40012c00 	.word	0x40012c00
 800683c:	40000400 	.word	0x40000400
 8006840:	40000800 	.word	0x40000800
 8006844:	40000c00 	.word	0x40000c00

08006848 <HAL_TIMEx_CommutCallback>:
 8006848:	b480      	push	{r7}
 800684a:	b083      	sub	sp, #12
 800684c:	af00      	add	r7, sp, #0
 800684e:	6078      	str	r0, [r7, #4]
 8006850:	bf00      	nop
 8006852:	370c      	adds	r7, #12
 8006854:	46bd      	mov	sp, r7
 8006856:	bc80      	pop	{r7}
 8006858:	4770      	bx	lr

0800685a <HAL_TIMEx_BreakCallback>:
 800685a:	b480      	push	{r7}
 800685c:	b083      	sub	sp, #12
 800685e:	af00      	add	r7, sp, #0
 8006860:	6078      	str	r0, [r7, #4]
 8006862:	bf00      	nop
 8006864:	370c      	adds	r7, #12
 8006866:	46bd      	mov	sp, r7
 8006868:	bc80      	pop	{r7}
 800686a:	4770      	bx	lr

0800686c <HAL_UART_Init>:
 800686c:	b580      	push	{r7, lr}
 800686e:	b082      	sub	sp, #8
 8006870:	af00      	add	r7, sp, #0
 8006872:	6078      	str	r0, [r7, #4]
 8006874:	687b      	ldr	r3, [r7, #4]
 8006876:	2b00      	cmp	r3, #0
 8006878:	d101      	bne.n	800687e <HAL_UART_Init+0x12>
 800687a:	2301      	movs	r3, #1
 800687c:	e042      	b.n	8006904 <HAL_UART_Init+0x98>
 800687e:	687b      	ldr	r3, [r7, #4]
 8006880:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8006884:	b2db      	uxtb	r3, r3
 8006886:	2b00      	cmp	r3, #0
 8006888:	d106      	bne.n	8006898 <HAL_UART_Init+0x2c>
 800688a:	687b      	ldr	r3, [r7, #4]
 800688c:	2200      	movs	r2, #0
 800688e:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8006892:	6878      	ldr	r0, [r7, #4]
 8006894:	f7fc ff7c 	bl	8003790 <HAL_UART_MspInit>
 8006898:	687b      	ldr	r3, [r7, #4]
 800689a:	2224      	movs	r2, #36	; 0x24
 800689c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80068a0:	687b      	ldr	r3, [r7, #4]
 80068a2:	681b      	ldr	r3, [r3, #0]
 80068a4:	68da      	ldr	r2, [r3, #12]
 80068a6:	687b      	ldr	r3, [r7, #4]
 80068a8:	681b      	ldr	r3, [r3, #0]
 80068aa:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80068ae:	60da      	str	r2, [r3, #12]
 80068b0:	6878      	ldr	r0, [r7, #4]
 80068b2:	f000 f91d 	bl	8006af0 <UART_SetConfig>
 80068b6:	687b      	ldr	r3, [r7, #4]
 80068b8:	681b      	ldr	r3, [r3, #0]
 80068ba:	691a      	ldr	r2, [r3, #16]
 80068bc:	687b      	ldr	r3, [r7, #4]
 80068be:	681b      	ldr	r3, [r3, #0]
 80068c0:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 80068c4:	611a      	str	r2, [r3, #16]
 80068c6:	687b      	ldr	r3, [r7, #4]
 80068c8:	681b      	ldr	r3, [r3, #0]
 80068ca:	695a      	ldr	r2, [r3, #20]
 80068cc:	687b      	ldr	r3, [r7, #4]
 80068ce:	681b      	ldr	r3, [r3, #0]
 80068d0:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 80068d4:	615a      	str	r2, [r3, #20]
 80068d6:	687b      	ldr	r3, [r7, #4]
 80068d8:	681b      	ldr	r3, [r3, #0]
 80068da:	68da      	ldr	r2, [r3, #12]
 80068dc:	687b      	ldr	r3, [r7, #4]
 80068de:	681b      	ldr	r3, [r3, #0]
 80068e0:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80068e4:	60da      	str	r2, [r3, #12]
 80068e6:	687b      	ldr	r3, [r7, #4]
 80068e8:	2200      	movs	r2, #0
 80068ea:	645a      	str	r2, [r3, #68]	; 0x44
 80068ec:	687b      	ldr	r3, [r7, #4]
 80068ee:	2220      	movs	r2, #32
 80068f0:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80068f4:	687b      	ldr	r3, [r7, #4]
 80068f6:	2220      	movs	r2, #32
 80068f8:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80068fc:	687b      	ldr	r3, [r7, #4]
 80068fe:	2200      	movs	r2, #0
 8006900:	635a      	str	r2, [r3, #52]	; 0x34
 8006902:	2300      	movs	r3, #0
 8006904:	4618      	mov	r0, r3
 8006906:	3708      	adds	r7, #8
 8006908:	46bd      	mov	sp, r7
 800690a:	bd80      	pop	{r7, pc}

0800690c <HAL_UART_Transmit>:
 800690c:	b580      	push	{r7, lr}
 800690e:	b08a      	sub	sp, #40	; 0x28
 8006910:	af02      	add	r7, sp, #8
 8006912:	60f8      	str	r0, [r7, #12]
 8006914:	60b9      	str	r1, [r7, #8]
 8006916:	603b      	str	r3, [r7, #0]
 8006918:	4613      	mov	r3, r2
 800691a:	80fb      	strh	r3, [r7, #6]
 800691c:	2300      	movs	r3, #0
 800691e:	617b      	str	r3, [r7, #20]
 8006920:	68fb      	ldr	r3, [r7, #12]
 8006922:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8006926:	b2db      	uxtb	r3, r3
 8006928:	2b20      	cmp	r3, #32
 800692a:	d16d      	bne.n	8006a08 <HAL_UART_Transmit+0xfc>
 800692c:	68bb      	ldr	r3, [r7, #8]
 800692e:	2b00      	cmp	r3, #0
 8006930:	d002      	beq.n	8006938 <HAL_UART_Transmit+0x2c>
 8006932:	88fb      	ldrh	r3, [r7, #6]
 8006934:	2b00      	cmp	r3, #0
 8006936:	d101      	bne.n	800693c <HAL_UART_Transmit+0x30>
 8006938:	2301      	movs	r3, #1
 800693a:	e066      	b.n	8006a0a <HAL_UART_Transmit+0xfe>
 800693c:	68fb      	ldr	r3, [r7, #12]
 800693e:	2200      	movs	r2, #0
 8006940:	645a      	str	r2, [r3, #68]	; 0x44
 8006942:	68fb      	ldr	r3, [r7, #12]
 8006944:	2221      	movs	r2, #33	; 0x21
 8006946:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800694a:	f7fc ffb9 	bl	80038c0 <HAL_GetTick>
 800694e:	6178      	str	r0, [r7, #20]
 8006950:	68fb      	ldr	r3, [r7, #12]
 8006952:	88fa      	ldrh	r2, [r7, #6]
 8006954:	849a      	strh	r2, [r3, #36]	; 0x24
 8006956:	68fb      	ldr	r3, [r7, #12]
 8006958:	88fa      	ldrh	r2, [r7, #6]
 800695a:	84da      	strh	r2, [r3, #38]	; 0x26
 800695c:	68fb      	ldr	r3, [r7, #12]
 800695e:	689b      	ldr	r3, [r3, #8]
 8006960:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8006964:	d108      	bne.n	8006978 <HAL_UART_Transmit+0x6c>
 8006966:	68fb      	ldr	r3, [r7, #12]
 8006968:	691b      	ldr	r3, [r3, #16]
 800696a:	2b00      	cmp	r3, #0
 800696c:	d104      	bne.n	8006978 <HAL_UART_Transmit+0x6c>
 800696e:	2300      	movs	r3, #0
 8006970:	61fb      	str	r3, [r7, #28]
 8006972:	68bb      	ldr	r3, [r7, #8]
 8006974:	61bb      	str	r3, [r7, #24]
 8006976:	e003      	b.n	8006980 <HAL_UART_Transmit+0x74>
 8006978:	68bb      	ldr	r3, [r7, #8]
 800697a:	61fb      	str	r3, [r7, #28]
 800697c:	2300      	movs	r3, #0
 800697e:	61bb      	str	r3, [r7, #24]
 8006980:	e02a      	b.n	80069d8 <HAL_UART_Transmit+0xcc>
 8006982:	683b      	ldr	r3, [r7, #0]
 8006984:	9300      	str	r3, [sp, #0]
 8006986:	697b      	ldr	r3, [r7, #20]
 8006988:	2200      	movs	r2, #0
 800698a:	2180      	movs	r1, #128	; 0x80
 800698c:	68f8      	ldr	r0, [r7, #12]
 800698e:	f000 f840 	bl	8006a12 <UART_WaitOnFlagUntilTimeout>
 8006992:	4603      	mov	r3, r0
 8006994:	2b00      	cmp	r3, #0
 8006996:	d001      	beq.n	800699c <HAL_UART_Transmit+0x90>
 8006998:	2303      	movs	r3, #3
 800699a:	e036      	b.n	8006a0a <HAL_UART_Transmit+0xfe>
 800699c:	69fb      	ldr	r3, [r7, #28]
 800699e:	2b00      	cmp	r3, #0
 80069a0:	d10b      	bne.n	80069ba <HAL_UART_Transmit+0xae>
 80069a2:	69bb      	ldr	r3, [r7, #24]
 80069a4:	881b      	ldrh	r3, [r3, #0]
 80069a6:	461a      	mov	r2, r3
 80069a8:	68fb      	ldr	r3, [r7, #12]
 80069aa:	681b      	ldr	r3, [r3, #0]
 80069ac:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80069b0:	605a      	str	r2, [r3, #4]
 80069b2:	69bb      	ldr	r3, [r7, #24]
 80069b4:	3302      	adds	r3, #2
 80069b6:	61bb      	str	r3, [r7, #24]
 80069b8:	e007      	b.n	80069ca <HAL_UART_Transmit+0xbe>
 80069ba:	69fb      	ldr	r3, [r7, #28]
 80069bc:	781a      	ldrb	r2, [r3, #0]
 80069be:	68fb      	ldr	r3, [r7, #12]
 80069c0:	681b      	ldr	r3, [r3, #0]
 80069c2:	605a      	str	r2, [r3, #4]
 80069c4:	69fb      	ldr	r3, [r7, #28]
 80069c6:	3301      	adds	r3, #1
 80069c8:	61fb      	str	r3, [r7, #28]
 80069ca:	68fb      	ldr	r3, [r7, #12]
 80069cc:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80069ce:	b29b      	uxth	r3, r3
 80069d0:	3b01      	subs	r3, #1
 80069d2:	b29a      	uxth	r2, r3
 80069d4:	68fb      	ldr	r3, [r7, #12]
 80069d6:	84da      	strh	r2, [r3, #38]	; 0x26
 80069d8:	68fb      	ldr	r3, [r7, #12]
 80069da:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80069dc:	b29b      	uxth	r3, r3
 80069de:	2b00      	cmp	r3, #0
 80069e0:	d1cf      	bne.n	8006982 <HAL_UART_Transmit+0x76>
 80069e2:	683b      	ldr	r3, [r7, #0]
 80069e4:	9300      	str	r3, [sp, #0]
 80069e6:	697b      	ldr	r3, [r7, #20]
 80069e8:	2200      	movs	r2, #0
 80069ea:	2140      	movs	r1, #64	; 0x40
 80069ec:	68f8      	ldr	r0, [r7, #12]
 80069ee:	f000 f810 	bl	8006a12 <UART_WaitOnFlagUntilTimeout>
 80069f2:	4603      	mov	r3, r0
 80069f4:	2b00      	cmp	r3, #0
 80069f6:	d001      	beq.n	80069fc <HAL_UART_Transmit+0xf0>
 80069f8:	2303      	movs	r3, #3
 80069fa:	e006      	b.n	8006a0a <HAL_UART_Transmit+0xfe>
 80069fc:	68fb      	ldr	r3, [r7, #12]
 80069fe:	2220      	movs	r2, #32
 8006a00:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8006a04:	2300      	movs	r3, #0
 8006a06:	e000      	b.n	8006a0a <HAL_UART_Transmit+0xfe>
 8006a08:	2302      	movs	r3, #2
 8006a0a:	4618      	mov	r0, r3
 8006a0c:	3720      	adds	r7, #32
 8006a0e:	46bd      	mov	sp, r7
 8006a10:	bd80      	pop	{r7, pc}

08006a12 <UART_WaitOnFlagUntilTimeout>:
 8006a12:	b580      	push	{r7, lr}
 8006a14:	b090      	sub	sp, #64	; 0x40
 8006a16:	af00      	add	r7, sp, #0
 8006a18:	60f8      	str	r0, [r7, #12]
 8006a1a:	60b9      	str	r1, [r7, #8]
 8006a1c:	603b      	str	r3, [r7, #0]
 8006a1e:	4613      	mov	r3, r2
 8006a20:	71fb      	strb	r3, [r7, #7]
 8006a22:	e050      	b.n	8006ac6 <UART_WaitOnFlagUntilTimeout+0xb4>
 8006a24:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8006a26:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006a2a:	d04c      	beq.n	8006ac6 <UART_WaitOnFlagUntilTimeout+0xb4>
 8006a2c:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8006a2e:	2b00      	cmp	r3, #0
 8006a30:	d007      	beq.n	8006a42 <UART_WaitOnFlagUntilTimeout+0x30>
 8006a32:	f7fc ff45 	bl	80038c0 <HAL_GetTick>
 8006a36:	4602      	mov	r2, r0
 8006a38:	683b      	ldr	r3, [r7, #0]
 8006a3a:	1ad3      	subs	r3, r2, r3
 8006a3c:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8006a3e:	429a      	cmp	r2, r3
 8006a40:	d241      	bcs.n	8006ac6 <UART_WaitOnFlagUntilTimeout+0xb4>
 8006a42:	68fb      	ldr	r3, [r7, #12]
 8006a44:	681b      	ldr	r3, [r3, #0]
 8006a46:	330c      	adds	r3, #12
 8006a48:	62bb      	str	r3, [r7, #40]	; 0x28
 8006a4a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006a4c:	e853 3f00 	ldrex	r3, [r3]
 8006a50:	627b      	str	r3, [r7, #36]	; 0x24
 8006a52:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006a54:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 8006a58:	63fb      	str	r3, [r7, #60]	; 0x3c
 8006a5a:	68fb      	ldr	r3, [r7, #12]
 8006a5c:	681b      	ldr	r3, [r3, #0]
 8006a5e:	330c      	adds	r3, #12
 8006a60:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8006a62:	637a      	str	r2, [r7, #52]	; 0x34
 8006a64:	633b      	str	r3, [r7, #48]	; 0x30
 8006a66:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8006a68:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8006a6a:	e841 2300 	strex	r3, r2, [r1]
 8006a6e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006a70:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006a72:	2b00      	cmp	r3, #0
 8006a74:	d1e5      	bne.n	8006a42 <UART_WaitOnFlagUntilTimeout+0x30>
 8006a76:	68fb      	ldr	r3, [r7, #12]
 8006a78:	681b      	ldr	r3, [r3, #0]
 8006a7a:	3314      	adds	r3, #20
 8006a7c:	617b      	str	r3, [r7, #20]
 8006a7e:	697b      	ldr	r3, [r7, #20]
 8006a80:	e853 3f00 	ldrex	r3, [r3]
 8006a84:	613b      	str	r3, [r7, #16]
 8006a86:	693b      	ldr	r3, [r7, #16]
 8006a88:	f023 0301 	bic.w	r3, r3, #1
 8006a8c:	63bb      	str	r3, [r7, #56]	; 0x38
 8006a8e:	68fb      	ldr	r3, [r7, #12]
 8006a90:	681b      	ldr	r3, [r3, #0]
 8006a92:	3314      	adds	r3, #20
 8006a94:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8006a96:	623a      	str	r2, [r7, #32]
 8006a98:	61fb      	str	r3, [r7, #28]
 8006a9a:	69f9      	ldr	r1, [r7, #28]
 8006a9c:	6a3a      	ldr	r2, [r7, #32]
 8006a9e:	e841 2300 	strex	r3, r2, [r1]
 8006aa2:	61bb      	str	r3, [r7, #24]
 8006aa4:	69bb      	ldr	r3, [r7, #24]
 8006aa6:	2b00      	cmp	r3, #0
 8006aa8:	d1e5      	bne.n	8006a76 <UART_WaitOnFlagUntilTimeout+0x64>
 8006aaa:	68fb      	ldr	r3, [r7, #12]
 8006aac:	2220      	movs	r2, #32
 8006aae:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8006ab2:	68fb      	ldr	r3, [r7, #12]
 8006ab4:	2220      	movs	r2, #32
 8006ab6:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8006aba:	68fb      	ldr	r3, [r7, #12]
 8006abc:	2200      	movs	r2, #0
 8006abe:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8006ac2:	2303      	movs	r3, #3
 8006ac4:	e00f      	b.n	8006ae6 <UART_WaitOnFlagUntilTimeout+0xd4>
 8006ac6:	68fb      	ldr	r3, [r7, #12]
 8006ac8:	681b      	ldr	r3, [r3, #0]
 8006aca:	681a      	ldr	r2, [r3, #0]
 8006acc:	68bb      	ldr	r3, [r7, #8]
 8006ace:	4013      	ands	r3, r2
 8006ad0:	68ba      	ldr	r2, [r7, #8]
 8006ad2:	429a      	cmp	r2, r3
 8006ad4:	bf0c      	ite	eq
 8006ad6:	2301      	moveq	r3, #1
 8006ad8:	2300      	movne	r3, #0
 8006ada:	b2db      	uxtb	r3, r3
 8006adc:	461a      	mov	r2, r3
 8006ade:	79fb      	ldrb	r3, [r7, #7]
 8006ae0:	429a      	cmp	r2, r3
 8006ae2:	d09f      	beq.n	8006a24 <UART_WaitOnFlagUntilTimeout+0x12>
 8006ae4:	2300      	movs	r3, #0
 8006ae6:	4618      	mov	r0, r3
 8006ae8:	3740      	adds	r7, #64	; 0x40
 8006aea:	46bd      	mov	sp, r7
 8006aec:	bd80      	pop	{r7, pc}
	...

08006af0 <UART_SetConfig>:
 8006af0:	b580      	push	{r7, lr}
 8006af2:	b084      	sub	sp, #16
 8006af4:	af00      	add	r7, sp, #0
 8006af6:	6078      	str	r0, [r7, #4]
 8006af8:	687b      	ldr	r3, [r7, #4]
 8006afa:	681b      	ldr	r3, [r3, #0]
 8006afc:	691b      	ldr	r3, [r3, #16]
 8006afe:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 8006b02:	687b      	ldr	r3, [r7, #4]
 8006b04:	68da      	ldr	r2, [r3, #12]
 8006b06:	687b      	ldr	r3, [r7, #4]
 8006b08:	681b      	ldr	r3, [r3, #0]
 8006b0a:	430a      	orrs	r2, r1
 8006b0c:	611a      	str	r2, [r3, #16]
 8006b0e:	687b      	ldr	r3, [r7, #4]
 8006b10:	689a      	ldr	r2, [r3, #8]
 8006b12:	687b      	ldr	r3, [r7, #4]
 8006b14:	691b      	ldr	r3, [r3, #16]
 8006b16:	431a      	orrs	r2, r3
 8006b18:	687b      	ldr	r3, [r7, #4]
 8006b1a:	695b      	ldr	r3, [r3, #20]
 8006b1c:	4313      	orrs	r3, r2
 8006b1e:	60bb      	str	r3, [r7, #8]
 8006b20:	687b      	ldr	r3, [r7, #4]
 8006b22:	681b      	ldr	r3, [r3, #0]
 8006b24:	68db      	ldr	r3, [r3, #12]
 8006b26:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 8006b2a:	f023 030c 	bic.w	r3, r3, #12
 8006b2e:	687a      	ldr	r2, [r7, #4]
 8006b30:	6812      	ldr	r2, [r2, #0]
 8006b32:	68b9      	ldr	r1, [r7, #8]
 8006b34:	430b      	orrs	r3, r1
 8006b36:	60d3      	str	r3, [r2, #12]
 8006b38:	687b      	ldr	r3, [r7, #4]
 8006b3a:	681b      	ldr	r3, [r3, #0]
 8006b3c:	695b      	ldr	r3, [r3, #20]
 8006b3e:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 8006b42:	687b      	ldr	r3, [r7, #4]
 8006b44:	699a      	ldr	r2, [r3, #24]
 8006b46:	687b      	ldr	r3, [r7, #4]
 8006b48:	681b      	ldr	r3, [r3, #0]
 8006b4a:	430a      	orrs	r2, r1
 8006b4c:	615a      	str	r2, [r3, #20]
 8006b4e:	687b      	ldr	r3, [r7, #4]
 8006b50:	681b      	ldr	r3, [r3, #0]
 8006b52:	4a2c      	ldr	r2, [pc, #176]	; (8006c04 <UART_SetConfig+0x114>)
 8006b54:	4293      	cmp	r3, r2
 8006b56:	d103      	bne.n	8006b60 <UART_SetConfig+0x70>
 8006b58:	f7fd ffe6 	bl	8004b28 <HAL_RCC_GetPCLK2Freq>
 8006b5c:	60f8      	str	r0, [r7, #12]
 8006b5e:	e002      	b.n	8006b66 <UART_SetConfig+0x76>
 8006b60:	f7fd ffce 	bl	8004b00 <HAL_RCC_GetPCLK1Freq>
 8006b64:	60f8      	str	r0, [r7, #12]
 8006b66:	68fa      	ldr	r2, [r7, #12]
 8006b68:	4613      	mov	r3, r2
 8006b6a:	009b      	lsls	r3, r3, #2
 8006b6c:	4413      	add	r3, r2
 8006b6e:	009a      	lsls	r2, r3, #2
 8006b70:	441a      	add	r2, r3
 8006b72:	687b      	ldr	r3, [r7, #4]
 8006b74:	685b      	ldr	r3, [r3, #4]
 8006b76:	009b      	lsls	r3, r3, #2
 8006b78:	fbb2 f3f3 	udiv	r3, r2, r3
 8006b7c:	4a22      	ldr	r2, [pc, #136]	; (8006c08 <UART_SetConfig+0x118>)
 8006b7e:	fba2 2303 	umull	r2, r3, r2, r3
 8006b82:	095b      	lsrs	r3, r3, #5
 8006b84:	0119      	lsls	r1, r3, #4
 8006b86:	68fa      	ldr	r2, [r7, #12]
 8006b88:	4613      	mov	r3, r2
 8006b8a:	009b      	lsls	r3, r3, #2
 8006b8c:	4413      	add	r3, r2
 8006b8e:	009a      	lsls	r2, r3, #2
 8006b90:	441a      	add	r2, r3
 8006b92:	687b      	ldr	r3, [r7, #4]
 8006b94:	685b      	ldr	r3, [r3, #4]
 8006b96:	009b      	lsls	r3, r3, #2
 8006b98:	fbb2 f2f3 	udiv	r2, r2, r3
 8006b9c:	4b1a      	ldr	r3, [pc, #104]	; (8006c08 <UART_SetConfig+0x118>)
 8006b9e:	fba3 0302 	umull	r0, r3, r3, r2
 8006ba2:	095b      	lsrs	r3, r3, #5
 8006ba4:	2064      	movs	r0, #100	; 0x64
 8006ba6:	fb00 f303 	mul.w	r3, r0, r3
 8006baa:	1ad3      	subs	r3, r2, r3
 8006bac:	011b      	lsls	r3, r3, #4
 8006bae:	3332      	adds	r3, #50	; 0x32
 8006bb0:	4a15      	ldr	r2, [pc, #84]	; (8006c08 <UART_SetConfig+0x118>)
 8006bb2:	fba2 2303 	umull	r2, r3, r2, r3
 8006bb6:	095b      	lsrs	r3, r3, #5
 8006bb8:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8006bbc:	4419      	add	r1, r3
 8006bbe:	68fa      	ldr	r2, [r7, #12]
 8006bc0:	4613      	mov	r3, r2
 8006bc2:	009b      	lsls	r3, r3, #2
 8006bc4:	4413      	add	r3, r2
 8006bc6:	009a      	lsls	r2, r3, #2
 8006bc8:	441a      	add	r2, r3
 8006bca:	687b      	ldr	r3, [r7, #4]
 8006bcc:	685b      	ldr	r3, [r3, #4]
 8006bce:	009b      	lsls	r3, r3, #2
 8006bd0:	fbb2 f2f3 	udiv	r2, r2, r3
 8006bd4:	4b0c      	ldr	r3, [pc, #48]	; (8006c08 <UART_SetConfig+0x118>)
 8006bd6:	fba3 0302 	umull	r0, r3, r3, r2
 8006bda:	095b      	lsrs	r3, r3, #5
 8006bdc:	2064      	movs	r0, #100	; 0x64
 8006bde:	fb00 f303 	mul.w	r3, r0, r3
 8006be2:	1ad3      	subs	r3, r2, r3
 8006be4:	011b      	lsls	r3, r3, #4
 8006be6:	3332      	adds	r3, #50	; 0x32
 8006be8:	4a07      	ldr	r2, [pc, #28]	; (8006c08 <UART_SetConfig+0x118>)
 8006bea:	fba2 2303 	umull	r2, r3, r2, r3
 8006bee:	095b      	lsrs	r3, r3, #5
 8006bf0:	f003 020f 	and.w	r2, r3, #15
 8006bf4:	687b      	ldr	r3, [r7, #4]
 8006bf6:	681b      	ldr	r3, [r3, #0]
 8006bf8:	440a      	add	r2, r1
 8006bfa:	609a      	str	r2, [r3, #8]
 8006bfc:	bf00      	nop
 8006bfe:	3710      	adds	r7, #16
 8006c00:	46bd      	mov	sp, r7
 8006c02:	bd80      	pop	{r7, pc}
 8006c04:	40013800 	.word	0x40013800
 8006c08:	51eb851f 	.word	0x51eb851f

08006c0c <vApplicationGetIdleTaskMemory>:
 8006c0c:	b480      	push	{r7}
 8006c0e:	b085      	sub	sp, #20
 8006c10:	af00      	add	r7, sp, #0
 8006c12:	60f8      	str	r0, [r7, #12]
 8006c14:	60b9      	str	r1, [r7, #8]
 8006c16:	607a      	str	r2, [r7, #4]
 8006c18:	68fb      	ldr	r3, [r7, #12]
 8006c1a:	4a06      	ldr	r2, [pc, #24]	; (8006c34 <vApplicationGetIdleTaskMemory+0x28>)
 8006c1c:	601a      	str	r2, [r3, #0]
 8006c1e:	68bb      	ldr	r3, [r7, #8]
 8006c20:	4a05      	ldr	r2, [pc, #20]	; (8006c38 <vApplicationGetIdleTaskMemory+0x2c>)
 8006c22:	601a      	str	r2, [r3, #0]
 8006c24:	687b      	ldr	r3, [r7, #4]
 8006c26:	2280      	movs	r2, #128	; 0x80
 8006c28:	601a      	str	r2, [r3, #0]
 8006c2a:	bf00      	nop
 8006c2c:	3714      	adds	r7, #20
 8006c2e:	46bd      	mov	sp, r7
 8006c30:	bc80      	pop	{r7}
 8006c32:	4770      	bx	lr
 8006c34:	20000678 	.word	0x20000678
 8006c38:	200006d4 	.word	0x200006d4

08006c3c <vApplicationGetTimerTaskMemory>:
 8006c3c:	b480      	push	{r7}
 8006c3e:	b085      	sub	sp, #20
 8006c40:	af00      	add	r7, sp, #0
 8006c42:	60f8      	str	r0, [r7, #12]
 8006c44:	60b9      	str	r1, [r7, #8]
 8006c46:	607a      	str	r2, [r7, #4]
 8006c48:	68fb      	ldr	r3, [r7, #12]
 8006c4a:	4a07      	ldr	r2, [pc, #28]	; (8006c68 <vApplicationGetTimerTaskMemory+0x2c>)
 8006c4c:	601a      	str	r2, [r3, #0]
 8006c4e:	68bb      	ldr	r3, [r7, #8]
 8006c50:	4a06      	ldr	r2, [pc, #24]	; (8006c6c <vApplicationGetTimerTaskMemory+0x30>)
 8006c52:	601a      	str	r2, [r3, #0]
 8006c54:	687b      	ldr	r3, [r7, #4]
 8006c56:	f44f 7280 	mov.w	r2, #256	; 0x100
 8006c5a:	601a      	str	r2, [r3, #0]
 8006c5c:	bf00      	nop
 8006c5e:	3714      	adds	r7, #20
 8006c60:	46bd      	mov	sp, r7
 8006c62:	bc80      	pop	{r7}
 8006c64:	4770      	bx	lr
 8006c66:	bf00      	nop
 8006c68:	200008d4 	.word	0x200008d4
 8006c6c:	20000930 	.word	0x20000930

08006c70 <vListInitialise>:
 8006c70:	b480      	push	{r7}
 8006c72:	b083      	sub	sp, #12
 8006c74:	af00      	add	r7, sp, #0
 8006c76:	6078      	str	r0, [r7, #4]
 8006c78:	687b      	ldr	r3, [r7, #4]
 8006c7a:	f103 0208 	add.w	r2, r3, #8
 8006c7e:	687b      	ldr	r3, [r7, #4]
 8006c80:	605a      	str	r2, [r3, #4]
 8006c82:	687b      	ldr	r3, [r7, #4]
 8006c84:	f04f 32ff 	mov.w	r2, #4294967295
 8006c88:	609a      	str	r2, [r3, #8]
 8006c8a:	687b      	ldr	r3, [r7, #4]
 8006c8c:	f103 0208 	add.w	r2, r3, #8
 8006c90:	687b      	ldr	r3, [r7, #4]
 8006c92:	60da      	str	r2, [r3, #12]
 8006c94:	687b      	ldr	r3, [r7, #4]
 8006c96:	f103 0208 	add.w	r2, r3, #8
 8006c9a:	687b      	ldr	r3, [r7, #4]
 8006c9c:	611a      	str	r2, [r3, #16]
 8006c9e:	687b      	ldr	r3, [r7, #4]
 8006ca0:	2200      	movs	r2, #0
 8006ca2:	601a      	str	r2, [r3, #0]
 8006ca4:	bf00      	nop
 8006ca6:	370c      	adds	r7, #12
 8006ca8:	46bd      	mov	sp, r7
 8006caa:	bc80      	pop	{r7}
 8006cac:	4770      	bx	lr

08006cae <vListInitialiseItem>:
 8006cae:	b480      	push	{r7}
 8006cb0:	b083      	sub	sp, #12
 8006cb2:	af00      	add	r7, sp, #0
 8006cb4:	6078      	str	r0, [r7, #4]
 8006cb6:	687b      	ldr	r3, [r7, #4]
 8006cb8:	2200      	movs	r2, #0
 8006cba:	611a      	str	r2, [r3, #16]
 8006cbc:	bf00      	nop
 8006cbe:	370c      	adds	r7, #12
 8006cc0:	46bd      	mov	sp, r7
 8006cc2:	bc80      	pop	{r7}
 8006cc4:	4770      	bx	lr

08006cc6 <vListInsertEnd>:
 8006cc6:	b480      	push	{r7}
 8006cc8:	b085      	sub	sp, #20
 8006cca:	af00      	add	r7, sp, #0
 8006ccc:	6078      	str	r0, [r7, #4]
 8006cce:	6039      	str	r1, [r7, #0]
 8006cd0:	687b      	ldr	r3, [r7, #4]
 8006cd2:	685b      	ldr	r3, [r3, #4]
 8006cd4:	60fb      	str	r3, [r7, #12]
 8006cd6:	683b      	ldr	r3, [r7, #0]
 8006cd8:	68fa      	ldr	r2, [r7, #12]
 8006cda:	605a      	str	r2, [r3, #4]
 8006cdc:	68fb      	ldr	r3, [r7, #12]
 8006cde:	689a      	ldr	r2, [r3, #8]
 8006ce0:	683b      	ldr	r3, [r7, #0]
 8006ce2:	609a      	str	r2, [r3, #8]
 8006ce4:	68fb      	ldr	r3, [r7, #12]
 8006ce6:	689b      	ldr	r3, [r3, #8]
 8006ce8:	683a      	ldr	r2, [r7, #0]
 8006cea:	605a      	str	r2, [r3, #4]
 8006cec:	68fb      	ldr	r3, [r7, #12]
 8006cee:	683a      	ldr	r2, [r7, #0]
 8006cf0:	609a      	str	r2, [r3, #8]
 8006cf2:	683b      	ldr	r3, [r7, #0]
 8006cf4:	687a      	ldr	r2, [r7, #4]
 8006cf6:	611a      	str	r2, [r3, #16]
 8006cf8:	687b      	ldr	r3, [r7, #4]
 8006cfa:	681b      	ldr	r3, [r3, #0]
 8006cfc:	1c5a      	adds	r2, r3, #1
 8006cfe:	687b      	ldr	r3, [r7, #4]
 8006d00:	601a      	str	r2, [r3, #0]
 8006d02:	bf00      	nop
 8006d04:	3714      	adds	r7, #20
 8006d06:	46bd      	mov	sp, r7
 8006d08:	bc80      	pop	{r7}
 8006d0a:	4770      	bx	lr

08006d0c <vListInsert>:
 8006d0c:	b480      	push	{r7}
 8006d0e:	b085      	sub	sp, #20
 8006d10:	af00      	add	r7, sp, #0
 8006d12:	6078      	str	r0, [r7, #4]
 8006d14:	6039      	str	r1, [r7, #0]
 8006d16:	683b      	ldr	r3, [r7, #0]
 8006d18:	681b      	ldr	r3, [r3, #0]
 8006d1a:	60bb      	str	r3, [r7, #8]
 8006d1c:	68bb      	ldr	r3, [r7, #8]
 8006d1e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006d22:	d103      	bne.n	8006d2c <vListInsert+0x20>
 8006d24:	687b      	ldr	r3, [r7, #4]
 8006d26:	691b      	ldr	r3, [r3, #16]
 8006d28:	60fb      	str	r3, [r7, #12]
 8006d2a:	e00c      	b.n	8006d46 <vListInsert+0x3a>
 8006d2c:	687b      	ldr	r3, [r7, #4]
 8006d2e:	3308      	adds	r3, #8
 8006d30:	60fb      	str	r3, [r7, #12]
 8006d32:	e002      	b.n	8006d3a <vListInsert+0x2e>
 8006d34:	68fb      	ldr	r3, [r7, #12]
 8006d36:	685b      	ldr	r3, [r3, #4]
 8006d38:	60fb      	str	r3, [r7, #12]
 8006d3a:	68fb      	ldr	r3, [r7, #12]
 8006d3c:	685b      	ldr	r3, [r3, #4]
 8006d3e:	681b      	ldr	r3, [r3, #0]
 8006d40:	68ba      	ldr	r2, [r7, #8]
 8006d42:	429a      	cmp	r2, r3
 8006d44:	d2f6      	bcs.n	8006d34 <vListInsert+0x28>
 8006d46:	68fb      	ldr	r3, [r7, #12]
 8006d48:	685a      	ldr	r2, [r3, #4]
 8006d4a:	683b      	ldr	r3, [r7, #0]
 8006d4c:	605a      	str	r2, [r3, #4]
 8006d4e:	683b      	ldr	r3, [r7, #0]
 8006d50:	685b      	ldr	r3, [r3, #4]
 8006d52:	683a      	ldr	r2, [r7, #0]
 8006d54:	609a      	str	r2, [r3, #8]
 8006d56:	683b      	ldr	r3, [r7, #0]
 8006d58:	68fa      	ldr	r2, [r7, #12]
 8006d5a:	609a      	str	r2, [r3, #8]
 8006d5c:	68fb      	ldr	r3, [r7, #12]
 8006d5e:	683a      	ldr	r2, [r7, #0]
 8006d60:	605a      	str	r2, [r3, #4]
 8006d62:	683b      	ldr	r3, [r7, #0]
 8006d64:	687a      	ldr	r2, [r7, #4]
 8006d66:	611a      	str	r2, [r3, #16]
 8006d68:	687b      	ldr	r3, [r7, #4]
 8006d6a:	681b      	ldr	r3, [r3, #0]
 8006d6c:	1c5a      	adds	r2, r3, #1
 8006d6e:	687b      	ldr	r3, [r7, #4]
 8006d70:	601a      	str	r2, [r3, #0]
 8006d72:	bf00      	nop
 8006d74:	3714      	adds	r7, #20
 8006d76:	46bd      	mov	sp, r7
 8006d78:	bc80      	pop	{r7}
 8006d7a:	4770      	bx	lr

08006d7c <uxListRemove>:
 8006d7c:	b480      	push	{r7}
 8006d7e:	b085      	sub	sp, #20
 8006d80:	af00      	add	r7, sp, #0
 8006d82:	6078      	str	r0, [r7, #4]
 8006d84:	687b      	ldr	r3, [r7, #4]
 8006d86:	691b      	ldr	r3, [r3, #16]
 8006d88:	60fb      	str	r3, [r7, #12]
 8006d8a:	687b      	ldr	r3, [r7, #4]
 8006d8c:	685b      	ldr	r3, [r3, #4]
 8006d8e:	687a      	ldr	r2, [r7, #4]
 8006d90:	6892      	ldr	r2, [r2, #8]
 8006d92:	609a      	str	r2, [r3, #8]
 8006d94:	687b      	ldr	r3, [r7, #4]
 8006d96:	689b      	ldr	r3, [r3, #8]
 8006d98:	687a      	ldr	r2, [r7, #4]
 8006d9a:	6852      	ldr	r2, [r2, #4]
 8006d9c:	605a      	str	r2, [r3, #4]
 8006d9e:	68fb      	ldr	r3, [r7, #12]
 8006da0:	685b      	ldr	r3, [r3, #4]
 8006da2:	687a      	ldr	r2, [r7, #4]
 8006da4:	429a      	cmp	r2, r3
 8006da6:	d103      	bne.n	8006db0 <uxListRemove+0x34>
 8006da8:	687b      	ldr	r3, [r7, #4]
 8006daa:	689a      	ldr	r2, [r3, #8]
 8006dac:	68fb      	ldr	r3, [r7, #12]
 8006dae:	605a      	str	r2, [r3, #4]
 8006db0:	687b      	ldr	r3, [r7, #4]
 8006db2:	2200      	movs	r2, #0
 8006db4:	611a      	str	r2, [r3, #16]
 8006db6:	68fb      	ldr	r3, [r7, #12]
 8006db8:	681b      	ldr	r3, [r3, #0]
 8006dba:	1e5a      	subs	r2, r3, #1
 8006dbc:	68fb      	ldr	r3, [r7, #12]
 8006dbe:	601a      	str	r2, [r3, #0]
 8006dc0:	68fb      	ldr	r3, [r7, #12]
 8006dc2:	681b      	ldr	r3, [r3, #0]
 8006dc4:	4618      	mov	r0, r3
 8006dc6:	3714      	adds	r7, #20
 8006dc8:	46bd      	mov	sp, r7
 8006dca:	bc80      	pop	{r7}
 8006dcc:	4770      	bx	lr
	...

08006dd0 <xQueueGenericReset>:
 8006dd0:	b580      	push	{r7, lr}
 8006dd2:	b084      	sub	sp, #16
 8006dd4:	af00      	add	r7, sp, #0
 8006dd6:	6078      	str	r0, [r7, #4]
 8006dd8:	6039      	str	r1, [r7, #0]
 8006dda:	687b      	ldr	r3, [r7, #4]
 8006ddc:	60fb      	str	r3, [r7, #12]
 8006dde:	68fb      	ldr	r3, [r7, #12]
 8006de0:	2b00      	cmp	r3, #0
 8006de2:	d10a      	bne.n	8006dfa <xQueueGenericReset+0x2a>
 8006de4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006de8:	f383 8811 	msr	BASEPRI, r3
 8006dec:	f3bf 8f6f 	isb	sy
 8006df0:	f3bf 8f4f 	dsb	sy
 8006df4:	60bb      	str	r3, [r7, #8]
 8006df6:	bf00      	nop
 8006df8:	e7fe      	b.n	8006df8 <xQueueGenericReset+0x28>
 8006dfa:	f002 f8f7 	bl	8008fec <vPortEnterCritical>
 8006dfe:	68fb      	ldr	r3, [r7, #12]
 8006e00:	681a      	ldr	r2, [r3, #0]
 8006e02:	68fb      	ldr	r3, [r7, #12]
 8006e04:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006e06:	68f9      	ldr	r1, [r7, #12]
 8006e08:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8006e0a:	fb01 f303 	mul.w	r3, r1, r3
 8006e0e:	441a      	add	r2, r3
 8006e10:	68fb      	ldr	r3, [r7, #12]
 8006e12:	605a      	str	r2, [r3, #4]
 8006e14:	68fb      	ldr	r3, [r7, #12]
 8006e16:	2200      	movs	r2, #0
 8006e18:	639a      	str	r2, [r3, #56]	; 0x38
 8006e1a:	68fb      	ldr	r3, [r7, #12]
 8006e1c:	681a      	ldr	r2, [r3, #0]
 8006e1e:	68fb      	ldr	r3, [r7, #12]
 8006e20:	609a      	str	r2, [r3, #8]
 8006e22:	68fb      	ldr	r3, [r7, #12]
 8006e24:	681a      	ldr	r2, [r3, #0]
 8006e26:	68fb      	ldr	r3, [r7, #12]
 8006e28:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006e2a:	3b01      	subs	r3, #1
 8006e2c:	68f9      	ldr	r1, [r7, #12]
 8006e2e:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8006e30:	fb01 f303 	mul.w	r3, r1, r3
 8006e34:	441a      	add	r2, r3
 8006e36:	68fb      	ldr	r3, [r7, #12]
 8006e38:	60da      	str	r2, [r3, #12]
 8006e3a:	68fb      	ldr	r3, [r7, #12]
 8006e3c:	22ff      	movs	r2, #255	; 0xff
 8006e3e:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8006e42:	68fb      	ldr	r3, [r7, #12]
 8006e44:	22ff      	movs	r2, #255	; 0xff
 8006e46:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8006e4a:	683b      	ldr	r3, [r7, #0]
 8006e4c:	2b00      	cmp	r3, #0
 8006e4e:	d114      	bne.n	8006e7a <xQueueGenericReset+0xaa>
 8006e50:	68fb      	ldr	r3, [r7, #12]
 8006e52:	691b      	ldr	r3, [r3, #16]
 8006e54:	2b00      	cmp	r3, #0
 8006e56:	d01a      	beq.n	8006e8e <xQueueGenericReset+0xbe>
 8006e58:	68fb      	ldr	r3, [r7, #12]
 8006e5a:	3310      	adds	r3, #16
 8006e5c:	4618      	mov	r0, r3
 8006e5e:	f001 f92f 	bl	80080c0 <xTaskRemoveFromEventList>
 8006e62:	4603      	mov	r3, r0
 8006e64:	2b00      	cmp	r3, #0
 8006e66:	d012      	beq.n	8006e8e <xQueueGenericReset+0xbe>
 8006e68:	4b0c      	ldr	r3, [pc, #48]	; (8006e9c <xQueueGenericReset+0xcc>)
 8006e6a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006e6e:	601a      	str	r2, [r3, #0]
 8006e70:	f3bf 8f4f 	dsb	sy
 8006e74:	f3bf 8f6f 	isb	sy
 8006e78:	e009      	b.n	8006e8e <xQueueGenericReset+0xbe>
 8006e7a:	68fb      	ldr	r3, [r7, #12]
 8006e7c:	3310      	adds	r3, #16
 8006e7e:	4618      	mov	r0, r3
 8006e80:	f7ff fef6 	bl	8006c70 <vListInitialise>
 8006e84:	68fb      	ldr	r3, [r7, #12]
 8006e86:	3324      	adds	r3, #36	; 0x24
 8006e88:	4618      	mov	r0, r3
 8006e8a:	f7ff fef1 	bl	8006c70 <vListInitialise>
 8006e8e:	f002 f8dd 	bl	800904c <vPortExitCritical>
 8006e92:	2301      	movs	r3, #1
 8006e94:	4618      	mov	r0, r3
 8006e96:	3710      	adds	r7, #16
 8006e98:	46bd      	mov	sp, r7
 8006e9a:	bd80      	pop	{r7, pc}
 8006e9c:	e000ed04 	.word	0xe000ed04

08006ea0 <xQueueGenericCreateStatic>:
 8006ea0:	b580      	push	{r7, lr}
 8006ea2:	b08e      	sub	sp, #56	; 0x38
 8006ea4:	af02      	add	r7, sp, #8
 8006ea6:	60f8      	str	r0, [r7, #12]
 8006ea8:	60b9      	str	r1, [r7, #8]
 8006eaa:	607a      	str	r2, [r7, #4]
 8006eac:	603b      	str	r3, [r7, #0]
 8006eae:	68fb      	ldr	r3, [r7, #12]
 8006eb0:	2b00      	cmp	r3, #0
 8006eb2:	d10a      	bne.n	8006eca <xQueueGenericCreateStatic+0x2a>
 8006eb4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006eb8:	f383 8811 	msr	BASEPRI, r3
 8006ebc:	f3bf 8f6f 	isb	sy
 8006ec0:	f3bf 8f4f 	dsb	sy
 8006ec4:	62bb      	str	r3, [r7, #40]	; 0x28
 8006ec6:	bf00      	nop
 8006ec8:	e7fe      	b.n	8006ec8 <xQueueGenericCreateStatic+0x28>
 8006eca:	683b      	ldr	r3, [r7, #0]
 8006ecc:	2b00      	cmp	r3, #0
 8006ece:	d10a      	bne.n	8006ee6 <xQueueGenericCreateStatic+0x46>
 8006ed0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006ed4:	f383 8811 	msr	BASEPRI, r3
 8006ed8:	f3bf 8f6f 	isb	sy
 8006edc:	f3bf 8f4f 	dsb	sy
 8006ee0:	627b      	str	r3, [r7, #36]	; 0x24
 8006ee2:	bf00      	nop
 8006ee4:	e7fe      	b.n	8006ee4 <xQueueGenericCreateStatic+0x44>
 8006ee6:	687b      	ldr	r3, [r7, #4]
 8006ee8:	2b00      	cmp	r3, #0
 8006eea:	d002      	beq.n	8006ef2 <xQueueGenericCreateStatic+0x52>
 8006eec:	68bb      	ldr	r3, [r7, #8]
 8006eee:	2b00      	cmp	r3, #0
 8006ef0:	d001      	beq.n	8006ef6 <xQueueGenericCreateStatic+0x56>
 8006ef2:	2301      	movs	r3, #1
 8006ef4:	e000      	b.n	8006ef8 <xQueueGenericCreateStatic+0x58>
 8006ef6:	2300      	movs	r3, #0
 8006ef8:	2b00      	cmp	r3, #0
 8006efa:	d10a      	bne.n	8006f12 <xQueueGenericCreateStatic+0x72>
 8006efc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006f00:	f383 8811 	msr	BASEPRI, r3
 8006f04:	f3bf 8f6f 	isb	sy
 8006f08:	f3bf 8f4f 	dsb	sy
 8006f0c:	623b      	str	r3, [r7, #32]
 8006f0e:	bf00      	nop
 8006f10:	e7fe      	b.n	8006f10 <xQueueGenericCreateStatic+0x70>
 8006f12:	687b      	ldr	r3, [r7, #4]
 8006f14:	2b00      	cmp	r3, #0
 8006f16:	d102      	bne.n	8006f1e <xQueueGenericCreateStatic+0x7e>
 8006f18:	68bb      	ldr	r3, [r7, #8]
 8006f1a:	2b00      	cmp	r3, #0
 8006f1c:	d101      	bne.n	8006f22 <xQueueGenericCreateStatic+0x82>
 8006f1e:	2301      	movs	r3, #1
 8006f20:	e000      	b.n	8006f24 <xQueueGenericCreateStatic+0x84>
 8006f22:	2300      	movs	r3, #0
 8006f24:	2b00      	cmp	r3, #0
 8006f26:	d10a      	bne.n	8006f3e <xQueueGenericCreateStatic+0x9e>
 8006f28:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006f2c:	f383 8811 	msr	BASEPRI, r3
 8006f30:	f3bf 8f6f 	isb	sy
 8006f34:	f3bf 8f4f 	dsb	sy
 8006f38:	61fb      	str	r3, [r7, #28]
 8006f3a:	bf00      	nop
 8006f3c:	e7fe      	b.n	8006f3c <xQueueGenericCreateStatic+0x9c>
 8006f3e:	2350      	movs	r3, #80	; 0x50
 8006f40:	617b      	str	r3, [r7, #20]
 8006f42:	697b      	ldr	r3, [r7, #20]
 8006f44:	2b50      	cmp	r3, #80	; 0x50
 8006f46:	d00a      	beq.n	8006f5e <xQueueGenericCreateStatic+0xbe>
 8006f48:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006f4c:	f383 8811 	msr	BASEPRI, r3
 8006f50:	f3bf 8f6f 	isb	sy
 8006f54:	f3bf 8f4f 	dsb	sy
 8006f58:	61bb      	str	r3, [r7, #24]
 8006f5a:	bf00      	nop
 8006f5c:	e7fe      	b.n	8006f5c <xQueueGenericCreateStatic+0xbc>
 8006f5e:	683b      	ldr	r3, [r7, #0]
 8006f60:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006f62:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006f64:	2b00      	cmp	r3, #0
 8006f66:	d00d      	beq.n	8006f84 <xQueueGenericCreateStatic+0xe4>
 8006f68:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006f6a:	2201      	movs	r2, #1
 8006f6c:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8006f70:	f897 2038 	ldrb.w	r2, [r7, #56]	; 0x38
 8006f74:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006f76:	9300      	str	r3, [sp, #0]
 8006f78:	4613      	mov	r3, r2
 8006f7a:	687a      	ldr	r2, [r7, #4]
 8006f7c:	68b9      	ldr	r1, [r7, #8]
 8006f7e:	68f8      	ldr	r0, [r7, #12]
 8006f80:	f000 f843 	bl	800700a <prvInitialiseNewQueue>
 8006f84:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006f86:	4618      	mov	r0, r3
 8006f88:	3730      	adds	r7, #48	; 0x30
 8006f8a:	46bd      	mov	sp, r7
 8006f8c:	bd80      	pop	{r7, pc}

08006f8e <xQueueGenericCreate>:
 8006f8e:	b580      	push	{r7, lr}
 8006f90:	b08a      	sub	sp, #40	; 0x28
 8006f92:	af02      	add	r7, sp, #8
 8006f94:	60f8      	str	r0, [r7, #12]
 8006f96:	60b9      	str	r1, [r7, #8]
 8006f98:	4613      	mov	r3, r2
 8006f9a:	71fb      	strb	r3, [r7, #7]
 8006f9c:	68fb      	ldr	r3, [r7, #12]
 8006f9e:	2b00      	cmp	r3, #0
 8006fa0:	d10a      	bne.n	8006fb8 <xQueueGenericCreate+0x2a>
 8006fa2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006fa6:	f383 8811 	msr	BASEPRI, r3
 8006faa:	f3bf 8f6f 	isb	sy
 8006fae:	f3bf 8f4f 	dsb	sy
 8006fb2:	613b      	str	r3, [r7, #16]
 8006fb4:	bf00      	nop
 8006fb6:	e7fe      	b.n	8006fb6 <xQueueGenericCreate+0x28>
 8006fb8:	68bb      	ldr	r3, [r7, #8]
 8006fba:	2b00      	cmp	r3, #0
 8006fbc:	d102      	bne.n	8006fc4 <xQueueGenericCreate+0x36>
 8006fbe:	2300      	movs	r3, #0
 8006fc0:	61fb      	str	r3, [r7, #28]
 8006fc2:	e004      	b.n	8006fce <xQueueGenericCreate+0x40>
 8006fc4:	68fb      	ldr	r3, [r7, #12]
 8006fc6:	68ba      	ldr	r2, [r7, #8]
 8006fc8:	fb02 f303 	mul.w	r3, r2, r3
 8006fcc:	61fb      	str	r3, [r7, #28]
 8006fce:	69fb      	ldr	r3, [r7, #28]
 8006fd0:	3350      	adds	r3, #80	; 0x50
 8006fd2:	4618      	mov	r0, r3
 8006fd4:	f002 f90a 	bl	80091ec <pvPortMalloc>
 8006fd8:	61b8      	str	r0, [r7, #24]
 8006fda:	69bb      	ldr	r3, [r7, #24]
 8006fdc:	2b00      	cmp	r3, #0
 8006fde:	d00f      	beq.n	8007000 <xQueueGenericCreate+0x72>
 8006fe0:	69bb      	ldr	r3, [r7, #24]
 8006fe2:	3350      	adds	r3, #80	; 0x50
 8006fe4:	617b      	str	r3, [r7, #20]
 8006fe6:	69bb      	ldr	r3, [r7, #24]
 8006fe8:	2200      	movs	r2, #0
 8006fea:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8006fee:	79fa      	ldrb	r2, [r7, #7]
 8006ff0:	69bb      	ldr	r3, [r7, #24]
 8006ff2:	9300      	str	r3, [sp, #0]
 8006ff4:	4613      	mov	r3, r2
 8006ff6:	697a      	ldr	r2, [r7, #20]
 8006ff8:	68b9      	ldr	r1, [r7, #8]
 8006ffa:	68f8      	ldr	r0, [r7, #12]
 8006ffc:	f000 f805 	bl	800700a <prvInitialiseNewQueue>
 8007000:	69bb      	ldr	r3, [r7, #24]
 8007002:	4618      	mov	r0, r3
 8007004:	3720      	adds	r7, #32
 8007006:	46bd      	mov	sp, r7
 8007008:	bd80      	pop	{r7, pc}

0800700a <prvInitialiseNewQueue>:
 800700a:	b580      	push	{r7, lr}
 800700c:	b084      	sub	sp, #16
 800700e:	af00      	add	r7, sp, #0
 8007010:	60f8      	str	r0, [r7, #12]
 8007012:	60b9      	str	r1, [r7, #8]
 8007014:	607a      	str	r2, [r7, #4]
 8007016:	70fb      	strb	r3, [r7, #3]
 8007018:	68bb      	ldr	r3, [r7, #8]
 800701a:	2b00      	cmp	r3, #0
 800701c:	d103      	bne.n	8007026 <prvInitialiseNewQueue+0x1c>
 800701e:	69bb      	ldr	r3, [r7, #24]
 8007020:	69ba      	ldr	r2, [r7, #24]
 8007022:	601a      	str	r2, [r3, #0]
 8007024:	e002      	b.n	800702c <prvInitialiseNewQueue+0x22>
 8007026:	69bb      	ldr	r3, [r7, #24]
 8007028:	687a      	ldr	r2, [r7, #4]
 800702a:	601a      	str	r2, [r3, #0]
 800702c:	69bb      	ldr	r3, [r7, #24]
 800702e:	68fa      	ldr	r2, [r7, #12]
 8007030:	63da      	str	r2, [r3, #60]	; 0x3c
 8007032:	69bb      	ldr	r3, [r7, #24]
 8007034:	68ba      	ldr	r2, [r7, #8]
 8007036:	641a      	str	r2, [r3, #64]	; 0x40
 8007038:	2101      	movs	r1, #1
 800703a:	69b8      	ldr	r0, [r7, #24]
 800703c:	f7ff fec8 	bl	8006dd0 <xQueueGenericReset>
 8007040:	69bb      	ldr	r3, [r7, #24]
 8007042:	78fa      	ldrb	r2, [r7, #3]
 8007044:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c
 8007048:	bf00      	nop
 800704a:	3710      	adds	r7, #16
 800704c:	46bd      	mov	sp, r7
 800704e:	bd80      	pop	{r7, pc}

08007050 <xQueueGenericSend>:
 8007050:	b580      	push	{r7, lr}
 8007052:	b08e      	sub	sp, #56	; 0x38
 8007054:	af00      	add	r7, sp, #0
 8007056:	60f8      	str	r0, [r7, #12]
 8007058:	60b9      	str	r1, [r7, #8]
 800705a:	607a      	str	r2, [r7, #4]
 800705c:	603b      	str	r3, [r7, #0]
 800705e:	2300      	movs	r3, #0
 8007060:	637b      	str	r3, [r7, #52]	; 0x34
 8007062:	68fb      	ldr	r3, [r7, #12]
 8007064:	633b      	str	r3, [r7, #48]	; 0x30
 8007066:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007068:	2b00      	cmp	r3, #0
 800706a:	d10a      	bne.n	8007082 <xQueueGenericSend+0x32>
 800706c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007070:	f383 8811 	msr	BASEPRI, r3
 8007074:	f3bf 8f6f 	isb	sy
 8007078:	f3bf 8f4f 	dsb	sy
 800707c:	62bb      	str	r3, [r7, #40]	; 0x28
 800707e:	bf00      	nop
 8007080:	e7fe      	b.n	8007080 <xQueueGenericSend+0x30>
 8007082:	68bb      	ldr	r3, [r7, #8]
 8007084:	2b00      	cmp	r3, #0
 8007086:	d103      	bne.n	8007090 <xQueueGenericSend+0x40>
 8007088:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800708a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800708c:	2b00      	cmp	r3, #0
 800708e:	d101      	bne.n	8007094 <xQueueGenericSend+0x44>
 8007090:	2301      	movs	r3, #1
 8007092:	e000      	b.n	8007096 <xQueueGenericSend+0x46>
 8007094:	2300      	movs	r3, #0
 8007096:	2b00      	cmp	r3, #0
 8007098:	d10a      	bne.n	80070b0 <xQueueGenericSend+0x60>
 800709a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800709e:	f383 8811 	msr	BASEPRI, r3
 80070a2:	f3bf 8f6f 	isb	sy
 80070a6:	f3bf 8f4f 	dsb	sy
 80070aa:	627b      	str	r3, [r7, #36]	; 0x24
 80070ac:	bf00      	nop
 80070ae:	e7fe      	b.n	80070ae <xQueueGenericSend+0x5e>
 80070b0:	683b      	ldr	r3, [r7, #0]
 80070b2:	2b02      	cmp	r3, #2
 80070b4:	d103      	bne.n	80070be <xQueueGenericSend+0x6e>
 80070b6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80070b8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80070ba:	2b01      	cmp	r3, #1
 80070bc:	d101      	bne.n	80070c2 <xQueueGenericSend+0x72>
 80070be:	2301      	movs	r3, #1
 80070c0:	e000      	b.n	80070c4 <xQueueGenericSend+0x74>
 80070c2:	2300      	movs	r3, #0
 80070c4:	2b00      	cmp	r3, #0
 80070c6:	d10a      	bne.n	80070de <xQueueGenericSend+0x8e>
 80070c8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80070cc:	f383 8811 	msr	BASEPRI, r3
 80070d0:	f3bf 8f6f 	isb	sy
 80070d4:	f3bf 8f4f 	dsb	sy
 80070d8:	623b      	str	r3, [r7, #32]
 80070da:	bf00      	nop
 80070dc:	e7fe      	b.n	80070dc <xQueueGenericSend+0x8c>
 80070de:	f001 f9b1 	bl	8008444 <xTaskGetSchedulerState>
 80070e2:	4603      	mov	r3, r0
 80070e4:	2b00      	cmp	r3, #0
 80070e6:	d102      	bne.n	80070ee <xQueueGenericSend+0x9e>
 80070e8:	687b      	ldr	r3, [r7, #4]
 80070ea:	2b00      	cmp	r3, #0
 80070ec:	d101      	bne.n	80070f2 <xQueueGenericSend+0xa2>
 80070ee:	2301      	movs	r3, #1
 80070f0:	e000      	b.n	80070f4 <xQueueGenericSend+0xa4>
 80070f2:	2300      	movs	r3, #0
 80070f4:	2b00      	cmp	r3, #0
 80070f6:	d10a      	bne.n	800710e <xQueueGenericSend+0xbe>
 80070f8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80070fc:	f383 8811 	msr	BASEPRI, r3
 8007100:	f3bf 8f6f 	isb	sy
 8007104:	f3bf 8f4f 	dsb	sy
 8007108:	61fb      	str	r3, [r7, #28]
 800710a:	bf00      	nop
 800710c:	e7fe      	b.n	800710c <xQueueGenericSend+0xbc>
 800710e:	f001 ff6d 	bl	8008fec <vPortEnterCritical>
 8007112:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007114:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8007116:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007118:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800711a:	429a      	cmp	r2, r3
 800711c:	d302      	bcc.n	8007124 <xQueueGenericSend+0xd4>
 800711e:	683b      	ldr	r3, [r7, #0]
 8007120:	2b02      	cmp	r3, #2
 8007122:	d129      	bne.n	8007178 <xQueueGenericSend+0x128>
 8007124:	683a      	ldr	r2, [r7, #0]
 8007126:	68b9      	ldr	r1, [r7, #8]
 8007128:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800712a:	f000 fa07 	bl	800753c <prvCopyDataToQueue>
 800712e:	62f8      	str	r0, [r7, #44]	; 0x2c
 8007130:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007132:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007134:	2b00      	cmp	r3, #0
 8007136:	d010      	beq.n	800715a <xQueueGenericSend+0x10a>
 8007138:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800713a:	3324      	adds	r3, #36	; 0x24
 800713c:	4618      	mov	r0, r3
 800713e:	f000 ffbf 	bl	80080c0 <xTaskRemoveFromEventList>
 8007142:	4603      	mov	r3, r0
 8007144:	2b00      	cmp	r3, #0
 8007146:	d013      	beq.n	8007170 <xQueueGenericSend+0x120>
 8007148:	4b3f      	ldr	r3, [pc, #252]	; (8007248 <xQueueGenericSend+0x1f8>)
 800714a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800714e:	601a      	str	r2, [r3, #0]
 8007150:	f3bf 8f4f 	dsb	sy
 8007154:	f3bf 8f6f 	isb	sy
 8007158:	e00a      	b.n	8007170 <xQueueGenericSend+0x120>
 800715a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800715c:	2b00      	cmp	r3, #0
 800715e:	d007      	beq.n	8007170 <xQueueGenericSend+0x120>
 8007160:	4b39      	ldr	r3, [pc, #228]	; (8007248 <xQueueGenericSend+0x1f8>)
 8007162:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007166:	601a      	str	r2, [r3, #0]
 8007168:	f3bf 8f4f 	dsb	sy
 800716c:	f3bf 8f6f 	isb	sy
 8007170:	f001 ff6c 	bl	800904c <vPortExitCritical>
 8007174:	2301      	movs	r3, #1
 8007176:	e063      	b.n	8007240 <xQueueGenericSend+0x1f0>
 8007178:	687b      	ldr	r3, [r7, #4]
 800717a:	2b00      	cmp	r3, #0
 800717c:	d103      	bne.n	8007186 <xQueueGenericSend+0x136>
 800717e:	f001 ff65 	bl	800904c <vPortExitCritical>
 8007182:	2300      	movs	r3, #0
 8007184:	e05c      	b.n	8007240 <xQueueGenericSend+0x1f0>
 8007186:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8007188:	2b00      	cmp	r3, #0
 800718a:	d106      	bne.n	800719a <xQueueGenericSend+0x14a>
 800718c:	f107 0314 	add.w	r3, r7, #20
 8007190:	4618      	mov	r0, r3
 8007192:	f000 fff9 	bl	8008188 <vTaskInternalSetTimeOutState>
 8007196:	2301      	movs	r3, #1
 8007198:	637b      	str	r3, [r7, #52]	; 0x34
 800719a:	f001 ff57 	bl	800904c <vPortExitCritical>
 800719e:	f000 fd6b 	bl	8007c78 <vTaskSuspendAll>
 80071a2:	f001 ff23 	bl	8008fec <vPortEnterCritical>
 80071a6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80071a8:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 80071ac:	b25b      	sxtb	r3, r3
 80071ae:	f1b3 3fff 	cmp.w	r3, #4294967295
 80071b2:	d103      	bne.n	80071bc <xQueueGenericSend+0x16c>
 80071b4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80071b6:	2200      	movs	r2, #0
 80071b8:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80071bc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80071be:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 80071c2:	b25b      	sxtb	r3, r3
 80071c4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80071c8:	d103      	bne.n	80071d2 <xQueueGenericSend+0x182>
 80071ca:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80071cc:	2200      	movs	r2, #0
 80071ce:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 80071d2:	f001 ff3b 	bl	800904c <vPortExitCritical>
 80071d6:	1d3a      	adds	r2, r7, #4
 80071d8:	f107 0314 	add.w	r3, r7, #20
 80071dc:	4611      	mov	r1, r2
 80071de:	4618      	mov	r0, r3
 80071e0:	f000 ffe8 	bl	80081b4 <xTaskCheckForTimeOut>
 80071e4:	4603      	mov	r3, r0
 80071e6:	2b00      	cmp	r3, #0
 80071e8:	d124      	bne.n	8007234 <xQueueGenericSend+0x1e4>
 80071ea:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80071ec:	f000 fa9e 	bl	800772c <prvIsQueueFull>
 80071f0:	4603      	mov	r3, r0
 80071f2:	2b00      	cmp	r3, #0
 80071f4:	d018      	beq.n	8007228 <xQueueGenericSend+0x1d8>
 80071f6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80071f8:	3310      	adds	r3, #16
 80071fa:	687a      	ldr	r2, [r7, #4]
 80071fc:	4611      	mov	r1, r2
 80071fe:	4618      	mov	r0, r3
 8007200:	f000 ff0e 	bl	8008020 <vTaskPlaceOnEventList>
 8007204:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8007206:	f000 fa29 	bl	800765c <prvUnlockQueue>
 800720a:	f000 fd43 	bl	8007c94 <xTaskResumeAll>
 800720e:	4603      	mov	r3, r0
 8007210:	2b00      	cmp	r3, #0
 8007212:	f47f af7c 	bne.w	800710e <xQueueGenericSend+0xbe>
 8007216:	4b0c      	ldr	r3, [pc, #48]	; (8007248 <xQueueGenericSend+0x1f8>)
 8007218:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800721c:	601a      	str	r2, [r3, #0]
 800721e:	f3bf 8f4f 	dsb	sy
 8007222:	f3bf 8f6f 	isb	sy
 8007226:	e772      	b.n	800710e <xQueueGenericSend+0xbe>
 8007228:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800722a:	f000 fa17 	bl	800765c <prvUnlockQueue>
 800722e:	f000 fd31 	bl	8007c94 <xTaskResumeAll>
 8007232:	e76c      	b.n	800710e <xQueueGenericSend+0xbe>
 8007234:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8007236:	f000 fa11 	bl	800765c <prvUnlockQueue>
 800723a:	f000 fd2b 	bl	8007c94 <xTaskResumeAll>
 800723e:	2300      	movs	r3, #0
 8007240:	4618      	mov	r0, r3
 8007242:	3738      	adds	r7, #56	; 0x38
 8007244:	46bd      	mov	sp, r7
 8007246:	bd80      	pop	{r7, pc}
 8007248:	e000ed04 	.word	0xe000ed04

0800724c <xQueueGenericSendFromISR>:
 800724c:	b580      	push	{r7, lr}
 800724e:	b08e      	sub	sp, #56	; 0x38
 8007250:	af00      	add	r7, sp, #0
 8007252:	60f8      	str	r0, [r7, #12]
 8007254:	60b9      	str	r1, [r7, #8]
 8007256:	607a      	str	r2, [r7, #4]
 8007258:	603b      	str	r3, [r7, #0]
 800725a:	68fb      	ldr	r3, [r7, #12]
 800725c:	633b      	str	r3, [r7, #48]	; 0x30
 800725e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007260:	2b00      	cmp	r3, #0
 8007262:	d10a      	bne.n	800727a <xQueueGenericSendFromISR+0x2e>
 8007264:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007268:	f383 8811 	msr	BASEPRI, r3
 800726c:	f3bf 8f6f 	isb	sy
 8007270:	f3bf 8f4f 	dsb	sy
 8007274:	627b      	str	r3, [r7, #36]	; 0x24
 8007276:	bf00      	nop
 8007278:	e7fe      	b.n	8007278 <xQueueGenericSendFromISR+0x2c>
 800727a:	68bb      	ldr	r3, [r7, #8]
 800727c:	2b00      	cmp	r3, #0
 800727e:	d103      	bne.n	8007288 <xQueueGenericSendFromISR+0x3c>
 8007280:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007282:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007284:	2b00      	cmp	r3, #0
 8007286:	d101      	bne.n	800728c <xQueueGenericSendFromISR+0x40>
 8007288:	2301      	movs	r3, #1
 800728a:	e000      	b.n	800728e <xQueueGenericSendFromISR+0x42>
 800728c:	2300      	movs	r3, #0
 800728e:	2b00      	cmp	r3, #0
 8007290:	d10a      	bne.n	80072a8 <xQueueGenericSendFromISR+0x5c>
 8007292:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007296:	f383 8811 	msr	BASEPRI, r3
 800729a:	f3bf 8f6f 	isb	sy
 800729e:	f3bf 8f4f 	dsb	sy
 80072a2:	623b      	str	r3, [r7, #32]
 80072a4:	bf00      	nop
 80072a6:	e7fe      	b.n	80072a6 <xQueueGenericSendFromISR+0x5a>
 80072a8:	683b      	ldr	r3, [r7, #0]
 80072aa:	2b02      	cmp	r3, #2
 80072ac:	d103      	bne.n	80072b6 <xQueueGenericSendFromISR+0x6a>
 80072ae:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80072b0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80072b2:	2b01      	cmp	r3, #1
 80072b4:	d101      	bne.n	80072ba <xQueueGenericSendFromISR+0x6e>
 80072b6:	2301      	movs	r3, #1
 80072b8:	e000      	b.n	80072bc <xQueueGenericSendFromISR+0x70>
 80072ba:	2300      	movs	r3, #0
 80072bc:	2b00      	cmp	r3, #0
 80072be:	d10a      	bne.n	80072d6 <xQueueGenericSendFromISR+0x8a>
 80072c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80072c4:	f383 8811 	msr	BASEPRI, r3
 80072c8:	f3bf 8f6f 	isb	sy
 80072cc:	f3bf 8f4f 	dsb	sy
 80072d0:	61fb      	str	r3, [r7, #28]
 80072d2:	bf00      	nop
 80072d4:	e7fe      	b.n	80072d4 <xQueueGenericSendFromISR+0x88>
 80072d6:	f001 ff4b 	bl	8009170 <vPortValidateInterruptPriority>
 80072da:	f3ef 8211 	mrs	r2, BASEPRI
 80072de:	f04f 0350 	mov.w	r3, #80	; 0x50
 80072e2:	f383 8811 	msr	BASEPRI, r3
 80072e6:	f3bf 8f6f 	isb	sy
 80072ea:	f3bf 8f4f 	dsb	sy
 80072ee:	61ba      	str	r2, [r7, #24]
 80072f0:	617b      	str	r3, [r7, #20]
 80072f2:	69bb      	ldr	r3, [r7, #24]
 80072f4:	62fb      	str	r3, [r7, #44]	; 0x2c
 80072f6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80072f8:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80072fa:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80072fc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80072fe:	429a      	cmp	r2, r3
 8007300:	d302      	bcc.n	8007308 <xQueueGenericSendFromISR+0xbc>
 8007302:	683b      	ldr	r3, [r7, #0]
 8007304:	2b02      	cmp	r3, #2
 8007306:	d12c      	bne.n	8007362 <xQueueGenericSendFromISR+0x116>
 8007308:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800730a:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 800730e:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8007312:	683a      	ldr	r2, [r7, #0]
 8007314:	68b9      	ldr	r1, [r7, #8]
 8007316:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8007318:	f000 f910 	bl	800753c <prvCopyDataToQueue>
 800731c:	f997 302b 	ldrsb.w	r3, [r7, #43]	; 0x2b
 8007320:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007324:	d112      	bne.n	800734c <xQueueGenericSendFromISR+0x100>
 8007326:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007328:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800732a:	2b00      	cmp	r3, #0
 800732c:	d016      	beq.n	800735c <xQueueGenericSendFromISR+0x110>
 800732e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007330:	3324      	adds	r3, #36	; 0x24
 8007332:	4618      	mov	r0, r3
 8007334:	f000 fec4 	bl	80080c0 <xTaskRemoveFromEventList>
 8007338:	4603      	mov	r3, r0
 800733a:	2b00      	cmp	r3, #0
 800733c:	d00e      	beq.n	800735c <xQueueGenericSendFromISR+0x110>
 800733e:	687b      	ldr	r3, [r7, #4]
 8007340:	2b00      	cmp	r3, #0
 8007342:	d00b      	beq.n	800735c <xQueueGenericSendFromISR+0x110>
 8007344:	687b      	ldr	r3, [r7, #4]
 8007346:	2201      	movs	r2, #1
 8007348:	601a      	str	r2, [r3, #0]
 800734a:	e007      	b.n	800735c <xQueueGenericSendFromISR+0x110>
 800734c:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 8007350:	3301      	adds	r3, #1
 8007352:	b2db      	uxtb	r3, r3
 8007354:	b25a      	sxtb	r2, r3
 8007356:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007358:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800735c:	2301      	movs	r3, #1
 800735e:	637b      	str	r3, [r7, #52]	; 0x34
 8007360:	e001      	b.n	8007366 <xQueueGenericSendFromISR+0x11a>
 8007362:	2300      	movs	r3, #0
 8007364:	637b      	str	r3, [r7, #52]	; 0x34
 8007366:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8007368:	613b      	str	r3, [r7, #16]
 800736a:	693b      	ldr	r3, [r7, #16]
 800736c:	f383 8811 	msr	BASEPRI, r3
 8007370:	bf00      	nop
 8007372:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8007374:	4618      	mov	r0, r3
 8007376:	3738      	adds	r7, #56	; 0x38
 8007378:	46bd      	mov	sp, r7
 800737a:	bd80      	pop	{r7, pc}

0800737c <xQueueReceive>:
 800737c:	b580      	push	{r7, lr}
 800737e:	b08c      	sub	sp, #48	; 0x30
 8007380:	af00      	add	r7, sp, #0
 8007382:	60f8      	str	r0, [r7, #12]
 8007384:	60b9      	str	r1, [r7, #8]
 8007386:	607a      	str	r2, [r7, #4]
 8007388:	2300      	movs	r3, #0
 800738a:	62fb      	str	r3, [r7, #44]	; 0x2c
 800738c:	68fb      	ldr	r3, [r7, #12]
 800738e:	62bb      	str	r3, [r7, #40]	; 0x28
 8007390:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8007392:	2b00      	cmp	r3, #0
 8007394:	d10a      	bne.n	80073ac <xQueueReceive+0x30>
 8007396:	f04f 0350 	mov.w	r3, #80	; 0x50
 800739a:	f383 8811 	msr	BASEPRI, r3
 800739e:	f3bf 8f6f 	isb	sy
 80073a2:	f3bf 8f4f 	dsb	sy
 80073a6:	623b      	str	r3, [r7, #32]
 80073a8:	bf00      	nop
 80073aa:	e7fe      	b.n	80073aa <xQueueReceive+0x2e>
 80073ac:	68bb      	ldr	r3, [r7, #8]
 80073ae:	2b00      	cmp	r3, #0
 80073b0:	d103      	bne.n	80073ba <xQueueReceive+0x3e>
 80073b2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80073b4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80073b6:	2b00      	cmp	r3, #0
 80073b8:	d101      	bne.n	80073be <xQueueReceive+0x42>
 80073ba:	2301      	movs	r3, #1
 80073bc:	e000      	b.n	80073c0 <xQueueReceive+0x44>
 80073be:	2300      	movs	r3, #0
 80073c0:	2b00      	cmp	r3, #0
 80073c2:	d10a      	bne.n	80073da <xQueueReceive+0x5e>
 80073c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80073c8:	f383 8811 	msr	BASEPRI, r3
 80073cc:	f3bf 8f6f 	isb	sy
 80073d0:	f3bf 8f4f 	dsb	sy
 80073d4:	61fb      	str	r3, [r7, #28]
 80073d6:	bf00      	nop
 80073d8:	e7fe      	b.n	80073d8 <xQueueReceive+0x5c>
 80073da:	f001 f833 	bl	8008444 <xTaskGetSchedulerState>
 80073de:	4603      	mov	r3, r0
 80073e0:	2b00      	cmp	r3, #0
 80073e2:	d102      	bne.n	80073ea <xQueueReceive+0x6e>
 80073e4:	687b      	ldr	r3, [r7, #4]
 80073e6:	2b00      	cmp	r3, #0
 80073e8:	d101      	bne.n	80073ee <xQueueReceive+0x72>
 80073ea:	2301      	movs	r3, #1
 80073ec:	e000      	b.n	80073f0 <xQueueReceive+0x74>
 80073ee:	2300      	movs	r3, #0
 80073f0:	2b00      	cmp	r3, #0
 80073f2:	d10a      	bne.n	800740a <xQueueReceive+0x8e>
 80073f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80073f8:	f383 8811 	msr	BASEPRI, r3
 80073fc:	f3bf 8f6f 	isb	sy
 8007400:	f3bf 8f4f 	dsb	sy
 8007404:	61bb      	str	r3, [r7, #24]
 8007406:	bf00      	nop
 8007408:	e7fe      	b.n	8007408 <xQueueReceive+0x8c>
 800740a:	f001 fdef 	bl	8008fec <vPortEnterCritical>
 800740e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8007410:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007412:	627b      	str	r3, [r7, #36]	; 0x24
 8007414:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007416:	2b00      	cmp	r3, #0
 8007418:	d01f      	beq.n	800745a <xQueueReceive+0xde>
 800741a:	68b9      	ldr	r1, [r7, #8]
 800741c:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 800741e:	f000 f8f7 	bl	8007610 <prvCopyDataFromQueue>
 8007422:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007424:	1e5a      	subs	r2, r3, #1
 8007426:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8007428:	639a      	str	r2, [r3, #56]	; 0x38
 800742a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800742c:	691b      	ldr	r3, [r3, #16]
 800742e:	2b00      	cmp	r3, #0
 8007430:	d00f      	beq.n	8007452 <xQueueReceive+0xd6>
 8007432:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8007434:	3310      	adds	r3, #16
 8007436:	4618      	mov	r0, r3
 8007438:	f000 fe42 	bl	80080c0 <xTaskRemoveFromEventList>
 800743c:	4603      	mov	r3, r0
 800743e:	2b00      	cmp	r3, #0
 8007440:	d007      	beq.n	8007452 <xQueueReceive+0xd6>
 8007442:	4b3d      	ldr	r3, [pc, #244]	; (8007538 <xQueueReceive+0x1bc>)
 8007444:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007448:	601a      	str	r2, [r3, #0]
 800744a:	f3bf 8f4f 	dsb	sy
 800744e:	f3bf 8f6f 	isb	sy
 8007452:	f001 fdfb 	bl	800904c <vPortExitCritical>
 8007456:	2301      	movs	r3, #1
 8007458:	e069      	b.n	800752e <xQueueReceive+0x1b2>
 800745a:	687b      	ldr	r3, [r7, #4]
 800745c:	2b00      	cmp	r3, #0
 800745e:	d103      	bne.n	8007468 <xQueueReceive+0xec>
 8007460:	f001 fdf4 	bl	800904c <vPortExitCritical>
 8007464:	2300      	movs	r3, #0
 8007466:	e062      	b.n	800752e <xQueueReceive+0x1b2>
 8007468:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800746a:	2b00      	cmp	r3, #0
 800746c:	d106      	bne.n	800747c <xQueueReceive+0x100>
 800746e:	f107 0310 	add.w	r3, r7, #16
 8007472:	4618      	mov	r0, r3
 8007474:	f000 fe88 	bl	8008188 <vTaskInternalSetTimeOutState>
 8007478:	2301      	movs	r3, #1
 800747a:	62fb      	str	r3, [r7, #44]	; 0x2c
 800747c:	f001 fde6 	bl	800904c <vPortExitCritical>
 8007480:	f000 fbfa 	bl	8007c78 <vTaskSuspendAll>
 8007484:	f001 fdb2 	bl	8008fec <vPortEnterCritical>
 8007488:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800748a:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 800748e:	b25b      	sxtb	r3, r3
 8007490:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007494:	d103      	bne.n	800749e <xQueueReceive+0x122>
 8007496:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8007498:	2200      	movs	r2, #0
 800749a:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800749e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80074a0:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 80074a4:	b25b      	sxtb	r3, r3
 80074a6:	f1b3 3fff 	cmp.w	r3, #4294967295
 80074aa:	d103      	bne.n	80074b4 <xQueueReceive+0x138>
 80074ac:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80074ae:	2200      	movs	r2, #0
 80074b0:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 80074b4:	f001 fdca 	bl	800904c <vPortExitCritical>
 80074b8:	1d3a      	adds	r2, r7, #4
 80074ba:	f107 0310 	add.w	r3, r7, #16
 80074be:	4611      	mov	r1, r2
 80074c0:	4618      	mov	r0, r3
 80074c2:	f000 fe77 	bl	80081b4 <xTaskCheckForTimeOut>
 80074c6:	4603      	mov	r3, r0
 80074c8:	2b00      	cmp	r3, #0
 80074ca:	d123      	bne.n	8007514 <xQueueReceive+0x198>
 80074cc:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 80074ce:	f000 f917 	bl	8007700 <prvIsQueueEmpty>
 80074d2:	4603      	mov	r3, r0
 80074d4:	2b00      	cmp	r3, #0
 80074d6:	d017      	beq.n	8007508 <xQueueReceive+0x18c>
 80074d8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80074da:	3324      	adds	r3, #36	; 0x24
 80074dc:	687a      	ldr	r2, [r7, #4]
 80074de:	4611      	mov	r1, r2
 80074e0:	4618      	mov	r0, r3
 80074e2:	f000 fd9d 	bl	8008020 <vTaskPlaceOnEventList>
 80074e6:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 80074e8:	f000 f8b8 	bl	800765c <prvUnlockQueue>
 80074ec:	f000 fbd2 	bl	8007c94 <xTaskResumeAll>
 80074f0:	4603      	mov	r3, r0
 80074f2:	2b00      	cmp	r3, #0
 80074f4:	d189      	bne.n	800740a <xQueueReceive+0x8e>
 80074f6:	4b10      	ldr	r3, [pc, #64]	; (8007538 <xQueueReceive+0x1bc>)
 80074f8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80074fc:	601a      	str	r2, [r3, #0]
 80074fe:	f3bf 8f4f 	dsb	sy
 8007502:	f3bf 8f6f 	isb	sy
 8007506:	e780      	b.n	800740a <xQueueReceive+0x8e>
 8007508:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 800750a:	f000 f8a7 	bl	800765c <prvUnlockQueue>
 800750e:	f000 fbc1 	bl	8007c94 <xTaskResumeAll>
 8007512:	e77a      	b.n	800740a <xQueueReceive+0x8e>
 8007514:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8007516:	f000 f8a1 	bl	800765c <prvUnlockQueue>
 800751a:	f000 fbbb 	bl	8007c94 <xTaskResumeAll>
 800751e:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8007520:	f000 f8ee 	bl	8007700 <prvIsQueueEmpty>
 8007524:	4603      	mov	r3, r0
 8007526:	2b00      	cmp	r3, #0
 8007528:	f43f af6f 	beq.w	800740a <xQueueReceive+0x8e>
 800752c:	2300      	movs	r3, #0
 800752e:	4618      	mov	r0, r3
 8007530:	3730      	adds	r7, #48	; 0x30
 8007532:	46bd      	mov	sp, r7
 8007534:	bd80      	pop	{r7, pc}
 8007536:	bf00      	nop
 8007538:	e000ed04 	.word	0xe000ed04

0800753c <prvCopyDataToQueue>:
 800753c:	b580      	push	{r7, lr}
 800753e:	b086      	sub	sp, #24
 8007540:	af00      	add	r7, sp, #0
 8007542:	60f8      	str	r0, [r7, #12]
 8007544:	60b9      	str	r1, [r7, #8]
 8007546:	607a      	str	r2, [r7, #4]
 8007548:	2300      	movs	r3, #0
 800754a:	617b      	str	r3, [r7, #20]
 800754c:	68fb      	ldr	r3, [r7, #12]
 800754e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007550:	613b      	str	r3, [r7, #16]
 8007552:	68fb      	ldr	r3, [r7, #12]
 8007554:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007556:	2b00      	cmp	r3, #0
 8007558:	d10d      	bne.n	8007576 <prvCopyDataToQueue+0x3a>
 800755a:	68fb      	ldr	r3, [r7, #12]
 800755c:	681b      	ldr	r3, [r3, #0]
 800755e:	2b00      	cmp	r3, #0
 8007560:	d14d      	bne.n	80075fe <prvCopyDataToQueue+0xc2>
 8007562:	68fb      	ldr	r3, [r7, #12]
 8007564:	685b      	ldr	r3, [r3, #4]
 8007566:	4618      	mov	r0, r3
 8007568:	f000 ff8a 	bl	8008480 <xTaskPriorityDisinherit>
 800756c:	6178      	str	r0, [r7, #20]
 800756e:	68fb      	ldr	r3, [r7, #12]
 8007570:	2200      	movs	r2, #0
 8007572:	605a      	str	r2, [r3, #4]
 8007574:	e043      	b.n	80075fe <prvCopyDataToQueue+0xc2>
 8007576:	687b      	ldr	r3, [r7, #4]
 8007578:	2b00      	cmp	r3, #0
 800757a:	d119      	bne.n	80075b0 <prvCopyDataToQueue+0x74>
 800757c:	68fb      	ldr	r3, [r7, #12]
 800757e:	6898      	ldr	r0, [r3, #8]
 8007580:	68fb      	ldr	r3, [r7, #12]
 8007582:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007584:	461a      	mov	r2, r3
 8007586:	68b9      	ldr	r1, [r7, #8]
 8007588:	f002 fe19 	bl	800a1be <memcpy>
 800758c:	68fb      	ldr	r3, [r7, #12]
 800758e:	689a      	ldr	r2, [r3, #8]
 8007590:	68fb      	ldr	r3, [r7, #12]
 8007592:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007594:	441a      	add	r2, r3
 8007596:	68fb      	ldr	r3, [r7, #12]
 8007598:	609a      	str	r2, [r3, #8]
 800759a:	68fb      	ldr	r3, [r7, #12]
 800759c:	689a      	ldr	r2, [r3, #8]
 800759e:	68fb      	ldr	r3, [r7, #12]
 80075a0:	685b      	ldr	r3, [r3, #4]
 80075a2:	429a      	cmp	r2, r3
 80075a4:	d32b      	bcc.n	80075fe <prvCopyDataToQueue+0xc2>
 80075a6:	68fb      	ldr	r3, [r7, #12]
 80075a8:	681a      	ldr	r2, [r3, #0]
 80075aa:	68fb      	ldr	r3, [r7, #12]
 80075ac:	609a      	str	r2, [r3, #8]
 80075ae:	e026      	b.n	80075fe <prvCopyDataToQueue+0xc2>
 80075b0:	68fb      	ldr	r3, [r7, #12]
 80075b2:	68d8      	ldr	r0, [r3, #12]
 80075b4:	68fb      	ldr	r3, [r7, #12]
 80075b6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80075b8:	461a      	mov	r2, r3
 80075ba:	68b9      	ldr	r1, [r7, #8]
 80075bc:	f002 fdff 	bl	800a1be <memcpy>
 80075c0:	68fb      	ldr	r3, [r7, #12]
 80075c2:	68da      	ldr	r2, [r3, #12]
 80075c4:	68fb      	ldr	r3, [r7, #12]
 80075c6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80075c8:	425b      	negs	r3, r3
 80075ca:	441a      	add	r2, r3
 80075cc:	68fb      	ldr	r3, [r7, #12]
 80075ce:	60da      	str	r2, [r3, #12]
 80075d0:	68fb      	ldr	r3, [r7, #12]
 80075d2:	68da      	ldr	r2, [r3, #12]
 80075d4:	68fb      	ldr	r3, [r7, #12]
 80075d6:	681b      	ldr	r3, [r3, #0]
 80075d8:	429a      	cmp	r2, r3
 80075da:	d207      	bcs.n	80075ec <prvCopyDataToQueue+0xb0>
 80075dc:	68fb      	ldr	r3, [r7, #12]
 80075de:	685a      	ldr	r2, [r3, #4]
 80075e0:	68fb      	ldr	r3, [r7, #12]
 80075e2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80075e4:	425b      	negs	r3, r3
 80075e6:	441a      	add	r2, r3
 80075e8:	68fb      	ldr	r3, [r7, #12]
 80075ea:	60da      	str	r2, [r3, #12]
 80075ec:	687b      	ldr	r3, [r7, #4]
 80075ee:	2b02      	cmp	r3, #2
 80075f0:	d105      	bne.n	80075fe <prvCopyDataToQueue+0xc2>
 80075f2:	693b      	ldr	r3, [r7, #16]
 80075f4:	2b00      	cmp	r3, #0
 80075f6:	d002      	beq.n	80075fe <prvCopyDataToQueue+0xc2>
 80075f8:	693b      	ldr	r3, [r7, #16]
 80075fa:	3b01      	subs	r3, #1
 80075fc:	613b      	str	r3, [r7, #16]
 80075fe:	693b      	ldr	r3, [r7, #16]
 8007600:	1c5a      	adds	r2, r3, #1
 8007602:	68fb      	ldr	r3, [r7, #12]
 8007604:	639a      	str	r2, [r3, #56]	; 0x38
 8007606:	697b      	ldr	r3, [r7, #20]
 8007608:	4618      	mov	r0, r3
 800760a:	3718      	adds	r7, #24
 800760c:	46bd      	mov	sp, r7
 800760e:	bd80      	pop	{r7, pc}

08007610 <prvCopyDataFromQueue>:
 8007610:	b580      	push	{r7, lr}
 8007612:	b082      	sub	sp, #8
 8007614:	af00      	add	r7, sp, #0
 8007616:	6078      	str	r0, [r7, #4]
 8007618:	6039      	str	r1, [r7, #0]
 800761a:	687b      	ldr	r3, [r7, #4]
 800761c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800761e:	2b00      	cmp	r3, #0
 8007620:	d018      	beq.n	8007654 <prvCopyDataFromQueue+0x44>
 8007622:	687b      	ldr	r3, [r7, #4]
 8007624:	68da      	ldr	r2, [r3, #12]
 8007626:	687b      	ldr	r3, [r7, #4]
 8007628:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800762a:	441a      	add	r2, r3
 800762c:	687b      	ldr	r3, [r7, #4]
 800762e:	60da      	str	r2, [r3, #12]
 8007630:	687b      	ldr	r3, [r7, #4]
 8007632:	68da      	ldr	r2, [r3, #12]
 8007634:	687b      	ldr	r3, [r7, #4]
 8007636:	685b      	ldr	r3, [r3, #4]
 8007638:	429a      	cmp	r2, r3
 800763a:	d303      	bcc.n	8007644 <prvCopyDataFromQueue+0x34>
 800763c:	687b      	ldr	r3, [r7, #4]
 800763e:	681a      	ldr	r2, [r3, #0]
 8007640:	687b      	ldr	r3, [r7, #4]
 8007642:	60da      	str	r2, [r3, #12]
 8007644:	687b      	ldr	r3, [r7, #4]
 8007646:	68d9      	ldr	r1, [r3, #12]
 8007648:	687b      	ldr	r3, [r7, #4]
 800764a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800764c:	461a      	mov	r2, r3
 800764e:	6838      	ldr	r0, [r7, #0]
 8007650:	f002 fdb5 	bl	800a1be <memcpy>
 8007654:	bf00      	nop
 8007656:	3708      	adds	r7, #8
 8007658:	46bd      	mov	sp, r7
 800765a:	bd80      	pop	{r7, pc}

0800765c <prvUnlockQueue>:
 800765c:	b580      	push	{r7, lr}
 800765e:	b084      	sub	sp, #16
 8007660:	af00      	add	r7, sp, #0
 8007662:	6078      	str	r0, [r7, #4]
 8007664:	f001 fcc2 	bl	8008fec <vPortEnterCritical>
 8007668:	687b      	ldr	r3, [r7, #4]
 800766a:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 800766e:	73fb      	strb	r3, [r7, #15]
 8007670:	e011      	b.n	8007696 <prvUnlockQueue+0x3a>
 8007672:	687b      	ldr	r3, [r7, #4]
 8007674:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007676:	2b00      	cmp	r3, #0
 8007678:	d012      	beq.n	80076a0 <prvUnlockQueue+0x44>
 800767a:	687b      	ldr	r3, [r7, #4]
 800767c:	3324      	adds	r3, #36	; 0x24
 800767e:	4618      	mov	r0, r3
 8007680:	f000 fd1e 	bl	80080c0 <xTaskRemoveFromEventList>
 8007684:	4603      	mov	r3, r0
 8007686:	2b00      	cmp	r3, #0
 8007688:	d001      	beq.n	800768e <prvUnlockQueue+0x32>
 800768a:	f000 fdf5 	bl	8008278 <vTaskMissedYield>
 800768e:	7bfb      	ldrb	r3, [r7, #15]
 8007690:	3b01      	subs	r3, #1
 8007692:	b2db      	uxtb	r3, r3
 8007694:	73fb      	strb	r3, [r7, #15]
 8007696:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800769a:	2b00      	cmp	r3, #0
 800769c:	dce9      	bgt.n	8007672 <prvUnlockQueue+0x16>
 800769e:	e000      	b.n	80076a2 <prvUnlockQueue+0x46>
 80076a0:	bf00      	nop
 80076a2:	687b      	ldr	r3, [r7, #4]
 80076a4:	22ff      	movs	r2, #255	; 0xff
 80076a6:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 80076aa:	f001 fccf 	bl	800904c <vPortExitCritical>
 80076ae:	f001 fc9d 	bl	8008fec <vPortEnterCritical>
 80076b2:	687b      	ldr	r3, [r7, #4]
 80076b4:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 80076b8:	73bb      	strb	r3, [r7, #14]
 80076ba:	e011      	b.n	80076e0 <prvUnlockQueue+0x84>
 80076bc:	687b      	ldr	r3, [r7, #4]
 80076be:	691b      	ldr	r3, [r3, #16]
 80076c0:	2b00      	cmp	r3, #0
 80076c2:	d012      	beq.n	80076ea <prvUnlockQueue+0x8e>
 80076c4:	687b      	ldr	r3, [r7, #4]
 80076c6:	3310      	adds	r3, #16
 80076c8:	4618      	mov	r0, r3
 80076ca:	f000 fcf9 	bl	80080c0 <xTaskRemoveFromEventList>
 80076ce:	4603      	mov	r3, r0
 80076d0:	2b00      	cmp	r3, #0
 80076d2:	d001      	beq.n	80076d8 <prvUnlockQueue+0x7c>
 80076d4:	f000 fdd0 	bl	8008278 <vTaskMissedYield>
 80076d8:	7bbb      	ldrb	r3, [r7, #14]
 80076da:	3b01      	subs	r3, #1
 80076dc:	b2db      	uxtb	r3, r3
 80076de:	73bb      	strb	r3, [r7, #14]
 80076e0:	f997 300e 	ldrsb.w	r3, [r7, #14]
 80076e4:	2b00      	cmp	r3, #0
 80076e6:	dce9      	bgt.n	80076bc <prvUnlockQueue+0x60>
 80076e8:	e000      	b.n	80076ec <prvUnlockQueue+0x90>
 80076ea:	bf00      	nop
 80076ec:	687b      	ldr	r3, [r7, #4]
 80076ee:	22ff      	movs	r2, #255	; 0xff
 80076f0:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80076f4:	f001 fcaa 	bl	800904c <vPortExitCritical>
 80076f8:	bf00      	nop
 80076fa:	3710      	adds	r7, #16
 80076fc:	46bd      	mov	sp, r7
 80076fe:	bd80      	pop	{r7, pc}

08007700 <prvIsQueueEmpty>:
 8007700:	b580      	push	{r7, lr}
 8007702:	b084      	sub	sp, #16
 8007704:	af00      	add	r7, sp, #0
 8007706:	6078      	str	r0, [r7, #4]
 8007708:	f001 fc70 	bl	8008fec <vPortEnterCritical>
 800770c:	687b      	ldr	r3, [r7, #4]
 800770e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007710:	2b00      	cmp	r3, #0
 8007712:	d102      	bne.n	800771a <prvIsQueueEmpty+0x1a>
 8007714:	2301      	movs	r3, #1
 8007716:	60fb      	str	r3, [r7, #12]
 8007718:	e001      	b.n	800771e <prvIsQueueEmpty+0x1e>
 800771a:	2300      	movs	r3, #0
 800771c:	60fb      	str	r3, [r7, #12]
 800771e:	f001 fc95 	bl	800904c <vPortExitCritical>
 8007722:	68fb      	ldr	r3, [r7, #12]
 8007724:	4618      	mov	r0, r3
 8007726:	3710      	adds	r7, #16
 8007728:	46bd      	mov	sp, r7
 800772a:	bd80      	pop	{r7, pc}

0800772c <prvIsQueueFull>:
 800772c:	b580      	push	{r7, lr}
 800772e:	b084      	sub	sp, #16
 8007730:	af00      	add	r7, sp, #0
 8007732:	6078      	str	r0, [r7, #4]
 8007734:	f001 fc5a 	bl	8008fec <vPortEnterCritical>
 8007738:	687b      	ldr	r3, [r7, #4]
 800773a:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800773c:	687b      	ldr	r3, [r7, #4]
 800773e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8007740:	429a      	cmp	r2, r3
 8007742:	d102      	bne.n	800774a <prvIsQueueFull+0x1e>
 8007744:	2301      	movs	r3, #1
 8007746:	60fb      	str	r3, [r7, #12]
 8007748:	e001      	b.n	800774e <prvIsQueueFull+0x22>
 800774a:	2300      	movs	r3, #0
 800774c:	60fb      	str	r3, [r7, #12]
 800774e:	f001 fc7d 	bl	800904c <vPortExitCritical>
 8007752:	68fb      	ldr	r3, [r7, #12]
 8007754:	4618      	mov	r0, r3
 8007756:	3710      	adds	r7, #16
 8007758:	46bd      	mov	sp, r7
 800775a:	bd80      	pop	{r7, pc}

0800775c <vQueueAddToRegistry>:
 800775c:	b480      	push	{r7}
 800775e:	b085      	sub	sp, #20
 8007760:	af00      	add	r7, sp, #0
 8007762:	6078      	str	r0, [r7, #4]
 8007764:	6039      	str	r1, [r7, #0]
 8007766:	2300      	movs	r3, #0
 8007768:	60fb      	str	r3, [r7, #12]
 800776a:	e014      	b.n	8007796 <vQueueAddToRegistry+0x3a>
 800776c:	4a0e      	ldr	r2, [pc, #56]	; (80077a8 <vQueueAddToRegistry+0x4c>)
 800776e:	68fb      	ldr	r3, [r7, #12]
 8007770:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 8007774:	2b00      	cmp	r3, #0
 8007776:	d10b      	bne.n	8007790 <vQueueAddToRegistry+0x34>
 8007778:	490b      	ldr	r1, [pc, #44]	; (80077a8 <vQueueAddToRegistry+0x4c>)
 800777a:	68fb      	ldr	r3, [r7, #12]
 800777c:	683a      	ldr	r2, [r7, #0]
 800777e:	f841 2033 	str.w	r2, [r1, r3, lsl #3]
 8007782:	4a09      	ldr	r2, [pc, #36]	; (80077a8 <vQueueAddToRegistry+0x4c>)
 8007784:	68fb      	ldr	r3, [r7, #12]
 8007786:	00db      	lsls	r3, r3, #3
 8007788:	4413      	add	r3, r2
 800778a:	687a      	ldr	r2, [r7, #4]
 800778c:	605a      	str	r2, [r3, #4]
 800778e:	e006      	b.n	800779e <vQueueAddToRegistry+0x42>
 8007790:	68fb      	ldr	r3, [r7, #12]
 8007792:	3301      	adds	r3, #1
 8007794:	60fb      	str	r3, [r7, #12]
 8007796:	68fb      	ldr	r3, [r7, #12]
 8007798:	2b07      	cmp	r3, #7
 800779a:	d9e7      	bls.n	800776c <vQueueAddToRegistry+0x10>
 800779c:	bf00      	nop
 800779e:	bf00      	nop
 80077a0:	3714      	adds	r7, #20
 80077a2:	46bd      	mov	sp, r7
 80077a4:	bc80      	pop	{r7}
 80077a6:	4770      	bx	lr
 80077a8:	20000d30 	.word	0x20000d30

080077ac <vQueueWaitForMessageRestricted>:
 80077ac:	b580      	push	{r7, lr}
 80077ae:	b086      	sub	sp, #24
 80077b0:	af00      	add	r7, sp, #0
 80077b2:	60f8      	str	r0, [r7, #12]
 80077b4:	60b9      	str	r1, [r7, #8]
 80077b6:	607a      	str	r2, [r7, #4]
 80077b8:	68fb      	ldr	r3, [r7, #12]
 80077ba:	617b      	str	r3, [r7, #20]
 80077bc:	f001 fc16 	bl	8008fec <vPortEnterCritical>
 80077c0:	697b      	ldr	r3, [r7, #20]
 80077c2:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 80077c6:	b25b      	sxtb	r3, r3
 80077c8:	f1b3 3fff 	cmp.w	r3, #4294967295
 80077cc:	d103      	bne.n	80077d6 <vQueueWaitForMessageRestricted+0x2a>
 80077ce:	697b      	ldr	r3, [r7, #20]
 80077d0:	2200      	movs	r2, #0
 80077d2:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80077d6:	697b      	ldr	r3, [r7, #20]
 80077d8:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 80077dc:	b25b      	sxtb	r3, r3
 80077de:	f1b3 3fff 	cmp.w	r3, #4294967295
 80077e2:	d103      	bne.n	80077ec <vQueueWaitForMessageRestricted+0x40>
 80077e4:	697b      	ldr	r3, [r7, #20]
 80077e6:	2200      	movs	r2, #0
 80077e8:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 80077ec:	f001 fc2e 	bl	800904c <vPortExitCritical>
 80077f0:	697b      	ldr	r3, [r7, #20]
 80077f2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80077f4:	2b00      	cmp	r3, #0
 80077f6:	d106      	bne.n	8007806 <vQueueWaitForMessageRestricted+0x5a>
 80077f8:	697b      	ldr	r3, [r7, #20]
 80077fa:	3324      	adds	r3, #36	; 0x24
 80077fc:	687a      	ldr	r2, [r7, #4]
 80077fe:	68b9      	ldr	r1, [r7, #8]
 8007800:	4618      	mov	r0, r3
 8007802:	f000 fc31 	bl	8008068 <vTaskPlaceOnEventListRestricted>
 8007806:	6978      	ldr	r0, [r7, #20]
 8007808:	f7ff ff28 	bl	800765c <prvUnlockQueue>
 800780c:	bf00      	nop
 800780e:	3718      	adds	r7, #24
 8007810:	46bd      	mov	sp, r7
 8007812:	bd80      	pop	{r7, pc}

08007814 <xTaskCreateStatic>:
 8007814:	b580      	push	{r7, lr}
 8007816:	b08e      	sub	sp, #56	; 0x38
 8007818:	af04      	add	r7, sp, #16
 800781a:	60f8      	str	r0, [r7, #12]
 800781c:	60b9      	str	r1, [r7, #8]
 800781e:	607a      	str	r2, [r7, #4]
 8007820:	603b      	str	r3, [r7, #0]
 8007822:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8007824:	2b00      	cmp	r3, #0
 8007826:	d10a      	bne.n	800783e <xTaskCreateStatic+0x2a>
 8007828:	f04f 0350 	mov.w	r3, #80	; 0x50
 800782c:	f383 8811 	msr	BASEPRI, r3
 8007830:	f3bf 8f6f 	isb	sy
 8007834:	f3bf 8f4f 	dsb	sy
 8007838:	623b      	str	r3, [r7, #32]
 800783a:	bf00      	nop
 800783c:	e7fe      	b.n	800783c <xTaskCreateStatic+0x28>
 800783e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007840:	2b00      	cmp	r3, #0
 8007842:	d10a      	bne.n	800785a <xTaskCreateStatic+0x46>
 8007844:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007848:	f383 8811 	msr	BASEPRI, r3
 800784c:	f3bf 8f6f 	isb	sy
 8007850:	f3bf 8f4f 	dsb	sy
 8007854:	61fb      	str	r3, [r7, #28]
 8007856:	bf00      	nop
 8007858:	e7fe      	b.n	8007858 <xTaskCreateStatic+0x44>
 800785a:	235c      	movs	r3, #92	; 0x5c
 800785c:	613b      	str	r3, [r7, #16]
 800785e:	693b      	ldr	r3, [r7, #16]
 8007860:	2b5c      	cmp	r3, #92	; 0x5c
 8007862:	d00a      	beq.n	800787a <xTaskCreateStatic+0x66>
 8007864:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007868:	f383 8811 	msr	BASEPRI, r3
 800786c:	f3bf 8f6f 	isb	sy
 8007870:	f3bf 8f4f 	dsb	sy
 8007874:	61bb      	str	r3, [r7, #24]
 8007876:	bf00      	nop
 8007878:	e7fe      	b.n	8007878 <xTaskCreateStatic+0x64>
 800787a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800787c:	2b00      	cmp	r3, #0
 800787e:	d01e      	beq.n	80078be <xTaskCreateStatic+0xaa>
 8007880:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8007882:	2b00      	cmp	r3, #0
 8007884:	d01b      	beq.n	80078be <xTaskCreateStatic+0xaa>
 8007886:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007888:	627b      	str	r3, [r7, #36]	; 0x24
 800788a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800788c:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800788e:	631a      	str	r2, [r3, #48]	; 0x30
 8007890:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007892:	2202      	movs	r2, #2
 8007894:	f883 2059 	strb.w	r2, [r3, #89]	; 0x59
 8007898:	2300      	movs	r3, #0
 800789a:	9303      	str	r3, [sp, #12]
 800789c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800789e:	9302      	str	r3, [sp, #8]
 80078a0:	f107 0314 	add.w	r3, r7, #20
 80078a4:	9301      	str	r3, [sp, #4]
 80078a6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80078a8:	9300      	str	r3, [sp, #0]
 80078aa:	683b      	ldr	r3, [r7, #0]
 80078ac:	687a      	ldr	r2, [r7, #4]
 80078ae:	68b9      	ldr	r1, [r7, #8]
 80078b0:	68f8      	ldr	r0, [r7, #12]
 80078b2:	f000 f850 	bl	8007956 <prvInitialiseNewTask>
 80078b6:	6a78      	ldr	r0, [r7, #36]	; 0x24
 80078b8:	f000 f8d4 	bl	8007a64 <prvAddNewTaskToReadyList>
 80078bc:	e001      	b.n	80078c2 <xTaskCreateStatic+0xae>
 80078be:	2300      	movs	r3, #0
 80078c0:	617b      	str	r3, [r7, #20]
 80078c2:	697b      	ldr	r3, [r7, #20]
 80078c4:	4618      	mov	r0, r3
 80078c6:	3728      	adds	r7, #40	; 0x28
 80078c8:	46bd      	mov	sp, r7
 80078ca:	bd80      	pop	{r7, pc}

080078cc <xTaskCreate>:
 80078cc:	b580      	push	{r7, lr}
 80078ce:	b08c      	sub	sp, #48	; 0x30
 80078d0:	af04      	add	r7, sp, #16
 80078d2:	60f8      	str	r0, [r7, #12]
 80078d4:	60b9      	str	r1, [r7, #8]
 80078d6:	603b      	str	r3, [r7, #0]
 80078d8:	4613      	mov	r3, r2
 80078da:	80fb      	strh	r3, [r7, #6]
 80078dc:	88fb      	ldrh	r3, [r7, #6]
 80078de:	009b      	lsls	r3, r3, #2
 80078e0:	4618      	mov	r0, r3
 80078e2:	f001 fc83 	bl	80091ec <pvPortMalloc>
 80078e6:	6178      	str	r0, [r7, #20]
 80078e8:	697b      	ldr	r3, [r7, #20]
 80078ea:	2b00      	cmp	r3, #0
 80078ec:	d00e      	beq.n	800790c <xTaskCreate+0x40>
 80078ee:	205c      	movs	r0, #92	; 0x5c
 80078f0:	f001 fc7c 	bl	80091ec <pvPortMalloc>
 80078f4:	61f8      	str	r0, [r7, #28]
 80078f6:	69fb      	ldr	r3, [r7, #28]
 80078f8:	2b00      	cmp	r3, #0
 80078fa:	d003      	beq.n	8007904 <xTaskCreate+0x38>
 80078fc:	69fb      	ldr	r3, [r7, #28]
 80078fe:	697a      	ldr	r2, [r7, #20]
 8007900:	631a      	str	r2, [r3, #48]	; 0x30
 8007902:	e005      	b.n	8007910 <xTaskCreate+0x44>
 8007904:	6978      	ldr	r0, [r7, #20]
 8007906:	f001 fd35 	bl	8009374 <vPortFree>
 800790a:	e001      	b.n	8007910 <xTaskCreate+0x44>
 800790c:	2300      	movs	r3, #0
 800790e:	61fb      	str	r3, [r7, #28]
 8007910:	69fb      	ldr	r3, [r7, #28]
 8007912:	2b00      	cmp	r3, #0
 8007914:	d017      	beq.n	8007946 <xTaskCreate+0x7a>
 8007916:	69fb      	ldr	r3, [r7, #28]
 8007918:	2200      	movs	r2, #0
 800791a:	f883 2059 	strb.w	r2, [r3, #89]	; 0x59
 800791e:	88fa      	ldrh	r2, [r7, #6]
 8007920:	2300      	movs	r3, #0
 8007922:	9303      	str	r3, [sp, #12]
 8007924:	69fb      	ldr	r3, [r7, #28]
 8007926:	9302      	str	r3, [sp, #8]
 8007928:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800792a:	9301      	str	r3, [sp, #4]
 800792c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800792e:	9300      	str	r3, [sp, #0]
 8007930:	683b      	ldr	r3, [r7, #0]
 8007932:	68b9      	ldr	r1, [r7, #8]
 8007934:	68f8      	ldr	r0, [r7, #12]
 8007936:	f000 f80e 	bl	8007956 <prvInitialiseNewTask>
 800793a:	69f8      	ldr	r0, [r7, #28]
 800793c:	f000 f892 	bl	8007a64 <prvAddNewTaskToReadyList>
 8007940:	2301      	movs	r3, #1
 8007942:	61bb      	str	r3, [r7, #24]
 8007944:	e002      	b.n	800794c <xTaskCreate+0x80>
 8007946:	f04f 33ff 	mov.w	r3, #4294967295
 800794a:	61bb      	str	r3, [r7, #24]
 800794c:	69bb      	ldr	r3, [r7, #24]
 800794e:	4618      	mov	r0, r3
 8007950:	3720      	adds	r7, #32
 8007952:	46bd      	mov	sp, r7
 8007954:	bd80      	pop	{r7, pc}

08007956 <prvInitialiseNewTask>:
 8007956:	b580      	push	{r7, lr}
 8007958:	b088      	sub	sp, #32
 800795a:	af00      	add	r7, sp, #0
 800795c:	60f8      	str	r0, [r7, #12]
 800795e:	60b9      	str	r1, [r7, #8]
 8007960:	607a      	str	r2, [r7, #4]
 8007962:	603b      	str	r3, [r7, #0]
 8007964:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007966:	6b18      	ldr	r0, [r3, #48]	; 0x30
 8007968:	687b      	ldr	r3, [r7, #4]
 800796a:	009b      	lsls	r3, r3, #2
 800796c:	461a      	mov	r2, r3
 800796e:	21a5      	movs	r1, #165	; 0xa5
 8007970:	f002 fb97 	bl	800a0a2 <memset>
 8007974:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007976:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8007978:	687b      	ldr	r3, [r7, #4]
 800797a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800797e:	3b01      	subs	r3, #1
 8007980:	009b      	lsls	r3, r3, #2
 8007982:	4413      	add	r3, r2
 8007984:	61bb      	str	r3, [r7, #24]
 8007986:	69bb      	ldr	r3, [r7, #24]
 8007988:	f023 0307 	bic.w	r3, r3, #7
 800798c:	61bb      	str	r3, [r7, #24]
 800798e:	69bb      	ldr	r3, [r7, #24]
 8007990:	f003 0307 	and.w	r3, r3, #7
 8007994:	2b00      	cmp	r3, #0
 8007996:	d00a      	beq.n	80079ae <prvInitialiseNewTask+0x58>
 8007998:	f04f 0350 	mov.w	r3, #80	; 0x50
 800799c:	f383 8811 	msr	BASEPRI, r3
 80079a0:	f3bf 8f6f 	isb	sy
 80079a4:	f3bf 8f4f 	dsb	sy
 80079a8:	617b      	str	r3, [r7, #20]
 80079aa:	bf00      	nop
 80079ac:	e7fe      	b.n	80079ac <prvInitialiseNewTask+0x56>
 80079ae:	2300      	movs	r3, #0
 80079b0:	61fb      	str	r3, [r7, #28]
 80079b2:	e012      	b.n	80079da <prvInitialiseNewTask+0x84>
 80079b4:	68ba      	ldr	r2, [r7, #8]
 80079b6:	69fb      	ldr	r3, [r7, #28]
 80079b8:	4413      	add	r3, r2
 80079ba:	7819      	ldrb	r1, [r3, #0]
 80079bc:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80079be:	69fb      	ldr	r3, [r7, #28]
 80079c0:	4413      	add	r3, r2
 80079c2:	3334      	adds	r3, #52	; 0x34
 80079c4:	460a      	mov	r2, r1
 80079c6:	701a      	strb	r2, [r3, #0]
 80079c8:	68ba      	ldr	r2, [r7, #8]
 80079ca:	69fb      	ldr	r3, [r7, #28]
 80079cc:	4413      	add	r3, r2
 80079ce:	781b      	ldrb	r3, [r3, #0]
 80079d0:	2b00      	cmp	r3, #0
 80079d2:	d006      	beq.n	80079e2 <prvInitialiseNewTask+0x8c>
 80079d4:	69fb      	ldr	r3, [r7, #28]
 80079d6:	3301      	adds	r3, #1
 80079d8:	61fb      	str	r3, [r7, #28]
 80079da:	69fb      	ldr	r3, [r7, #28]
 80079dc:	2b0f      	cmp	r3, #15
 80079de:	d9e9      	bls.n	80079b4 <prvInitialiseNewTask+0x5e>
 80079e0:	e000      	b.n	80079e4 <prvInitialiseNewTask+0x8e>
 80079e2:	bf00      	nop
 80079e4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80079e6:	2200      	movs	r2, #0
 80079e8:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 80079ec:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80079ee:	2b37      	cmp	r3, #55	; 0x37
 80079f0:	d901      	bls.n	80079f6 <prvInitialiseNewTask+0xa0>
 80079f2:	2337      	movs	r3, #55	; 0x37
 80079f4:	62bb      	str	r3, [r7, #40]	; 0x28
 80079f6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80079f8:	6aba      	ldr	r2, [r7, #40]	; 0x28
 80079fa:	62da      	str	r2, [r3, #44]	; 0x2c
 80079fc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80079fe:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8007a00:	64da      	str	r2, [r3, #76]	; 0x4c
 8007a02:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007a04:	2200      	movs	r2, #0
 8007a06:	651a      	str	r2, [r3, #80]	; 0x50
 8007a08:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007a0a:	3304      	adds	r3, #4
 8007a0c:	4618      	mov	r0, r3
 8007a0e:	f7ff f94e 	bl	8006cae <vListInitialiseItem>
 8007a12:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007a14:	3318      	adds	r3, #24
 8007a16:	4618      	mov	r0, r3
 8007a18:	f7ff f949 	bl	8006cae <vListInitialiseItem>
 8007a1c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007a1e:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8007a20:	611a      	str	r2, [r3, #16]
 8007a22:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8007a24:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 8007a28:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007a2a:	619a      	str	r2, [r3, #24]
 8007a2c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007a2e:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8007a30:	625a      	str	r2, [r3, #36]	; 0x24
 8007a32:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007a34:	2200      	movs	r2, #0
 8007a36:	655a      	str	r2, [r3, #84]	; 0x54
 8007a38:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007a3a:	2200      	movs	r2, #0
 8007a3c:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
 8007a40:	683a      	ldr	r2, [r7, #0]
 8007a42:	68f9      	ldr	r1, [r7, #12]
 8007a44:	69b8      	ldr	r0, [r7, #24]
 8007a46:	f001 f9dd 	bl	8008e04 <pxPortInitialiseStack>
 8007a4a:	4602      	mov	r2, r0
 8007a4c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007a4e:	601a      	str	r2, [r3, #0]
 8007a50:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8007a52:	2b00      	cmp	r3, #0
 8007a54:	d002      	beq.n	8007a5c <prvInitialiseNewTask+0x106>
 8007a56:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8007a58:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8007a5a:	601a      	str	r2, [r3, #0]
 8007a5c:	bf00      	nop
 8007a5e:	3720      	adds	r7, #32
 8007a60:	46bd      	mov	sp, r7
 8007a62:	bd80      	pop	{r7, pc}

08007a64 <prvAddNewTaskToReadyList>:
 8007a64:	b580      	push	{r7, lr}
 8007a66:	b082      	sub	sp, #8
 8007a68:	af00      	add	r7, sp, #0
 8007a6a:	6078      	str	r0, [r7, #4]
 8007a6c:	f001 fabe 	bl	8008fec <vPortEnterCritical>
 8007a70:	4b2d      	ldr	r3, [pc, #180]	; (8007b28 <prvAddNewTaskToReadyList+0xc4>)
 8007a72:	681b      	ldr	r3, [r3, #0]
 8007a74:	3301      	adds	r3, #1
 8007a76:	4a2c      	ldr	r2, [pc, #176]	; (8007b28 <prvAddNewTaskToReadyList+0xc4>)
 8007a78:	6013      	str	r3, [r2, #0]
 8007a7a:	4b2c      	ldr	r3, [pc, #176]	; (8007b2c <prvAddNewTaskToReadyList+0xc8>)
 8007a7c:	681b      	ldr	r3, [r3, #0]
 8007a7e:	2b00      	cmp	r3, #0
 8007a80:	d109      	bne.n	8007a96 <prvAddNewTaskToReadyList+0x32>
 8007a82:	4a2a      	ldr	r2, [pc, #168]	; (8007b2c <prvAddNewTaskToReadyList+0xc8>)
 8007a84:	687b      	ldr	r3, [r7, #4]
 8007a86:	6013      	str	r3, [r2, #0]
 8007a88:	4b27      	ldr	r3, [pc, #156]	; (8007b28 <prvAddNewTaskToReadyList+0xc4>)
 8007a8a:	681b      	ldr	r3, [r3, #0]
 8007a8c:	2b01      	cmp	r3, #1
 8007a8e:	d110      	bne.n	8007ab2 <prvAddNewTaskToReadyList+0x4e>
 8007a90:	f000 fc16 	bl	80082c0 <prvInitialiseTaskLists>
 8007a94:	e00d      	b.n	8007ab2 <prvAddNewTaskToReadyList+0x4e>
 8007a96:	4b26      	ldr	r3, [pc, #152]	; (8007b30 <prvAddNewTaskToReadyList+0xcc>)
 8007a98:	681b      	ldr	r3, [r3, #0]
 8007a9a:	2b00      	cmp	r3, #0
 8007a9c:	d109      	bne.n	8007ab2 <prvAddNewTaskToReadyList+0x4e>
 8007a9e:	4b23      	ldr	r3, [pc, #140]	; (8007b2c <prvAddNewTaskToReadyList+0xc8>)
 8007aa0:	681b      	ldr	r3, [r3, #0]
 8007aa2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007aa4:	687b      	ldr	r3, [r7, #4]
 8007aa6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007aa8:	429a      	cmp	r2, r3
 8007aaa:	d802      	bhi.n	8007ab2 <prvAddNewTaskToReadyList+0x4e>
 8007aac:	4a1f      	ldr	r2, [pc, #124]	; (8007b2c <prvAddNewTaskToReadyList+0xc8>)
 8007aae:	687b      	ldr	r3, [r7, #4]
 8007ab0:	6013      	str	r3, [r2, #0]
 8007ab2:	4b20      	ldr	r3, [pc, #128]	; (8007b34 <prvAddNewTaskToReadyList+0xd0>)
 8007ab4:	681b      	ldr	r3, [r3, #0]
 8007ab6:	3301      	adds	r3, #1
 8007ab8:	4a1e      	ldr	r2, [pc, #120]	; (8007b34 <prvAddNewTaskToReadyList+0xd0>)
 8007aba:	6013      	str	r3, [r2, #0]
 8007abc:	4b1d      	ldr	r3, [pc, #116]	; (8007b34 <prvAddNewTaskToReadyList+0xd0>)
 8007abe:	681a      	ldr	r2, [r3, #0]
 8007ac0:	687b      	ldr	r3, [r7, #4]
 8007ac2:	645a      	str	r2, [r3, #68]	; 0x44
 8007ac4:	687b      	ldr	r3, [r7, #4]
 8007ac6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007ac8:	4b1b      	ldr	r3, [pc, #108]	; (8007b38 <prvAddNewTaskToReadyList+0xd4>)
 8007aca:	681b      	ldr	r3, [r3, #0]
 8007acc:	429a      	cmp	r2, r3
 8007ace:	d903      	bls.n	8007ad8 <prvAddNewTaskToReadyList+0x74>
 8007ad0:	687b      	ldr	r3, [r7, #4]
 8007ad2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007ad4:	4a18      	ldr	r2, [pc, #96]	; (8007b38 <prvAddNewTaskToReadyList+0xd4>)
 8007ad6:	6013      	str	r3, [r2, #0]
 8007ad8:	687b      	ldr	r3, [r7, #4]
 8007ada:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007adc:	4613      	mov	r3, r2
 8007ade:	009b      	lsls	r3, r3, #2
 8007ae0:	4413      	add	r3, r2
 8007ae2:	009b      	lsls	r3, r3, #2
 8007ae4:	4a15      	ldr	r2, [pc, #84]	; (8007b3c <prvAddNewTaskToReadyList+0xd8>)
 8007ae6:	441a      	add	r2, r3
 8007ae8:	687b      	ldr	r3, [r7, #4]
 8007aea:	3304      	adds	r3, #4
 8007aec:	4619      	mov	r1, r3
 8007aee:	4610      	mov	r0, r2
 8007af0:	f7ff f8e9 	bl	8006cc6 <vListInsertEnd>
 8007af4:	f001 faaa 	bl	800904c <vPortExitCritical>
 8007af8:	4b0d      	ldr	r3, [pc, #52]	; (8007b30 <prvAddNewTaskToReadyList+0xcc>)
 8007afa:	681b      	ldr	r3, [r3, #0]
 8007afc:	2b00      	cmp	r3, #0
 8007afe:	d00e      	beq.n	8007b1e <prvAddNewTaskToReadyList+0xba>
 8007b00:	4b0a      	ldr	r3, [pc, #40]	; (8007b2c <prvAddNewTaskToReadyList+0xc8>)
 8007b02:	681b      	ldr	r3, [r3, #0]
 8007b04:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007b06:	687b      	ldr	r3, [r7, #4]
 8007b08:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007b0a:	429a      	cmp	r2, r3
 8007b0c:	d207      	bcs.n	8007b1e <prvAddNewTaskToReadyList+0xba>
 8007b0e:	4b0c      	ldr	r3, [pc, #48]	; (8007b40 <prvAddNewTaskToReadyList+0xdc>)
 8007b10:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007b14:	601a      	str	r2, [r3, #0]
 8007b16:	f3bf 8f4f 	dsb	sy
 8007b1a:	f3bf 8f6f 	isb	sy
 8007b1e:	bf00      	nop
 8007b20:	3708      	adds	r7, #8
 8007b22:	46bd      	mov	sp, r7
 8007b24:	bd80      	pop	{r7, pc}
 8007b26:	bf00      	nop
 8007b28:	20001244 	.word	0x20001244
 8007b2c:	20000d70 	.word	0x20000d70
 8007b30:	20001250 	.word	0x20001250
 8007b34:	20001260 	.word	0x20001260
 8007b38:	2000124c 	.word	0x2000124c
 8007b3c:	20000d74 	.word	0x20000d74
 8007b40:	e000ed04 	.word	0xe000ed04

08007b44 <vTaskDelay>:
 8007b44:	b580      	push	{r7, lr}
 8007b46:	b084      	sub	sp, #16
 8007b48:	af00      	add	r7, sp, #0
 8007b4a:	6078      	str	r0, [r7, #4]
 8007b4c:	2300      	movs	r3, #0
 8007b4e:	60fb      	str	r3, [r7, #12]
 8007b50:	687b      	ldr	r3, [r7, #4]
 8007b52:	2b00      	cmp	r3, #0
 8007b54:	d017      	beq.n	8007b86 <vTaskDelay+0x42>
 8007b56:	4b13      	ldr	r3, [pc, #76]	; (8007ba4 <vTaskDelay+0x60>)
 8007b58:	681b      	ldr	r3, [r3, #0]
 8007b5a:	2b00      	cmp	r3, #0
 8007b5c:	d00a      	beq.n	8007b74 <vTaskDelay+0x30>
 8007b5e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007b62:	f383 8811 	msr	BASEPRI, r3
 8007b66:	f3bf 8f6f 	isb	sy
 8007b6a:	f3bf 8f4f 	dsb	sy
 8007b6e:	60bb      	str	r3, [r7, #8]
 8007b70:	bf00      	nop
 8007b72:	e7fe      	b.n	8007b72 <vTaskDelay+0x2e>
 8007b74:	f000 f880 	bl	8007c78 <vTaskSuspendAll>
 8007b78:	2100      	movs	r1, #0
 8007b7a:	6878      	ldr	r0, [r7, #4]
 8007b7c:	f000 fddc 	bl	8008738 <prvAddCurrentTaskToDelayedList>
 8007b80:	f000 f888 	bl	8007c94 <xTaskResumeAll>
 8007b84:	60f8      	str	r0, [r7, #12]
 8007b86:	68fb      	ldr	r3, [r7, #12]
 8007b88:	2b00      	cmp	r3, #0
 8007b8a:	d107      	bne.n	8007b9c <vTaskDelay+0x58>
 8007b8c:	4b06      	ldr	r3, [pc, #24]	; (8007ba8 <vTaskDelay+0x64>)
 8007b8e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007b92:	601a      	str	r2, [r3, #0]
 8007b94:	f3bf 8f4f 	dsb	sy
 8007b98:	f3bf 8f6f 	isb	sy
 8007b9c:	bf00      	nop
 8007b9e:	3710      	adds	r7, #16
 8007ba0:	46bd      	mov	sp, r7
 8007ba2:	bd80      	pop	{r7, pc}
 8007ba4:	2000126c 	.word	0x2000126c
 8007ba8:	e000ed04 	.word	0xe000ed04

08007bac <vTaskStartScheduler>:
 8007bac:	b580      	push	{r7, lr}
 8007bae:	b08a      	sub	sp, #40	; 0x28
 8007bb0:	af04      	add	r7, sp, #16
 8007bb2:	2300      	movs	r3, #0
 8007bb4:	60bb      	str	r3, [r7, #8]
 8007bb6:	2300      	movs	r3, #0
 8007bb8:	607b      	str	r3, [r7, #4]
 8007bba:	463a      	mov	r2, r7
 8007bbc:	1d39      	adds	r1, r7, #4
 8007bbe:	f107 0308 	add.w	r3, r7, #8
 8007bc2:	4618      	mov	r0, r3
 8007bc4:	f7ff f822 	bl	8006c0c <vApplicationGetIdleTaskMemory>
 8007bc8:	6839      	ldr	r1, [r7, #0]
 8007bca:	687b      	ldr	r3, [r7, #4]
 8007bcc:	68ba      	ldr	r2, [r7, #8]
 8007bce:	9202      	str	r2, [sp, #8]
 8007bd0:	9301      	str	r3, [sp, #4]
 8007bd2:	2300      	movs	r3, #0
 8007bd4:	9300      	str	r3, [sp, #0]
 8007bd6:	2300      	movs	r3, #0
 8007bd8:	460a      	mov	r2, r1
 8007bda:	4921      	ldr	r1, [pc, #132]	; (8007c60 <vTaskStartScheduler+0xb4>)
 8007bdc:	4821      	ldr	r0, [pc, #132]	; (8007c64 <vTaskStartScheduler+0xb8>)
 8007bde:	f7ff fe19 	bl	8007814 <xTaskCreateStatic>
 8007be2:	4603      	mov	r3, r0
 8007be4:	4a20      	ldr	r2, [pc, #128]	; (8007c68 <vTaskStartScheduler+0xbc>)
 8007be6:	6013      	str	r3, [r2, #0]
 8007be8:	4b1f      	ldr	r3, [pc, #124]	; (8007c68 <vTaskStartScheduler+0xbc>)
 8007bea:	681b      	ldr	r3, [r3, #0]
 8007bec:	2b00      	cmp	r3, #0
 8007bee:	d002      	beq.n	8007bf6 <vTaskStartScheduler+0x4a>
 8007bf0:	2301      	movs	r3, #1
 8007bf2:	617b      	str	r3, [r7, #20]
 8007bf4:	e001      	b.n	8007bfa <vTaskStartScheduler+0x4e>
 8007bf6:	2300      	movs	r3, #0
 8007bf8:	617b      	str	r3, [r7, #20]
 8007bfa:	697b      	ldr	r3, [r7, #20]
 8007bfc:	2b01      	cmp	r3, #1
 8007bfe:	d102      	bne.n	8007c06 <vTaskStartScheduler+0x5a>
 8007c00:	f000 fdee 	bl	80087e0 <xTimerCreateTimerTask>
 8007c04:	6178      	str	r0, [r7, #20]
 8007c06:	697b      	ldr	r3, [r7, #20]
 8007c08:	2b01      	cmp	r3, #1
 8007c0a:	d116      	bne.n	8007c3a <vTaskStartScheduler+0x8e>
 8007c0c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007c10:	f383 8811 	msr	BASEPRI, r3
 8007c14:	f3bf 8f6f 	isb	sy
 8007c18:	f3bf 8f4f 	dsb	sy
 8007c1c:	613b      	str	r3, [r7, #16]
 8007c1e:	bf00      	nop
 8007c20:	4b12      	ldr	r3, [pc, #72]	; (8007c6c <vTaskStartScheduler+0xc0>)
 8007c22:	f04f 32ff 	mov.w	r2, #4294967295
 8007c26:	601a      	str	r2, [r3, #0]
 8007c28:	4b11      	ldr	r3, [pc, #68]	; (8007c70 <vTaskStartScheduler+0xc4>)
 8007c2a:	2201      	movs	r2, #1
 8007c2c:	601a      	str	r2, [r3, #0]
 8007c2e:	4b11      	ldr	r3, [pc, #68]	; (8007c74 <vTaskStartScheduler+0xc8>)
 8007c30:	2200      	movs	r2, #0
 8007c32:	601a      	str	r2, [r3, #0]
 8007c34:	f001 f968 	bl	8008f08 <xPortStartScheduler>
 8007c38:	e00e      	b.n	8007c58 <vTaskStartScheduler+0xac>
 8007c3a:	697b      	ldr	r3, [r7, #20]
 8007c3c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007c40:	d10a      	bne.n	8007c58 <vTaskStartScheduler+0xac>
 8007c42:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007c46:	f383 8811 	msr	BASEPRI, r3
 8007c4a:	f3bf 8f6f 	isb	sy
 8007c4e:	f3bf 8f4f 	dsb	sy
 8007c52:	60fb      	str	r3, [r7, #12]
 8007c54:	bf00      	nop
 8007c56:	e7fe      	b.n	8007c56 <vTaskStartScheduler+0xaa>
 8007c58:	bf00      	nop
 8007c5a:	3718      	adds	r7, #24
 8007c5c:	46bd      	mov	sp, r7
 8007c5e:	bd80      	pop	{r7, pc}
 8007c60:	0800c2c4 	.word	0x0800c2c4
 8007c64:	08008291 	.word	0x08008291
 8007c68:	20001268 	.word	0x20001268
 8007c6c:	20001264 	.word	0x20001264
 8007c70:	20001250 	.word	0x20001250
 8007c74:	20001248 	.word	0x20001248

08007c78 <vTaskSuspendAll>:
 8007c78:	b480      	push	{r7}
 8007c7a:	af00      	add	r7, sp, #0
 8007c7c:	4b04      	ldr	r3, [pc, #16]	; (8007c90 <vTaskSuspendAll+0x18>)
 8007c7e:	681b      	ldr	r3, [r3, #0]
 8007c80:	3301      	adds	r3, #1
 8007c82:	4a03      	ldr	r2, [pc, #12]	; (8007c90 <vTaskSuspendAll+0x18>)
 8007c84:	6013      	str	r3, [r2, #0]
 8007c86:	bf00      	nop
 8007c88:	46bd      	mov	sp, r7
 8007c8a:	bc80      	pop	{r7}
 8007c8c:	4770      	bx	lr
 8007c8e:	bf00      	nop
 8007c90:	2000126c 	.word	0x2000126c

08007c94 <xTaskResumeAll>:
 8007c94:	b580      	push	{r7, lr}
 8007c96:	b084      	sub	sp, #16
 8007c98:	af00      	add	r7, sp, #0
 8007c9a:	2300      	movs	r3, #0
 8007c9c:	60fb      	str	r3, [r7, #12]
 8007c9e:	2300      	movs	r3, #0
 8007ca0:	60bb      	str	r3, [r7, #8]
 8007ca2:	4b42      	ldr	r3, [pc, #264]	; (8007dac <xTaskResumeAll+0x118>)
 8007ca4:	681b      	ldr	r3, [r3, #0]
 8007ca6:	2b00      	cmp	r3, #0
 8007ca8:	d10a      	bne.n	8007cc0 <xTaskResumeAll+0x2c>
 8007caa:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007cae:	f383 8811 	msr	BASEPRI, r3
 8007cb2:	f3bf 8f6f 	isb	sy
 8007cb6:	f3bf 8f4f 	dsb	sy
 8007cba:	603b      	str	r3, [r7, #0]
 8007cbc:	bf00      	nop
 8007cbe:	e7fe      	b.n	8007cbe <xTaskResumeAll+0x2a>
 8007cc0:	f001 f994 	bl	8008fec <vPortEnterCritical>
 8007cc4:	4b39      	ldr	r3, [pc, #228]	; (8007dac <xTaskResumeAll+0x118>)
 8007cc6:	681b      	ldr	r3, [r3, #0]
 8007cc8:	3b01      	subs	r3, #1
 8007cca:	4a38      	ldr	r2, [pc, #224]	; (8007dac <xTaskResumeAll+0x118>)
 8007ccc:	6013      	str	r3, [r2, #0]
 8007cce:	4b37      	ldr	r3, [pc, #220]	; (8007dac <xTaskResumeAll+0x118>)
 8007cd0:	681b      	ldr	r3, [r3, #0]
 8007cd2:	2b00      	cmp	r3, #0
 8007cd4:	d162      	bne.n	8007d9c <xTaskResumeAll+0x108>
 8007cd6:	4b36      	ldr	r3, [pc, #216]	; (8007db0 <xTaskResumeAll+0x11c>)
 8007cd8:	681b      	ldr	r3, [r3, #0]
 8007cda:	2b00      	cmp	r3, #0
 8007cdc:	d05e      	beq.n	8007d9c <xTaskResumeAll+0x108>
 8007cde:	e02f      	b.n	8007d40 <xTaskResumeAll+0xac>
 8007ce0:	4b34      	ldr	r3, [pc, #208]	; (8007db4 <xTaskResumeAll+0x120>)
 8007ce2:	68db      	ldr	r3, [r3, #12]
 8007ce4:	68db      	ldr	r3, [r3, #12]
 8007ce6:	60fb      	str	r3, [r7, #12]
 8007ce8:	68fb      	ldr	r3, [r7, #12]
 8007cea:	3318      	adds	r3, #24
 8007cec:	4618      	mov	r0, r3
 8007cee:	f7ff f845 	bl	8006d7c <uxListRemove>
 8007cf2:	68fb      	ldr	r3, [r7, #12]
 8007cf4:	3304      	adds	r3, #4
 8007cf6:	4618      	mov	r0, r3
 8007cf8:	f7ff f840 	bl	8006d7c <uxListRemove>
 8007cfc:	68fb      	ldr	r3, [r7, #12]
 8007cfe:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007d00:	4b2d      	ldr	r3, [pc, #180]	; (8007db8 <xTaskResumeAll+0x124>)
 8007d02:	681b      	ldr	r3, [r3, #0]
 8007d04:	429a      	cmp	r2, r3
 8007d06:	d903      	bls.n	8007d10 <xTaskResumeAll+0x7c>
 8007d08:	68fb      	ldr	r3, [r7, #12]
 8007d0a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007d0c:	4a2a      	ldr	r2, [pc, #168]	; (8007db8 <xTaskResumeAll+0x124>)
 8007d0e:	6013      	str	r3, [r2, #0]
 8007d10:	68fb      	ldr	r3, [r7, #12]
 8007d12:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007d14:	4613      	mov	r3, r2
 8007d16:	009b      	lsls	r3, r3, #2
 8007d18:	4413      	add	r3, r2
 8007d1a:	009b      	lsls	r3, r3, #2
 8007d1c:	4a27      	ldr	r2, [pc, #156]	; (8007dbc <xTaskResumeAll+0x128>)
 8007d1e:	441a      	add	r2, r3
 8007d20:	68fb      	ldr	r3, [r7, #12]
 8007d22:	3304      	adds	r3, #4
 8007d24:	4619      	mov	r1, r3
 8007d26:	4610      	mov	r0, r2
 8007d28:	f7fe ffcd 	bl	8006cc6 <vListInsertEnd>
 8007d2c:	68fb      	ldr	r3, [r7, #12]
 8007d2e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007d30:	4b23      	ldr	r3, [pc, #140]	; (8007dc0 <xTaskResumeAll+0x12c>)
 8007d32:	681b      	ldr	r3, [r3, #0]
 8007d34:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007d36:	429a      	cmp	r2, r3
 8007d38:	d302      	bcc.n	8007d40 <xTaskResumeAll+0xac>
 8007d3a:	4b22      	ldr	r3, [pc, #136]	; (8007dc4 <xTaskResumeAll+0x130>)
 8007d3c:	2201      	movs	r2, #1
 8007d3e:	601a      	str	r2, [r3, #0]
 8007d40:	4b1c      	ldr	r3, [pc, #112]	; (8007db4 <xTaskResumeAll+0x120>)
 8007d42:	681b      	ldr	r3, [r3, #0]
 8007d44:	2b00      	cmp	r3, #0
 8007d46:	d1cb      	bne.n	8007ce0 <xTaskResumeAll+0x4c>
 8007d48:	68fb      	ldr	r3, [r7, #12]
 8007d4a:	2b00      	cmp	r3, #0
 8007d4c:	d001      	beq.n	8007d52 <xTaskResumeAll+0xbe>
 8007d4e:	f000 fb55 	bl	80083fc <prvResetNextTaskUnblockTime>
 8007d52:	4b1d      	ldr	r3, [pc, #116]	; (8007dc8 <xTaskResumeAll+0x134>)
 8007d54:	681b      	ldr	r3, [r3, #0]
 8007d56:	607b      	str	r3, [r7, #4]
 8007d58:	687b      	ldr	r3, [r7, #4]
 8007d5a:	2b00      	cmp	r3, #0
 8007d5c:	d010      	beq.n	8007d80 <xTaskResumeAll+0xec>
 8007d5e:	f000 f845 	bl	8007dec <xTaskIncrementTick>
 8007d62:	4603      	mov	r3, r0
 8007d64:	2b00      	cmp	r3, #0
 8007d66:	d002      	beq.n	8007d6e <xTaskResumeAll+0xda>
 8007d68:	4b16      	ldr	r3, [pc, #88]	; (8007dc4 <xTaskResumeAll+0x130>)
 8007d6a:	2201      	movs	r2, #1
 8007d6c:	601a      	str	r2, [r3, #0]
 8007d6e:	687b      	ldr	r3, [r7, #4]
 8007d70:	3b01      	subs	r3, #1
 8007d72:	607b      	str	r3, [r7, #4]
 8007d74:	687b      	ldr	r3, [r7, #4]
 8007d76:	2b00      	cmp	r3, #0
 8007d78:	d1f1      	bne.n	8007d5e <xTaskResumeAll+0xca>
 8007d7a:	4b13      	ldr	r3, [pc, #76]	; (8007dc8 <xTaskResumeAll+0x134>)
 8007d7c:	2200      	movs	r2, #0
 8007d7e:	601a      	str	r2, [r3, #0]
 8007d80:	4b10      	ldr	r3, [pc, #64]	; (8007dc4 <xTaskResumeAll+0x130>)
 8007d82:	681b      	ldr	r3, [r3, #0]
 8007d84:	2b00      	cmp	r3, #0
 8007d86:	d009      	beq.n	8007d9c <xTaskResumeAll+0x108>
 8007d88:	2301      	movs	r3, #1
 8007d8a:	60bb      	str	r3, [r7, #8]
 8007d8c:	4b0f      	ldr	r3, [pc, #60]	; (8007dcc <xTaskResumeAll+0x138>)
 8007d8e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007d92:	601a      	str	r2, [r3, #0]
 8007d94:	f3bf 8f4f 	dsb	sy
 8007d98:	f3bf 8f6f 	isb	sy
 8007d9c:	f001 f956 	bl	800904c <vPortExitCritical>
 8007da0:	68bb      	ldr	r3, [r7, #8]
 8007da2:	4618      	mov	r0, r3
 8007da4:	3710      	adds	r7, #16
 8007da6:	46bd      	mov	sp, r7
 8007da8:	bd80      	pop	{r7, pc}
 8007daa:	bf00      	nop
 8007dac:	2000126c 	.word	0x2000126c
 8007db0:	20001244 	.word	0x20001244
 8007db4:	20001204 	.word	0x20001204
 8007db8:	2000124c 	.word	0x2000124c
 8007dbc:	20000d74 	.word	0x20000d74
 8007dc0:	20000d70 	.word	0x20000d70
 8007dc4:	20001258 	.word	0x20001258
 8007dc8:	20001254 	.word	0x20001254
 8007dcc:	e000ed04 	.word	0xe000ed04

08007dd0 <xTaskGetTickCount>:
 8007dd0:	b480      	push	{r7}
 8007dd2:	b083      	sub	sp, #12
 8007dd4:	af00      	add	r7, sp, #0
 8007dd6:	4b04      	ldr	r3, [pc, #16]	; (8007de8 <xTaskGetTickCount+0x18>)
 8007dd8:	681b      	ldr	r3, [r3, #0]
 8007dda:	607b      	str	r3, [r7, #4]
 8007ddc:	687b      	ldr	r3, [r7, #4]
 8007dde:	4618      	mov	r0, r3
 8007de0:	370c      	adds	r7, #12
 8007de2:	46bd      	mov	sp, r7
 8007de4:	bc80      	pop	{r7}
 8007de6:	4770      	bx	lr
 8007de8:	20001248 	.word	0x20001248

08007dec <xTaskIncrementTick>:
 8007dec:	b580      	push	{r7, lr}
 8007dee:	b086      	sub	sp, #24
 8007df0:	af00      	add	r7, sp, #0
 8007df2:	2300      	movs	r3, #0
 8007df4:	617b      	str	r3, [r7, #20]
 8007df6:	4b51      	ldr	r3, [pc, #324]	; (8007f3c <xTaskIncrementTick+0x150>)
 8007df8:	681b      	ldr	r3, [r3, #0]
 8007dfa:	2b00      	cmp	r3, #0
 8007dfc:	f040 808e 	bne.w	8007f1c <xTaskIncrementTick+0x130>
 8007e00:	4b4f      	ldr	r3, [pc, #316]	; (8007f40 <xTaskIncrementTick+0x154>)
 8007e02:	681b      	ldr	r3, [r3, #0]
 8007e04:	3301      	adds	r3, #1
 8007e06:	613b      	str	r3, [r7, #16]
 8007e08:	4a4d      	ldr	r2, [pc, #308]	; (8007f40 <xTaskIncrementTick+0x154>)
 8007e0a:	693b      	ldr	r3, [r7, #16]
 8007e0c:	6013      	str	r3, [r2, #0]
 8007e0e:	693b      	ldr	r3, [r7, #16]
 8007e10:	2b00      	cmp	r3, #0
 8007e12:	d120      	bne.n	8007e56 <xTaskIncrementTick+0x6a>
 8007e14:	4b4b      	ldr	r3, [pc, #300]	; (8007f44 <xTaskIncrementTick+0x158>)
 8007e16:	681b      	ldr	r3, [r3, #0]
 8007e18:	681b      	ldr	r3, [r3, #0]
 8007e1a:	2b00      	cmp	r3, #0
 8007e1c:	d00a      	beq.n	8007e34 <xTaskIncrementTick+0x48>
 8007e1e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007e22:	f383 8811 	msr	BASEPRI, r3
 8007e26:	f3bf 8f6f 	isb	sy
 8007e2a:	f3bf 8f4f 	dsb	sy
 8007e2e:	603b      	str	r3, [r7, #0]
 8007e30:	bf00      	nop
 8007e32:	e7fe      	b.n	8007e32 <xTaskIncrementTick+0x46>
 8007e34:	4b43      	ldr	r3, [pc, #268]	; (8007f44 <xTaskIncrementTick+0x158>)
 8007e36:	681b      	ldr	r3, [r3, #0]
 8007e38:	60fb      	str	r3, [r7, #12]
 8007e3a:	4b43      	ldr	r3, [pc, #268]	; (8007f48 <xTaskIncrementTick+0x15c>)
 8007e3c:	681b      	ldr	r3, [r3, #0]
 8007e3e:	4a41      	ldr	r2, [pc, #260]	; (8007f44 <xTaskIncrementTick+0x158>)
 8007e40:	6013      	str	r3, [r2, #0]
 8007e42:	4a41      	ldr	r2, [pc, #260]	; (8007f48 <xTaskIncrementTick+0x15c>)
 8007e44:	68fb      	ldr	r3, [r7, #12]
 8007e46:	6013      	str	r3, [r2, #0]
 8007e48:	4b40      	ldr	r3, [pc, #256]	; (8007f4c <xTaskIncrementTick+0x160>)
 8007e4a:	681b      	ldr	r3, [r3, #0]
 8007e4c:	3301      	adds	r3, #1
 8007e4e:	4a3f      	ldr	r2, [pc, #252]	; (8007f4c <xTaskIncrementTick+0x160>)
 8007e50:	6013      	str	r3, [r2, #0]
 8007e52:	f000 fad3 	bl	80083fc <prvResetNextTaskUnblockTime>
 8007e56:	4b3e      	ldr	r3, [pc, #248]	; (8007f50 <xTaskIncrementTick+0x164>)
 8007e58:	681b      	ldr	r3, [r3, #0]
 8007e5a:	693a      	ldr	r2, [r7, #16]
 8007e5c:	429a      	cmp	r2, r3
 8007e5e:	d34e      	bcc.n	8007efe <xTaskIncrementTick+0x112>
 8007e60:	4b38      	ldr	r3, [pc, #224]	; (8007f44 <xTaskIncrementTick+0x158>)
 8007e62:	681b      	ldr	r3, [r3, #0]
 8007e64:	681b      	ldr	r3, [r3, #0]
 8007e66:	2b00      	cmp	r3, #0
 8007e68:	d101      	bne.n	8007e6e <xTaskIncrementTick+0x82>
 8007e6a:	2301      	movs	r3, #1
 8007e6c:	e000      	b.n	8007e70 <xTaskIncrementTick+0x84>
 8007e6e:	2300      	movs	r3, #0
 8007e70:	2b00      	cmp	r3, #0
 8007e72:	d004      	beq.n	8007e7e <xTaskIncrementTick+0x92>
 8007e74:	4b36      	ldr	r3, [pc, #216]	; (8007f50 <xTaskIncrementTick+0x164>)
 8007e76:	f04f 32ff 	mov.w	r2, #4294967295
 8007e7a:	601a      	str	r2, [r3, #0]
 8007e7c:	e03f      	b.n	8007efe <xTaskIncrementTick+0x112>
 8007e7e:	4b31      	ldr	r3, [pc, #196]	; (8007f44 <xTaskIncrementTick+0x158>)
 8007e80:	681b      	ldr	r3, [r3, #0]
 8007e82:	68db      	ldr	r3, [r3, #12]
 8007e84:	68db      	ldr	r3, [r3, #12]
 8007e86:	60bb      	str	r3, [r7, #8]
 8007e88:	68bb      	ldr	r3, [r7, #8]
 8007e8a:	685b      	ldr	r3, [r3, #4]
 8007e8c:	607b      	str	r3, [r7, #4]
 8007e8e:	693a      	ldr	r2, [r7, #16]
 8007e90:	687b      	ldr	r3, [r7, #4]
 8007e92:	429a      	cmp	r2, r3
 8007e94:	d203      	bcs.n	8007e9e <xTaskIncrementTick+0xb2>
 8007e96:	4a2e      	ldr	r2, [pc, #184]	; (8007f50 <xTaskIncrementTick+0x164>)
 8007e98:	687b      	ldr	r3, [r7, #4]
 8007e9a:	6013      	str	r3, [r2, #0]
 8007e9c:	e02f      	b.n	8007efe <xTaskIncrementTick+0x112>
 8007e9e:	68bb      	ldr	r3, [r7, #8]
 8007ea0:	3304      	adds	r3, #4
 8007ea2:	4618      	mov	r0, r3
 8007ea4:	f7fe ff6a 	bl	8006d7c <uxListRemove>
 8007ea8:	68bb      	ldr	r3, [r7, #8]
 8007eaa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007eac:	2b00      	cmp	r3, #0
 8007eae:	d004      	beq.n	8007eba <xTaskIncrementTick+0xce>
 8007eb0:	68bb      	ldr	r3, [r7, #8]
 8007eb2:	3318      	adds	r3, #24
 8007eb4:	4618      	mov	r0, r3
 8007eb6:	f7fe ff61 	bl	8006d7c <uxListRemove>
 8007eba:	68bb      	ldr	r3, [r7, #8]
 8007ebc:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007ebe:	4b25      	ldr	r3, [pc, #148]	; (8007f54 <xTaskIncrementTick+0x168>)
 8007ec0:	681b      	ldr	r3, [r3, #0]
 8007ec2:	429a      	cmp	r2, r3
 8007ec4:	d903      	bls.n	8007ece <xTaskIncrementTick+0xe2>
 8007ec6:	68bb      	ldr	r3, [r7, #8]
 8007ec8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007eca:	4a22      	ldr	r2, [pc, #136]	; (8007f54 <xTaskIncrementTick+0x168>)
 8007ecc:	6013      	str	r3, [r2, #0]
 8007ece:	68bb      	ldr	r3, [r7, #8]
 8007ed0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007ed2:	4613      	mov	r3, r2
 8007ed4:	009b      	lsls	r3, r3, #2
 8007ed6:	4413      	add	r3, r2
 8007ed8:	009b      	lsls	r3, r3, #2
 8007eda:	4a1f      	ldr	r2, [pc, #124]	; (8007f58 <xTaskIncrementTick+0x16c>)
 8007edc:	441a      	add	r2, r3
 8007ede:	68bb      	ldr	r3, [r7, #8]
 8007ee0:	3304      	adds	r3, #4
 8007ee2:	4619      	mov	r1, r3
 8007ee4:	4610      	mov	r0, r2
 8007ee6:	f7fe feee 	bl	8006cc6 <vListInsertEnd>
 8007eea:	68bb      	ldr	r3, [r7, #8]
 8007eec:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007eee:	4b1b      	ldr	r3, [pc, #108]	; (8007f5c <xTaskIncrementTick+0x170>)
 8007ef0:	681b      	ldr	r3, [r3, #0]
 8007ef2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007ef4:	429a      	cmp	r2, r3
 8007ef6:	d3b3      	bcc.n	8007e60 <xTaskIncrementTick+0x74>
 8007ef8:	2301      	movs	r3, #1
 8007efa:	617b      	str	r3, [r7, #20]
 8007efc:	e7b0      	b.n	8007e60 <xTaskIncrementTick+0x74>
 8007efe:	4b17      	ldr	r3, [pc, #92]	; (8007f5c <xTaskIncrementTick+0x170>)
 8007f00:	681b      	ldr	r3, [r3, #0]
 8007f02:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007f04:	4914      	ldr	r1, [pc, #80]	; (8007f58 <xTaskIncrementTick+0x16c>)
 8007f06:	4613      	mov	r3, r2
 8007f08:	009b      	lsls	r3, r3, #2
 8007f0a:	4413      	add	r3, r2
 8007f0c:	009b      	lsls	r3, r3, #2
 8007f0e:	440b      	add	r3, r1
 8007f10:	681b      	ldr	r3, [r3, #0]
 8007f12:	2b01      	cmp	r3, #1
 8007f14:	d907      	bls.n	8007f26 <xTaskIncrementTick+0x13a>
 8007f16:	2301      	movs	r3, #1
 8007f18:	617b      	str	r3, [r7, #20]
 8007f1a:	e004      	b.n	8007f26 <xTaskIncrementTick+0x13a>
 8007f1c:	4b10      	ldr	r3, [pc, #64]	; (8007f60 <xTaskIncrementTick+0x174>)
 8007f1e:	681b      	ldr	r3, [r3, #0]
 8007f20:	3301      	adds	r3, #1
 8007f22:	4a0f      	ldr	r2, [pc, #60]	; (8007f60 <xTaskIncrementTick+0x174>)
 8007f24:	6013      	str	r3, [r2, #0]
 8007f26:	4b0f      	ldr	r3, [pc, #60]	; (8007f64 <xTaskIncrementTick+0x178>)
 8007f28:	681b      	ldr	r3, [r3, #0]
 8007f2a:	2b00      	cmp	r3, #0
 8007f2c:	d001      	beq.n	8007f32 <xTaskIncrementTick+0x146>
 8007f2e:	2301      	movs	r3, #1
 8007f30:	617b      	str	r3, [r7, #20]
 8007f32:	697b      	ldr	r3, [r7, #20]
 8007f34:	4618      	mov	r0, r3
 8007f36:	3718      	adds	r7, #24
 8007f38:	46bd      	mov	sp, r7
 8007f3a:	bd80      	pop	{r7, pc}
 8007f3c:	2000126c 	.word	0x2000126c
 8007f40:	20001248 	.word	0x20001248
 8007f44:	200011fc 	.word	0x200011fc
 8007f48:	20001200 	.word	0x20001200
 8007f4c:	2000125c 	.word	0x2000125c
 8007f50:	20001264 	.word	0x20001264
 8007f54:	2000124c 	.word	0x2000124c
 8007f58:	20000d74 	.word	0x20000d74
 8007f5c:	20000d70 	.word	0x20000d70
 8007f60:	20001254 	.word	0x20001254
 8007f64:	20001258 	.word	0x20001258

08007f68 <vTaskSwitchContext>:
 8007f68:	b480      	push	{r7}
 8007f6a:	b085      	sub	sp, #20
 8007f6c:	af00      	add	r7, sp, #0
 8007f6e:	4b27      	ldr	r3, [pc, #156]	; (800800c <vTaskSwitchContext+0xa4>)
 8007f70:	681b      	ldr	r3, [r3, #0]
 8007f72:	2b00      	cmp	r3, #0
 8007f74:	d003      	beq.n	8007f7e <vTaskSwitchContext+0x16>
 8007f76:	4b26      	ldr	r3, [pc, #152]	; (8008010 <vTaskSwitchContext+0xa8>)
 8007f78:	2201      	movs	r2, #1
 8007f7a:	601a      	str	r2, [r3, #0]
 8007f7c:	e041      	b.n	8008002 <vTaskSwitchContext+0x9a>
 8007f7e:	4b24      	ldr	r3, [pc, #144]	; (8008010 <vTaskSwitchContext+0xa8>)
 8007f80:	2200      	movs	r2, #0
 8007f82:	601a      	str	r2, [r3, #0]
 8007f84:	4b23      	ldr	r3, [pc, #140]	; (8008014 <vTaskSwitchContext+0xac>)
 8007f86:	681b      	ldr	r3, [r3, #0]
 8007f88:	60fb      	str	r3, [r7, #12]
 8007f8a:	e010      	b.n	8007fae <vTaskSwitchContext+0x46>
 8007f8c:	68fb      	ldr	r3, [r7, #12]
 8007f8e:	2b00      	cmp	r3, #0
 8007f90:	d10a      	bne.n	8007fa8 <vTaskSwitchContext+0x40>
 8007f92:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007f96:	f383 8811 	msr	BASEPRI, r3
 8007f9a:	f3bf 8f6f 	isb	sy
 8007f9e:	f3bf 8f4f 	dsb	sy
 8007fa2:	607b      	str	r3, [r7, #4]
 8007fa4:	bf00      	nop
 8007fa6:	e7fe      	b.n	8007fa6 <vTaskSwitchContext+0x3e>
 8007fa8:	68fb      	ldr	r3, [r7, #12]
 8007faa:	3b01      	subs	r3, #1
 8007fac:	60fb      	str	r3, [r7, #12]
 8007fae:	491a      	ldr	r1, [pc, #104]	; (8008018 <vTaskSwitchContext+0xb0>)
 8007fb0:	68fa      	ldr	r2, [r7, #12]
 8007fb2:	4613      	mov	r3, r2
 8007fb4:	009b      	lsls	r3, r3, #2
 8007fb6:	4413      	add	r3, r2
 8007fb8:	009b      	lsls	r3, r3, #2
 8007fba:	440b      	add	r3, r1
 8007fbc:	681b      	ldr	r3, [r3, #0]
 8007fbe:	2b00      	cmp	r3, #0
 8007fc0:	d0e4      	beq.n	8007f8c <vTaskSwitchContext+0x24>
 8007fc2:	68fa      	ldr	r2, [r7, #12]
 8007fc4:	4613      	mov	r3, r2
 8007fc6:	009b      	lsls	r3, r3, #2
 8007fc8:	4413      	add	r3, r2
 8007fca:	009b      	lsls	r3, r3, #2
 8007fcc:	4a12      	ldr	r2, [pc, #72]	; (8008018 <vTaskSwitchContext+0xb0>)
 8007fce:	4413      	add	r3, r2
 8007fd0:	60bb      	str	r3, [r7, #8]
 8007fd2:	68bb      	ldr	r3, [r7, #8]
 8007fd4:	685b      	ldr	r3, [r3, #4]
 8007fd6:	685a      	ldr	r2, [r3, #4]
 8007fd8:	68bb      	ldr	r3, [r7, #8]
 8007fda:	605a      	str	r2, [r3, #4]
 8007fdc:	68bb      	ldr	r3, [r7, #8]
 8007fde:	685a      	ldr	r2, [r3, #4]
 8007fe0:	68bb      	ldr	r3, [r7, #8]
 8007fe2:	3308      	adds	r3, #8
 8007fe4:	429a      	cmp	r2, r3
 8007fe6:	d104      	bne.n	8007ff2 <vTaskSwitchContext+0x8a>
 8007fe8:	68bb      	ldr	r3, [r7, #8]
 8007fea:	685b      	ldr	r3, [r3, #4]
 8007fec:	685a      	ldr	r2, [r3, #4]
 8007fee:	68bb      	ldr	r3, [r7, #8]
 8007ff0:	605a      	str	r2, [r3, #4]
 8007ff2:	68bb      	ldr	r3, [r7, #8]
 8007ff4:	685b      	ldr	r3, [r3, #4]
 8007ff6:	68db      	ldr	r3, [r3, #12]
 8007ff8:	4a08      	ldr	r2, [pc, #32]	; (800801c <vTaskSwitchContext+0xb4>)
 8007ffa:	6013      	str	r3, [r2, #0]
 8007ffc:	4a05      	ldr	r2, [pc, #20]	; (8008014 <vTaskSwitchContext+0xac>)
 8007ffe:	68fb      	ldr	r3, [r7, #12]
 8008000:	6013      	str	r3, [r2, #0]
 8008002:	bf00      	nop
 8008004:	3714      	adds	r7, #20
 8008006:	46bd      	mov	sp, r7
 8008008:	bc80      	pop	{r7}
 800800a:	4770      	bx	lr
 800800c:	2000126c 	.word	0x2000126c
 8008010:	20001258 	.word	0x20001258
 8008014:	2000124c 	.word	0x2000124c
 8008018:	20000d74 	.word	0x20000d74
 800801c:	20000d70 	.word	0x20000d70

08008020 <vTaskPlaceOnEventList>:
 8008020:	b580      	push	{r7, lr}
 8008022:	b084      	sub	sp, #16
 8008024:	af00      	add	r7, sp, #0
 8008026:	6078      	str	r0, [r7, #4]
 8008028:	6039      	str	r1, [r7, #0]
 800802a:	687b      	ldr	r3, [r7, #4]
 800802c:	2b00      	cmp	r3, #0
 800802e:	d10a      	bne.n	8008046 <vTaskPlaceOnEventList+0x26>
 8008030:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008034:	f383 8811 	msr	BASEPRI, r3
 8008038:	f3bf 8f6f 	isb	sy
 800803c:	f3bf 8f4f 	dsb	sy
 8008040:	60fb      	str	r3, [r7, #12]
 8008042:	bf00      	nop
 8008044:	e7fe      	b.n	8008044 <vTaskPlaceOnEventList+0x24>
 8008046:	4b07      	ldr	r3, [pc, #28]	; (8008064 <vTaskPlaceOnEventList+0x44>)
 8008048:	681b      	ldr	r3, [r3, #0]
 800804a:	3318      	adds	r3, #24
 800804c:	4619      	mov	r1, r3
 800804e:	6878      	ldr	r0, [r7, #4]
 8008050:	f7fe fe5c 	bl	8006d0c <vListInsert>
 8008054:	2101      	movs	r1, #1
 8008056:	6838      	ldr	r0, [r7, #0]
 8008058:	f000 fb6e 	bl	8008738 <prvAddCurrentTaskToDelayedList>
 800805c:	bf00      	nop
 800805e:	3710      	adds	r7, #16
 8008060:	46bd      	mov	sp, r7
 8008062:	bd80      	pop	{r7, pc}
 8008064:	20000d70 	.word	0x20000d70

08008068 <vTaskPlaceOnEventListRestricted>:
 8008068:	b580      	push	{r7, lr}
 800806a:	b086      	sub	sp, #24
 800806c:	af00      	add	r7, sp, #0
 800806e:	60f8      	str	r0, [r7, #12]
 8008070:	60b9      	str	r1, [r7, #8]
 8008072:	607a      	str	r2, [r7, #4]
 8008074:	68fb      	ldr	r3, [r7, #12]
 8008076:	2b00      	cmp	r3, #0
 8008078:	d10a      	bne.n	8008090 <vTaskPlaceOnEventListRestricted+0x28>
 800807a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800807e:	f383 8811 	msr	BASEPRI, r3
 8008082:	f3bf 8f6f 	isb	sy
 8008086:	f3bf 8f4f 	dsb	sy
 800808a:	617b      	str	r3, [r7, #20]
 800808c:	bf00      	nop
 800808e:	e7fe      	b.n	800808e <vTaskPlaceOnEventListRestricted+0x26>
 8008090:	4b0a      	ldr	r3, [pc, #40]	; (80080bc <vTaskPlaceOnEventListRestricted+0x54>)
 8008092:	681b      	ldr	r3, [r3, #0]
 8008094:	3318      	adds	r3, #24
 8008096:	4619      	mov	r1, r3
 8008098:	68f8      	ldr	r0, [r7, #12]
 800809a:	f7fe fe14 	bl	8006cc6 <vListInsertEnd>
 800809e:	687b      	ldr	r3, [r7, #4]
 80080a0:	2b00      	cmp	r3, #0
 80080a2:	d002      	beq.n	80080aa <vTaskPlaceOnEventListRestricted+0x42>
 80080a4:	f04f 33ff 	mov.w	r3, #4294967295
 80080a8:	60bb      	str	r3, [r7, #8]
 80080aa:	6879      	ldr	r1, [r7, #4]
 80080ac:	68b8      	ldr	r0, [r7, #8]
 80080ae:	f000 fb43 	bl	8008738 <prvAddCurrentTaskToDelayedList>
 80080b2:	bf00      	nop
 80080b4:	3718      	adds	r7, #24
 80080b6:	46bd      	mov	sp, r7
 80080b8:	bd80      	pop	{r7, pc}
 80080ba:	bf00      	nop
 80080bc:	20000d70 	.word	0x20000d70

080080c0 <xTaskRemoveFromEventList>:
 80080c0:	b580      	push	{r7, lr}
 80080c2:	b086      	sub	sp, #24
 80080c4:	af00      	add	r7, sp, #0
 80080c6:	6078      	str	r0, [r7, #4]
 80080c8:	687b      	ldr	r3, [r7, #4]
 80080ca:	68db      	ldr	r3, [r3, #12]
 80080cc:	68db      	ldr	r3, [r3, #12]
 80080ce:	613b      	str	r3, [r7, #16]
 80080d0:	693b      	ldr	r3, [r7, #16]
 80080d2:	2b00      	cmp	r3, #0
 80080d4:	d10a      	bne.n	80080ec <xTaskRemoveFromEventList+0x2c>
 80080d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80080da:	f383 8811 	msr	BASEPRI, r3
 80080de:	f3bf 8f6f 	isb	sy
 80080e2:	f3bf 8f4f 	dsb	sy
 80080e6:	60fb      	str	r3, [r7, #12]
 80080e8:	bf00      	nop
 80080ea:	e7fe      	b.n	80080ea <xTaskRemoveFromEventList+0x2a>
 80080ec:	693b      	ldr	r3, [r7, #16]
 80080ee:	3318      	adds	r3, #24
 80080f0:	4618      	mov	r0, r3
 80080f2:	f7fe fe43 	bl	8006d7c <uxListRemove>
 80080f6:	4b1e      	ldr	r3, [pc, #120]	; (8008170 <xTaskRemoveFromEventList+0xb0>)
 80080f8:	681b      	ldr	r3, [r3, #0]
 80080fa:	2b00      	cmp	r3, #0
 80080fc:	d11d      	bne.n	800813a <xTaskRemoveFromEventList+0x7a>
 80080fe:	693b      	ldr	r3, [r7, #16]
 8008100:	3304      	adds	r3, #4
 8008102:	4618      	mov	r0, r3
 8008104:	f7fe fe3a 	bl	8006d7c <uxListRemove>
 8008108:	693b      	ldr	r3, [r7, #16]
 800810a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800810c:	4b19      	ldr	r3, [pc, #100]	; (8008174 <xTaskRemoveFromEventList+0xb4>)
 800810e:	681b      	ldr	r3, [r3, #0]
 8008110:	429a      	cmp	r2, r3
 8008112:	d903      	bls.n	800811c <xTaskRemoveFromEventList+0x5c>
 8008114:	693b      	ldr	r3, [r7, #16]
 8008116:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008118:	4a16      	ldr	r2, [pc, #88]	; (8008174 <xTaskRemoveFromEventList+0xb4>)
 800811a:	6013      	str	r3, [r2, #0]
 800811c:	693b      	ldr	r3, [r7, #16]
 800811e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008120:	4613      	mov	r3, r2
 8008122:	009b      	lsls	r3, r3, #2
 8008124:	4413      	add	r3, r2
 8008126:	009b      	lsls	r3, r3, #2
 8008128:	4a13      	ldr	r2, [pc, #76]	; (8008178 <xTaskRemoveFromEventList+0xb8>)
 800812a:	441a      	add	r2, r3
 800812c:	693b      	ldr	r3, [r7, #16]
 800812e:	3304      	adds	r3, #4
 8008130:	4619      	mov	r1, r3
 8008132:	4610      	mov	r0, r2
 8008134:	f7fe fdc7 	bl	8006cc6 <vListInsertEnd>
 8008138:	e005      	b.n	8008146 <xTaskRemoveFromEventList+0x86>
 800813a:	693b      	ldr	r3, [r7, #16]
 800813c:	3318      	adds	r3, #24
 800813e:	4619      	mov	r1, r3
 8008140:	480e      	ldr	r0, [pc, #56]	; (800817c <xTaskRemoveFromEventList+0xbc>)
 8008142:	f7fe fdc0 	bl	8006cc6 <vListInsertEnd>
 8008146:	693b      	ldr	r3, [r7, #16]
 8008148:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800814a:	4b0d      	ldr	r3, [pc, #52]	; (8008180 <xTaskRemoveFromEventList+0xc0>)
 800814c:	681b      	ldr	r3, [r3, #0]
 800814e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008150:	429a      	cmp	r2, r3
 8008152:	d905      	bls.n	8008160 <xTaskRemoveFromEventList+0xa0>
 8008154:	2301      	movs	r3, #1
 8008156:	617b      	str	r3, [r7, #20]
 8008158:	4b0a      	ldr	r3, [pc, #40]	; (8008184 <xTaskRemoveFromEventList+0xc4>)
 800815a:	2201      	movs	r2, #1
 800815c:	601a      	str	r2, [r3, #0]
 800815e:	e001      	b.n	8008164 <xTaskRemoveFromEventList+0xa4>
 8008160:	2300      	movs	r3, #0
 8008162:	617b      	str	r3, [r7, #20]
 8008164:	697b      	ldr	r3, [r7, #20]
 8008166:	4618      	mov	r0, r3
 8008168:	3718      	adds	r7, #24
 800816a:	46bd      	mov	sp, r7
 800816c:	bd80      	pop	{r7, pc}
 800816e:	bf00      	nop
 8008170:	2000126c 	.word	0x2000126c
 8008174:	2000124c 	.word	0x2000124c
 8008178:	20000d74 	.word	0x20000d74
 800817c:	20001204 	.word	0x20001204
 8008180:	20000d70 	.word	0x20000d70
 8008184:	20001258 	.word	0x20001258

08008188 <vTaskInternalSetTimeOutState>:
 8008188:	b480      	push	{r7}
 800818a:	b083      	sub	sp, #12
 800818c:	af00      	add	r7, sp, #0
 800818e:	6078      	str	r0, [r7, #4]
 8008190:	4b06      	ldr	r3, [pc, #24]	; (80081ac <vTaskInternalSetTimeOutState+0x24>)
 8008192:	681a      	ldr	r2, [r3, #0]
 8008194:	687b      	ldr	r3, [r7, #4]
 8008196:	601a      	str	r2, [r3, #0]
 8008198:	4b05      	ldr	r3, [pc, #20]	; (80081b0 <vTaskInternalSetTimeOutState+0x28>)
 800819a:	681a      	ldr	r2, [r3, #0]
 800819c:	687b      	ldr	r3, [r7, #4]
 800819e:	605a      	str	r2, [r3, #4]
 80081a0:	bf00      	nop
 80081a2:	370c      	adds	r7, #12
 80081a4:	46bd      	mov	sp, r7
 80081a6:	bc80      	pop	{r7}
 80081a8:	4770      	bx	lr
 80081aa:	bf00      	nop
 80081ac:	2000125c 	.word	0x2000125c
 80081b0:	20001248 	.word	0x20001248

080081b4 <xTaskCheckForTimeOut>:
 80081b4:	b580      	push	{r7, lr}
 80081b6:	b088      	sub	sp, #32
 80081b8:	af00      	add	r7, sp, #0
 80081ba:	6078      	str	r0, [r7, #4]
 80081bc:	6039      	str	r1, [r7, #0]
 80081be:	687b      	ldr	r3, [r7, #4]
 80081c0:	2b00      	cmp	r3, #0
 80081c2:	d10a      	bne.n	80081da <xTaskCheckForTimeOut+0x26>
 80081c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80081c8:	f383 8811 	msr	BASEPRI, r3
 80081cc:	f3bf 8f6f 	isb	sy
 80081d0:	f3bf 8f4f 	dsb	sy
 80081d4:	613b      	str	r3, [r7, #16]
 80081d6:	bf00      	nop
 80081d8:	e7fe      	b.n	80081d8 <xTaskCheckForTimeOut+0x24>
 80081da:	683b      	ldr	r3, [r7, #0]
 80081dc:	2b00      	cmp	r3, #0
 80081de:	d10a      	bne.n	80081f6 <xTaskCheckForTimeOut+0x42>
 80081e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80081e4:	f383 8811 	msr	BASEPRI, r3
 80081e8:	f3bf 8f6f 	isb	sy
 80081ec:	f3bf 8f4f 	dsb	sy
 80081f0:	60fb      	str	r3, [r7, #12]
 80081f2:	bf00      	nop
 80081f4:	e7fe      	b.n	80081f4 <xTaskCheckForTimeOut+0x40>
 80081f6:	f000 fef9 	bl	8008fec <vPortEnterCritical>
 80081fa:	4b1d      	ldr	r3, [pc, #116]	; (8008270 <xTaskCheckForTimeOut+0xbc>)
 80081fc:	681b      	ldr	r3, [r3, #0]
 80081fe:	61bb      	str	r3, [r7, #24]
 8008200:	687b      	ldr	r3, [r7, #4]
 8008202:	685b      	ldr	r3, [r3, #4]
 8008204:	69ba      	ldr	r2, [r7, #24]
 8008206:	1ad3      	subs	r3, r2, r3
 8008208:	617b      	str	r3, [r7, #20]
 800820a:	683b      	ldr	r3, [r7, #0]
 800820c:	681b      	ldr	r3, [r3, #0]
 800820e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008212:	d102      	bne.n	800821a <xTaskCheckForTimeOut+0x66>
 8008214:	2300      	movs	r3, #0
 8008216:	61fb      	str	r3, [r7, #28]
 8008218:	e023      	b.n	8008262 <xTaskCheckForTimeOut+0xae>
 800821a:	687b      	ldr	r3, [r7, #4]
 800821c:	681a      	ldr	r2, [r3, #0]
 800821e:	4b15      	ldr	r3, [pc, #84]	; (8008274 <xTaskCheckForTimeOut+0xc0>)
 8008220:	681b      	ldr	r3, [r3, #0]
 8008222:	429a      	cmp	r2, r3
 8008224:	d007      	beq.n	8008236 <xTaskCheckForTimeOut+0x82>
 8008226:	687b      	ldr	r3, [r7, #4]
 8008228:	685b      	ldr	r3, [r3, #4]
 800822a:	69ba      	ldr	r2, [r7, #24]
 800822c:	429a      	cmp	r2, r3
 800822e:	d302      	bcc.n	8008236 <xTaskCheckForTimeOut+0x82>
 8008230:	2301      	movs	r3, #1
 8008232:	61fb      	str	r3, [r7, #28]
 8008234:	e015      	b.n	8008262 <xTaskCheckForTimeOut+0xae>
 8008236:	683b      	ldr	r3, [r7, #0]
 8008238:	681b      	ldr	r3, [r3, #0]
 800823a:	697a      	ldr	r2, [r7, #20]
 800823c:	429a      	cmp	r2, r3
 800823e:	d20b      	bcs.n	8008258 <xTaskCheckForTimeOut+0xa4>
 8008240:	683b      	ldr	r3, [r7, #0]
 8008242:	681a      	ldr	r2, [r3, #0]
 8008244:	697b      	ldr	r3, [r7, #20]
 8008246:	1ad2      	subs	r2, r2, r3
 8008248:	683b      	ldr	r3, [r7, #0]
 800824a:	601a      	str	r2, [r3, #0]
 800824c:	6878      	ldr	r0, [r7, #4]
 800824e:	f7ff ff9b 	bl	8008188 <vTaskInternalSetTimeOutState>
 8008252:	2300      	movs	r3, #0
 8008254:	61fb      	str	r3, [r7, #28]
 8008256:	e004      	b.n	8008262 <xTaskCheckForTimeOut+0xae>
 8008258:	683b      	ldr	r3, [r7, #0]
 800825a:	2200      	movs	r2, #0
 800825c:	601a      	str	r2, [r3, #0]
 800825e:	2301      	movs	r3, #1
 8008260:	61fb      	str	r3, [r7, #28]
 8008262:	f000 fef3 	bl	800904c <vPortExitCritical>
 8008266:	69fb      	ldr	r3, [r7, #28]
 8008268:	4618      	mov	r0, r3
 800826a:	3720      	adds	r7, #32
 800826c:	46bd      	mov	sp, r7
 800826e:	bd80      	pop	{r7, pc}
 8008270:	20001248 	.word	0x20001248
 8008274:	2000125c 	.word	0x2000125c

08008278 <vTaskMissedYield>:
 8008278:	b480      	push	{r7}
 800827a:	af00      	add	r7, sp, #0
 800827c:	4b03      	ldr	r3, [pc, #12]	; (800828c <vTaskMissedYield+0x14>)
 800827e:	2201      	movs	r2, #1
 8008280:	601a      	str	r2, [r3, #0]
 8008282:	bf00      	nop
 8008284:	46bd      	mov	sp, r7
 8008286:	bc80      	pop	{r7}
 8008288:	4770      	bx	lr
 800828a:	bf00      	nop
 800828c:	20001258 	.word	0x20001258

08008290 <prvIdleTask>:
 8008290:	b580      	push	{r7, lr}
 8008292:	b082      	sub	sp, #8
 8008294:	af00      	add	r7, sp, #0
 8008296:	6078      	str	r0, [r7, #4]
 8008298:	f000 f852 	bl	8008340 <prvCheckTasksWaitingTermination>
 800829c:	4b06      	ldr	r3, [pc, #24]	; (80082b8 <prvIdleTask+0x28>)
 800829e:	681b      	ldr	r3, [r3, #0]
 80082a0:	2b01      	cmp	r3, #1
 80082a2:	d9f9      	bls.n	8008298 <prvIdleTask+0x8>
 80082a4:	4b05      	ldr	r3, [pc, #20]	; (80082bc <prvIdleTask+0x2c>)
 80082a6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80082aa:	601a      	str	r2, [r3, #0]
 80082ac:	f3bf 8f4f 	dsb	sy
 80082b0:	f3bf 8f6f 	isb	sy
 80082b4:	e7f0      	b.n	8008298 <prvIdleTask+0x8>
 80082b6:	bf00      	nop
 80082b8:	20000d74 	.word	0x20000d74
 80082bc:	e000ed04 	.word	0xe000ed04

080082c0 <prvInitialiseTaskLists>:
 80082c0:	b580      	push	{r7, lr}
 80082c2:	b082      	sub	sp, #8
 80082c4:	af00      	add	r7, sp, #0
 80082c6:	2300      	movs	r3, #0
 80082c8:	607b      	str	r3, [r7, #4]
 80082ca:	e00c      	b.n	80082e6 <prvInitialiseTaskLists+0x26>
 80082cc:	687a      	ldr	r2, [r7, #4]
 80082ce:	4613      	mov	r3, r2
 80082d0:	009b      	lsls	r3, r3, #2
 80082d2:	4413      	add	r3, r2
 80082d4:	009b      	lsls	r3, r3, #2
 80082d6:	4a12      	ldr	r2, [pc, #72]	; (8008320 <prvInitialiseTaskLists+0x60>)
 80082d8:	4413      	add	r3, r2
 80082da:	4618      	mov	r0, r3
 80082dc:	f7fe fcc8 	bl	8006c70 <vListInitialise>
 80082e0:	687b      	ldr	r3, [r7, #4]
 80082e2:	3301      	adds	r3, #1
 80082e4:	607b      	str	r3, [r7, #4]
 80082e6:	687b      	ldr	r3, [r7, #4]
 80082e8:	2b37      	cmp	r3, #55	; 0x37
 80082ea:	d9ef      	bls.n	80082cc <prvInitialiseTaskLists+0xc>
 80082ec:	480d      	ldr	r0, [pc, #52]	; (8008324 <prvInitialiseTaskLists+0x64>)
 80082ee:	f7fe fcbf 	bl	8006c70 <vListInitialise>
 80082f2:	480d      	ldr	r0, [pc, #52]	; (8008328 <prvInitialiseTaskLists+0x68>)
 80082f4:	f7fe fcbc 	bl	8006c70 <vListInitialise>
 80082f8:	480c      	ldr	r0, [pc, #48]	; (800832c <prvInitialiseTaskLists+0x6c>)
 80082fa:	f7fe fcb9 	bl	8006c70 <vListInitialise>
 80082fe:	480c      	ldr	r0, [pc, #48]	; (8008330 <prvInitialiseTaskLists+0x70>)
 8008300:	f7fe fcb6 	bl	8006c70 <vListInitialise>
 8008304:	480b      	ldr	r0, [pc, #44]	; (8008334 <prvInitialiseTaskLists+0x74>)
 8008306:	f7fe fcb3 	bl	8006c70 <vListInitialise>
 800830a:	4b0b      	ldr	r3, [pc, #44]	; (8008338 <prvInitialiseTaskLists+0x78>)
 800830c:	4a05      	ldr	r2, [pc, #20]	; (8008324 <prvInitialiseTaskLists+0x64>)
 800830e:	601a      	str	r2, [r3, #0]
 8008310:	4b0a      	ldr	r3, [pc, #40]	; (800833c <prvInitialiseTaskLists+0x7c>)
 8008312:	4a05      	ldr	r2, [pc, #20]	; (8008328 <prvInitialiseTaskLists+0x68>)
 8008314:	601a      	str	r2, [r3, #0]
 8008316:	bf00      	nop
 8008318:	3708      	adds	r7, #8
 800831a:	46bd      	mov	sp, r7
 800831c:	bd80      	pop	{r7, pc}
 800831e:	bf00      	nop
 8008320:	20000d74 	.word	0x20000d74
 8008324:	200011d4 	.word	0x200011d4
 8008328:	200011e8 	.word	0x200011e8
 800832c:	20001204 	.word	0x20001204
 8008330:	20001218 	.word	0x20001218
 8008334:	20001230 	.word	0x20001230
 8008338:	200011fc 	.word	0x200011fc
 800833c:	20001200 	.word	0x20001200

08008340 <prvCheckTasksWaitingTermination>:
 8008340:	b580      	push	{r7, lr}
 8008342:	b082      	sub	sp, #8
 8008344:	af00      	add	r7, sp, #0
 8008346:	e019      	b.n	800837c <prvCheckTasksWaitingTermination+0x3c>
 8008348:	f000 fe50 	bl	8008fec <vPortEnterCritical>
 800834c:	4b10      	ldr	r3, [pc, #64]	; (8008390 <prvCheckTasksWaitingTermination+0x50>)
 800834e:	68db      	ldr	r3, [r3, #12]
 8008350:	68db      	ldr	r3, [r3, #12]
 8008352:	607b      	str	r3, [r7, #4]
 8008354:	687b      	ldr	r3, [r7, #4]
 8008356:	3304      	adds	r3, #4
 8008358:	4618      	mov	r0, r3
 800835a:	f7fe fd0f 	bl	8006d7c <uxListRemove>
 800835e:	4b0d      	ldr	r3, [pc, #52]	; (8008394 <prvCheckTasksWaitingTermination+0x54>)
 8008360:	681b      	ldr	r3, [r3, #0]
 8008362:	3b01      	subs	r3, #1
 8008364:	4a0b      	ldr	r2, [pc, #44]	; (8008394 <prvCheckTasksWaitingTermination+0x54>)
 8008366:	6013      	str	r3, [r2, #0]
 8008368:	4b0b      	ldr	r3, [pc, #44]	; (8008398 <prvCheckTasksWaitingTermination+0x58>)
 800836a:	681b      	ldr	r3, [r3, #0]
 800836c:	3b01      	subs	r3, #1
 800836e:	4a0a      	ldr	r2, [pc, #40]	; (8008398 <prvCheckTasksWaitingTermination+0x58>)
 8008370:	6013      	str	r3, [r2, #0]
 8008372:	f000 fe6b 	bl	800904c <vPortExitCritical>
 8008376:	6878      	ldr	r0, [r7, #4]
 8008378:	f000 f810 	bl	800839c <prvDeleteTCB>
 800837c:	4b06      	ldr	r3, [pc, #24]	; (8008398 <prvCheckTasksWaitingTermination+0x58>)
 800837e:	681b      	ldr	r3, [r3, #0]
 8008380:	2b00      	cmp	r3, #0
 8008382:	d1e1      	bne.n	8008348 <prvCheckTasksWaitingTermination+0x8>
 8008384:	bf00      	nop
 8008386:	bf00      	nop
 8008388:	3708      	adds	r7, #8
 800838a:	46bd      	mov	sp, r7
 800838c:	bd80      	pop	{r7, pc}
 800838e:	bf00      	nop
 8008390:	20001218 	.word	0x20001218
 8008394:	20001244 	.word	0x20001244
 8008398:	2000122c 	.word	0x2000122c

0800839c <prvDeleteTCB>:
 800839c:	b580      	push	{r7, lr}
 800839e:	b084      	sub	sp, #16
 80083a0:	af00      	add	r7, sp, #0
 80083a2:	6078      	str	r0, [r7, #4]
 80083a4:	687b      	ldr	r3, [r7, #4]
 80083a6:	f893 3059 	ldrb.w	r3, [r3, #89]	; 0x59
 80083aa:	2b00      	cmp	r3, #0
 80083ac:	d108      	bne.n	80083c0 <prvDeleteTCB+0x24>
 80083ae:	687b      	ldr	r3, [r7, #4]
 80083b0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80083b2:	4618      	mov	r0, r3
 80083b4:	f000 ffde 	bl	8009374 <vPortFree>
 80083b8:	6878      	ldr	r0, [r7, #4]
 80083ba:	f000 ffdb 	bl	8009374 <vPortFree>
 80083be:	e018      	b.n	80083f2 <prvDeleteTCB+0x56>
 80083c0:	687b      	ldr	r3, [r7, #4]
 80083c2:	f893 3059 	ldrb.w	r3, [r3, #89]	; 0x59
 80083c6:	2b01      	cmp	r3, #1
 80083c8:	d103      	bne.n	80083d2 <prvDeleteTCB+0x36>
 80083ca:	6878      	ldr	r0, [r7, #4]
 80083cc:	f000 ffd2 	bl	8009374 <vPortFree>
 80083d0:	e00f      	b.n	80083f2 <prvDeleteTCB+0x56>
 80083d2:	687b      	ldr	r3, [r7, #4]
 80083d4:	f893 3059 	ldrb.w	r3, [r3, #89]	; 0x59
 80083d8:	2b02      	cmp	r3, #2
 80083da:	d00a      	beq.n	80083f2 <prvDeleteTCB+0x56>
 80083dc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80083e0:	f383 8811 	msr	BASEPRI, r3
 80083e4:	f3bf 8f6f 	isb	sy
 80083e8:	f3bf 8f4f 	dsb	sy
 80083ec:	60fb      	str	r3, [r7, #12]
 80083ee:	bf00      	nop
 80083f0:	e7fe      	b.n	80083f0 <prvDeleteTCB+0x54>
 80083f2:	bf00      	nop
 80083f4:	3710      	adds	r7, #16
 80083f6:	46bd      	mov	sp, r7
 80083f8:	bd80      	pop	{r7, pc}
	...

080083fc <prvResetNextTaskUnblockTime>:
 80083fc:	b480      	push	{r7}
 80083fe:	b083      	sub	sp, #12
 8008400:	af00      	add	r7, sp, #0
 8008402:	4b0e      	ldr	r3, [pc, #56]	; (800843c <prvResetNextTaskUnblockTime+0x40>)
 8008404:	681b      	ldr	r3, [r3, #0]
 8008406:	681b      	ldr	r3, [r3, #0]
 8008408:	2b00      	cmp	r3, #0
 800840a:	d101      	bne.n	8008410 <prvResetNextTaskUnblockTime+0x14>
 800840c:	2301      	movs	r3, #1
 800840e:	e000      	b.n	8008412 <prvResetNextTaskUnblockTime+0x16>
 8008410:	2300      	movs	r3, #0
 8008412:	2b00      	cmp	r3, #0
 8008414:	d004      	beq.n	8008420 <prvResetNextTaskUnblockTime+0x24>
 8008416:	4b0a      	ldr	r3, [pc, #40]	; (8008440 <prvResetNextTaskUnblockTime+0x44>)
 8008418:	f04f 32ff 	mov.w	r2, #4294967295
 800841c:	601a      	str	r2, [r3, #0]
 800841e:	e008      	b.n	8008432 <prvResetNextTaskUnblockTime+0x36>
 8008420:	4b06      	ldr	r3, [pc, #24]	; (800843c <prvResetNextTaskUnblockTime+0x40>)
 8008422:	681b      	ldr	r3, [r3, #0]
 8008424:	68db      	ldr	r3, [r3, #12]
 8008426:	68db      	ldr	r3, [r3, #12]
 8008428:	607b      	str	r3, [r7, #4]
 800842a:	687b      	ldr	r3, [r7, #4]
 800842c:	685b      	ldr	r3, [r3, #4]
 800842e:	4a04      	ldr	r2, [pc, #16]	; (8008440 <prvResetNextTaskUnblockTime+0x44>)
 8008430:	6013      	str	r3, [r2, #0]
 8008432:	bf00      	nop
 8008434:	370c      	adds	r7, #12
 8008436:	46bd      	mov	sp, r7
 8008438:	bc80      	pop	{r7}
 800843a:	4770      	bx	lr
 800843c:	200011fc 	.word	0x200011fc
 8008440:	20001264 	.word	0x20001264

08008444 <xTaskGetSchedulerState>:
 8008444:	b480      	push	{r7}
 8008446:	b083      	sub	sp, #12
 8008448:	af00      	add	r7, sp, #0
 800844a:	4b0b      	ldr	r3, [pc, #44]	; (8008478 <xTaskGetSchedulerState+0x34>)
 800844c:	681b      	ldr	r3, [r3, #0]
 800844e:	2b00      	cmp	r3, #0
 8008450:	d102      	bne.n	8008458 <xTaskGetSchedulerState+0x14>
 8008452:	2301      	movs	r3, #1
 8008454:	607b      	str	r3, [r7, #4]
 8008456:	e008      	b.n	800846a <xTaskGetSchedulerState+0x26>
 8008458:	4b08      	ldr	r3, [pc, #32]	; (800847c <xTaskGetSchedulerState+0x38>)
 800845a:	681b      	ldr	r3, [r3, #0]
 800845c:	2b00      	cmp	r3, #0
 800845e:	d102      	bne.n	8008466 <xTaskGetSchedulerState+0x22>
 8008460:	2302      	movs	r3, #2
 8008462:	607b      	str	r3, [r7, #4]
 8008464:	e001      	b.n	800846a <xTaskGetSchedulerState+0x26>
 8008466:	2300      	movs	r3, #0
 8008468:	607b      	str	r3, [r7, #4]
 800846a:	687b      	ldr	r3, [r7, #4]
 800846c:	4618      	mov	r0, r3
 800846e:	370c      	adds	r7, #12
 8008470:	46bd      	mov	sp, r7
 8008472:	bc80      	pop	{r7}
 8008474:	4770      	bx	lr
 8008476:	bf00      	nop
 8008478:	20001250 	.word	0x20001250
 800847c:	2000126c 	.word	0x2000126c

08008480 <xTaskPriorityDisinherit>:
 8008480:	b580      	push	{r7, lr}
 8008482:	b086      	sub	sp, #24
 8008484:	af00      	add	r7, sp, #0
 8008486:	6078      	str	r0, [r7, #4]
 8008488:	687b      	ldr	r3, [r7, #4]
 800848a:	613b      	str	r3, [r7, #16]
 800848c:	2300      	movs	r3, #0
 800848e:	617b      	str	r3, [r7, #20]
 8008490:	687b      	ldr	r3, [r7, #4]
 8008492:	2b00      	cmp	r3, #0
 8008494:	d056      	beq.n	8008544 <xTaskPriorityDisinherit+0xc4>
 8008496:	4b2e      	ldr	r3, [pc, #184]	; (8008550 <xTaskPriorityDisinherit+0xd0>)
 8008498:	681b      	ldr	r3, [r3, #0]
 800849a:	693a      	ldr	r2, [r7, #16]
 800849c:	429a      	cmp	r2, r3
 800849e:	d00a      	beq.n	80084b6 <xTaskPriorityDisinherit+0x36>
 80084a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80084a4:	f383 8811 	msr	BASEPRI, r3
 80084a8:	f3bf 8f6f 	isb	sy
 80084ac:	f3bf 8f4f 	dsb	sy
 80084b0:	60fb      	str	r3, [r7, #12]
 80084b2:	bf00      	nop
 80084b4:	e7fe      	b.n	80084b4 <xTaskPriorityDisinherit+0x34>
 80084b6:	693b      	ldr	r3, [r7, #16]
 80084b8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80084ba:	2b00      	cmp	r3, #0
 80084bc:	d10a      	bne.n	80084d4 <xTaskPriorityDisinherit+0x54>
 80084be:	f04f 0350 	mov.w	r3, #80	; 0x50
 80084c2:	f383 8811 	msr	BASEPRI, r3
 80084c6:	f3bf 8f6f 	isb	sy
 80084ca:	f3bf 8f4f 	dsb	sy
 80084ce:	60bb      	str	r3, [r7, #8]
 80084d0:	bf00      	nop
 80084d2:	e7fe      	b.n	80084d2 <xTaskPriorityDisinherit+0x52>
 80084d4:	693b      	ldr	r3, [r7, #16]
 80084d6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80084d8:	1e5a      	subs	r2, r3, #1
 80084da:	693b      	ldr	r3, [r7, #16]
 80084dc:	651a      	str	r2, [r3, #80]	; 0x50
 80084de:	693b      	ldr	r3, [r7, #16]
 80084e0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80084e2:	693b      	ldr	r3, [r7, #16]
 80084e4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80084e6:	429a      	cmp	r2, r3
 80084e8:	d02c      	beq.n	8008544 <xTaskPriorityDisinherit+0xc4>
 80084ea:	693b      	ldr	r3, [r7, #16]
 80084ec:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80084ee:	2b00      	cmp	r3, #0
 80084f0:	d128      	bne.n	8008544 <xTaskPriorityDisinherit+0xc4>
 80084f2:	693b      	ldr	r3, [r7, #16]
 80084f4:	3304      	adds	r3, #4
 80084f6:	4618      	mov	r0, r3
 80084f8:	f7fe fc40 	bl	8006d7c <uxListRemove>
 80084fc:	693b      	ldr	r3, [r7, #16]
 80084fe:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8008500:	693b      	ldr	r3, [r7, #16]
 8008502:	62da      	str	r2, [r3, #44]	; 0x2c
 8008504:	693b      	ldr	r3, [r7, #16]
 8008506:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008508:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 800850c:	693b      	ldr	r3, [r7, #16]
 800850e:	619a      	str	r2, [r3, #24]
 8008510:	693b      	ldr	r3, [r7, #16]
 8008512:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008514:	4b0f      	ldr	r3, [pc, #60]	; (8008554 <xTaskPriorityDisinherit+0xd4>)
 8008516:	681b      	ldr	r3, [r3, #0]
 8008518:	429a      	cmp	r2, r3
 800851a:	d903      	bls.n	8008524 <xTaskPriorityDisinherit+0xa4>
 800851c:	693b      	ldr	r3, [r7, #16]
 800851e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008520:	4a0c      	ldr	r2, [pc, #48]	; (8008554 <xTaskPriorityDisinherit+0xd4>)
 8008522:	6013      	str	r3, [r2, #0]
 8008524:	693b      	ldr	r3, [r7, #16]
 8008526:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008528:	4613      	mov	r3, r2
 800852a:	009b      	lsls	r3, r3, #2
 800852c:	4413      	add	r3, r2
 800852e:	009b      	lsls	r3, r3, #2
 8008530:	4a09      	ldr	r2, [pc, #36]	; (8008558 <xTaskPriorityDisinherit+0xd8>)
 8008532:	441a      	add	r2, r3
 8008534:	693b      	ldr	r3, [r7, #16]
 8008536:	3304      	adds	r3, #4
 8008538:	4619      	mov	r1, r3
 800853a:	4610      	mov	r0, r2
 800853c:	f7fe fbc3 	bl	8006cc6 <vListInsertEnd>
 8008540:	2301      	movs	r3, #1
 8008542:	617b      	str	r3, [r7, #20]
 8008544:	697b      	ldr	r3, [r7, #20]
 8008546:	4618      	mov	r0, r3
 8008548:	3718      	adds	r7, #24
 800854a:	46bd      	mov	sp, r7
 800854c:	bd80      	pop	{r7, pc}
 800854e:	bf00      	nop
 8008550:	20000d70 	.word	0x20000d70
 8008554:	2000124c 	.word	0x2000124c
 8008558:	20000d74 	.word	0x20000d74

0800855c <xTaskNotifyWait>:
 800855c:	b580      	push	{r7, lr}
 800855e:	b086      	sub	sp, #24
 8008560:	af00      	add	r7, sp, #0
 8008562:	60f8      	str	r0, [r7, #12]
 8008564:	60b9      	str	r1, [r7, #8]
 8008566:	607a      	str	r2, [r7, #4]
 8008568:	603b      	str	r3, [r7, #0]
 800856a:	f000 fd3f 	bl	8008fec <vPortEnterCritical>
 800856e:	4b26      	ldr	r3, [pc, #152]	; (8008608 <xTaskNotifyWait+0xac>)
 8008570:	681b      	ldr	r3, [r3, #0]
 8008572:	f893 3058 	ldrb.w	r3, [r3, #88]	; 0x58
 8008576:	b2db      	uxtb	r3, r3
 8008578:	2b02      	cmp	r3, #2
 800857a:	d01a      	beq.n	80085b2 <xTaskNotifyWait+0x56>
 800857c:	4b22      	ldr	r3, [pc, #136]	; (8008608 <xTaskNotifyWait+0xac>)
 800857e:	681b      	ldr	r3, [r3, #0]
 8008580:	6d59      	ldr	r1, [r3, #84]	; 0x54
 8008582:	68fa      	ldr	r2, [r7, #12]
 8008584:	43d2      	mvns	r2, r2
 8008586:	400a      	ands	r2, r1
 8008588:	655a      	str	r2, [r3, #84]	; 0x54
 800858a:	4b1f      	ldr	r3, [pc, #124]	; (8008608 <xTaskNotifyWait+0xac>)
 800858c:	681b      	ldr	r3, [r3, #0]
 800858e:	2201      	movs	r2, #1
 8008590:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
 8008594:	683b      	ldr	r3, [r7, #0]
 8008596:	2b00      	cmp	r3, #0
 8008598:	d00b      	beq.n	80085b2 <xTaskNotifyWait+0x56>
 800859a:	2101      	movs	r1, #1
 800859c:	6838      	ldr	r0, [r7, #0]
 800859e:	f000 f8cb 	bl	8008738 <prvAddCurrentTaskToDelayedList>
 80085a2:	4b1a      	ldr	r3, [pc, #104]	; (800860c <xTaskNotifyWait+0xb0>)
 80085a4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80085a8:	601a      	str	r2, [r3, #0]
 80085aa:	f3bf 8f4f 	dsb	sy
 80085ae:	f3bf 8f6f 	isb	sy
 80085b2:	f000 fd4b 	bl	800904c <vPortExitCritical>
 80085b6:	f000 fd19 	bl	8008fec <vPortEnterCritical>
 80085ba:	687b      	ldr	r3, [r7, #4]
 80085bc:	2b00      	cmp	r3, #0
 80085be:	d004      	beq.n	80085ca <xTaskNotifyWait+0x6e>
 80085c0:	4b11      	ldr	r3, [pc, #68]	; (8008608 <xTaskNotifyWait+0xac>)
 80085c2:	681b      	ldr	r3, [r3, #0]
 80085c4:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 80085c6:	687b      	ldr	r3, [r7, #4]
 80085c8:	601a      	str	r2, [r3, #0]
 80085ca:	4b0f      	ldr	r3, [pc, #60]	; (8008608 <xTaskNotifyWait+0xac>)
 80085cc:	681b      	ldr	r3, [r3, #0]
 80085ce:	f893 3058 	ldrb.w	r3, [r3, #88]	; 0x58
 80085d2:	b2db      	uxtb	r3, r3
 80085d4:	2b02      	cmp	r3, #2
 80085d6:	d002      	beq.n	80085de <xTaskNotifyWait+0x82>
 80085d8:	2300      	movs	r3, #0
 80085da:	617b      	str	r3, [r7, #20]
 80085dc:	e008      	b.n	80085f0 <xTaskNotifyWait+0x94>
 80085de:	4b0a      	ldr	r3, [pc, #40]	; (8008608 <xTaskNotifyWait+0xac>)
 80085e0:	681b      	ldr	r3, [r3, #0]
 80085e2:	6d59      	ldr	r1, [r3, #84]	; 0x54
 80085e4:	68ba      	ldr	r2, [r7, #8]
 80085e6:	43d2      	mvns	r2, r2
 80085e8:	400a      	ands	r2, r1
 80085ea:	655a      	str	r2, [r3, #84]	; 0x54
 80085ec:	2301      	movs	r3, #1
 80085ee:	617b      	str	r3, [r7, #20]
 80085f0:	4b05      	ldr	r3, [pc, #20]	; (8008608 <xTaskNotifyWait+0xac>)
 80085f2:	681b      	ldr	r3, [r3, #0]
 80085f4:	2200      	movs	r2, #0
 80085f6:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
 80085fa:	f000 fd27 	bl	800904c <vPortExitCritical>
 80085fe:	697b      	ldr	r3, [r7, #20]
 8008600:	4618      	mov	r0, r3
 8008602:	3718      	adds	r7, #24
 8008604:	46bd      	mov	sp, r7
 8008606:	bd80      	pop	{r7, pc}
 8008608:	20000d70 	.word	0x20000d70
 800860c:	e000ed04 	.word	0xe000ed04

08008610 <vTaskNotifyGiveFromISR>:
 8008610:	b580      	push	{r7, lr}
 8008612:	b08a      	sub	sp, #40	; 0x28
 8008614:	af00      	add	r7, sp, #0
 8008616:	6078      	str	r0, [r7, #4]
 8008618:	6039      	str	r1, [r7, #0]
 800861a:	687b      	ldr	r3, [r7, #4]
 800861c:	2b00      	cmp	r3, #0
 800861e:	d10a      	bne.n	8008636 <vTaskNotifyGiveFromISR+0x26>
 8008620:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008624:	f383 8811 	msr	BASEPRI, r3
 8008628:	f3bf 8f6f 	isb	sy
 800862c:	f3bf 8f4f 	dsb	sy
 8008630:	61bb      	str	r3, [r7, #24]
 8008632:	bf00      	nop
 8008634:	e7fe      	b.n	8008634 <vTaskNotifyGiveFromISR+0x24>
 8008636:	f000 fd9b 	bl	8009170 <vPortValidateInterruptPriority>
 800863a:	687b      	ldr	r3, [r7, #4]
 800863c:	627b      	str	r3, [r7, #36]	; 0x24
 800863e:	f3ef 8211 	mrs	r2, BASEPRI
 8008642:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008646:	f383 8811 	msr	BASEPRI, r3
 800864a:	f3bf 8f6f 	isb	sy
 800864e:	f3bf 8f4f 	dsb	sy
 8008652:	617a      	str	r2, [r7, #20]
 8008654:	613b      	str	r3, [r7, #16]
 8008656:	697b      	ldr	r3, [r7, #20]
 8008658:	623b      	str	r3, [r7, #32]
 800865a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800865c:	f893 3058 	ldrb.w	r3, [r3, #88]	; 0x58
 8008660:	77fb      	strb	r3, [r7, #31]
 8008662:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008664:	2202      	movs	r2, #2
 8008666:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
 800866a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800866c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800866e:	1c5a      	adds	r2, r3, #1
 8008670:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008672:	655a      	str	r2, [r3, #84]	; 0x54
 8008674:	7ffb      	ldrb	r3, [r7, #31]
 8008676:	2b01      	cmp	r3, #1
 8008678:	d147      	bne.n	800870a <vTaskNotifyGiveFromISR+0xfa>
 800867a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800867c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800867e:	2b00      	cmp	r3, #0
 8008680:	d00a      	beq.n	8008698 <vTaskNotifyGiveFromISR+0x88>
 8008682:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008686:	f383 8811 	msr	BASEPRI, r3
 800868a:	f3bf 8f6f 	isb	sy
 800868e:	f3bf 8f4f 	dsb	sy
 8008692:	60fb      	str	r3, [r7, #12]
 8008694:	bf00      	nop
 8008696:	e7fe      	b.n	8008696 <vTaskNotifyGiveFromISR+0x86>
 8008698:	4b21      	ldr	r3, [pc, #132]	; (8008720 <vTaskNotifyGiveFromISR+0x110>)
 800869a:	681b      	ldr	r3, [r3, #0]
 800869c:	2b00      	cmp	r3, #0
 800869e:	d11d      	bne.n	80086dc <vTaskNotifyGiveFromISR+0xcc>
 80086a0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80086a2:	3304      	adds	r3, #4
 80086a4:	4618      	mov	r0, r3
 80086a6:	f7fe fb69 	bl	8006d7c <uxListRemove>
 80086aa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80086ac:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80086ae:	4b1d      	ldr	r3, [pc, #116]	; (8008724 <vTaskNotifyGiveFromISR+0x114>)
 80086b0:	681b      	ldr	r3, [r3, #0]
 80086b2:	429a      	cmp	r2, r3
 80086b4:	d903      	bls.n	80086be <vTaskNotifyGiveFromISR+0xae>
 80086b6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80086b8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80086ba:	4a1a      	ldr	r2, [pc, #104]	; (8008724 <vTaskNotifyGiveFromISR+0x114>)
 80086bc:	6013      	str	r3, [r2, #0]
 80086be:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80086c0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80086c2:	4613      	mov	r3, r2
 80086c4:	009b      	lsls	r3, r3, #2
 80086c6:	4413      	add	r3, r2
 80086c8:	009b      	lsls	r3, r3, #2
 80086ca:	4a17      	ldr	r2, [pc, #92]	; (8008728 <vTaskNotifyGiveFromISR+0x118>)
 80086cc:	441a      	add	r2, r3
 80086ce:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80086d0:	3304      	adds	r3, #4
 80086d2:	4619      	mov	r1, r3
 80086d4:	4610      	mov	r0, r2
 80086d6:	f7fe faf6 	bl	8006cc6 <vListInsertEnd>
 80086da:	e005      	b.n	80086e8 <vTaskNotifyGiveFromISR+0xd8>
 80086dc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80086de:	3318      	adds	r3, #24
 80086e0:	4619      	mov	r1, r3
 80086e2:	4812      	ldr	r0, [pc, #72]	; (800872c <vTaskNotifyGiveFromISR+0x11c>)
 80086e4:	f7fe faef 	bl	8006cc6 <vListInsertEnd>
 80086e8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80086ea:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80086ec:	4b10      	ldr	r3, [pc, #64]	; (8008730 <vTaskNotifyGiveFromISR+0x120>)
 80086ee:	681b      	ldr	r3, [r3, #0]
 80086f0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80086f2:	429a      	cmp	r2, r3
 80086f4:	d909      	bls.n	800870a <vTaskNotifyGiveFromISR+0xfa>
 80086f6:	683b      	ldr	r3, [r7, #0]
 80086f8:	2b00      	cmp	r3, #0
 80086fa:	d003      	beq.n	8008704 <vTaskNotifyGiveFromISR+0xf4>
 80086fc:	683b      	ldr	r3, [r7, #0]
 80086fe:	2201      	movs	r2, #1
 8008700:	601a      	str	r2, [r3, #0]
 8008702:	e002      	b.n	800870a <vTaskNotifyGiveFromISR+0xfa>
 8008704:	4b0b      	ldr	r3, [pc, #44]	; (8008734 <vTaskNotifyGiveFromISR+0x124>)
 8008706:	2201      	movs	r2, #1
 8008708:	601a      	str	r2, [r3, #0]
 800870a:	6a3b      	ldr	r3, [r7, #32]
 800870c:	60bb      	str	r3, [r7, #8]
 800870e:	68bb      	ldr	r3, [r7, #8]
 8008710:	f383 8811 	msr	BASEPRI, r3
 8008714:	bf00      	nop
 8008716:	bf00      	nop
 8008718:	3728      	adds	r7, #40	; 0x28
 800871a:	46bd      	mov	sp, r7
 800871c:	bd80      	pop	{r7, pc}
 800871e:	bf00      	nop
 8008720:	2000126c 	.word	0x2000126c
 8008724:	2000124c 	.word	0x2000124c
 8008728:	20000d74 	.word	0x20000d74
 800872c:	20001204 	.word	0x20001204
 8008730:	20000d70 	.word	0x20000d70
 8008734:	20001258 	.word	0x20001258

08008738 <prvAddCurrentTaskToDelayedList>:
 8008738:	b580      	push	{r7, lr}
 800873a:	b084      	sub	sp, #16
 800873c:	af00      	add	r7, sp, #0
 800873e:	6078      	str	r0, [r7, #4]
 8008740:	6039      	str	r1, [r7, #0]
 8008742:	4b21      	ldr	r3, [pc, #132]	; (80087c8 <prvAddCurrentTaskToDelayedList+0x90>)
 8008744:	681b      	ldr	r3, [r3, #0]
 8008746:	60fb      	str	r3, [r7, #12]
 8008748:	4b20      	ldr	r3, [pc, #128]	; (80087cc <prvAddCurrentTaskToDelayedList+0x94>)
 800874a:	681b      	ldr	r3, [r3, #0]
 800874c:	3304      	adds	r3, #4
 800874e:	4618      	mov	r0, r3
 8008750:	f7fe fb14 	bl	8006d7c <uxListRemove>
 8008754:	687b      	ldr	r3, [r7, #4]
 8008756:	f1b3 3fff 	cmp.w	r3, #4294967295
 800875a:	d10a      	bne.n	8008772 <prvAddCurrentTaskToDelayedList+0x3a>
 800875c:	683b      	ldr	r3, [r7, #0]
 800875e:	2b00      	cmp	r3, #0
 8008760:	d007      	beq.n	8008772 <prvAddCurrentTaskToDelayedList+0x3a>
 8008762:	4b1a      	ldr	r3, [pc, #104]	; (80087cc <prvAddCurrentTaskToDelayedList+0x94>)
 8008764:	681b      	ldr	r3, [r3, #0]
 8008766:	3304      	adds	r3, #4
 8008768:	4619      	mov	r1, r3
 800876a:	4819      	ldr	r0, [pc, #100]	; (80087d0 <prvAddCurrentTaskToDelayedList+0x98>)
 800876c:	f7fe faab 	bl	8006cc6 <vListInsertEnd>
 8008770:	e026      	b.n	80087c0 <prvAddCurrentTaskToDelayedList+0x88>
 8008772:	68fa      	ldr	r2, [r7, #12]
 8008774:	687b      	ldr	r3, [r7, #4]
 8008776:	4413      	add	r3, r2
 8008778:	60bb      	str	r3, [r7, #8]
 800877a:	4b14      	ldr	r3, [pc, #80]	; (80087cc <prvAddCurrentTaskToDelayedList+0x94>)
 800877c:	681b      	ldr	r3, [r3, #0]
 800877e:	68ba      	ldr	r2, [r7, #8]
 8008780:	605a      	str	r2, [r3, #4]
 8008782:	68ba      	ldr	r2, [r7, #8]
 8008784:	68fb      	ldr	r3, [r7, #12]
 8008786:	429a      	cmp	r2, r3
 8008788:	d209      	bcs.n	800879e <prvAddCurrentTaskToDelayedList+0x66>
 800878a:	4b12      	ldr	r3, [pc, #72]	; (80087d4 <prvAddCurrentTaskToDelayedList+0x9c>)
 800878c:	681a      	ldr	r2, [r3, #0]
 800878e:	4b0f      	ldr	r3, [pc, #60]	; (80087cc <prvAddCurrentTaskToDelayedList+0x94>)
 8008790:	681b      	ldr	r3, [r3, #0]
 8008792:	3304      	adds	r3, #4
 8008794:	4619      	mov	r1, r3
 8008796:	4610      	mov	r0, r2
 8008798:	f7fe fab8 	bl	8006d0c <vListInsert>
 800879c:	e010      	b.n	80087c0 <prvAddCurrentTaskToDelayedList+0x88>
 800879e:	4b0e      	ldr	r3, [pc, #56]	; (80087d8 <prvAddCurrentTaskToDelayedList+0xa0>)
 80087a0:	681a      	ldr	r2, [r3, #0]
 80087a2:	4b0a      	ldr	r3, [pc, #40]	; (80087cc <prvAddCurrentTaskToDelayedList+0x94>)
 80087a4:	681b      	ldr	r3, [r3, #0]
 80087a6:	3304      	adds	r3, #4
 80087a8:	4619      	mov	r1, r3
 80087aa:	4610      	mov	r0, r2
 80087ac:	f7fe faae 	bl	8006d0c <vListInsert>
 80087b0:	4b0a      	ldr	r3, [pc, #40]	; (80087dc <prvAddCurrentTaskToDelayedList+0xa4>)
 80087b2:	681b      	ldr	r3, [r3, #0]
 80087b4:	68ba      	ldr	r2, [r7, #8]
 80087b6:	429a      	cmp	r2, r3
 80087b8:	d202      	bcs.n	80087c0 <prvAddCurrentTaskToDelayedList+0x88>
 80087ba:	4a08      	ldr	r2, [pc, #32]	; (80087dc <prvAddCurrentTaskToDelayedList+0xa4>)
 80087bc:	68bb      	ldr	r3, [r7, #8]
 80087be:	6013      	str	r3, [r2, #0]
 80087c0:	bf00      	nop
 80087c2:	3710      	adds	r7, #16
 80087c4:	46bd      	mov	sp, r7
 80087c6:	bd80      	pop	{r7, pc}
 80087c8:	20001248 	.word	0x20001248
 80087cc:	20000d70 	.word	0x20000d70
 80087d0:	20001230 	.word	0x20001230
 80087d4:	20001200 	.word	0x20001200
 80087d8:	200011fc 	.word	0x200011fc
 80087dc:	20001264 	.word	0x20001264

080087e0 <xTimerCreateTimerTask>:
 80087e0:	b580      	push	{r7, lr}
 80087e2:	b08a      	sub	sp, #40	; 0x28
 80087e4:	af04      	add	r7, sp, #16
 80087e6:	2300      	movs	r3, #0
 80087e8:	617b      	str	r3, [r7, #20]
 80087ea:	f000 facb 	bl	8008d84 <prvCheckForValidListAndQueue>
 80087ee:	4b1c      	ldr	r3, [pc, #112]	; (8008860 <xTimerCreateTimerTask+0x80>)
 80087f0:	681b      	ldr	r3, [r3, #0]
 80087f2:	2b00      	cmp	r3, #0
 80087f4:	d021      	beq.n	800883a <xTimerCreateTimerTask+0x5a>
 80087f6:	2300      	movs	r3, #0
 80087f8:	60fb      	str	r3, [r7, #12]
 80087fa:	2300      	movs	r3, #0
 80087fc:	60bb      	str	r3, [r7, #8]
 80087fe:	1d3a      	adds	r2, r7, #4
 8008800:	f107 0108 	add.w	r1, r7, #8
 8008804:	f107 030c 	add.w	r3, r7, #12
 8008808:	4618      	mov	r0, r3
 800880a:	f7fe fa17 	bl	8006c3c <vApplicationGetTimerTaskMemory>
 800880e:	6879      	ldr	r1, [r7, #4]
 8008810:	68bb      	ldr	r3, [r7, #8]
 8008812:	68fa      	ldr	r2, [r7, #12]
 8008814:	9202      	str	r2, [sp, #8]
 8008816:	9301      	str	r3, [sp, #4]
 8008818:	2302      	movs	r3, #2
 800881a:	9300      	str	r3, [sp, #0]
 800881c:	2300      	movs	r3, #0
 800881e:	460a      	mov	r2, r1
 8008820:	4910      	ldr	r1, [pc, #64]	; (8008864 <xTimerCreateTimerTask+0x84>)
 8008822:	4811      	ldr	r0, [pc, #68]	; (8008868 <xTimerCreateTimerTask+0x88>)
 8008824:	f7fe fff6 	bl	8007814 <xTaskCreateStatic>
 8008828:	4603      	mov	r3, r0
 800882a:	4a10      	ldr	r2, [pc, #64]	; (800886c <xTimerCreateTimerTask+0x8c>)
 800882c:	6013      	str	r3, [r2, #0]
 800882e:	4b0f      	ldr	r3, [pc, #60]	; (800886c <xTimerCreateTimerTask+0x8c>)
 8008830:	681b      	ldr	r3, [r3, #0]
 8008832:	2b00      	cmp	r3, #0
 8008834:	d001      	beq.n	800883a <xTimerCreateTimerTask+0x5a>
 8008836:	2301      	movs	r3, #1
 8008838:	617b      	str	r3, [r7, #20]
 800883a:	697b      	ldr	r3, [r7, #20]
 800883c:	2b00      	cmp	r3, #0
 800883e:	d10a      	bne.n	8008856 <xTimerCreateTimerTask+0x76>
 8008840:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008844:	f383 8811 	msr	BASEPRI, r3
 8008848:	f3bf 8f6f 	isb	sy
 800884c:	f3bf 8f4f 	dsb	sy
 8008850:	613b      	str	r3, [r7, #16]
 8008852:	bf00      	nop
 8008854:	e7fe      	b.n	8008854 <xTimerCreateTimerTask+0x74>
 8008856:	697b      	ldr	r3, [r7, #20]
 8008858:	4618      	mov	r0, r3
 800885a:	3718      	adds	r7, #24
 800885c:	46bd      	mov	sp, r7
 800885e:	bd80      	pop	{r7, pc}
 8008860:	200012a0 	.word	0x200012a0
 8008864:	0800c2cc 	.word	0x0800c2cc
 8008868:	0800898d 	.word	0x0800898d
 800886c:	200012a4 	.word	0x200012a4

08008870 <xTimerGenericCommand>:
 8008870:	b580      	push	{r7, lr}
 8008872:	b08a      	sub	sp, #40	; 0x28
 8008874:	af00      	add	r7, sp, #0
 8008876:	60f8      	str	r0, [r7, #12]
 8008878:	60b9      	str	r1, [r7, #8]
 800887a:	607a      	str	r2, [r7, #4]
 800887c:	603b      	str	r3, [r7, #0]
 800887e:	2300      	movs	r3, #0
 8008880:	627b      	str	r3, [r7, #36]	; 0x24
 8008882:	68fb      	ldr	r3, [r7, #12]
 8008884:	2b00      	cmp	r3, #0
 8008886:	d10a      	bne.n	800889e <xTimerGenericCommand+0x2e>
 8008888:	f04f 0350 	mov.w	r3, #80	; 0x50
 800888c:	f383 8811 	msr	BASEPRI, r3
 8008890:	f3bf 8f6f 	isb	sy
 8008894:	f3bf 8f4f 	dsb	sy
 8008898:	623b      	str	r3, [r7, #32]
 800889a:	bf00      	nop
 800889c:	e7fe      	b.n	800889c <xTimerGenericCommand+0x2c>
 800889e:	4b1a      	ldr	r3, [pc, #104]	; (8008908 <xTimerGenericCommand+0x98>)
 80088a0:	681b      	ldr	r3, [r3, #0]
 80088a2:	2b00      	cmp	r3, #0
 80088a4:	d02a      	beq.n	80088fc <xTimerGenericCommand+0x8c>
 80088a6:	68bb      	ldr	r3, [r7, #8]
 80088a8:	613b      	str	r3, [r7, #16]
 80088aa:	687b      	ldr	r3, [r7, #4]
 80088ac:	617b      	str	r3, [r7, #20]
 80088ae:	68fb      	ldr	r3, [r7, #12]
 80088b0:	61bb      	str	r3, [r7, #24]
 80088b2:	68bb      	ldr	r3, [r7, #8]
 80088b4:	2b05      	cmp	r3, #5
 80088b6:	dc18      	bgt.n	80088ea <xTimerGenericCommand+0x7a>
 80088b8:	f7ff fdc4 	bl	8008444 <xTaskGetSchedulerState>
 80088bc:	4603      	mov	r3, r0
 80088be:	2b02      	cmp	r3, #2
 80088c0:	d109      	bne.n	80088d6 <xTimerGenericCommand+0x66>
 80088c2:	4b11      	ldr	r3, [pc, #68]	; (8008908 <xTimerGenericCommand+0x98>)
 80088c4:	6818      	ldr	r0, [r3, #0]
 80088c6:	f107 0110 	add.w	r1, r7, #16
 80088ca:	2300      	movs	r3, #0
 80088cc:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80088ce:	f7fe fbbf 	bl	8007050 <xQueueGenericSend>
 80088d2:	6278      	str	r0, [r7, #36]	; 0x24
 80088d4:	e012      	b.n	80088fc <xTimerGenericCommand+0x8c>
 80088d6:	4b0c      	ldr	r3, [pc, #48]	; (8008908 <xTimerGenericCommand+0x98>)
 80088d8:	6818      	ldr	r0, [r3, #0]
 80088da:	f107 0110 	add.w	r1, r7, #16
 80088de:	2300      	movs	r3, #0
 80088e0:	2200      	movs	r2, #0
 80088e2:	f7fe fbb5 	bl	8007050 <xQueueGenericSend>
 80088e6:	6278      	str	r0, [r7, #36]	; 0x24
 80088e8:	e008      	b.n	80088fc <xTimerGenericCommand+0x8c>
 80088ea:	4b07      	ldr	r3, [pc, #28]	; (8008908 <xTimerGenericCommand+0x98>)
 80088ec:	6818      	ldr	r0, [r3, #0]
 80088ee:	f107 0110 	add.w	r1, r7, #16
 80088f2:	2300      	movs	r3, #0
 80088f4:	683a      	ldr	r2, [r7, #0]
 80088f6:	f7fe fca9 	bl	800724c <xQueueGenericSendFromISR>
 80088fa:	6278      	str	r0, [r7, #36]	; 0x24
 80088fc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80088fe:	4618      	mov	r0, r3
 8008900:	3728      	adds	r7, #40	; 0x28
 8008902:	46bd      	mov	sp, r7
 8008904:	bd80      	pop	{r7, pc}
 8008906:	bf00      	nop
 8008908:	200012a0 	.word	0x200012a0

0800890c <prvProcessExpiredTimer>:
 800890c:	b580      	push	{r7, lr}
 800890e:	b088      	sub	sp, #32
 8008910:	af02      	add	r7, sp, #8
 8008912:	6078      	str	r0, [r7, #4]
 8008914:	6039      	str	r1, [r7, #0]
 8008916:	4b1c      	ldr	r3, [pc, #112]	; (8008988 <prvProcessExpiredTimer+0x7c>)
 8008918:	681b      	ldr	r3, [r3, #0]
 800891a:	68db      	ldr	r3, [r3, #12]
 800891c:	68db      	ldr	r3, [r3, #12]
 800891e:	617b      	str	r3, [r7, #20]
 8008920:	697b      	ldr	r3, [r7, #20]
 8008922:	3304      	adds	r3, #4
 8008924:	4618      	mov	r0, r3
 8008926:	f7fe fa29 	bl	8006d7c <uxListRemove>
 800892a:	697b      	ldr	r3, [r7, #20]
 800892c:	69db      	ldr	r3, [r3, #28]
 800892e:	2b01      	cmp	r3, #1
 8008930:	d122      	bne.n	8008978 <prvProcessExpiredTimer+0x6c>
 8008932:	697b      	ldr	r3, [r7, #20]
 8008934:	699a      	ldr	r2, [r3, #24]
 8008936:	687b      	ldr	r3, [r7, #4]
 8008938:	18d1      	adds	r1, r2, r3
 800893a:	687b      	ldr	r3, [r7, #4]
 800893c:	683a      	ldr	r2, [r7, #0]
 800893e:	6978      	ldr	r0, [r7, #20]
 8008940:	f000 f8c8 	bl	8008ad4 <prvInsertTimerInActiveList>
 8008944:	4603      	mov	r3, r0
 8008946:	2b00      	cmp	r3, #0
 8008948:	d016      	beq.n	8008978 <prvProcessExpiredTimer+0x6c>
 800894a:	2300      	movs	r3, #0
 800894c:	9300      	str	r3, [sp, #0]
 800894e:	2300      	movs	r3, #0
 8008950:	687a      	ldr	r2, [r7, #4]
 8008952:	2100      	movs	r1, #0
 8008954:	6978      	ldr	r0, [r7, #20]
 8008956:	f7ff ff8b 	bl	8008870 <xTimerGenericCommand>
 800895a:	6138      	str	r0, [r7, #16]
 800895c:	693b      	ldr	r3, [r7, #16]
 800895e:	2b00      	cmp	r3, #0
 8008960:	d10a      	bne.n	8008978 <prvProcessExpiredTimer+0x6c>
 8008962:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008966:	f383 8811 	msr	BASEPRI, r3
 800896a:	f3bf 8f6f 	isb	sy
 800896e:	f3bf 8f4f 	dsb	sy
 8008972:	60fb      	str	r3, [r7, #12]
 8008974:	bf00      	nop
 8008976:	e7fe      	b.n	8008976 <prvProcessExpiredTimer+0x6a>
 8008978:	697b      	ldr	r3, [r7, #20]
 800897a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800897c:	6978      	ldr	r0, [r7, #20]
 800897e:	4798      	blx	r3
 8008980:	bf00      	nop
 8008982:	3718      	adds	r7, #24
 8008984:	46bd      	mov	sp, r7
 8008986:	bd80      	pop	{r7, pc}
 8008988:	20001298 	.word	0x20001298

0800898c <prvTimerTask>:
 800898c:	b580      	push	{r7, lr}
 800898e:	b084      	sub	sp, #16
 8008990:	af00      	add	r7, sp, #0
 8008992:	6078      	str	r0, [r7, #4]
 8008994:	f107 0308 	add.w	r3, r7, #8
 8008998:	4618      	mov	r0, r3
 800899a:	f000 f857 	bl	8008a4c <prvGetNextExpireTime>
 800899e:	60f8      	str	r0, [r7, #12]
 80089a0:	68bb      	ldr	r3, [r7, #8]
 80089a2:	4619      	mov	r1, r3
 80089a4:	68f8      	ldr	r0, [r7, #12]
 80089a6:	f000 f803 	bl	80089b0 <prvProcessTimerOrBlockTask>
 80089aa:	f000 f8d5 	bl	8008b58 <prvProcessReceivedCommands>
 80089ae:	e7f1      	b.n	8008994 <prvTimerTask+0x8>

080089b0 <prvProcessTimerOrBlockTask>:
 80089b0:	b580      	push	{r7, lr}
 80089b2:	b084      	sub	sp, #16
 80089b4:	af00      	add	r7, sp, #0
 80089b6:	6078      	str	r0, [r7, #4]
 80089b8:	6039      	str	r1, [r7, #0]
 80089ba:	f7ff f95d 	bl	8007c78 <vTaskSuspendAll>
 80089be:	f107 0308 	add.w	r3, r7, #8
 80089c2:	4618      	mov	r0, r3
 80089c4:	f000 f866 	bl	8008a94 <prvSampleTimeNow>
 80089c8:	60f8      	str	r0, [r7, #12]
 80089ca:	68bb      	ldr	r3, [r7, #8]
 80089cc:	2b00      	cmp	r3, #0
 80089ce:	d130      	bne.n	8008a32 <prvProcessTimerOrBlockTask+0x82>
 80089d0:	683b      	ldr	r3, [r7, #0]
 80089d2:	2b00      	cmp	r3, #0
 80089d4:	d10a      	bne.n	80089ec <prvProcessTimerOrBlockTask+0x3c>
 80089d6:	687a      	ldr	r2, [r7, #4]
 80089d8:	68fb      	ldr	r3, [r7, #12]
 80089da:	429a      	cmp	r2, r3
 80089dc:	d806      	bhi.n	80089ec <prvProcessTimerOrBlockTask+0x3c>
 80089de:	f7ff f959 	bl	8007c94 <xTaskResumeAll>
 80089e2:	68f9      	ldr	r1, [r7, #12]
 80089e4:	6878      	ldr	r0, [r7, #4]
 80089e6:	f7ff ff91 	bl	800890c <prvProcessExpiredTimer>
 80089ea:	e024      	b.n	8008a36 <prvProcessTimerOrBlockTask+0x86>
 80089ec:	683b      	ldr	r3, [r7, #0]
 80089ee:	2b00      	cmp	r3, #0
 80089f0:	d008      	beq.n	8008a04 <prvProcessTimerOrBlockTask+0x54>
 80089f2:	4b13      	ldr	r3, [pc, #76]	; (8008a40 <prvProcessTimerOrBlockTask+0x90>)
 80089f4:	681b      	ldr	r3, [r3, #0]
 80089f6:	681b      	ldr	r3, [r3, #0]
 80089f8:	2b00      	cmp	r3, #0
 80089fa:	bf0c      	ite	eq
 80089fc:	2301      	moveq	r3, #1
 80089fe:	2300      	movne	r3, #0
 8008a00:	b2db      	uxtb	r3, r3
 8008a02:	603b      	str	r3, [r7, #0]
 8008a04:	4b0f      	ldr	r3, [pc, #60]	; (8008a44 <prvProcessTimerOrBlockTask+0x94>)
 8008a06:	6818      	ldr	r0, [r3, #0]
 8008a08:	687a      	ldr	r2, [r7, #4]
 8008a0a:	68fb      	ldr	r3, [r7, #12]
 8008a0c:	1ad3      	subs	r3, r2, r3
 8008a0e:	683a      	ldr	r2, [r7, #0]
 8008a10:	4619      	mov	r1, r3
 8008a12:	f7fe fecb 	bl	80077ac <vQueueWaitForMessageRestricted>
 8008a16:	f7ff f93d 	bl	8007c94 <xTaskResumeAll>
 8008a1a:	4603      	mov	r3, r0
 8008a1c:	2b00      	cmp	r3, #0
 8008a1e:	d10a      	bne.n	8008a36 <prvProcessTimerOrBlockTask+0x86>
 8008a20:	4b09      	ldr	r3, [pc, #36]	; (8008a48 <prvProcessTimerOrBlockTask+0x98>)
 8008a22:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008a26:	601a      	str	r2, [r3, #0]
 8008a28:	f3bf 8f4f 	dsb	sy
 8008a2c:	f3bf 8f6f 	isb	sy
 8008a30:	e001      	b.n	8008a36 <prvProcessTimerOrBlockTask+0x86>
 8008a32:	f7ff f92f 	bl	8007c94 <xTaskResumeAll>
 8008a36:	bf00      	nop
 8008a38:	3710      	adds	r7, #16
 8008a3a:	46bd      	mov	sp, r7
 8008a3c:	bd80      	pop	{r7, pc}
 8008a3e:	bf00      	nop
 8008a40:	2000129c 	.word	0x2000129c
 8008a44:	200012a0 	.word	0x200012a0
 8008a48:	e000ed04 	.word	0xe000ed04

08008a4c <prvGetNextExpireTime>:
 8008a4c:	b480      	push	{r7}
 8008a4e:	b085      	sub	sp, #20
 8008a50:	af00      	add	r7, sp, #0
 8008a52:	6078      	str	r0, [r7, #4]
 8008a54:	4b0e      	ldr	r3, [pc, #56]	; (8008a90 <prvGetNextExpireTime+0x44>)
 8008a56:	681b      	ldr	r3, [r3, #0]
 8008a58:	681b      	ldr	r3, [r3, #0]
 8008a5a:	2b00      	cmp	r3, #0
 8008a5c:	bf0c      	ite	eq
 8008a5e:	2301      	moveq	r3, #1
 8008a60:	2300      	movne	r3, #0
 8008a62:	b2db      	uxtb	r3, r3
 8008a64:	461a      	mov	r2, r3
 8008a66:	687b      	ldr	r3, [r7, #4]
 8008a68:	601a      	str	r2, [r3, #0]
 8008a6a:	687b      	ldr	r3, [r7, #4]
 8008a6c:	681b      	ldr	r3, [r3, #0]
 8008a6e:	2b00      	cmp	r3, #0
 8008a70:	d105      	bne.n	8008a7e <prvGetNextExpireTime+0x32>
 8008a72:	4b07      	ldr	r3, [pc, #28]	; (8008a90 <prvGetNextExpireTime+0x44>)
 8008a74:	681b      	ldr	r3, [r3, #0]
 8008a76:	68db      	ldr	r3, [r3, #12]
 8008a78:	681b      	ldr	r3, [r3, #0]
 8008a7a:	60fb      	str	r3, [r7, #12]
 8008a7c:	e001      	b.n	8008a82 <prvGetNextExpireTime+0x36>
 8008a7e:	2300      	movs	r3, #0
 8008a80:	60fb      	str	r3, [r7, #12]
 8008a82:	68fb      	ldr	r3, [r7, #12]
 8008a84:	4618      	mov	r0, r3
 8008a86:	3714      	adds	r7, #20
 8008a88:	46bd      	mov	sp, r7
 8008a8a:	bc80      	pop	{r7}
 8008a8c:	4770      	bx	lr
 8008a8e:	bf00      	nop
 8008a90:	20001298 	.word	0x20001298

08008a94 <prvSampleTimeNow>:
 8008a94:	b580      	push	{r7, lr}
 8008a96:	b084      	sub	sp, #16
 8008a98:	af00      	add	r7, sp, #0
 8008a9a:	6078      	str	r0, [r7, #4]
 8008a9c:	f7ff f998 	bl	8007dd0 <xTaskGetTickCount>
 8008aa0:	60f8      	str	r0, [r7, #12]
 8008aa2:	4b0b      	ldr	r3, [pc, #44]	; (8008ad0 <prvSampleTimeNow+0x3c>)
 8008aa4:	681b      	ldr	r3, [r3, #0]
 8008aa6:	68fa      	ldr	r2, [r7, #12]
 8008aa8:	429a      	cmp	r2, r3
 8008aaa:	d205      	bcs.n	8008ab8 <prvSampleTimeNow+0x24>
 8008aac:	f000 f908 	bl	8008cc0 <prvSwitchTimerLists>
 8008ab0:	687b      	ldr	r3, [r7, #4]
 8008ab2:	2201      	movs	r2, #1
 8008ab4:	601a      	str	r2, [r3, #0]
 8008ab6:	e002      	b.n	8008abe <prvSampleTimeNow+0x2a>
 8008ab8:	687b      	ldr	r3, [r7, #4]
 8008aba:	2200      	movs	r2, #0
 8008abc:	601a      	str	r2, [r3, #0]
 8008abe:	4a04      	ldr	r2, [pc, #16]	; (8008ad0 <prvSampleTimeNow+0x3c>)
 8008ac0:	68fb      	ldr	r3, [r7, #12]
 8008ac2:	6013      	str	r3, [r2, #0]
 8008ac4:	68fb      	ldr	r3, [r7, #12]
 8008ac6:	4618      	mov	r0, r3
 8008ac8:	3710      	adds	r7, #16
 8008aca:	46bd      	mov	sp, r7
 8008acc:	bd80      	pop	{r7, pc}
 8008ace:	bf00      	nop
 8008ad0:	200012a8 	.word	0x200012a8

08008ad4 <prvInsertTimerInActiveList>:
 8008ad4:	b580      	push	{r7, lr}
 8008ad6:	b086      	sub	sp, #24
 8008ad8:	af00      	add	r7, sp, #0
 8008ada:	60f8      	str	r0, [r7, #12]
 8008adc:	60b9      	str	r1, [r7, #8]
 8008ade:	607a      	str	r2, [r7, #4]
 8008ae0:	603b      	str	r3, [r7, #0]
 8008ae2:	2300      	movs	r3, #0
 8008ae4:	617b      	str	r3, [r7, #20]
 8008ae6:	68fb      	ldr	r3, [r7, #12]
 8008ae8:	68ba      	ldr	r2, [r7, #8]
 8008aea:	605a      	str	r2, [r3, #4]
 8008aec:	68fb      	ldr	r3, [r7, #12]
 8008aee:	68fa      	ldr	r2, [r7, #12]
 8008af0:	611a      	str	r2, [r3, #16]
 8008af2:	68ba      	ldr	r2, [r7, #8]
 8008af4:	687b      	ldr	r3, [r7, #4]
 8008af6:	429a      	cmp	r2, r3
 8008af8:	d812      	bhi.n	8008b20 <prvInsertTimerInActiveList+0x4c>
 8008afa:	687a      	ldr	r2, [r7, #4]
 8008afc:	683b      	ldr	r3, [r7, #0]
 8008afe:	1ad2      	subs	r2, r2, r3
 8008b00:	68fb      	ldr	r3, [r7, #12]
 8008b02:	699b      	ldr	r3, [r3, #24]
 8008b04:	429a      	cmp	r2, r3
 8008b06:	d302      	bcc.n	8008b0e <prvInsertTimerInActiveList+0x3a>
 8008b08:	2301      	movs	r3, #1
 8008b0a:	617b      	str	r3, [r7, #20]
 8008b0c:	e01b      	b.n	8008b46 <prvInsertTimerInActiveList+0x72>
 8008b0e:	4b10      	ldr	r3, [pc, #64]	; (8008b50 <prvInsertTimerInActiveList+0x7c>)
 8008b10:	681a      	ldr	r2, [r3, #0]
 8008b12:	68fb      	ldr	r3, [r7, #12]
 8008b14:	3304      	adds	r3, #4
 8008b16:	4619      	mov	r1, r3
 8008b18:	4610      	mov	r0, r2
 8008b1a:	f7fe f8f7 	bl	8006d0c <vListInsert>
 8008b1e:	e012      	b.n	8008b46 <prvInsertTimerInActiveList+0x72>
 8008b20:	687a      	ldr	r2, [r7, #4]
 8008b22:	683b      	ldr	r3, [r7, #0]
 8008b24:	429a      	cmp	r2, r3
 8008b26:	d206      	bcs.n	8008b36 <prvInsertTimerInActiveList+0x62>
 8008b28:	68ba      	ldr	r2, [r7, #8]
 8008b2a:	683b      	ldr	r3, [r7, #0]
 8008b2c:	429a      	cmp	r2, r3
 8008b2e:	d302      	bcc.n	8008b36 <prvInsertTimerInActiveList+0x62>
 8008b30:	2301      	movs	r3, #1
 8008b32:	617b      	str	r3, [r7, #20]
 8008b34:	e007      	b.n	8008b46 <prvInsertTimerInActiveList+0x72>
 8008b36:	4b07      	ldr	r3, [pc, #28]	; (8008b54 <prvInsertTimerInActiveList+0x80>)
 8008b38:	681a      	ldr	r2, [r3, #0]
 8008b3a:	68fb      	ldr	r3, [r7, #12]
 8008b3c:	3304      	adds	r3, #4
 8008b3e:	4619      	mov	r1, r3
 8008b40:	4610      	mov	r0, r2
 8008b42:	f7fe f8e3 	bl	8006d0c <vListInsert>
 8008b46:	697b      	ldr	r3, [r7, #20]
 8008b48:	4618      	mov	r0, r3
 8008b4a:	3718      	adds	r7, #24
 8008b4c:	46bd      	mov	sp, r7
 8008b4e:	bd80      	pop	{r7, pc}
 8008b50:	2000129c 	.word	0x2000129c
 8008b54:	20001298 	.word	0x20001298

08008b58 <prvProcessReceivedCommands>:
 8008b58:	b580      	push	{r7, lr}
 8008b5a:	b08e      	sub	sp, #56	; 0x38
 8008b5c:	af02      	add	r7, sp, #8
 8008b5e:	e09d      	b.n	8008c9c <prvProcessReceivedCommands+0x144>
 8008b60:	687b      	ldr	r3, [r7, #4]
 8008b62:	2b00      	cmp	r3, #0
 8008b64:	da18      	bge.n	8008b98 <prvProcessReceivedCommands+0x40>
 8008b66:	1d3b      	adds	r3, r7, #4
 8008b68:	3304      	adds	r3, #4
 8008b6a:	62fb      	str	r3, [r7, #44]	; 0x2c
 8008b6c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8008b6e:	2b00      	cmp	r3, #0
 8008b70:	d10a      	bne.n	8008b88 <prvProcessReceivedCommands+0x30>
 8008b72:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b76:	f383 8811 	msr	BASEPRI, r3
 8008b7a:	f3bf 8f6f 	isb	sy
 8008b7e:	f3bf 8f4f 	dsb	sy
 8008b82:	61fb      	str	r3, [r7, #28]
 8008b84:	bf00      	nop
 8008b86:	e7fe      	b.n	8008b86 <prvProcessReceivedCommands+0x2e>
 8008b88:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8008b8a:	681b      	ldr	r3, [r3, #0]
 8008b8c:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8008b8e:	6850      	ldr	r0, [r2, #4]
 8008b90:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8008b92:	6892      	ldr	r2, [r2, #8]
 8008b94:	4611      	mov	r1, r2
 8008b96:	4798      	blx	r3
 8008b98:	687b      	ldr	r3, [r7, #4]
 8008b9a:	2b00      	cmp	r3, #0
 8008b9c:	db7e      	blt.n	8008c9c <prvProcessReceivedCommands+0x144>
 8008b9e:	68fb      	ldr	r3, [r7, #12]
 8008ba0:	62bb      	str	r3, [r7, #40]	; 0x28
 8008ba2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008ba4:	695b      	ldr	r3, [r3, #20]
 8008ba6:	2b00      	cmp	r3, #0
 8008ba8:	d004      	beq.n	8008bb4 <prvProcessReceivedCommands+0x5c>
 8008baa:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008bac:	3304      	adds	r3, #4
 8008bae:	4618      	mov	r0, r3
 8008bb0:	f7fe f8e4 	bl	8006d7c <uxListRemove>
 8008bb4:	463b      	mov	r3, r7
 8008bb6:	4618      	mov	r0, r3
 8008bb8:	f7ff ff6c 	bl	8008a94 <prvSampleTimeNow>
 8008bbc:	6278      	str	r0, [r7, #36]	; 0x24
 8008bbe:	687b      	ldr	r3, [r7, #4]
 8008bc0:	2b09      	cmp	r3, #9
 8008bc2:	d86a      	bhi.n	8008c9a <prvProcessReceivedCommands+0x142>
 8008bc4:	a201      	add	r2, pc, #4	; (adr r2, 8008bcc <prvProcessReceivedCommands+0x74>)
 8008bc6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008bca:	bf00      	nop
 8008bcc:	08008bf5 	.word	0x08008bf5
 8008bd0:	08008bf5 	.word	0x08008bf5
 8008bd4:	08008bf5 	.word	0x08008bf5
 8008bd8:	08008c9d 	.word	0x08008c9d
 8008bdc:	08008c51 	.word	0x08008c51
 8008be0:	08008c89 	.word	0x08008c89
 8008be4:	08008bf5 	.word	0x08008bf5
 8008be8:	08008bf5 	.word	0x08008bf5
 8008bec:	08008c9d 	.word	0x08008c9d
 8008bf0:	08008c51 	.word	0x08008c51
 8008bf4:	68ba      	ldr	r2, [r7, #8]
 8008bf6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008bf8:	699b      	ldr	r3, [r3, #24]
 8008bfa:	18d1      	adds	r1, r2, r3
 8008bfc:	68bb      	ldr	r3, [r7, #8]
 8008bfe:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8008c00:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8008c02:	f7ff ff67 	bl	8008ad4 <prvInsertTimerInActiveList>
 8008c06:	4603      	mov	r3, r0
 8008c08:	2b00      	cmp	r3, #0
 8008c0a:	d047      	beq.n	8008c9c <prvProcessReceivedCommands+0x144>
 8008c0c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008c0e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008c10:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8008c12:	4798      	blx	r3
 8008c14:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008c16:	69db      	ldr	r3, [r3, #28]
 8008c18:	2b01      	cmp	r3, #1
 8008c1a:	d13f      	bne.n	8008c9c <prvProcessReceivedCommands+0x144>
 8008c1c:	68ba      	ldr	r2, [r7, #8]
 8008c1e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008c20:	699b      	ldr	r3, [r3, #24]
 8008c22:	441a      	add	r2, r3
 8008c24:	2300      	movs	r3, #0
 8008c26:	9300      	str	r3, [sp, #0]
 8008c28:	2300      	movs	r3, #0
 8008c2a:	2100      	movs	r1, #0
 8008c2c:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8008c2e:	f7ff fe1f 	bl	8008870 <xTimerGenericCommand>
 8008c32:	6238      	str	r0, [r7, #32]
 8008c34:	6a3b      	ldr	r3, [r7, #32]
 8008c36:	2b00      	cmp	r3, #0
 8008c38:	d130      	bne.n	8008c9c <prvProcessReceivedCommands+0x144>
 8008c3a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c3e:	f383 8811 	msr	BASEPRI, r3
 8008c42:	f3bf 8f6f 	isb	sy
 8008c46:	f3bf 8f4f 	dsb	sy
 8008c4a:	61bb      	str	r3, [r7, #24]
 8008c4c:	bf00      	nop
 8008c4e:	e7fe      	b.n	8008c4e <prvProcessReceivedCommands+0xf6>
 8008c50:	68ba      	ldr	r2, [r7, #8]
 8008c52:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008c54:	619a      	str	r2, [r3, #24]
 8008c56:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008c58:	699b      	ldr	r3, [r3, #24]
 8008c5a:	2b00      	cmp	r3, #0
 8008c5c:	d10a      	bne.n	8008c74 <prvProcessReceivedCommands+0x11c>
 8008c5e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c62:	f383 8811 	msr	BASEPRI, r3
 8008c66:	f3bf 8f6f 	isb	sy
 8008c6a:	f3bf 8f4f 	dsb	sy
 8008c6e:	617b      	str	r3, [r7, #20]
 8008c70:	bf00      	nop
 8008c72:	e7fe      	b.n	8008c72 <prvProcessReceivedCommands+0x11a>
 8008c74:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008c76:	699a      	ldr	r2, [r3, #24]
 8008c78:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008c7a:	18d1      	adds	r1, r2, r3
 8008c7c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008c7e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8008c80:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8008c82:	f7ff ff27 	bl	8008ad4 <prvInsertTimerInActiveList>
 8008c86:	e009      	b.n	8008c9c <prvProcessReceivedCommands+0x144>
 8008c88:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008c8a:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 8008c8e:	2b00      	cmp	r3, #0
 8008c90:	d104      	bne.n	8008c9c <prvProcessReceivedCommands+0x144>
 8008c92:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8008c94:	f000 fb6e 	bl	8009374 <vPortFree>
 8008c98:	e000      	b.n	8008c9c <prvProcessReceivedCommands+0x144>
 8008c9a:	bf00      	nop
 8008c9c:	4b07      	ldr	r3, [pc, #28]	; (8008cbc <prvProcessReceivedCommands+0x164>)
 8008c9e:	681b      	ldr	r3, [r3, #0]
 8008ca0:	1d39      	adds	r1, r7, #4
 8008ca2:	2200      	movs	r2, #0
 8008ca4:	4618      	mov	r0, r3
 8008ca6:	f7fe fb69 	bl	800737c <xQueueReceive>
 8008caa:	4603      	mov	r3, r0
 8008cac:	2b00      	cmp	r3, #0
 8008cae:	f47f af57 	bne.w	8008b60 <prvProcessReceivedCommands+0x8>
 8008cb2:	bf00      	nop
 8008cb4:	bf00      	nop
 8008cb6:	3730      	adds	r7, #48	; 0x30
 8008cb8:	46bd      	mov	sp, r7
 8008cba:	bd80      	pop	{r7, pc}
 8008cbc:	200012a0 	.word	0x200012a0

08008cc0 <prvSwitchTimerLists>:
 8008cc0:	b580      	push	{r7, lr}
 8008cc2:	b088      	sub	sp, #32
 8008cc4:	af02      	add	r7, sp, #8
 8008cc6:	e045      	b.n	8008d54 <prvSwitchTimerLists+0x94>
 8008cc8:	4b2c      	ldr	r3, [pc, #176]	; (8008d7c <prvSwitchTimerLists+0xbc>)
 8008cca:	681b      	ldr	r3, [r3, #0]
 8008ccc:	68db      	ldr	r3, [r3, #12]
 8008cce:	681b      	ldr	r3, [r3, #0]
 8008cd0:	613b      	str	r3, [r7, #16]
 8008cd2:	4b2a      	ldr	r3, [pc, #168]	; (8008d7c <prvSwitchTimerLists+0xbc>)
 8008cd4:	681b      	ldr	r3, [r3, #0]
 8008cd6:	68db      	ldr	r3, [r3, #12]
 8008cd8:	68db      	ldr	r3, [r3, #12]
 8008cda:	60fb      	str	r3, [r7, #12]
 8008cdc:	68fb      	ldr	r3, [r7, #12]
 8008cde:	3304      	adds	r3, #4
 8008ce0:	4618      	mov	r0, r3
 8008ce2:	f7fe f84b 	bl	8006d7c <uxListRemove>
 8008ce6:	68fb      	ldr	r3, [r7, #12]
 8008ce8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008cea:	68f8      	ldr	r0, [r7, #12]
 8008cec:	4798      	blx	r3
 8008cee:	68fb      	ldr	r3, [r7, #12]
 8008cf0:	69db      	ldr	r3, [r3, #28]
 8008cf2:	2b01      	cmp	r3, #1
 8008cf4:	d12e      	bne.n	8008d54 <prvSwitchTimerLists+0x94>
 8008cf6:	68fb      	ldr	r3, [r7, #12]
 8008cf8:	699b      	ldr	r3, [r3, #24]
 8008cfa:	693a      	ldr	r2, [r7, #16]
 8008cfc:	4413      	add	r3, r2
 8008cfe:	60bb      	str	r3, [r7, #8]
 8008d00:	68ba      	ldr	r2, [r7, #8]
 8008d02:	693b      	ldr	r3, [r7, #16]
 8008d04:	429a      	cmp	r2, r3
 8008d06:	d90e      	bls.n	8008d26 <prvSwitchTimerLists+0x66>
 8008d08:	68fb      	ldr	r3, [r7, #12]
 8008d0a:	68ba      	ldr	r2, [r7, #8]
 8008d0c:	605a      	str	r2, [r3, #4]
 8008d0e:	68fb      	ldr	r3, [r7, #12]
 8008d10:	68fa      	ldr	r2, [r7, #12]
 8008d12:	611a      	str	r2, [r3, #16]
 8008d14:	4b19      	ldr	r3, [pc, #100]	; (8008d7c <prvSwitchTimerLists+0xbc>)
 8008d16:	681a      	ldr	r2, [r3, #0]
 8008d18:	68fb      	ldr	r3, [r7, #12]
 8008d1a:	3304      	adds	r3, #4
 8008d1c:	4619      	mov	r1, r3
 8008d1e:	4610      	mov	r0, r2
 8008d20:	f7fd fff4 	bl	8006d0c <vListInsert>
 8008d24:	e016      	b.n	8008d54 <prvSwitchTimerLists+0x94>
 8008d26:	2300      	movs	r3, #0
 8008d28:	9300      	str	r3, [sp, #0]
 8008d2a:	2300      	movs	r3, #0
 8008d2c:	693a      	ldr	r2, [r7, #16]
 8008d2e:	2100      	movs	r1, #0
 8008d30:	68f8      	ldr	r0, [r7, #12]
 8008d32:	f7ff fd9d 	bl	8008870 <xTimerGenericCommand>
 8008d36:	6078      	str	r0, [r7, #4]
 8008d38:	687b      	ldr	r3, [r7, #4]
 8008d3a:	2b00      	cmp	r3, #0
 8008d3c:	d10a      	bne.n	8008d54 <prvSwitchTimerLists+0x94>
 8008d3e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d42:	f383 8811 	msr	BASEPRI, r3
 8008d46:	f3bf 8f6f 	isb	sy
 8008d4a:	f3bf 8f4f 	dsb	sy
 8008d4e:	603b      	str	r3, [r7, #0]
 8008d50:	bf00      	nop
 8008d52:	e7fe      	b.n	8008d52 <prvSwitchTimerLists+0x92>
 8008d54:	4b09      	ldr	r3, [pc, #36]	; (8008d7c <prvSwitchTimerLists+0xbc>)
 8008d56:	681b      	ldr	r3, [r3, #0]
 8008d58:	681b      	ldr	r3, [r3, #0]
 8008d5a:	2b00      	cmp	r3, #0
 8008d5c:	d1b4      	bne.n	8008cc8 <prvSwitchTimerLists+0x8>
 8008d5e:	4b07      	ldr	r3, [pc, #28]	; (8008d7c <prvSwitchTimerLists+0xbc>)
 8008d60:	681b      	ldr	r3, [r3, #0]
 8008d62:	617b      	str	r3, [r7, #20]
 8008d64:	4b06      	ldr	r3, [pc, #24]	; (8008d80 <prvSwitchTimerLists+0xc0>)
 8008d66:	681b      	ldr	r3, [r3, #0]
 8008d68:	4a04      	ldr	r2, [pc, #16]	; (8008d7c <prvSwitchTimerLists+0xbc>)
 8008d6a:	6013      	str	r3, [r2, #0]
 8008d6c:	4a04      	ldr	r2, [pc, #16]	; (8008d80 <prvSwitchTimerLists+0xc0>)
 8008d6e:	697b      	ldr	r3, [r7, #20]
 8008d70:	6013      	str	r3, [r2, #0]
 8008d72:	bf00      	nop
 8008d74:	3718      	adds	r7, #24
 8008d76:	46bd      	mov	sp, r7
 8008d78:	bd80      	pop	{r7, pc}
 8008d7a:	bf00      	nop
 8008d7c:	20001298 	.word	0x20001298
 8008d80:	2000129c 	.word	0x2000129c

08008d84 <prvCheckForValidListAndQueue>:
 8008d84:	b580      	push	{r7, lr}
 8008d86:	b082      	sub	sp, #8
 8008d88:	af02      	add	r7, sp, #8
 8008d8a:	f000 f92f 	bl	8008fec <vPortEnterCritical>
 8008d8e:	4b15      	ldr	r3, [pc, #84]	; (8008de4 <prvCheckForValidListAndQueue+0x60>)
 8008d90:	681b      	ldr	r3, [r3, #0]
 8008d92:	2b00      	cmp	r3, #0
 8008d94:	d120      	bne.n	8008dd8 <prvCheckForValidListAndQueue+0x54>
 8008d96:	4814      	ldr	r0, [pc, #80]	; (8008de8 <prvCheckForValidListAndQueue+0x64>)
 8008d98:	f7fd ff6a 	bl	8006c70 <vListInitialise>
 8008d9c:	4813      	ldr	r0, [pc, #76]	; (8008dec <prvCheckForValidListAndQueue+0x68>)
 8008d9e:	f7fd ff67 	bl	8006c70 <vListInitialise>
 8008da2:	4b13      	ldr	r3, [pc, #76]	; (8008df0 <prvCheckForValidListAndQueue+0x6c>)
 8008da4:	4a10      	ldr	r2, [pc, #64]	; (8008de8 <prvCheckForValidListAndQueue+0x64>)
 8008da6:	601a      	str	r2, [r3, #0]
 8008da8:	4b12      	ldr	r3, [pc, #72]	; (8008df4 <prvCheckForValidListAndQueue+0x70>)
 8008daa:	4a10      	ldr	r2, [pc, #64]	; (8008dec <prvCheckForValidListAndQueue+0x68>)
 8008dac:	601a      	str	r2, [r3, #0]
 8008dae:	2300      	movs	r3, #0
 8008db0:	9300      	str	r3, [sp, #0]
 8008db2:	4b11      	ldr	r3, [pc, #68]	; (8008df8 <prvCheckForValidListAndQueue+0x74>)
 8008db4:	4a11      	ldr	r2, [pc, #68]	; (8008dfc <prvCheckForValidListAndQueue+0x78>)
 8008db6:	2110      	movs	r1, #16
 8008db8:	200a      	movs	r0, #10
 8008dba:	f7fe f871 	bl	8006ea0 <xQueueGenericCreateStatic>
 8008dbe:	4603      	mov	r3, r0
 8008dc0:	4a08      	ldr	r2, [pc, #32]	; (8008de4 <prvCheckForValidListAndQueue+0x60>)
 8008dc2:	6013      	str	r3, [r2, #0]
 8008dc4:	4b07      	ldr	r3, [pc, #28]	; (8008de4 <prvCheckForValidListAndQueue+0x60>)
 8008dc6:	681b      	ldr	r3, [r3, #0]
 8008dc8:	2b00      	cmp	r3, #0
 8008dca:	d005      	beq.n	8008dd8 <prvCheckForValidListAndQueue+0x54>
 8008dcc:	4b05      	ldr	r3, [pc, #20]	; (8008de4 <prvCheckForValidListAndQueue+0x60>)
 8008dce:	681b      	ldr	r3, [r3, #0]
 8008dd0:	490b      	ldr	r1, [pc, #44]	; (8008e00 <prvCheckForValidListAndQueue+0x7c>)
 8008dd2:	4618      	mov	r0, r3
 8008dd4:	f7fe fcc2 	bl	800775c <vQueueAddToRegistry>
 8008dd8:	f000 f938 	bl	800904c <vPortExitCritical>
 8008ddc:	bf00      	nop
 8008dde:	46bd      	mov	sp, r7
 8008de0:	bd80      	pop	{r7, pc}
 8008de2:	bf00      	nop
 8008de4:	200012a0 	.word	0x200012a0
 8008de8:	20001270 	.word	0x20001270
 8008dec:	20001284 	.word	0x20001284
 8008df0:	20001298 	.word	0x20001298
 8008df4:	2000129c 	.word	0x2000129c
 8008df8:	2000134c 	.word	0x2000134c
 8008dfc:	200012ac 	.word	0x200012ac
 8008e00:	0800c2d4 	.word	0x0800c2d4

08008e04 <pxPortInitialiseStack>:
 8008e04:	b480      	push	{r7}
 8008e06:	b085      	sub	sp, #20
 8008e08:	af00      	add	r7, sp, #0
 8008e0a:	60f8      	str	r0, [r7, #12]
 8008e0c:	60b9      	str	r1, [r7, #8]
 8008e0e:	607a      	str	r2, [r7, #4]
 8008e10:	68fb      	ldr	r3, [r7, #12]
 8008e12:	3b04      	subs	r3, #4
 8008e14:	60fb      	str	r3, [r7, #12]
 8008e16:	68fb      	ldr	r3, [r7, #12]
 8008e18:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8008e1c:	601a      	str	r2, [r3, #0]
 8008e1e:	68fb      	ldr	r3, [r7, #12]
 8008e20:	3b04      	subs	r3, #4
 8008e22:	60fb      	str	r3, [r7, #12]
 8008e24:	68bb      	ldr	r3, [r7, #8]
 8008e26:	f023 0201 	bic.w	r2, r3, #1
 8008e2a:	68fb      	ldr	r3, [r7, #12]
 8008e2c:	601a      	str	r2, [r3, #0]
 8008e2e:	68fb      	ldr	r3, [r7, #12]
 8008e30:	3b04      	subs	r3, #4
 8008e32:	60fb      	str	r3, [r7, #12]
 8008e34:	4a08      	ldr	r2, [pc, #32]	; (8008e58 <pxPortInitialiseStack+0x54>)
 8008e36:	68fb      	ldr	r3, [r7, #12]
 8008e38:	601a      	str	r2, [r3, #0]
 8008e3a:	68fb      	ldr	r3, [r7, #12]
 8008e3c:	3b14      	subs	r3, #20
 8008e3e:	60fb      	str	r3, [r7, #12]
 8008e40:	687a      	ldr	r2, [r7, #4]
 8008e42:	68fb      	ldr	r3, [r7, #12]
 8008e44:	601a      	str	r2, [r3, #0]
 8008e46:	68fb      	ldr	r3, [r7, #12]
 8008e48:	3b20      	subs	r3, #32
 8008e4a:	60fb      	str	r3, [r7, #12]
 8008e4c:	68fb      	ldr	r3, [r7, #12]
 8008e4e:	4618      	mov	r0, r3
 8008e50:	3714      	adds	r7, #20
 8008e52:	46bd      	mov	sp, r7
 8008e54:	bc80      	pop	{r7}
 8008e56:	4770      	bx	lr
 8008e58:	08008e5d 	.word	0x08008e5d

08008e5c <prvTaskExitError>:
 8008e5c:	b480      	push	{r7}
 8008e5e:	b085      	sub	sp, #20
 8008e60:	af00      	add	r7, sp, #0
 8008e62:	2300      	movs	r3, #0
 8008e64:	607b      	str	r3, [r7, #4]
 8008e66:	4b12      	ldr	r3, [pc, #72]	; (8008eb0 <prvTaskExitError+0x54>)
 8008e68:	681b      	ldr	r3, [r3, #0]
 8008e6a:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008e6e:	d00a      	beq.n	8008e86 <prvTaskExitError+0x2a>
 8008e70:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e74:	f383 8811 	msr	BASEPRI, r3
 8008e78:	f3bf 8f6f 	isb	sy
 8008e7c:	f3bf 8f4f 	dsb	sy
 8008e80:	60fb      	str	r3, [r7, #12]
 8008e82:	bf00      	nop
 8008e84:	e7fe      	b.n	8008e84 <prvTaskExitError+0x28>
 8008e86:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e8a:	f383 8811 	msr	BASEPRI, r3
 8008e8e:	f3bf 8f6f 	isb	sy
 8008e92:	f3bf 8f4f 	dsb	sy
 8008e96:	60bb      	str	r3, [r7, #8]
 8008e98:	bf00      	nop
 8008e9a:	bf00      	nop
 8008e9c:	687b      	ldr	r3, [r7, #4]
 8008e9e:	2b00      	cmp	r3, #0
 8008ea0:	d0fc      	beq.n	8008e9c <prvTaskExitError+0x40>
 8008ea2:	bf00      	nop
 8008ea4:	bf00      	nop
 8008ea6:	3714      	adds	r7, #20
 8008ea8:	46bd      	mov	sp, r7
 8008eaa:	bc80      	pop	{r7}
 8008eac:	4770      	bx	lr
 8008eae:	bf00      	nop
 8008eb0:	20000070 	.word	0x20000070
	...

08008ec0 <SVC_Handler>:
 8008ec0:	4b07      	ldr	r3, [pc, #28]	; (8008ee0 <pxCurrentTCBConst2>)
 8008ec2:	6819      	ldr	r1, [r3, #0]
 8008ec4:	6808      	ldr	r0, [r1, #0]
 8008ec6:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 8008eca:	f380 8809 	msr	PSP, r0
 8008ece:	f3bf 8f6f 	isb	sy
 8008ed2:	f04f 0000 	mov.w	r0, #0
 8008ed6:	f380 8811 	msr	BASEPRI, r0
 8008eda:	f04e 0e0d 	orr.w	lr, lr, #13
 8008ede:	4770      	bx	lr

08008ee0 <pxCurrentTCBConst2>:
 8008ee0:	20000d70 	.word	0x20000d70
 8008ee4:	bf00      	nop
 8008ee6:	bf00      	nop

08008ee8 <prvPortStartFirstTask>:
 8008ee8:	4806      	ldr	r0, [pc, #24]	; (8008f04 <prvPortStartFirstTask+0x1c>)
 8008eea:	6800      	ldr	r0, [r0, #0]
 8008eec:	6800      	ldr	r0, [r0, #0]
 8008eee:	f380 8808 	msr	MSP, r0
 8008ef2:	b662      	cpsie	i
 8008ef4:	b661      	cpsie	f
 8008ef6:	f3bf 8f4f 	dsb	sy
 8008efa:	f3bf 8f6f 	isb	sy
 8008efe:	df00      	svc	0
 8008f00:	bf00      	nop
 8008f02:	bf00      	nop
 8008f04:	e000ed08 	.word	0xe000ed08

08008f08 <xPortStartScheduler>:
 8008f08:	b580      	push	{r7, lr}
 8008f0a:	b084      	sub	sp, #16
 8008f0c:	af00      	add	r7, sp, #0
 8008f0e:	4b32      	ldr	r3, [pc, #200]	; (8008fd8 <xPortStartScheduler+0xd0>)
 8008f10:	60fb      	str	r3, [r7, #12]
 8008f12:	68fb      	ldr	r3, [r7, #12]
 8008f14:	781b      	ldrb	r3, [r3, #0]
 8008f16:	b2db      	uxtb	r3, r3
 8008f18:	607b      	str	r3, [r7, #4]
 8008f1a:	68fb      	ldr	r3, [r7, #12]
 8008f1c:	22ff      	movs	r2, #255	; 0xff
 8008f1e:	701a      	strb	r2, [r3, #0]
 8008f20:	68fb      	ldr	r3, [r7, #12]
 8008f22:	781b      	ldrb	r3, [r3, #0]
 8008f24:	b2db      	uxtb	r3, r3
 8008f26:	70fb      	strb	r3, [r7, #3]
 8008f28:	78fb      	ldrb	r3, [r7, #3]
 8008f2a:	b2db      	uxtb	r3, r3
 8008f2c:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8008f30:	b2da      	uxtb	r2, r3
 8008f32:	4b2a      	ldr	r3, [pc, #168]	; (8008fdc <xPortStartScheduler+0xd4>)
 8008f34:	701a      	strb	r2, [r3, #0]
 8008f36:	4b2a      	ldr	r3, [pc, #168]	; (8008fe0 <xPortStartScheduler+0xd8>)
 8008f38:	2207      	movs	r2, #7
 8008f3a:	601a      	str	r2, [r3, #0]
 8008f3c:	e009      	b.n	8008f52 <xPortStartScheduler+0x4a>
 8008f3e:	4b28      	ldr	r3, [pc, #160]	; (8008fe0 <xPortStartScheduler+0xd8>)
 8008f40:	681b      	ldr	r3, [r3, #0]
 8008f42:	3b01      	subs	r3, #1
 8008f44:	4a26      	ldr	r2, [pc, #152]	; (8008fe0 <xPortStartScheduler+0xd8>)
 8008f46:	6013      	str	r3, [r2, #0]
 8008f48:	78fb      	ldrb	r3, [r7, #3]
 8008f4a:	b2db      	uxtb	r3, r3
 8008f4c:	005b      	lsls	r3, r3, #1
 8008f4e:	b2db      	uxtb	r3, r3
 8008f50:	70fb      	strb	r3, [r7, #3]
 8008f52:	78fb      	ldrb	r3, [r7, #3]
 8008f54:	b2db      	uxtb	r3, r3
 8008f56:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8008f5a:	2b80      	cmp	r3, #128	; 0x80
 8008f5c:	d0ef      	beq.n	8008f3e <xPortStartScheduler+0x36>
 8008f5e:	4b20      	ldr	r3, [pc, #128]	; (8008fe0 <xPortStartScheduler+0xd8>)
 8008f60:	681b      	ldr	r3, [r3, #0]
 8008f62:	f1c3 0307 	rsb	r3, r3, #7
 8008f66:	2b04      	cmp	r3, #4
 8008f68:	d00a      	beq.n	8008f80 <xPortStartScheduler+0x78>
 8008f6a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008f6e:	f383 8811 	msr	BASEPRI, r3
 8008f72:	f3bf 8f6f 	isb	sy
 8008f76:	f3bf 8f4f 	dsb	sy
 8008f7a:	60bb      	str	r3, [r7, #8]
 8008f7c:	bf00      	nop
 8008f7e:	e7fe      	b.n	8008f7e <xPortStartScheduler+0x76>
 8008f80:	4b17      	ldr	r3, [pc, #92]	; (8008fe0 <xPortStartScheduler+0xd8>)
 8008f82:	681b      	ldr	r3, [r3, #0]
 8008f84:	021b      	lsls	r3, r3, #8
 8008f86:	4a16      	ldr	r2, [pc, #88]	; (8008fe0 <xPortStartScheduler+0xd8>)
 8008f88:	6013      	str	r3, [r2, #0]
 8008f8a:	4b15      	ldr	r3, [pc, #84]	; (8008fe0 <xPortStartScheduler+0xd8>)
 8008f8c:	681b      	ldr	r3, [r3, #0]
 8008f8e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8008f92:	4a13      	ldr	r2, [pc, #76]	; (8008fe0 <xPortStartScheduler+0xd8>)
 8008f94:	6013      	str	r3, [r2, #0]
 8008f96:	687b      	ldr	r3, [r7, #4]
 8008f98:	b2da      	uxtb	r2, r3
 8008f9a:	68fb      	ldr	r3, [r7, #12]
 8008f9c:	701a      	strb	r2, [r3, #0]
 8008f9e:	4b11      	ldr	r3, [pc, #68]	; (8008fe4 <xPortStartScheduler+0xdc>)
 8008fa0:	681b      	ldr	r3, [r3, #0]
 8008fa2:	4a10      	ldr	r2, [pc, #64]	; (8008fe4 <xPortStartScheduler+0xdc>)
 8008fa4:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8008fa8:	6013      	str	r3, [r2, #0]
 8008faa:	4b0e      	ldr	r3, [pc, #56]	; (8008fe4 <xPortStartScheduler+0xdc>)
 8008fac:	681b      	ldr	r3, [r3, #0]
 8008fae:	4a0d      	ldr	r2, [pc, #52]	; (8008fe4 <xPortStartScheduler+0xdc>)
 8008fb0:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 8008fb4:	6013      	str	r3, [r2, #0]
 8008fb6:	f000 f8b9 	bl	800912c <vPortSetupTimerInterrupt>
 8008fba:	4b0b      	ldr	r3, [pc, #44]	; (8008fe8 <xPortStartScheduler+0xe0>)
 8008fbc:	2200      	movs	r2, #0
 8008fbe:	601a      	str	r2, [r3, #0]
 8008fc0:	f7ff ff92 	bl	8008ee8 <prvPortStartFirstTask>
 8008fc4:	f7fe ffd0 	bl	8007f68 <vTaskSwitchContext>
 8008fc8:	f7ff ff48 	bl	8008e5c <prvTaskExitError>
 8008fcc:	2300      	movs	r3, #0
 8008fce:	4618      	mov	r0, r3
 8008fd0:	3710      	adds	r7, #16
 8008fd2:	46bd      	mov	sp, r7
 8008fd4:	bd80      	pop	{r7, pc}
 8008fd6:	bf00      	nop
 8008fd8:	e000e400 	.word	0xe000e400
 8008fdc:	2000139c 	.word	0x2000139c
 8008fe0:	200013a0 	.word	0x200013a0
 8008fe4:	e000ed20 	.word	0xe000ed20
 8008fe8:	20000070 	.word	0x20000070

08008fec <vPortEnterCritical>:
 8008fec:	b480      	push	{r7}
 8008fee:	b083      	sub	sp, #12
 8008ff0:	af00      	add	r7, sp, #0
 8008ff2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ff6:	f383 8811 	msr	BASEPRI, r3
 8008ffa:	f3bf 8f6f 	isb	sy
 8008ffe:	f3bf 8f4f 	dsb	sy
 8009002:	607b      	str	r3, [r7, #4]
 8009004:	bf00      	nop
 8009006:	4b0f      	ldr	r3, [pc, #60]	; (8009044 <vPortEnterCritical+0x58>)
 8009008:	681b      	ldr	r3, [r3, #0]
 800900a:	3301      	adds	r3, #1
 800900c:	4a0d      	ldr	r2, [pc, #52]	; (8009044 <vPortEnterCritical+0x58>)
 800900e:	6013      	str	r3, [r2, #0]
 8009010:	4b0c      	ldr	r3, [pc, #48]	; (8009044 <vPortEnterCritical+0x58>)
 8009012:	681b      	ldr	r3, [r3, #0]
 8009014:	2b01      	cmp	r3, #1
 8009016:	d10f      	bne.n	8009038 <vPortEnterCritical+0x4c>
 8009018:	4b0b      	ldr	r3, [pc, #44]	; (8009048 <vPortEnterCritical+0x5c>)
 800901a:	681b      	ldr	r3, [r3, #0]
 800901c:	b2db      	uxtb	r3, r3
 800901e:	2b00      	cmp	r3, #0
 8009020:	d00a      	beq.n	8009038 <vPortEnterCritical+0x4c>
 8009022:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009026:	f383 8811 	msr	BASEPRI, r3
 800902a:	f3bf 8f6f 	isb	sy
 800902e:	f3bf 8f4f 	dsb	sy
 8009032:	603b      	str	r3, [r7, #0]
 8009034:	bf00      	nop
 8009036:	e7fe      	b.n	8009036 <vPortEnterCritical+0x4a>
 8009038:	bf00      	nop
 800903a:	370c      	adds	r7, #12
 800903c:	46bd      	mov	sp, r7
 800903e:	bc80      	pop	{r7}
 8009040:	4770      	bx	lr
 8009042:	bf00      	nop
 8009044:	20000070 	.word	0x20000070
 8009048:	e000ed04 	.word	0xe000ed04

0800904c <vPortExitCritical>:
 800904c:	b480      	push	{r7}
 800904e:	b083      	sub	sp, #12
 8009050:	af00      	add	r7, sp, #0
 8009052:	4b11      	ldr	r3, [pc, #68]	; (8009098 <vPortExitCritical+0x4c>)
 8009054:	681b      	ldr	r3, [r3, #0]
 8009056:	2b00      	cmp	r3, #0
 8009058:	d10a      	bne.n	8009070 <vPortExitCritical+0x24>
 800905a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800905e:	f383 8811 	msr	BASEPRI, r3
 8009062:	f3bf 8f6f 	isb	sy
 8009066:	f3bf 8f4f 	dsb	sy
 800906a:	607b      	str	r3, [r7, #4]
 800906c:	bf00      	nop
 800906e:	e7fe      	b.n	800906e <vPortExitCritical+0x22>
 8009070:	4b09      	ldr	r3, [pc, #36]	; (8009098 <vPortExitCritical+0x4c>)
 8009072:	681b      	ldr	r3, [r3, #0]
 8009074:	3b01      	subs	r3, #1
 8009076:	4a08      	ldr	r2, [pc, #32]	; (8009098 <vPortExitCritical+0x4c>)
 8009078:	6013      	str	r3, [r2, #0]
 800907a:	4b07      	ldr	r3, [pc, #28]	; (8009098 <vPortExitCritical+0x4c>)
 800907c:	681b      	ldr	r3, [r3, #0]
 800907e:	2b00      	cmp	r3, #0
 8009080:	d105      	bne.n	800908e <vPortExitCritical+0x42>
 8009082:	2300      	movs	r3, #0
 8009084:	603b      	str	r3, [r7, #0]
 8009086:	683b      	ldr	r3, [r7, #0]
 8009088:	f383 8811 	msr	BASEPRI, r3
 800908c:	bf00      	nop
 800908e:	bf00      	nop
 8009090:	370c      	adds	r7, #12
 8009092:	46bd      	mov	sp, r7
 8009094:	bc80      	pop	{r7}
 8009096:	4770      	bx	lr
 8009098:	20000070 	.word	0x20000070
 800909c:	00000000 	.word	0x00000000

080090a0 <PendSV_Handler>:
 80090a0:	f3ef 8009 	mrs	r0, PSP
 80090a4:	f3bf 8f6f 	isb	sy
 80090a8:	4b0d      	ldr	r3, [pc, #52]	; (80090e0 <pxCurrentTCBConst>)
 80090aa:	681a      	ldr	r2, [r3, #0]
 80090ac:	e920 0ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 80090b0:	6010      	str	r0, [r2, #0]
 80090b2:	e92d 4008 	stmdb	sp!, {r3, lr}
 80090b6:	f04f 0050 	mov.w	r0, #80	; 0x50
 80090ba:	f380 8811 	msr	BASEPRI, r0
 80090be:	f7fe ff53 	bl	8007f68 <vTaskSwitchContext>
 80090c2:	f04f 0000 	mov.w	r0, #0
 80090c6:	f380 8811 	msr	BASEPRI, r0
 80090ca:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80090ce:	6819      	ldr	r1, [r3, #0]
 80090d0:	6808      	ldr	r0, [r1, #0]
 80090d2:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 80090d6:	f380 8809 	msr	PSP, r0
 80090da:	f3bf 8f6f 	isb	sy
 80090de:	4770      	bx	lr

080090e0 <pxCurrentTCBConst>:
 80090e0:	20000d70 	.word	0x20000d70
 80090e4:	bf00      	nop
 80090e6:	bf00      	nop

080090e8 <SysTick_Handler>:
 80090e8:	b580      	push	{r7, lr}
 80090ea:	b082      	sub	sp, #8
 80090ec:	af00      	add	r7, sp, #0
 80090ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090f2:	f383 8811 	msr	BASEPRI, r3
 80090f6:	f3bf 8f6f 	isb	sy
 80090fa:	f3bf 8f4f 	dsb	sy
 80090fe:	607b      	str	r3, [r7, #4]
 8009100:	bf00      	nop
 8009102:	f7fe fe73 	bl	8007dec <xTaskIncrementTick>
 8009106:	4603      	mov	r3, r0
 8009108:	2b00      	cmp	r3, #0
 800910a:	d003      	beq.n	8009114 <SysTick_Handler+0x2c>
 800910c:	4b06      	ldr	r3, [pc, #24]	; (8009128 <SysTick_Handler+0x40>)
 800910e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009112:	601a      	str	r2, [r3, #0]
 8009114:	2300      	movs	r3, #0
 8009116:	603b      	str	r3, [r7, #0]
 8009118:	683b      	ldr	r3, [r7, #0]
 800911a:	f383 8811 	msr	BASEPRI, r3
 800911e:	bf00      	nop
 8009120:	bf00      	nop
 8009122:	3708      	adds	r7, #8
 8009124:	46bd      	mov	sp, r7
 8009126:	bd80      	pop	{r7, pc}
 8009128:	e000ed04 	.word	0xe000ed04

0800912c <vPortSetupTimerInterrupt>:
 800912c:	b480      	push	{r7}
 800912e:	af00      	add	r7, sp, #0
 8009130:	4b0a      	ldr	r3, [pc, #40]	; (800915c <vPortSetupTimerInterrupt+0x30>)
 8009132:	2200      	movs	r2, #0
 8009134:	601a      	str	r2, [r3, #0]
 8009136:	4b0a      	ldr	r3, [pc, #40]	; (8009160 <vPortSetupTimerInterrupt+0x34>)
 8009138:	2200      	movs	r2, #0
 800913a:	601a      	str	r2, [r3, #0]
 800913c:	4b09      	ldr	r3, [pc, #36]	; (8009164 <vPortSetupTimerInterrupt+0x38>)
 800913e:	681b      	ldr	r3, [r3, #0]
 8009140:	4a09      	ldr	r2, [pc, #36]	; (8009168 <vPortSetupTimerInterrupt+0x3c>)
 8009142:	fba2 2303 	umull	r2, r3, r2, r3
 8009146:	099b      	lsrs	r3, r3, #6
 8009148:	4a08      	ldr	r2, [pc, #32]	; (800916c <vPortSetupTimerInterrupt+0x40>)
 800914a:	3b01      	subs	r3, #1
 800914c:	6013      	str	r3, [r2, #0]
 800914e:	4b03      	ldr	r3, [pc, #12]	; (800915c <vPortSetupTimerInterrupt+0x30>)
 8009150:	2207      	movs	r2, #7
 8009152:	601a      	str	r2, [r3, #0]
 8009154:	bf00      	nop
 8009156:	46bd      	mov	sp, r7
 8009158:	bc80      	pop	{r7}
 800915a:	4770      	bx	lr
 800915c:	e000e010 	.word	0xe000e010
 8009160:	e000e018 	.word	0xe000e018
 8009164:	20000064 	.word	0x20000064
 8009168:	10624dd3 	.word	0x10624dd3
 800916c:	e000e014 	.word	0xe000e014

08009170 <vPortValidateInterruptPriority>:
 8009170:	b480      	push	{r7}
 8009172:	b085      	sub	sp, #20
 8009174:	af00      	add	r7, sp, #0
 8009176:	f3ef 8305 	mrs	r3, IPSR
 800917a:	60fb      	str	r3, [r7, #12]
 800917c:	68fb      	ldr	r3, [r7, #12]
 800917e:	2b0f      	cmp	r3, #15
 8009180:	d914      	bls.n	80091ac <vPortValidateInterruptPriority+0x3c>
 8009182:	4a16      	ldr	r2, [pc, #88]	; (80091dc <vPortValidateInterruptPriority+0x6c>)
 8009184:	68fb      	ldr	r3, [r7, #12]
 8009186:	4413      	add	r3, r2
 8009188:	781b      	ldrb	r3, [r3, #0]
 800918a:	72fb      	strb	r3, [r7, #11]
 800918c:	4b14      	ldr	r3, [pc, #80]	; (80091e0 <vPortValidateInterruptPriority+0x70>)
 800918e:	781b      	ldrb	r3, [r3, #0]
 8009190:	7afa      	ldrb	r2, [r7, #11]
 8009192:	429a      	cmp	r2, r3
 8009194:	d20a      	bcs.n	80091ac <vPortValidateInterruptPriority+0x3c>
 8009196:	f04f 0350 	mov.w	r3, #80	; 0x50
 800919a:	f383 8811 	msr	BASEPRI, r3
 800919e:	f3bf 8f6f 	isb	sy
 80091a2:	f3bf 8f4f 	dsb	sy
 80091a6:	607b      	str	r3, [r7, #4]
 80091a8:	bf00      	nop
 80091aa:	e7fe      	b.n	80091aa <vPortValidateInterruptPriority+0x3a>
 80091ac:	4b0d      	ldr	r3, [pc, #52]	; (80091e4 <vPortValidateInterruptPriority+0x74>)
 80091ae:	681b      	ldr	r3, [r3, #0]
 80091b0:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
 80091b4:	4b0c      	ldr	r3, [pc, #48]	; (80091e8 <vPortValidateInterruptPriority+0x78>)
 80091b6:	681b      	ldr	r3, [r3, #0]
 80091b8:	429a      	cmp	r2, r3
 80091ba:	d90a      	bls.n	80091d2 <vPortValidateInterruptPriority+0x62>
 80091bc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091c0:	f383 8811 	msr	BASEPRI, r3
 80091c4:	f3bf 8f6f 	isb	sy
 80091c8:	f3bf 8f4f 	dsb	sy
 80091cc:	603b      	str	r3, [r7, #0]
 80091ce:	bf00      	nop
 80091d0:	e7fe      	b.n	80091d0 <vPortValidateInterruptPriority+0x60>
 80091d2:	bf00      	nop
 80091d4:	3714      	adds	r7, #20
 80091d6:	46bd      	mov	sp, r7
 80091d8:	bc80      	pop	{r7}
 80091da:	4770      	bx	lr
 80091dc:	e000e3f0 	.word	0xe000e3f0
 80091e0:	2000139c 	.word	0x2000139c
 80091e4:	e000ed0c 	.word	0xe000ed0c
 80091e8:	200013a0 	.word	0x200013a0

080091ec <pvPortMalloc>:
 80091ec:	b580      	push	{r7, lr}
 80091ee:	b08a      	sub	sp, #40	; 0x28
 80091f0:	af00      	add	r7, sp, #0
 80091f2:	6078      	str	r0, [r7, #4]
 80091f4:	2300      	movs	r3, #0
 80091f6:	61fb      	str	r3, [r7, #28]
 80091f8:	f7fe fd3e 	bl	8007c78 <vTaskSuspendAll>
 80091fc:	4b58      	ldr	r3, [pc, #352]	; (8009360 <pvPortMalloc+0x174>)
 80091fe:	681b      	ldr	r3, [r3, #0]
 8009200:	2b00      	cmp	r3, #0
 8009202:	d101      	bne.n	8009208 <pvPortMalloc+0x1c>
 8009204:	f000 f910 	bl	8009428 <prvHeapInit>
 8009208:	4b56      	ldr	r3, [pc, #344]	; (8009364 <pvPortMalloc+0x178>)
 800920a:	681a      	ldr	r2, [r3, #0]
 800920c:	687b      	ldr	r3, [r7, #4]
 800920e:	4013      	ands	r3, r2
 8009210:	2b00      	cmp	r3, #0
 8009212:	f040 808e 	bne.w	8009332 <pvPortMalloc+0x146>
 8009216:	687b      	ldr	r3, [r7, #4]
 8009218:	2b00      	cmp	r3, #0
 800921a:	d01d      	beq.n	8009258 <pvPortMalloc+0x6c>
 800921c:	2208      	movs	r2, #8
 800921e:	687b      	ldr	r3, [r7, #4]
 8009220:	4413      	add	r3, r2
 8009222:	607b      	str	r3, [r7, #4]
 8009224:	687b      	ldr	r3, [r7, #4]
 8009226:	f003 0307 	and.w	r3, r3, #7
 800922a:	2b00      	cmp	r3, #0
 800922c:	d014      	beq.n	8009258 <pvPortMalloc+0x6c>
 800922e:	687b      	ldr	r3, [r7, #4]
 8009230:	f023 0307 	bic.w	r3, r3, #7
 8009234:	3308      	adds	r3, #8
 8009236:	607b      	str	r3, [r7, #4]
 8009238:	687b      	ldr	r3, [r7, #4]
 800923a:	f003 0307 	and.w	r3, r3, #7
 800923e:	2b00      	cmp	r3, #0
 8009240:	d00a      	beq.n	8009258 <pvPortMalloc+0x6c>
 8009242:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009246:	f383 8811 	msr	BASEPRI, r3
 800924a:	f3bf 8f6f 	isb	sy
 800924e:	f3bf 8f4f 	dsb	sy
 8009252:	617b      	str	r3, [r7, #20]
 8009254:	bf00      	nop
 8009256:	e7fe      	b.n	8009256 <pvPortMalloc+0x6a>
 8009258:	687b      	ldr	r3, [r7, #4]
 800925a:	2b00      	cmp	r3, #0
 800925c:	d069      	beq.n	8009332 <pvPortMalloc+0x146>
 800925e:	4b42      	ldr	r3, [pc, #264]	; (8009368 <pvPortMalloc+0x17c>)
 8009260:	681b      	ldr	r3, [r3, #0]
 8009262:	687a      	ldr	r2, [r7, #4]
 8009264:	429a      	cmp	r2, r3
 8009266:	d864      	bhi.n	8009332 <pvPortMalloc+0x146>
 8009268:	4b40      	ldr	r3, [pc, #256]	; (800936c <pvPortMalloc+0x180>)
 800926a:	623b      	str	r3, [r7, #32]
 800926c:	4b3f      	ldr	r3, [pc, #252]	; (800936c <pvPortMalloc+0x180>)
 800926e:	681b      	ldr	r3, [r3, #0]
 8009270:	627b      	str	r3, [r7, #36]	; 0x24
 8009272:	e004      	b.n	800927e <pvPortMalloc+0x92>
 8009274:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009276:	623b      	str	r3, [r7, #32]
 8009278:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800927a:	681b      	ldr	r3, [r3, #0]
 800927c:	627b      	str	r3, [r7, #36]	; 0x24
 800927e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009280:	685b      	ldr	r3, [r3, #4]
 8009282:	687a      	ldr	r2, [r7, #4]
 8009284:	429a      	cmp	r2, r3
 8009286:	d903      	bls.n	8009290 <pvPortMalloc+0xa4>
 8009288:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800928a:	681b      	ldr	r3, [r3, #0]
 800928c:	2b00      	cmp	r3, #0
 800928e:	d1f1      	bne.n	8009274 <pvPortMalloc+0x88>
 8009290:	4b33      	ldr	r3, [pc, #204]	; (8009360 <pvPortMalloc+0x174>)
 8009292:	681b      	ldr	r3, [r3, #0]
 8009294:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8009296:	429a      	cmp	r2, r3
 8009298:	d04b      	beq.n	8009332 <pvPortMalloc+0x146>
 800929a:	6a3b      	ldr	r3, [r7, #32]
 800929c:	681b      	ldr	r3, [r3, #0]
 800929e:	2208      	movs	r2, #8
 80092a0:	4413      	add	r3, r2
 80092a2:	61fb      	str	r3, [r7, #28]
 80092a4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80092a6:	681a      	ldr	r2, [r3, #0]
 80092a8:	6a3b      	ldr	r3, [r7, #32]
 80092aa:	601a      	str	r2, [r3, #0]
 80092ac:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80092ae:	685a      	ldr	r2, [r3, #4]
 80092b0:	687b      	ldr	r3, [r7, #4]
 80092b2:	1ad2      	subs	r2, r2, r3
 80092b4:	2308      	movs	r3, #8
 80092b6:	005b      	lsls	r3, r3, #1
 80092b8:	429a      	cmp	r2, r3
 80092ba:	d91f      	bls.n	80092fc <pvPortMalloc+0x110>
 80092bc:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80092be:	687b      	ldr	r3, [r7, #4]
 80092c0:	4413      	add	r3, r2
 80092c2:	61bb      	str	r3, [r7, #24]
 80092c4:	69bb      	ldr	r3, [r7, #24]
 80092c6:	f003 0307 	and.w	r3, r3, #7
 80092ca:	2b00      	cmp	r3, #0
 80092cc:	d00a      	beq.n	80092e4 <pvPortMalloc+0xf8>
 80092ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 80092d2:	f383 8811 	msr	BASEPRI, r3
 80092d6:	f3bf 8f6f 	isb	sy
 80092da:	f3bf 8f4f 	dsb	sy
 80092de:	613b      	str	r3, [r7, #16]
 80092e0:	bf00      	nop
 80092e2:	e7fe      	b.n	80092e2 <pvPortMalloc+0xf6>
 80092e4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80092e6:	685a      	ldr	r2, [r3, #4]
 80092e8:	687b      	ldr	r3, [r7, #4]
 80092ea:	1ad2      	subs	r2, r2, r3
 80092ec:	69bb      	ldr	r3, [r7, #24]
 80092ee:	605a      	str	r2, [r3, #4]
 80092f0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80092f2:	687a      	ldr	r2, [r7, #4]
 80092f4:	605a      	str	r2, [r3, #4]
 80092f6:	69b8      	ldr	r0, [r7, #24]
 80092f8:	f000 f8f8 	bl	80094ec <prvInsertBlockIntoFreeList>
 80092fc:	4b1a      	ldr	r3, [pc, #104]	; (8009368 <pvPortMalloc+0x17c>)
 80092fe:	681a      	ldr	r2, [r3, #0]
 8009300:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009302:	685b      	ldr	r3, [r3, #4]
 8009304:	1ad3      	subs	r3, r2, r3
 8009306:	4a18      	ldr	r2, [pc, #96]	; (8009368 <pvPortMalloc+0x17c>)
 8009308:	6013      	str	r3, [r2, #0]
 800930a:	4b17      	ldr	r3, [pc, #92]	; (8009368 <pvPortMalloc+0x17c>)
 800930c:	681a      	ldr	r2, [r3, #0]
 800930e:	4b18      	ldr	r3, [pc, #96]	; (8009370 <pvPortMalloc+0x184>)
 8009310:	681b      	ldr	r3, [r3, #0]
 8009312:	429a      	cmp	r2, r3
 8009314:	d203      	bcs.n	800931e <pvPortMalloc+0x132>
 8009316:	4b14      	ldr	r3, [pc, #80]	; (8009368 <pvPortMalloc+0x17c>)
 8009318:	681b      	ldr	r3, [r3, #0]
 800931a:	4a15      	ldr	r2, [pc, #84]	; (8009370 <pvPortMalloc+0x184>)
 800931c:	6013      	str	r3, [r2, #0]
 800931e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009320:	685a      	ldr	r2, [r3, #4]
 8009322:	4b10      	ldr	r3, [pc, #64]	; (8009364 <pvPortMalloc+0x178>)
 8009324:	681b      	ldr	r3, [r3, #0]
 8009326:	431a      	orrs	r2, r3
 8009328:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800932a:	605a      	str	r2, [r3, #4]
 800932c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800932e:	2200      	movs	r2, #0
 8009330:	601a      	str	r2, [r3, #0]
 8009332:	f7fe fcaf 	bl	8007c94 <xTaskResumeAll>
 8009336:	69fb      	ldr	r3, [r7, #28]
 8009338:	f003 0307 	and.w	r3, r3, #7
 800933c:	2b00      	cmp	r3, #0
 800933e:	d00a      	beq.n	8009356 <pvPortMalloc+0x16a>
 8009340:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009344:	f383 8811 	msr	BASEPRI, r3
 8009348:	f3bf 8f6f 	isb	sy
 800934c:	f3bf 8f4f 	dsb	sy
 8009350:	60fb      	str	r3, [r7, #12]
 8009352:	bf00      	nop
 8009354:	e7fe      	b.n	8009354 <pvPortMalloc+0x168>
 8009356:	69fb      	ldr	r3, [r7, #28]
 8009358:	4618      	mov	r0, r3
 800935a:	3728      	adds	r7, #40	; 0x28
 800935c:	46bd      	mov	sp, r7
 800935e:	bd80      	pop	{r7, pc}
 8009360:	200023ac 	.word	0x200023ac
 8009364:	200023b8 	.word	0x200023b8
 8009368:	200023b0 	.word	0x200023b0
 800936c:	200023a4 	.word	0x200023a4
 8009370:	200023b4 	.word	0x200023b4

08009374 <vPortFree>:
 8009374:	b580      	push	{r7, lr}
 8009376:	b086      	sub	sp, #24
 8009378:	af00      	add	r7, sp, #0
 800937a:	6078      	str	r0, [r7, #4]
 800937c:	687b      	ldr	r3, [r7, #4]
 800937e:	617b      	str	r3, [r7, #20]
 8009380:	687b      	ldr	r3, [r7, #4]
 8009382:	2b00      	cmp	r3, #0
 8009384:	d048      	beq.n	8009418 <vPortFree+0xa4>
 8009386:	2308      	movs	r3, #8
 8009388:	425b      	negs	r3, r3
 800938a:	697a      	ldr	r2, [r7, #20]
 800938c:	4413      	add	r3, r2
 800938e:	617b      	str	r3, [r7, #20]
 8009390:	697b      	ldr	r3, [r7, #20]
 8009392:	613b      	str	r3, [r7, #16]
 8009394:	693b      	ldr	r3, [r7, #16]
 8009396:	685a      	ldr	r2, [r3, #4]
 8009398:	4b21      	ldr	r3, [pc, #132]	; (8009420 <vPortFree+0xac>)
 800939a:	681b      	ldr	r3, [r3, #0]
 800939c:	4013      	ands	r3, r2
 800939e:	2b00      	cmp	r3, #0
 80093a0:	d10a      	bne.n	80093b8 <vPortFree+0x44>
 80093a2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80093a6:	f383 8811 	msr	BASEPRI, r3
 80093aa:	f3bf 8f6f 	isb	sy
 80093ae:	f3bf 8f4f 	dsb	sy
 80093b2:	60fb      	str	r3, [r7, #12]
 80093b4:	bf00      	nop
 80093b6:	e7fe      	b.n	80093b6 <vPortFree+0x42>
 80093b8:	693b      	ldr	r3, [r7, #16]
 80093ba:	681b      	ldr	r3, [r3, #0]
 80093bc:	2b00      	cmp	r3, #0
 80093be:	d00a      	beq.n	80093d6 <vPortFree+0x62>
 80093c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80093c4:	f383 8811 	msr	BASEPRI, r3
 80093c8:	f3bf 8f6f 	isb	sy
 80093cc:	f3bf 8f4f 	dsb	sy
 80093d0:	60bb      	str	r3, [r7, #8]
 80093d2:	bf00      	nop
 80093d4:	e7fe      	b.n	80093d4 <vPortFree+0x60>
 80093d6:	693b      	ldr	r3, [r7, #16]
 80093d8:	685a      	ldr	r2, [r3, #4]
 80093da:	4b11      	ldr	r3, [pc, #68]	; (8009420 <vPortFree+0xac>)
 80093dc:	681b      	ldr	r3, [r3, #0]
 80093de:	4013      	ands	r3, r2
 80093e0:	2b00      	cmp	r3, #0
 80093e2:	d019      	beq.n	8009418 <vPortFree+0xa4>
 80093e4:	693b      	ldr	r3, [r7, #16]
 80093e6:	681b      	ldr	r3, [r3, #0]
 80093e8:	2b00      	cmp	r3, #0
 80093ea:	d115      	bne.n	8009418 <vPortFree+0xa4>
 80093ec:	693b      	ldr	r3, [r7, #16]
 80093ee:	685a      	ldr	r2, [r3, #4]
 80093f0:	4b0b      	ldr	r3, [pc, #44]	; (8009420 <vPortFree+0xac>)
 80093f2:	681b      	ldr	r3, [r3, #0]
 80093f4:	43db      	mvns	r3, r3
 80093f6:	401a      	ands	r2, r3
 80093f8:	693b      	ldr	r3, [r7, #16]
 80093fa:	605a      	str	r2, [r3, #4]
 80093fc:	f7fe fc3c 	bl	8007c78 <vTaskSuspendAll>
 8009400:	693b      	ldr	r3, [r7, #16]
 8009402:	685a      	ldr	r2, [r3, #4]
 8009404:	4b07      	ldr	r3, [pc, #28]	; (8009424 <vPortFree+0xb0>)
 8009406:	681b      	ldr	r3, [r3, #0]
 8009408:	4413      	add	r3, r2
 800940a:	4a06      	ldr	r2, [pc, #24]	; (8009424 <vPortFree+0xb0>)
 800940c:	6013      	str	r3, [r2, #0]
 800940e:	6938      	ldr	r0, [r7, #16]
 8009410:	f000 f86c 	bl	80094ec <prvInsertBlockIntoFreeList>
 8009414:	f7fe fc3e 	bl	8007c94 <xTaskResumeAll>
 8009418:	bf00      	nop
 800941a:	3718      	adds	r7, #24
 800941c:	46bd      	mov	sp, r7
 800941e:	bd80      	pop	{r7, pc}
 8009420:	200023b8 	.word	0x200023b8
 8009424:	200023b0 	.word	0x200023b0

08009428 <prvHeapInit>:
 8009428:	b480      	push	{r7}
 800942a:	b085      	sub	sp, #20
 800942c:	af00      	add	r7, sp, #0
 800942e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8009432:	60bb      	str	r3, [r7, #8]
 8009434:	4b27      	ldr	r3, [pc, #156]	; (80094d4 <prvHeapInit+0xac>)
 8009436:	60fb      	str	r3, [r7, #12]
 8009438:	68fb      	ldr	r3, [r7, #12]
 800943a:	f003 0307 	and.w	r3, r3, #7
 800943e:	2b00      	cmp	r3, #0
 8009440:	d00c      	beq.n	800945c <prvHeapInit+0x34>
 8009442:	68fb      	ldr	r3, [r7, #12]
 8009444:	3307      	adds	r3, #7
 8009446:	60fb      	str	r3, [r7, #12]
 8009448:	68fb      	ldr	r3, [r7, #12]
 800944a:	f023 0307 	bic.w	r3, r3, #7
 800944e:	60fb      	str	r3, [r7, #12]
 8009450:	68ba      	ldr	r2, [r7, #8]
 8009452:	68fb      	ldr	r3, [r7, #12]
 8009454:	1ad3      	subs	r3, r2, r3
 8009456:	4a1f      	ldr	r2, [pc, #124]	; (80094d4 <prvHeapInit+0xac>)
 8009458:	4413      	add	r3, r2
 800945a:	60bb      	str	r3, [r7, #8]
 800945c:	68fb      	ldr	r3, [r7, #12]
 800945e:	607b      	str	r3, [r7, #4]
 8009460:	4a1d      	ldr	r2, [pc, #116]	; (80094d8 <prvHeapInit+0xb0>)
 8009462:	687b      	ldr	r3, [r7, #4]
 8009464:	6013      	str	r3, [r2, #0]
 8009466:	4b1c      	ldr	r3, [pc, #112]	; (80094d8 <prvHeapInit+0xb0>)
 8009468:	2200      	movs	r2, #0
 800946a:	605a      	str	r2, [r3, #4]
 800946c:	687b      	ldr	r3, [r7, #4]
 800946e:	68ba      	ldr	r2, [r7, #8]
 8009470:	4413      	add	r3, r2
 8009472:	60fb      	str	r3, [r7, #12]
 8009474:	2208      	movs	r2, #8
 8009476:	68fb      	ldr	r3, [r7, #12]
 8009478:	1a9b      	subs	r3, r3, r2
 800947a:	60fb      	str	r3, [r7, #12]
 800947c:	68fb      	ldr	r3, [r7, #12]
 800947e:	f023 0307 	bic.w	r3, r3, #7
 8009482:	60fb      	str	r3, [r7, #12]
 8009484:	68fb      	ldr	r3, [r7, #12]
 8009486:	4a15      	ldr	r2, [pc, #84]	; (80094dc <prvHeapInit+0xb4>)
 8009488:	6013      	str	r3, [r2, #0]
 800948a:	4b14      	ldr	r3, [pc, #80]	; (80094dc <prvHeapInit+0xb4>)
 800948c:	681b      	ldr	r3, [r3, #0]
 800948e:	2200      	movs	r2, #0
 8009490:	605a      	str	r2, [r3, #4]
 8009492:	4b12      	ldr	r3, [pc, #72]	; (80094dc <prvHeapInit+0xb4>)
 8009494:	681b      	ldr	r3, [r3, #0]
 8009496:	2200      	movs	r2, #0
 8009498:	601a      	str	r2, [r3, #0]
 800949a:	687b      	ldr	r3, [r7, #4]
 800949c:	603b      	str	r3, [r7, #0]
 800949e:	683b      	ldr	r3, [r7, #0]
 80094a0:	68fa      	ldr	r2, [r7, #12]
 80094a2:	1ad2      	subs	r2, r2, r3
 80094a4:	683b      	ldr	r3, [r7, #0]
 80094a6:	605a      	str	r2, [r3, #4]
 80094a8:	4b0c      	ldr	r3, [pc, #48]	; (80094dc <prvHeapInit+0xb4>)
 80094aa:	681a      	ldr	r2, [r3, #0]
 80094ac:	683b      	ldr	r3, [r7, #0]
 80094ae:	601a      	str	r2, [r3, #0]
 80094b0:	683b      	ldr	r3, [r7, #0]
 80094b2:	685b      	ldr	r3, [r3, #4]
 80094b4:	4a0a      	ldr	r2, [pc, #40]	; (80094e0 <prvHeapInit+0xb8>)
 80094b6:	6013      	str	r3, [r2, #0]
 80094b8:	683b      	ldr	r3, [r7, #0]
 80094ba:	685b      	ldr	r3, [r3, #4]
 80094bc:	4a09      	ldr	r2, [pc, #36]	; (80094e4 <prvHeapInit+0xbc>)
 80094be:	6013      	str	r3, [r2, #0]
 80094c0:	4b09      	ldr	r3, [pc, #36]	; (80094e8 <prvHeapInit+0xc0>)
 80094c2:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 80094c6:	601a      	str	r2, [r3, #0]
 80094c8:	bf00      	nop
 80094ca:	3714      	adds	r7, #20
 80094cc:	46bd      	mov	sp, r7
 80094ce:	bc80      	pop	{r7}
 80094d0:	4770      	bx	lr
 80094d2:	bf00      	nop
 80094d4:	200013a4 	.word	0x200013a4
 80094d8:	200023a4 	.word	0x200023a4
 80094dc:	200023ac 	.word	0x200023ac
 80094e0:	200023b4 	.word	0x200023b4
 80094e4:	200023b0 	.word	0x200023b0
 80094e8:	200023b8 	.word	0x200023b8

080094ec <prvInsertBlockIntoFreeList>:
 80094ec:	b480      	push	{r7}
 80094ee:	b085      	sub	sp, #20
 80094f0:	af00      	add	r7, sp, #0
 80094f2:	6078      	str	r0, [r7, #4]
 80094f4:	4b27      	ldr	r3, [pc, #156]	; (8009594 <prvInsertBlockIntoFreeList+0xa8>)
 80094f6:	60fb      	str	r3, [r7, #12]
 80094f8:	e002      	b.n	8009500 <prvInsertBlockIntoFreeList+0x14>
 80094fa:	68fb      	ldr	r3, [r7, #12]
 80094fc:	681b      	ldr	r3, [r3, #0]
 80094fe:	60fb      	str	r3, [r7, #12]
 8009500:	68fb      	ldr	r3, [r7, #12]
 8009502:	681b      	ldr	r3, [r3, #0]
 8009504:	687a      	ldr	r2, [r7, #4]
 8009506:	429a      	cmp	r2, r3
 8009508:	d8f7      	bhi.n	80094fa <prvInsertBlockIntoFreeList+0xe>
 800950a:	68fb      	ldr	r3, [r7, #12]
 800950c:	60bb      	str	r3, [r7, #8]
 800950e:	68fb      	ldr	r3, [r7, #12]
 8009510:	685b      	ldr	r3, [r3, #4]
 8009512:	68ba      	ldr	r2, [r7, #8]
 8009514:	4413      	add	r3, r2
 8009516:	687a      	ldr	r2, [r7, #4]
 8009518:	429a      	cmp	r2, r3
 800951a:	d108      	bne.n	800952e <prvInsertBlockIntoFreeList+0x42>
 800951c:	68fb      	ldr	r3, [r7, #12]
 800951e:	685a      	ldr	r2, [r3, #4]
 8009520:	687b      	ldr	r3, [r7, #4]
 8009522:	685b      	ldr	r3, [r3, #4]
 8009524:	441a      	add	r2, r3
 8009526:	68fb      	ldr	r3, [r7, #12]
 8009528:	605a      	str	r2, [r3, #4]
 800952a:	68fb      	ldr	r3, [r7, #12]
 800952c:	607b      	str	r3, [r7, #4]
 800952e:	687b      	ldr	r3, [r7, #4]
 8009530:	60bb      	str	r3, [r7, #8]
 8009532:	687b      	ldr	r3, [r7, #4]
 8009534:	685b      	ldr	r3, [r3, #4]
 8009536:	68ba      	ldr	r2, [r7, #8]
 8009538:	441a      	add	r2, r3
 800953a:	68fb      	ldr	r3, [r7, #12]
 800953c:	681b      	ldr	r3, [r3, #0]
 800953e:	429a      	cmp	r2, r3
 8009540:	d118      	bne.n	8009574 <prvInsertBlockIntoFreeList+0x88>
 8009542:	68fb      	ldr	r3, [r7, #12]
 8009544:	681a      	ldr	r2, [r3, #0]
 8009546:	4b14      	ldr	r3, [pc, #80]	; (8009598 <prvInsertBlockIntoFreeList+0xac>)
 8009548:	681b      	ldr	r3, [r3, #0]
 800954a:	429a      	cmp	r2, r3
 800954c:	d00d      	beq.n	800956a <prvInsertBlockIntoFreeList+0x7e>
 800954e:	687b      	ldr	r3, [r7, #4]
 8009550:	685a      	ldr	r2, [r3, #4]
 8009552:	68fb      	ldr	r3, [r7, #12]
 8009554:	681b      	ldr	r3, [r3, #0]
 8009556:	685b      	ldr	r3, [r3, #4]
 8009558:	441a      	add	r2, r3
 800955a:	687b      	ldr	r3, [r7, #4]
 800955c:	605a      	str	r2, [r3, #4]
 800955e:	68fb      	ldr	r3, [r7, #12]
 8009560:	681b      	ldr	r3, [r3, #0]
 8009562:	681a      	ldr	r2, [r3, #0]
 8009564:	687b      	ldr	r3, [r7, #4]
 8009566:	601a      	str	r2, [r3, #0]
 8009568:	e008      	b.n	800957c <prvInsertBlockIntoFreeList+0x90>
 800956a:	4b0b      	ldr	r3, [pc, #44]	; (8009598 <prvInsertBlockIntoFreeList+0xac>)
 800956c:	681a      	ldr	r2, [r3, #0]
 800956e:	687b      	ldr	r3, [r7, #4]
 8009570:	601a      	str	r2, [r3, #0]
 8009572:	e003      	b.n	800957c <prvInsertBlockIntoFreeList+0x90>
 8009574:	68fb      	ldr	r3, [r7, #12]
 8009576:	681a      	ldr	r2, [r3, #0]
 8009578:	687b      	ldr	r3, [r7, #4]
 800957a:	601a      	str	r2, [r3, #0]
 800957c:	68fa      	ldr	r2, [r7, #12]
 800957e:	687b      	ldr	r3, [r7, #4]
 8009580:	429a      	cmp	r2, r3
 8009582:	d002      	beq.n	800958a <prvInsertBlockIntoFreeList+0x9e>
 8009584:	68fb      	ldr	r3, [r7, #12]
 8009586:	687a      	ldr	r2, [r7, #4]
 8009588:	601a      	str	r2, [r3, #0]
 800958a:	bf00      	nop
 800958c:	3714      	adds	r7, #20
 800958e:	46bd      	mov	sp, r7
 8009590:	bc80      	pop	{r7}
 8009592:	4770      	bx	lr
 8009594:	200023a4 	.word	0x200023a4
 8009598:	200023ac 	.word	0x200023ac

0800959c <__cvt>:
 800959c:	2b00      	cmp	r3, #0
 800959e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80095a2:	461f      	mov	r7, r3
 80095a4:	bfbb      	ittet	lt
 80095a6:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
 80095aa:	461f      	movlt	r7, r3
 80095ac:	2300      	movge	r3, #0
 80095ae:	232d      	movlt	r3, #45	; 0x2d
 80095b0:	b088      	sub	sp, #32
 80095b2:	4614      	mov	r4, r2
 80095b4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80095b6:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80095b8:	7013      	strb	r3, [r2, #0]
 80095ba:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80095bc:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
 80095c0:	f023 0820 	bic.w	r8, r3, #32
 80095c4:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 80095c8:	d005      	beq.n	80095d6 <__cvt+0x3a>
 80095ca:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 80095ce:	d100      	bne.n	80095d2 <__cvt+0x36>
 80095d0:	3501      	adds	r5, #1
 80095d2:	2302      	movs	r3, #2
 80095d4:	e000      	b.n	80095d8 <__cvt+0x3c>
 80095d6:	2303      	movs	r3, #3
 80095d8:	aa07      	add	r2, sp, #28
 80095da:	9204      	str	r2, [sp, #16]
 80095dc:	aa06      	add	r2, sp, #24
 80095de:	e9cd a202 	strd	sl, r2, [sp, #8]
 80095e2:	e9cd 3500 	strd	r3, r5, [sp]
 80095e6:	4622      	mov	r2, r4
 80095e8:	463b      	mov	r3, r7
 80095ea:	f000 fe81 	bl	800a2f0 <_dtoa_r>
 80095ee:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 80095f2:	4606      	mov	r6, r0
 80095f4:	d102      	bne.n	80095fc <__cvt+0x60>
 80095f6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80095f8:	07db      	lsls	r3, r3, #31
 80095fa:	d522      	bpl.n	8009642 <__cvt+0xa6>
 80095fc:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8009600:	eb06 0905 	add.w	r9, r6, r5
 8009604:	d110      	bne.n	8009628 <__cvt+0x8c>
 8009606:	7833      	ldrb	r3, [r6, #0]
 8009608:	2b30      	cmp	r3, #48	; 0x30
 800960a:	d10a      	bne.n	8009622 <__cvt+0x86>
 800960c:	2200      	movs	r2, #0
 800960e:	2300      	movs	r3, #0
 8009610:	4620      	mov	r0, r4
 8009612:	4639      	mov	r1, r7
 8009614:	f7f7 fa38 	bl	8000a88 <__aeabi_dcmpeq>
 8009618:	b918      	cbnz	r0, 8009622 <__cvt+0x86>
 800961a:	f1c5 0501 	rsb	r5, r5, #1
 800961e:	f8ca 5000 	str.w	r5, [sl]
 8009622:	f8da 3000 	ldr.w	r3, [sl]
 8009626:	4499      	add	r9, r3
 8009628:	2200      	movs	r2, #0
 800962a:	2300      	movs	r3, #0
 800962c:	4620      	mov	r0, r4
 800962e:	4639      	mov	r1, r7
 8009630:	f7f7 fa2a 	bl	8000a88 <__aeabi_dcmpeq>
 8009634:	b108      	cbz	r0, 800963a <__cvt+0x9e>
 8009636:	f8cd 901c 	str.w	r9, [sp, #28]
 800963a:	2230      	movs	r2, #48	; 0x30
 800963c:	9b07      	ldr	r3, [sp, #28]
 800963e:	454b      	cmp	r3, r9
 8009640:	d307      	bcc.n	8009652 <__cvt+0xb6>
 8009642:	4630      	mov	r0, r6
 8009644:	9b07      	ldr	r3, [sp, #28]
 8009646:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8009648:	1b9b      	subs	r3, r3, r6
 800964a:	6013      	str	r3, [r2, #0]
 800964c:	b008      	add	sp, #32
 800964e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009652:	1c59      	adds	r1, r3, #1
 8009654:	9107      	str	r1, [sp, #28]
 8009656:	701a      	strb	r2, [r3, #0]
 8009658:	e7f0      	b.n	800963c <__cvt+0xa0>

0800965a <__exponent>:
 800965a:	4603      	mov	r3, r0
 800965c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800965e:	2900      	cmp	r1, #0
 8009660:	f803 2b02 	strb.w	r2, [r3], #2
 8009664:	bfb6      	itet	lt
 8009666:	222d      	movlt	r2, #45	; 0x2d
 8009668:	222b      	movge	r2, #43	; 0x2b
 800966a:	4249      	neglt	r1, r1
 800966c:	2909      	cmp	r1, #9
 800966e:	7042      	strb	r2, [r0, #1]
 8009670:	dd2a      	ble.n	80096c8 <__exponent+0x6e>
 8009672:	f10d 0207 	add.w	r2, sp, #7
 8009676:	4617      	mov	r7, r2
 8009678:	260a      	movs	r6, #10
 800967a:	fb91 f5f6 	sdiv	r5, r1, r6
 800967e:	4694      	mov	ip, r2
 8009680:	fb06 1415 	mls	r4, r6, r5, r1
 8009684:	3430      	adds	r4, #48	; 0x30
 8009686:	f80c 4c01 	strb.w	r4, [ip, #-1]
 800968a:	460c      	mov	r4, r1
 800968c:	2c63      	cmp	r4, #99	; 0x63
 800968e:	4629      	mov	r1, r5
 8009690:	f102 32ff 	add.w	r2, r2, #4294967295
 8009694:	dcf1      	bgt.n	800967a <__exponent+0x20>
 8009696:	3130      	adds	r1, #48	; 0x30
 8009698:	f1ac 0402 	sub.w	r4, ip, #2
 800969c:	f802 1c01 	strb.w	r1, [r2, #-1]
 80096a0:	4622      	mov	r2, r4
 80096a2:	1c41      	adds	r1, r0, #1
 80096a4:	42ba      	cmp	r2, r7
 80096a6:	d30a      	bcc.n	80096be <__exponent+0x64>
 80096a8:	f10d 0209 	add.w	r2, sp, #9
 80096ac:	eba2 020c 	sub.w	r2, r2, ip
 80096b0:	42bc      	cmp	r4, r7
 80096b2:	bf88      	it	hi
 80096b4:	2200      	movhi	r2, #0
 80096b6:	4413      	add	r3, r2
 80096b8:	1a18      	subs	r0, r3, r0
 80096ba:	b003      	add	sp, #12
 80096bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80096be:	f812 5b01 	ldrb.w	r5, [r2], #1
 80096c2:	f801 5f01 	strb.w	r5, [r1, #1]!
 80096c6:	e7ed      	b.n	80096a4 <__exponent+0x4a>
 80096c8:	2330      	movs	r3, #48	; 0x30
 80096ca:	3130      	adds	r1, #48	; 0x30
 80096cc:	7083      	strb	r3, [r0, #2]
 80096ce:	70c1      	strb	r1, [r0, #3]
 80096d0:	1d03      	adds	r3, r0, #4
 80096d2:	e7f1      	b.n	80096b8 <__exponent+0x5e>

080096d4 <_printf_float>:
 80096d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80096d8:	b091      	sub	sp, #68	; 0x44
 80096da:	460c      	mov	r4, r1
 80096dc:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 80096e0:	4616      	mov	r6, r2
 80096e2:	461f      	mov	r7, r3
 80096e4:	4605      	mov	r5, r0
 80096e6:	f000 fce5 	bl	800a0b4 <_localeconv_r>
 80096ea:	6803      	ldr	r3, [r0, #0]
 80096ec:	4618      	mov	r0, r3
 80096ee:	9309      	str	r3, [sp, #36]	; 0x24
 80096f0:	f7f6 fd9e 	bl	8000230 <strlen>
 80096f4:	2300      	movs	r3, #0
 80096f6:	930e      	str	r3, [sp, #56]	; 0x38
 80096f8:	f8d8 3000 	ldr.w	r3, [r8]
 80096fc:	900a      	str	r0, [sp, #40]	; 0x28
 80096fe:	3307      	adds	r3, #7
 8009700:	f023 0307 	bic.w	r3, r3, #7
 8009704:	f103 0208 	add.w	r2, r3, #8
 8009708:	f894 9018 	ldrb.w	r9, [r4, #24]
 800970c:	f8d4 b000 	ldr.w	fp, [r4]
 8009710:	f8c8 2000 	str.w	r2, [r8]
 8009714:	e9d3 a800 	ldrd	sl, r8, [r3]
 8009718:	4652      	mov	r2, sl
 800971a:	4643      	mov	r3, r8
 800971c:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 8009720:	f028 4300 	bic.w	r3, r8, #2147483648	; 0x80000000
 8009724:	930b      	str	r3, [sp, #44]	; 0x2c
 8009726:	f04f 32ff 	mov.w	r2, #4294967295
 800972a:	4650      	mov	r0, sl
 800972c:	4b9c      	ldr	r3, [pc, #624]	; (80099a0 <_printf_float+0x2cc>)
 800972e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8009730:	f7f7 f9dc 	bl	8000aec <__aeabi_dcmpun>
 8009734:	bb70      	cbnz	r0, 8009794 <_printf_float+0xc0>
 8009736:	f04f 32ff 	mov.w	r2, #4294967295
 800973a:	4650      	mov	r0, sl
 800973c:	4b98      	ldr	r3, [pc, #608]	; (80099a0 <_printf_float+0x2cc>)
 800973e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8009740:	f7f7 f9b6 	bl	8000ab0 <__aeabi_dcmple>
 8009744:	bb30      	cbnz	r0, 8009794 <_printf_float+0xc0>
 8009746:	2200      	movs	r2, #0
 8009748:	2300      	movs	r3, #0
 800974a:	4650      	mov	r0, sl
 800974c:	4641      	mov	r1, r8
 800974e:	f7f7 f9a5 	bl	8000a9c <__aeabi_dcmplt>
 8009752:	b110      	cbz	r0, 800975a <_printf_float+0x86>
 8009754:	232d      	movs	r3, #45	; 0x2d
 8009756:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800975a:	4a92      	ldr	r2, [pc, #584]	; (80099a4 <_printf_float+0x2d0>)
 800975c:	4b92      	ldr	r3, [pc, #584]	; (80099a8 <_printf_float+0x2d4>)
 800975e:	f1b9 0f47 	cmp.w	r9, #71	; 0x47
 8009762:	bf94      	ite	ls
 8009764:	4690      	movls	r8, r2
 8009766:	4698      	movhi	r8, r3
 8009768:	2303      	movs	r3, #3
 800976a:	f04f 0a00 	mov.w	sl, #0
 800976e:	6123      	str	r3, [r4, #16]
 8009770:	f02b 0304 	bic.w	r3, fp, #4
 8009774:	6023      	str	r3, [r4, #0]
 8009776:	4633      	mov	r3, r6
 8009778:	4621      	mov	r1, r4
 800977a:	4628      	mov	r0, r5
 800977c:	9700      	str	r7, [sp, #0]
 800977e:	aa0f      	add	r2, sp, #60	; 0x3c
 8009780:	f000 f9d6 	bl	8009b30 <_printf_common>
 8009784:	3001      	adds	r0, #1
 8009786:	f040 8090 	bne.w	80098aa <_printf_float+0x1d6>
 800978a:	f04f 30ff 	mov.w	r0, #4294967295
 800978e:	b011      	add	sp, #68	; 0x44
 8009790:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009794:	4652      	mov	r2, sl
 8009796:	4643      	mov	r3, r8
 8009798:	4650      	mov	r0, sl
 800979a:	4641      	mov	r1, r8
 800979c:	f7f7 f9a6 	bl	8000aec <__aeabi_dcmpun>
 80097a0:	b148      	cbz	r0, 80097b6 <_printf_float+0xe2>
 80097a2:	f1b8 0f00 	cmp.w	r8, #0
 80097a6:	bfb8      	it	lt
 80097a8:	232d      	movlt	r3, #45	; 0x2d
 80097aa:	4a80      	ldr	r2, [pc, #512]	; (80099ac <_printf_float+0x2d8>)
 80097ac:	bfb8      	it	lt
 80097ae:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 80097b2:	4b7f      	ldr	r3, [pc, #508]	; (80099b0 <_printf_float+0x2dc>)
 80097b4:	e7d3      	b.n	800975e <_printf_float+0x8a>
 80097b6:	6863      	ldr	r3, [r4, #4]
 80097b8:	f009 01df 	and.w	r1, r9, #223	; 0xdf
 80097bc:	1c5a      	adds	r2, r3, #1
 80097be:	d142      	bne.n	8009846 <_printf_float+0x172>
 80097c0:	2306      	movs	r3, #6
 80097c2:	6063      	str	r3, [r4, #4]
 80097c4:	2200      	movs	r2, #0
 80097c6:	9206      	str	r2, [sp, #24]
 80097c8:	aa0e      	add	r2, sp, #56	; 0x38
 80097ca:	e9cd 9204 	strd	r9, r2, [sp, #16]
 80097ce:	aa0d      	add	r2, sp, #52	; 0x34
 80097d0:	f44b 6380 	orr.w	r3, fp, #1024	; 0x400
 80097d4:	9203      	str	r2, [sp, #12]
 80097d6:	f10d 0233 	add.w	r2, sp, #51	; 0x33
 80097da:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80097de:	6023      	str	r3, [r4, #0]
 80097e0:	6863      	ldr	r3, [r4, #4]
 80097e2:	4652      	mov	r2, sl
 80097e4:	9300      	str	r3, [sp, #0]
 80097e6:	4628      	mov	r0, r5
 80097e8:	4643      	mov	r3, r8
 80097ea:	910b      	str	r1, [sp, #44]	; 0x2c
 80097ec:	f7ff fed6 	bl	800959c <__cvt>
 80097f0:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80097f2:	4680      	mov	r8, r0
 80097f4:	2947      	cmp	r1, #71	; 0x47
 80097f6:	990d      	ldr	r1, [sp, #52]	; 0x34
 80097f8:	d108      	bne.n	800980c <_printf_float+0x138>
 80097fa:	1cc8      	adds	r0, r1, #3
 80097fc:	db02      	blt.n	8009804 <_printf_float+0x130>
 80097fe:	6863      	ldr	r3, [r4, #4]
 8009800:	4299      	cmp	r1, r3
 8009802:	dd40      	ble.n	8009886 <_printf_float+0x1b2>
 8009804:	f1a9 0902 	sub.w	r9, r9, #2
 8009808:	fa5f f989 	uxtb.w	r9, r9
 800980c:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 8009810:	d81f      	bhi.n	8009852 <_printf_float+0x17e>
 8009812:	464a      	mov	r2, r9
 8009814:	3901      	subs	r1, #1
 8009816:	f104 0050 	add.w	r0, r4, #80	; 0x50
 800981a:	910d      	str	r1, [sp, #52]	; 0x34
 800981c:	f7ff ff1d 	bl	800965a <__exponent>
 8009820:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8009822:	4682      	mov	sl, r0
 8009824:	1813      	adds	r3, r2, r0
 8009826:	2a01      	cmp	r2, #1
 8009828:	6123      	str	r3, [r4, #16]
 800982a:	dc02      	bgt.n	8009832 <_printf_float+0x15e>
 800982c:	6822      	ldr	r2, [r4, #0]
 800982e:	07d2      	lsls	r2, r2, #31
 8009830:	d501      	bpl.n	8009836 <_printf_float+0x162>
 8009832:	3301      	adds	r3, #1
 8009834:	6123      	str	r3, [r4, #16]
 8009836:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
 800983a:	2b00      	cmp	r3, #0
 800983c:	d09b      	beq.n	8009776 <_printf_float+0xa2>
 800983e:	232d      	movs	r3, #45	; 0x2d
 8009840:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8009844:	e797      	b.n	8009776 <_printf_float+0xa2>
 8009846:	2947      	cmp	r1, #71	; 0x47
 8009848:	d1bc      	bne.n	80097c4 <_printf_float+0xf0>
 800984a:	2b00      	cmp	r3, #0
 800984c:	d1ba      	bne.n	80097c4 <_printf_float+0xf0>
 800984e:	2301      	movs	r3, #1
 8009850:	e7b7      	b.n	80097c2 <_printf_float+0xee>
 8009852:	f1b9 0f66 	cmp.w	r9, #102	; 0x66
 8009856:	d118      	bne.n	800988a <_printf_float+0x1b6>
 8009858:	2900      	cmp	r1, #0
 800985a:	6863      	ldr	r3, [r4, #4]
 800985c:	dd0b      	ble.n	8009876 <_printf_float+0x1a2>
 800985e:	6121      	str	r1, [r4, #16]
 8009860:	b913      	cbnz	r3, 8009868 <_printf_float+0x194>
 8009862:	6822      	ldr	r2, [r4, #0]
 8009864:	07d0      	lsls	r0, r2, #31
 8009866:	d502      	bpl.n	800986e <_printf_float+0x19a>
 8009868:	3301      	adds	r3, #1
 800986a:	440b      	add	r3, r1
 800986c:	6123      	str	r3, [r4, #16]
 800986e:	f04f 0a00 	mov.w	sl, #0
 8009872:	65a1      	str	r1, [r4, #88]	; 0x58
 8009874:	e7df      	b.n	8009836 <_printf_float+0x162>
 8009876:	b913      	cbnz	r3, 800987e <_printf_float+0x1aa>
 8009878:	6822      	ldr	r2, [r4, #0]
 800987a:	07d2      	lsls	r2, r2, #31
 800987c:	d501      	bpl.n	8009882 <_printf_float+0x1ae>
 800987e:	3302      	adds	r3, #2
 8009880:	e7f4      	b.n	800986c <_printf_float+0x198>
 8009882:	2301      	movs	r3, #1
 8009884:	e7f2      	b.n	800986c <_printf_float+0x198>
 8009886:	f04f 0967 	mov.w	r9, #103	; 0x67
 800988a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800988c:	4299      	cmp	r1, r3
 800988e:	db05      	blt.n	800989c <_printf_float+0x1c8>
 8009890:	6823      	ldr	r3, [r4, #0]
 8009892:	6121      	str	r1, [r4, #16]
 8009894:	07d8      	lsls	r0, r3, #31
 8009896:	d5ea      	bpl.n	800986e <_printf_float+0x19a>
 8009898:	1c4b      	adds	r3, r1, #1
 800989a:	e7e7      	b.n	800986c <_printf_float+0x198>
 800989c:	2900      	cmp	r1, #0
 800989e:	bfcc      	ite	gt
 80098a0:	2201      	movgt	r2, #1
 80098a2:	f1c1 0202 	rsble	r2, r1, #2
 80098a6:	4413      	add	r3, r2
 80098a8:	e7e0      	b.n	800986c <_printf_float+0x198>
 80098aa:	6823      	ldr	r3, [r4, #0]
 80098ac:	055a      	lsls	r2, r3, #21
 80098ae:	d407      	bmi.n	80098c0 <_printf_float+0x1ec>
 80098b0:	6923      	ldr	r3, [r4, #16]
 80098b2:	4642      	mov	r2, r8
 80098b4:	4631      	mov	r1, r6
 80098b6:	4628      	mov	r0, r5
 80098b8:	47b8      	blx	r7
 80098ba:	3001      	adds	r0, #1
 80098bc:	d12b      	bne.n	8009916 <_printf_float+0x242>
 80098be:	e764      	b.n	800978a <_printf_float+0xb6>
 80098c0:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 80098c4:	f240 80dd 	bls.w	8009a82 <_printf_float+0x3ae>
 80098c8:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 80098cc:	2200      	movs	r2, #0
 80098ce:	2300      	movs	r3, #0
 80098d0:	f7f7 f8da 	bl	8000a88 <__aeabi_dcmpeq>
 80098d4:	2800      	cmp	r0, #0
 80098d6:	d033      	beq.n	8009940 <_printf_float+0x26c>
 80098d8:	2301      	movs	r3, #1
 80098da:	4631      	mov	r1, r6
 80098dc:	4628      	mov	r0, r5
 80098de:	4a35      	ldr	r2, [pc, #212]	; (80099b4 <_printf_float+0x2e0>)
 80098e0:	47b8      	blx	r7
 80098e2:	3001      	adds	r0, #1
 80098e4:	f43f af51 	beq.w	800978a <_printf_float+0xb6>
 80098e8:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 80098ec:	429a      	cmp	r2, r3
 80098ee:	db02      	blt.n	80098f6 <_printf_float+0x222>
 80098f0:	6823      	ldr	r3, [r4, #0]
 80098f2:	07d8      	lsls	r0, r3, #31
 80098f4:	d50f      	bpl.n	8009916 <_printf_float+0x242>
 80098f6:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80098fa:	4631      	mov	r1, r6
 80098fc:	4628      	mov	r0, r5
 80098fe:	47b8      	blx	r7
 8009900:	3001      	adds	r0, #1
 8009902:	f43f af42 	beq.w	800978a <_printf_float+0xb6>
 8009906:	f04f 0800 	mov.w	r8, #0
 800990a:	f104 091a 	add.w	r9, r4, #26
 800990e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8009910:	3b01      	subs	r3, #1
 8009912:	4543      	cmp	r3, r8
 8009914:	dc09      	bgt.n	800992a <_printf_float+0x256>
 8009916:	6823      	ldr	r3, [r4, #0]
 8009918:	079b      	lsls	r3, r3, #30
 800991a:	f100 8104 	bmi.w	8009b26 <_printf_float+0x452>
 800991e:	68e0      	ldr	r0, [r4, #12]
 8009920:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8009922:	4298      	cmp	r0, r3
 8009924:	bfb8      	it	lt
 8009926:	4618      	movlt	r0, r3
 8009928:	e731      	b.n	800978e <_printf_float+0xba>
 800992a:	2301      	movs	r3, #1
 800992c:	464a      	mov	r2, r9
 800992e:	4631      	mov	r1, r6
 8009930:	4628      	mov	r0, r5
 8009932:	47b8      	blx	r7
 8009934:	3001      	adds	r0, #1
 8009936:	f43f af28 	beq.w	800978a <_printf_float+0xb6>
 800993a:	f108 0801 	add.w	r8, r8, #1
 800993e:	e7e6      	b.n	800990e <_printf_float+0x23a>
 8009940:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8009942:	2b00      	cmp	r3, #0
 8009944:	dc38      	bgt.n	80099b8 <_printf_float+0x2e4>
 8009946:	2301      	movs	r3, #1
 8009948:	4631      	mov	r1, r6
 800994a:	4628      	mov	r0, r5
 800994c:	4a19      	ldr	r2, [pc, #100]	; (80099b4 <_printf_float+0x2e0>)
 800994e:	47b8      	blx	r7
 8009950:	3001      	adds	r0, #1
 8009952:	f43f af1a 	beq.w	800978a <_printf_float+0xb6>
 8009956:	e9dd 320d 	ldrd	r3, r2, [sp, #52]	; 0x34
 800995a:	4313      	orrs	r3, r2
 800995c:	d102      	bne.n	8009964 <_printf_float+0x290>
 800995e:	6823      	ldr	r3, [r4, #0]
 8009960:	07d9      	lsls	r1, r3, #31
 8009962:	d5d8      	bpl.n	8009916 <_printf_float+0x242>
 8009964:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8009968:	4631      	mov	r1, r6
 800996a:	4628      	mov	r0, r5
 800996c:	47b8      	blx	r7
 800996e:	3001      	adds	r0, #1
 8009970:	f43f af0b 	beq.w	800978a <_printf_float+0xb6>
 8009974:	f04f 0900 	mov.w	r9, #0
 8009978:	f104 0a1a 	add.w	sl, r4, #26
 800997c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800997e:	425b      	negs	r3, r3
 8009980:	454b      	cmp	r3, r9
 8009982:	dc01      	bgt.n	8009988 <_printf_float+0x2b4>
 8009984:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8009986:	e794      	b.n	80098b2 <_printf_float+0x1de>
 8009988:	2301      	movs	r3, #1
 800998a:	4652      	mov	r2, sl
 800998c:	4631      	mov	r1, r6
 800998e:	4628      	mov	r0, r5
 8009990:	47b8      	blx	r7
 8009992:	3001      	adds	r0, #1
 8009994:	f43f aef9 	beq.w	800978a <_printf_float+0xb6>
 8009998:	f109 0901 	add.w	r9, r9, #1
 800999c:	e7ee      	b.n	800997c <_printf_float+0x2a8>
 800999e:	bf00      	nop
 80099a0:	7fefffff 	.word	0x7fefffff
 80099a4:	0800c314 	.word	0x0800c314
 80099a8:	0800c318 	.word	0x0800c318
 80099ac:	0800c31c 	.word	0x0800c31c
 80099b0:	0800c320 	.word	0x0800c320
 80099b4:	0800c324 	.word	0x0800c324
 80099b8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80099ba:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80099bc:	429a      	cmp	r2, r3
 80099be:	bfa8      	it	ge
 80099c0:	461a      	movge	r2, r3
 80099c2:	2a00      	cmp	r2, #0
 80099c4:	4691      	mov	r9, r2
 80099c6:	dc37      	bgt.n	8009a38 <_printf_float+0x364>
 80099c8:	f04f 0b00 	mov.w	fp, #0
 80099cc:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80099d0:	f104 021a 	add.w	r2, r4, #26
 80099d4:	f8d4 a058 	ldr.w	sl, [r4, #88]	; 0x58
 80099d8:	ebaa 0309 	sub.w	r3, sl, r9
 80099dc:	455b      	cmp	r3, fp
 80099de:	dc33      	bgt.n	8009a48 <_printf_float+0x374>
 80099e0:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 80099e4:	429a      	cmp	r2, r3
 80099e6:	db3b      	blt.n	8009a60 <_printf_float+0x38c>
 80099e8:	6823      	ldr	r3, [r4, #0]
 80099ea:	07da      	lsls	r2, r3, #31
 80099ec:	d438      	bmi.n	8009a60 <_printf_float+0x38c>
 80099ee:	e9dd 320d 	ldrd	r3, r2, [sp, #52]	; 0x34
 80099f2:	eba2 0903 	sub.w	r9, r2, r3
 80099f6:	eba2 020a 	sub.w	r2, r2, sl
 80099fa:	4591      	cmp	r9, r2
 80099fc:	bfa8      	it	ge
 80099fe:	4691      	movge	r9, r2
 8009a00:	f1b9 0f00 	cmp.w	r9, #0
 8009a04:	dc34      	bgt.n	8009a70 <_printf_float+0x39c>
 8009a06:	f04f 0800 	mov.w	r8, #0
 8009a0a:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8009a0e:	f104 0a1a 	add.w	sl, r4, #26
 8009a12:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8009a16:	1a9b      	subs	r3, r3, r2
 8009a18:	eba3 0309 	sub.w	r3, r3, r9
 8009a1c:	4543      	cmp	r3, r8
 8009a1e:	f77f af7a 	ble.w	8009916 <_printf_float+0x242>
 8009a22:	2301      	movs	r3, #1
 8009a24:	4652      	mov	r2, sl
 8009a26:	4631      	mov	r1, r6
 8009a28:	4628      	mov	r0, r5
 8009a2a:	47b8      	blx	r7
 8009a2c:	3001      	adds	r0, #1
 8009a2e:	f43f aeac 	beq.w	800978a <_printf_float+0xb6>
 8009a32:	f108 0801 	add.w	r8, r8, #1
 8009a36:	e7ec      	b.n	8009a12 <_printf_float+0x33e>
 8009a38:	4613      	mov	r3, r2
 8009a3a:	4631      	mov	r1, r6
 8009a3c:	4642      	mov	r2, r8
 8009a3e:	4628      	mov	r0, r5
 8009a40:	47b8      	blx	r7
 8009a42:	3001      	adds	r0, #1
 8009a44:	d1c0      	bne.n	80099c8 <_printf_float+0x2f4>
 8009a46:	e6a0      	b.n	800978a <_printf_float+0xb6>
 8009a48:	2301      	movs	r3, #1
 8009a4a:	4631      	mov	r1, r6
 8009a4c:	4628      	mov	r0, r5
 8009a4e:	920b      	str	r2, [sp, #44]	; 0x2c
 8009a50:	47b8      	blx	r7
 8009a52:	3001      	adds	r0, #1
 8009a54:	f43f ae99 	beq.w	800978a <_printf_float+0xb6>
 8009a58:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8009a5a:	f10b 0b01 	add.w	fp, fp, #1
 8009a5e:	e7b9      	b.n	80099d4 <_printf_float+0x300>
 8009a60:	4631      	mov	r1, r6
 8009a62:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8009a66:	4628      	mov	r0, r5
 8009a68:	47b8      	blx	r7
 8009a6a:	3001      	adds	r0, #1
 8009a6c:	d1bf      	bne.n	80099ee <_printf_float+0x31a>
 8009a6e:	e68c      	b.n	800978a <_printf_float+0xb6>
 8009a70:	464b      	mov	r3, r9
 8009a72:	4631      	mov	r1, r6
 8009a74:	4628      	mov	r0, r5
 8009a76:	eb08 020a 	add.w	r2, r8, sl
 8009a7a:	47b8      	blx	r7
 8009a7c:	3001      	adds	r0, #1
 8009a7e:	d1c2      	bne.n	8009a06 <_printf_float+0x332>
 8009a80:	e683      	b.n	800978a <_printf_float+0xb6>
 8009a82:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8009a84:	2a01      	cmp	r2, #1
 8009a86:	dc01      	bgt.n	8009a8c <_printf_float+0x3b8>
 8009a88:	07db      	lsls	r3, r3, #31
 8009a8a:	d539      	bpl.n	8009b00 <_printf_float+0x42c>
 8009a8c:	2301      	movs	r3, #1
 8009a8e:	4642      	mov	r2, r8
 8009a90:	4631      	mov	r1, r6
 8009a92:	4628      	mov	r0, r5
 8009a94:	47b8      	blx	r7
 8009a96:	3001      	adds	r0, #1
 8009a98:	f43f ae77 	beq.w	800978a <_printf_float+0xb6>
 8009a9c:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8009aa0:	4631      	mov	r1, r6
 8009aa2:	4628      	mov	r0, r5
 8009aa4:	47b8      	blx	r7
 8009aa6:	3001      	adds	r0, #1
 8009aa8:	f43f ae6f 	beq.w	800978a <_printf_float+0xb6>
 8009aac:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8009ab0:	2200      	movs	r2, #0
 8009ab2:	2300      	movs	r3, #0
 8009ab4:	f8dd 9038 	ldr.w	r9, [sp, #56]	; 0x38
 8009ab8:	f7f6 ffe6 	bl	8000a88 <__aeabi_dcmpeq>
 8009abc:	b9d8      	cbnz	r0, 8009af6 <_printf_float+0x422>
 8009abe:	f109 33ff 	add.w	r3, r9, #4294967295
 8009ac2:	f108 0201 	add.w	r2, r8, #1
 8009ac6:	4631      	mov	r1, r6
 8009ac8:	4628      	mov	r0, r5
 8009aca:	47b8      	blx	r7
 8009acc:	3001      	adds	r0, #1
 8009ace:	d10e      	bne.n	8009aee <_printf_float+0x41a>
 8009ad0:	e65b      	b.n	800978a <_printf_float+0xb6>
 8009ad2:	2301      	movs	r3, #1
 8009ad4:	464a      	mov	r2, r9
 8009ad6:	4631      	mov	r1, r6
 8009ad8:	4628      	mov	r0, r5
 8009ada:	47b8      	blx	r7
 8009adc:	3001      	adds	r0, #1
 8009ade:	f43f ae54 	beq.w	800978a <_printf_float+0xb6>
 8009ae2:	f108 0801 	add.w	r8, r8, #1
 8009ae6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8009ae8:	3b01      	subs	r3, #1
 8009aea:	4543      	cmp	r3, r8
 8009aec:	dcf1      	bgt.n	8009ad2 <_printf_float+0x3fe>
 8009aee:	4653      	mov	r3, sl
 8009af0:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8009af4:	e6de      	b.n	80098b4 <_printf_float+0x1e0>
 8009af6:	f04f 0800 	mov.w	r8, #0
 8009afa:	f104 091a 	add.w	r9, r4, #26
 8009afe:	e7f2      	b.n	8009ae6 <_printf_float+0x412>
 8009b00:	2301      	movs	r3, #1
 8009b02:	4642      	mov	r2, r8
 8009b04:	e7df      	b.n	8009ac6 <_printf_float+0x3f2>
 8009b06:	2301      	movs	r3, #1
 8009b08:	464a      	mov	r2, r9
 8009b0a:	4631      	mov	r1, r6
 8009b0c:	4628      	mov	r0, r5
 8009b0e:	47b8      	blx	r7
 8009b10:	3001      	adds	r0, #1
 8009b12:	f43f ae3a 	beq.w	800978a <_printf_float+0xb6>
 8009b16:	f108 0801 	add.w	r8, r8, #1
 8009b1a:	68e3      	ldr	r3, [r4, #12]
 8009b1c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8009b1e:	1a5b      	subs	r3, r3, r1
 8009b20:	4543      	cmp	r3, r8
 8009b22:	dcf0      	bgt.n	8009b06 <_printf_float+0x432>
 8009b24:	e6fb      	b.n	800991e <_printf_float+0x24a>
 8009b26:	f04f 0800 	mov.w	r8, #0
 8009b2a:	f104 0919 	add.w	r9, r4, #25
 8009b2e:	e7f4      	b.n	8009b1a <_printf_float+0x446>

08009b30 <_printf_common>:
 8009b30:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009b34:	4616      	mov	r6, r2
 8009b36:	4699      	mov	r9, r3
 8009b38:	688a      	ldr	r2, [r1, #8]
 8009b3a:	690b      	ldr	r3, [r1, #16]
 8009b3c:	4607      	mov	r7, r0
 8009b3e:	4293      	cmp	r3, r2
 8009b40:	bfb8      	it	lt
 8009b42:	4613      	movlt	r3, r2
 8009b44:	6033      	str	r3, [r6, #0]
 8009b46:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8009b4a:	460c      	mov	r4, r1
 8009b4c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8009b50:	b10a      	cbz	r2, 8009b56 <_printf_common+0x26>
 8009b52:	3301      	adds	r3, #1
 8009b54:	6033      	str	r3, [r6, #0]
 8009b56:	6823      	ldr	r3, [r4, #0]
 8009b58:	0699      	lsls	r1, r3, #26
 8009b5a:	bf42      	ittt	mi
 8009b5c:	6833      	ldrmi	r3, [r6, #0]
 8009b5e:	3302      	addmi	r3, #2
 8009b60:	6033      	strmi	r3, [r6, #0]
 8009b62:	6825      	ldr	r5, [r4, #0]
 8009b64:	f015 0506 	ands.w	r5, r5, #6
 8009b68:	d106      	bne.n	8009b78 <_printf_common+0x48>
 8009b6a:	f104 0a19 	add.w	sl, r4, #25
 8009b6e:	68e3      	ldr	r3, [r4, #12]
 8009b70:	6832      	ldr	r2, [r6, #0]
 8009b72:	1a9b      	subs	r3, r3, r2
 8009b74:	42ab      	cmp	r3, r5
 8009b76:	dc2b      	bgt.n	8009bd0 <_printf_common+0xa0>
 8009b78:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8009b7c:	1e13      	subs	r3, r2, #0
 8009b7e:	6822      	ldr	r2, [r4, #0]
 8009b80:	bf18      	it	ne
 8009b82:	2301      	movne	r3, #1
 8009b84:	0692      	lsls	r2, r2, #26
 8009b86:	d430      	bmi.n	8009bea <_printf_common+0xba>
 8009b88:	4649      	mov	r1, r9
 8009b8a:	4638      	mov	r0, r7
 8009b8c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8009b90:	47c0      	blx	r8
 8009b92:	3001      	adds	r0, #1
 8009b94:	d023      	beq.n	8009bde <_printf_common+0xae>
 8009b96:	6823      	ldr	r3, [r4, #0]
 8009b98:	6922      	ldr	r2, [r4, #16]
 8009b9a:	f003 0306 	and.w	r3, r3, #6
 8009b9e:	2b04      	cmp	r3, #4
 8009ba0:	bf14      	ite	ne
 8009ba2:	2500      	movne	r5, #0
 8009ba4:	6833      	ldreq	r3, [r6, #0]
 8009ba6:	f04f 0600 	mov.w	r6, #0
 8009baa:	bf08      	it	eq
 8009bac:	68e5      	ldreq	r5, [r4, #12]
 8009bae:	f104 041a 	add.w	r4, r4, #26
 8009bb2:	bf08      	it	eq
 8009bb4:	1aed      	subeq	r5, r5, r3
 8009bb6:	f854 3c12 	ldr.w	r3, [r4, #-18]
 8009bba:	bf08      	it	eq
 8009bbc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8009bc0:	4293      	cmp	r3, r2
 8009bc2:	bfc4      	itt	gt
 8009bc4:	1a9b      	subgt	r3, r3, r2
 8009bc6:	18ed      	addgt	r5, r5, r3
 8009bc8:	42b5      	cmp	r5, r6
 8009bca:	d11a      	bne.n	8009c02 <_printf_common+0xd2>
 8009bcc:	2000      	movs	r0, #0
 8009bce:	e008      	b.n	8009be2 <_printf_common+0xb2>
 8009bd0:	2301      	movs	r3, #1
 8009bd2:	4652      	mov	r2, sl
 8009bd4:	4649      	mov	r1, r9
 8009bd6:	4638      	mov	r0, r7
 8009bd8:	47c0      	blx	r8
 8009bda:	3001      	adds	r0, #1
 8009bdc:	d103      	bne.n	8009be6 <_printf_common+0xb6>
 8009bde:	f04f 30ff 	mov.w	r0, #4294967295
 8009be2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009be6:	3501      	adds	r5, #1
 8009be8:	e7c1      	b.n	8009b6e <_printf_common+0x3e>
 8009bea:	2030      	movs	r0, #48	; 0x30
 8009bec:	18e1      	adds	r1, r4, r3
 8009bee:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8009bf2:	1c5a      	adds	r2, r3, #1
 8009bf4:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8009bf8:	4422      	add	r2, r4
 8009bfa:	3302      	adds	r3, #2
 8009bfc:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8009c00:	e7c2      	b.n	8009b88 <_printf_common+0x58>
 8009c02:	2301      	movs	r3, #1
 8009c04:	4622      	mov	r2, r4
 8009c06:	4649      	mov	r1, r9
 8009c08:	4638      	mov	r0, r7
 8009c0a:	47c0      	blx	r8
 8009c0c:	3001      	adds	r0, #1
 8009c0e:	d0e6      	beq.n	8009bde <_printf_common+0xae>
 8009c10:	3601      	adds	r6, #1
 8009c12:	e7d9      	b.n	8009bc8 <_printf_common+0x98>

08009c14 <_printf_i>:
 8009c14:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8009c18:	7e0f      	ldrb	r7, [r1, #24]
 8009c1a:	4691      	mov	r9, r2
 8009c1c:	2f78      	cmp	r7, #120	; 0x78
 8009c1e:	4680      	mov	r8, r0
 8009c20:	460c      	mov	r4, r1
 8009c22:	469a      	mov	sl, r3
 8009c24:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8009c26:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8009c2a:	d807      	bhi.n	8009c3c <_printf_i+0x28>
 8009c2c:	2f62      	cmp	r7, #98	; 0x62
 8009c2e:	d80a      	bhi.n	8009c46 <_printf_i+0x32>
 8009c30:	2f00      	cmp	r7, #0
 8009c32:	f000 80d5 	beq.w	8009de0 <_printf_i+0x1cc>
 8009c36:	2f58      	cmp	r7, #88	; 0x58
 8009c38:	f000 80c1 	beq.w	8009dbe <_printf_i+0x1aa>
 8009c3c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8009c40:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8009c44:	e03a      	b.n	8009cbc <_printf_i+0xa8>
 8009c46:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8009c4a:	2b15      	cmp	r3, #21
 8009c4c:	d8f6      	bhi.n	8009c3c <_printf_i+0x28>
 8009c4e:	a101      	add	r1, pc, #4	; (adr r1, 8009c54 <_printf_i+0x40>)
 8009c50:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8009c54:	08009cad 	.word	0x08009cad
 8009c58:	08009cc1 	.word	0x08009cc1
 8009c5c:	08009c3d 	.word	0x08009c3d
 8009c60:	08009c3d 	.word	0x08009c3d
 8009c64:	08009c3d 	.word	0x08009c3d
 8009c68:	08009c3d 	.word	0x08009c3d
 8009c6c:	08009cc1 	.word	0x08009cc1
 8009c70:	08009c3d 	.word	0x08009c3d
 8009c74:	08009c3d 	.word	0x08009c3d
 8009c78:	08009c3d 	.word	0x08009c3d
 8009c7c:	08009c3d 	.word	0x08009c3d
 8009c80:	08009dc7 	.word	0x08009dc7
 8009c84:	08009ced 	.word	0x08009ced
 8009c88:	08009d81 	.word	0x08009d81
 8009c8c:	08009c3d 	.word	0x08009c3d
 8009c90:	08009c3d 	.word	0x08009c3d
 8009c94:	08009de9 	.word	0x08009de9
 8009c98:	08009c3d 	.word	0x08009c3d
 8009c9c:	08009ced 	.word	0x08009ced
 8009ca0:	08009c3d 	.word	0x08009c3d
 8009ca4:	08009c3d 	.word	0x08009c3d
 8009ca8:	08009d89 	.word	0x08009d89
 8009cac:	682b      	ldr	r3, [r5, #0]
 8009cae:	1d1a      	adds	r2, r3, #4
 8009cb0:	681b      	ldr	r3, [r3, #0]
 8009cb2:	602a      	str	r2, [r5, #0]
 8009cb4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8009cb8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8009cbc:	2301      	movs	r3, #1
 8009cbe:	e0a0      	b.n	8009e02 <_printf_i+0x1ee>
 8009cc0:	6820      	ldr	r0, [r4, #0]
 8009cc2:	682b      	ldr	r3, [r5, #0]
 8009cc4:	0607      	lsls	r7, r0, #24
 8009cc6:	f103 0104 	add.w	r1, r3, #4
 8009cca:	6029      	str	r1, [r5, #0]
 8009ccc:	d501      	bpl.n	8009cd2 <_printf_i+0xbe>
 8009cce:	681e      	ldr	r6, [r3, #0]
 8009cd0:	e003      	b.n	8009cda <_printf_i+0xc6>
 8009cd2:	0646      	lsls	r6, r0, #25
 8009cd4:	d5fb      	bpl.n	8009cce <_printf_i+0xba>
 8009cd6:	f9b3 6000 	ldrsh.w	r6, [r3]
 8009cda:	2e00      	cmp	r6, #0
 8009cdc:	da03      	bge.n	8009ce6 <_printf_i+0xd2>
 8009cde:	232d      	movs	r3, #45	; 0x2d
 8009ce0:	4276      	negs	r6, r6
 8009ce2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8009ce6:	230a      	movs	r3, #10
 8009ce8:	4859      	ldr	r0, [pc, #356]	; (8009e50 <_printf_i+0x23c>)
 8009cea:	e012      	b.n	8009d12 <_printf_i+0xfe>
 8009cec:	682b      	ldr	r3, [r5, #0]
 8009cee:	6820      	ldr	r0, [r4, #0]
 8009cf0:	1d19      	adds	r1, r3, #4
 8009cf2:	6029      	str	r1, [r5, #0]
 8009cf4:	0605      	lsls	r5, r0, #24
 8009cf6:	d501      	bpl.n	8009cfc <_printf_i+0xe8>
 8009cf8:	681e      	ldr	r6, [r3, #0]
 8009cfa:	e002      	b.n	8009d02 <_printf_i+0xee>
 8009cfc:	0641      	lsls	r1, r0, #25
 8009cfe:	d5fb      	bpl.n	8009cf8 <_printf_i+0xe4>
 8009d00:	881e      	ldrh	r6, [r3, #0]
 8009d02:	2f6f      	cmp	r7, #111	; 0x6f
 8009d04:	bf0c      	ite	eq
 8009d06:	2308      	moveq	r3, #8
 8009d08:	230a      	movne	r3, #10
 8009d0a:	4851      	ldr	r0, [pc, #324]	; (8009e50 <_printf_i+0x23c>)
 8009d0c:	2100      	movs	r1, #0
 8009d0e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8009d12:	6865      	ldr	r5, [r4, #4]
 8009d14:	2d00      	cmp	r5, #0
 8009d16:	bfa8      	it	ge
 8009d18:	6821      	ldrge	r1, [r4, #0]
 8009d1a:	60a5      	str	r5, [r4, #8]
 8009d1c:	bfa4      	itt	ge
 8009d1e:	f021 0104 	bicge.w	r1, r1, #4
 8009d22:	6021      	strge	r1, [r4, #0]
 8009d24:	b90e      	cbnz	r6, 8009d2a <_printf_i+0x116>
 8009d26:	2d00      	cmp	r5, #0
 8009d28:	d04b      	beq.n	8009dc2 <_printf_i+0x1ae>
 8009d2a:	4615      	mov	r5, r2
 8009d2c:	fbb6 f1f3 	udiv	r1, r6, r3
 8009d30:	fb03 6711 	mls	r7, r3, r1, r6
 8009d34:	5dc7      	ldrb	r7, [r0, r7]
 8009d36:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8009d3a:	4637      	mov	r7, r6
 8009d3c:	42bb      	cmp	r3, r7
 8009d3e:	460e      	mov	r6, r1
 8009d40:	d9f4      	bls.n	8009d2c <_printf_i+0x118>
 8009d42:	2b08      	cmp	r3, #8
 8009d44:	d10b      	bne.n	8009d5e <_printf_i+0x14a>
 8009d46:	6823      	ldr	r3, [r4, #0]
 8009d48:	07de      	lsls	r6, r3, #31
 8009d4a:	d508      	bpl.n	8009d5e <_printf_i+0x14a>
 8009d4c:	6923      	ldr	r3, [r4, #16]
 8009d4e:	6861      	ldr	r1, [r4, #4]
 8009d50:	4299      	cmp	r1, r3
 8009d52:	bfde      	ittt	le
 8009d54:	2330      	movle	r3, #48	; 0x30
 8009d56:	f805 3c01 	strble.w	r3, [r5, #-1]
 8009d5a:	f105 35ff 	addle.w	r5, r5, #4294967295
 8009d5e:	1b52      	subs	r2, r2, r5
 8009d60:	6122      	str	r2, [r4, #16]
 8009d62:	464b      	mov	r3, r9
 8009d64:	4621      	mov	r1, r4
 8009d66:	4640      	mov	r0, r8
 8009d68:	f8cd a000 	str.w	sl, [sp]
 8009d6c:	aa03      	add	r2, sp, #12
 8009d6e:	f7ff fedf 	bl	8009b30 <_printf_common>
 8009d72:	3001      	adds	r0, #1
 8009d74:	d14a      	bne.n	8009e0c <_printf_i+0x1f8>
 8009d76:	f04f 30ff 	mov.w	r0, #4294967295
 8009d7a:	b004      	add	sp, #16
 8009d7c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009d80:	6823      	ldr	r3, [r4, #0]
 8009d82:	f043 0320 	orr.w	r3, r3, #32
 8009d86:	6023      	str	r3, [r4, #0]
 8009d88:	2778      	movs	r7, #120	; 0x78
 8009d8a:	4832      	ldr	r0, [pc, #200]	; (8009e54 <_printf_i+0x240>)
 8009d8c:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8009d90:	6823      	ldr	r3, [r4, #0]
 8009d92:	6829      	ldr	r1, [r5, #0]
 8009d94:	061f      	lsls	r7, r3, #24
 8009d96:	f851 6b04 	ldr.w	r6, [r1], #4
 8009d9a:	d402      	bmi.n	8009da2 <_printf_i+0x18e>
 8009d9c:	065f      	lsls	r7, r3, #25
 8009d9e:	bf48      	it	mi
 8009da0:	b2b6      	uxthmi	r6, r6
 8009da2:	07df      	lsls	r7, r3, #31
 8009da4:	bf48      	it	mi
 8009da6:	f043 0320 	orrmi.w	r3, r3, #32
 8009daa:	6029      	str	r1, [r5, #0]
 8009dac:	bf48      	it	mi
 8009dae:	6023      	strmi	r3, [r4, #0]
 8009db0:	b91e      	cbnz	r6, 8009dba <_printf_i+0x1a6>
 8009db2:	6823      	ldr	r3, [r4, #0]
 8009db4:	f023 0320 	bic.w	r3, r3, #32
 8009db8:	6023      	str	r3, [r4, #0]
 8009dba:	2310      	movs	r3, #16
 8009dbc:	e7a6      	b.n	8009d0c <_printf_i+0xf8>
 8009dbe:	4824      	ldr	r0, [pc, #144]	; (8009e50 <_printf_i+0x23c>)
 8009dc0:	e7e4      	b.n	8009d8c <_printf_i+0x178>
 8009dc2:	4615      	mov	r5, r2
 8009dc4:	e7bd      	b.n	8009d42 <_printf_i+0x12e>
 8009dc6:	682b      	ldr	r3, [r5, #0]
 8009dc8:	6826      	ldr	r6, [r4, #0]
 8009dca:	1d18      	adds	r0, r3, #4
 8009dcc:	6961      	ldr	r1, [r4, #20]
 8009dce:	6028      	str	r0, [r5, #0]
 8009dd0:	0635      	lsls	r5, r6, #24
 8009dd2:	681b      	ldr	r3, [r3, #0]
 8009dd4:	d501      	bpl.n	8009dda <_printf_i+0x1c6>
 8009dd6:	6019      	str	r1, [r3, #0]
 8009dd8:	e002      	b.n	8009de0 <_printf_i+0x1cc>
 8009dda:	0670      	lsls	r0, r6, #25
 8009ddc:	d5fb      	bpl.n	8009dd6 <_printf_i+0x1c2>
 8009dde:	8019      	strh	r1, [r3, #0]
 8009de0:	2300      	movs	r3, #0
 8009de2:	4615      	mov	r5, r2
 8009de4:	6123      	str	r3, [r4, #16]
 8009de6:	e7bc      	b.n	8009d62 <_printf_i+0x14e>
 8009de8:	682b      	ldr	r3, [r5, #0]
 8009dea:	2100      	movs	r1, #0
 8009dec:	1d1a      	adds	r2, r3, #4
 8009dee:	602a      	str	r2, [r5, #0]
 8009df0:	681d      	ldr	r5, [r3, #0]
 8009df2:	6862      	ldr	r2, [r4, #4]
 8009df4:	4628      	mov	r0, r5
 8009df6:	f000 f9d4 	bl	800a1a2 <memchr>
 8009dfa:	b108      	cbz	r0, 8009e00 <_printf_i+0x1ec>
 8009dfc:	1b40      	subs	r0, r0, r5
 8009dfe:	6060      	str	r0, [r4, #4]
 8009e00:	6863      	ldr	r3, [r4, #4]
 8009e02:	6123      	str	r3, [r4, #16]
 8009e04:	2300      	movs	r3, #0
 8009e06:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8009e0a:	e7aa      	b.n	8009d62 <_printf_i+0x14e>
 8009e0c:	462a      	mov	r2, r5
 8009e0e:	4649      	mov	r1, r9
 8009e10:	4640      	mov	r0, r8
 8009e12:	6923      	ldr	r3, [r4, #16]
 8009e14:	47d0      	blx	sl
 8009e16:	3001      	adds	r0, #1
 8009e18:	d0ad      	beq.n	8009d76 <_printf_i+0x162>
 8009e1a:	6823      	ldr	r3, [r4, #0]
 8009e1c:	079b      	lsls	r3, r3, #30
 8009e1e:	d413      	bmi.n	8009e48 <_printf_i+0x234>
 8009e20:	68e0      	ldr	r0, [r4, #12]
 8009e22:	9b03      	ldr	r3, [sp, #12]
 8009e24:	4298      	cmp	r0, r3
 8009e26:	bfb8      	it	lt
 8009e28:	4618      	movlt	r0, r3
 8009e2a:	e7a6      	b.n	8009d7a <_printf_i+0x166>
 8009e2c:	2301      	movs	r3, #1
 8009e2e:	4632      	mov	r2, r6
 8009e30:	4649      	mov	r1, r9
 8009e32:	4640      	mov	r0, r8
 8009e34:	47d0      	blx	sl
 8009e36:	3001      	adds	r0, #1
 8009e38:	d09d      	beq.n	8009d76 <_printf_i+0x162>
 8009e3a:	3501      	adds	r5, #1
 8009e3c:	68e3      	ldr	r3, [r4, #12]
 8009e3e:	9903      	ldr	r1, [sp, #12]
 8009e40:	1a5b      	subs	r3, r3, r1
 8009e42:	42ab      	cmp	r3, r5
 8009e44:	dcf2      	bgt.n	8009e2c <_printf_i+0x218>
 8009e46:	e7eb      	b.n	8009e20 <_printf_i+0x20c>
 8009e48:	2500      	movs	r5, #0
 8009e4a:	f104 0619 	add.w	r6, r4, #25
 8009e4e:	e7f5      	b.n	8009e3c <_printf_i+0x228>
 8009e50:	0800c326 	.word	0x0800c326
 8009e54:	0800c337 	.word	0x0800c337

08009e58 <std>:
 8009e58:	2300      	movs	r3, #0
 8009e5a:	b510      	push	{r4, lr}
 8009e5c:	4604      	mov	r4, r0
 8009e5e:	e9c0 3300 	strd	r3, r3, [r0]
 8009e62:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8009e66:	6083      	str	r3, [r0, #8]
 8009e68:	8181      	strh	r1, [r0, #12]
 8009e6a:	6643      	str	r3, [r0, #100]	; 0x64
 8009e6c:	81c2      	strh	r2, [r0, #14]
 8009e6e:	6183      	str	r3, [r0, #24]
 8009e70:	4619      	mov	r1, r3
 8009e72:	2208      	movs	r2, #8
 8009e74:	305c      	adds	r0, #92	; 0x5c
 8009e76:	f000 f914 	bl	800a0a2 <memset>
 8009e7a:	4b0d      	ldr	r3, [pc, #52]	; (8009eb0 <std+0x58>)
 8009e7c:	6224      	str	r4, [r4, #32]
 8009e7e:	6263      	str	r3, [r4, #36]	; 0x24
 8009e80:	4b0c      	ldr	r3, [pc, #48]	; (8009eb4 <std+0x5c>)
 8009e82:	62a3      	str	r3, [r4, #40]	; 0x28
 8009e84:	4b0c      	ldr	r3, [pc, #48]	; (8009eb8 <std+0x60>)
 8009e86:	62e3      	str	r3, [r4, #44]	; 0x2c
 8009e88:	4b0c      	ldr	r3, [pc, #48]	; (8009ebc <std+0x64>)
 8009e8a:	6323      	str	r3, [r4, #48]	; 0x30
 8009e8c:	4b0c      	ldr	r3, [pc, #48]	; (8009ec0 <std+0x68>)
 8009e8e:	429c      	cmp	r4, r3
 8009e90:	d006      	beq.n	8009ea0 <std+0x48>
 8009e92:	f103 0268 	add.w	r2, r3, #104	; 0x68
 8009e96:	4294      	cmp	r4, r2
 8009e98:	d002      	beq.n	8009ea0 <std+0x48>
 8009e9a:	33d0      	adds	r3, #208	; 0xd0
 8009e9c:	429c      	cmp	r4, r3
 8009e9e:	d105      	bne.n	8009eac <std+0x54>
 8009ea0:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8009ea4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009ea8:	f000 b978 	b.w	800a19c <__retarget_lock_init_recursive>
 8009eac:	bd10      	pop	{r4, pc}
 8009eae:	bf00      	nop
 8009eb0:	0800a01d 	.word	0x0800a01d
 8009eb4:	0800a03f 	.word	0x0800a03f
 8009eb8:	0800a077 	.word	0x0800a077
 8009ebc:	0800a09b 	.word	0x0800a09b
 8009ec0:	200023bc 	.word	0x200023bc

08009ec4 <stdio_exit_handler>:
 8009ec4:	4a02      	ldr	r2, [pc, #8]	; (8009ed0 <stdio_exit_handler+0xc>)
 8009ec6:	4903      	ldr	r1, [pc, #12]	; (8009ed4 <stdio_exit_handler+0x10>)
 8009ec8:	4803      	ldr	r0, [pc, #12]	; (8009ed8 <stdio_exit_handler+0x14>)
 8009eca:	f000 b869 	b.w	8009fa0 <_fwalk_sglue>
 8009ece:	bf00      	nop
 8009ed0:	20000074 	.word	0x20000074
 8009ed4:	0800bb95 	.word	0x0800bb95
 8009ed8:	200001ec 	.word	0x200001ec

08009edc <cleanup_stdio>:
 8009edc:	6841      	ldr	r1, [r0, #4]
 8009ede:	4b0c      	ldr	r3, [pc, #48]	; (8009f10 <cleanup_stdio+0x34>)
 8009ee0:	b510      	push	{r4, lr}
 8009ee2:	4299      	cmp	r1, r3
 8009ee4:	4604      	mov	r4, r0
 8009ee6:	d001      	beq.n	8009eec <cleanup_stdio+0x10>
 8009ee8:	f001 fe54 	bl	800bb94 <_fflush_r>
 8009eec:	68a1      	ldr	r1, [r4, #8]
 8009eee:	4b09      	ldr	r3, [pc, #36]	; (8009f14 <cleanup_stdio+0x38>)
 8009ef0:	4299      	cmp	r1, r3
 8009ef2:	d002      	beq.n	8009efa <cleanup_stdio+0x1e>
 8009ef4:	4620      	mov	r0, r4
 8009ef6:	f001 fe4d 	bl	800bb94 <_fflush_r>
 8009efa:	68e1      	ldr	r1, [r4, #12]
 8009efc:	4b06      	ldr	r3, [pc, #24]	; (8009f18 <cleanup_stdio+0x3c>)
 8009efe:	4299      	cmp	r1, r3
 8009f00:	d004      	beq.n	8009f0c <cleanup_stdio+0x30>
 8009f02:	4620      	mov	r0, r4
 8009f04:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009f08:	f001 be44 	b.w	800bb94 <_fflush_r>
 8009f0c:	bd10      	pop	{r4, pc}
 8009f0e:	bf00      	nop
 8009f10:	200023bc 	.word	0x200023bc
 8009f14:	20002424 	.word	0x20002424
 8009f18:	2000248c 	.word	0x2000248c

08009f1c <global_stdio_init.part.0>:
 8009f1c:	b510      	push	{r4, lr}
 8009f1e:	4b0b      	ldr	r3, [pc, #44]	; (8009f4c <global_stdio_init.part.0+0x30>)
 8009f20:	4c0b      	ldr	r4, [pc, #44]	; (8009f50 <global_stdio_init.part.0+0x34>)
 8009f22:	4a0c      	ldr	r2, [pc, #48]	; (8009f54 <global_stdio_init.part.0+0x38>)
 8009f24:	4620      	mov	r0, r4
 8009f26:	601a      	str	r2, [r3, #0]
 8009f28:	2104      	movs	r1, #4
 8009f2a:	2200      	movs	r2, #0
 8009f2c:	f7ff ff94 	bl	8009e58 <std>
 8009f30:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8009f34:	2201      	movs	r2, #1
 8009f36:	2109      	movs	r1, #9
 8009f38:	f7ff ff8e 	bl	8009e58 <std>
 8009f3c:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8009f40:	2202      	movs	r2, #2
 8009f42:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009f46:	2112      	movs	r1, #18
 8009f48:	f7ff bf86 	b.w	8009e58 <std>
 8009f4c:	200024f4 	.word	0x200024f4
 8009f50:	200023bc 	.word	0x200023bc
 8009f54:	08009ec5 	.word	0x08009ec5

08009f58 <__sfp_lock_acquire>:
 8009f58:	4801      	ldr	r0, [pc, #4]	; (8009f60 <__sfp_lock_acquire+0x8>)
 8009f5a:	f000 b920 	b.w	800a19e <__retarget_lock_acquire_recursive>
 8009f5e:	bf00      	nop
 8009f60:	200024fd 	.word	0x200024fd

08009f64 <__sfp_lock_release>:
 8009f64:	4801      	ldr	r0, [pc, #4]	; (8009f6c <__sfp_lock_release+0x8>)
 8009f66:	f000 b91b 	b.w	800a1a0 <__retarget_lock_release_recursive>
 8009f6a:	bf00      	nop
 8009f6c:	200024fd 	.word	0x200024fd

08009f70 <__sinit>:
 8009f70:	b510      	push	{r4, lr}
 8009f72:	4604      	mov	r4, r0
 8009f74:	f7ff fff0 	bl	8009f58 <__sfp_lock_acquire>
 8009f78:	6a23      	ldr	r3, [r4, #32]
 8009f7a:	b11b      	cbz	r3, 8009f84 <__sinit+0x14>
 8009f7c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009f80:	f7ff bff0 	b.w	8009f64 <__sfp_lock_release>
 8009f84:	4b04      	ldr	r3, [pc, #16]	; (8009f98 <__sinit+0x28>)
 8009f86:	6223      	str	r3, [r4, #32]
 8009f88:	4b04      	ldr	r3, [pc, #16]	; (8009f9c <__sinit+0x2c>)
 8009f8a:	681b      	ldr	r3, [r3, #0]
 8009f8c:	2b00      	cmp	r3, #0
 8009f8e:	d1f5      	bne.n	8009f7c <__sinit+0xc>
 8009f90:	f7ff ffc4 	bl	8009f1c <global_stdio_init.part.0>
 8009f94:	e7f2      	b.n	8009f7c <__sinit+0xc>
 8009f96:	bf00      	nop
 8009f98:	08009edd 	.word	0x08009edd
 8009f9c:	200024f4 	.word	0x200024f4

08009fa0 <_fwalk_sglue>:
 8009fa0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009fa4:	4607      	mov	r7, r0
 8009fa6:	4688      	mov	r8, r1
 8009fa8:	4614      	mov	r4, r2
 8009faa:	2600      	movs	r6, #0
 8009fac:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8009fb0:	f1b9 0901 	subs.w	r9, r9, #1
 8009fb4:	d505      	bpl.n	8009fc2 <_fwalk_sglue+0x22>
 8009fb6:	6824      	ldr	r4, [r4, #0]
 8009fb8:	2c00      	cmp	r4, #0
 8009fba:	d1f7      	bne.n	8009fac <_fwalk_sglue+0xc>
 8009fbc:	4630      	mov	r0, r6
 8009fbe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8009fc2:	89ab      	ldrh	r3, [r5, #12]
 8009fc4:	2b01      	cmp	r3, #1
 8009fc6:	d907      	bls.n	8009fd8 <_fwalk_sglue+0x38>
 8009fc8:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8009fcc:	3301      	adds	r3, #1
 8009fce:	d003      	beq.n	8009fd8 <_fwalk_sglue+0x38>
 8009fd0:	4629      	mov	r1, r5
 8009fd2:	4638      	mov	r0, r7
 8009fd4:	47c0      	blx	r8
 8009fd6:	4306      	orrs	r6, r0
 8009fd8:	3568      	adds	r5, #104	; 0x68
 8009fda:	e7e9      	b.n	8009fb0 <_fwalk_sglue+0x10>

08009fdc <siprintf>:
 8009fdc:	b40e      	push	{r1, r2, r3}
 8009fde:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8009fe2:	b500      	push	{lr}
 8009fe4:	b09c      	sub	sp, #112	; 0x70
 8009fe6:	ab1d      	add	r3, sp, #116	; 0x74
 8009fe8:	9002      	str	r0, [sp, #8]
 8009fea:	9006      	str	r0, [sp, #24]
 8009fec:	9107      	str	r1, [sp, #28]
 8009fee:	9104      	str	r1, [sp, #16]
 8009ff0:	4808      	ldr	r0, [pc, #32]	; (800a014 <siprintf+0x38>)
 8009ff2:	4909      	ldr	r1, [pc, #36]	; (800a018 <siprintf+0x3c>)
 8009ff4:	f853 2b04 	ldr.w	r2, [r3], #4
 8009ff8:	9105      	str	r1, [sp, #20]
 8009ffa:	6800      	ldr	r0, [r0, #0]
 8009ffc:	a902      	add	r1, sp, #8
 8009ffe:	9301      	str	r3, [sp, #4]
 800a000:	f001 fc48 	bl	800b894 <_svfiprintf_r>
 800a004:	2200      	movs	r2, #0
 800a006:	9b02      	ldr	r3, [sp, #8]
 800a008:	701a      	strb	r2, [r3, #0]
 800a00a:	b01c      	add	sp, #112	; 0x70
 800a00c:	f85d eb04 	ldr.w	lr, [sp], #4
 800a010:	b003      	add	sp, #12
 800a012:	4770      	bx	lr
 800a014:	20000238 	.word	0x20000238
 800a018:	ffff0208 	.word	0xffff0208

0800a01c <__sread>:
 800a01c:	b510      	push	{r4, lr}
 800a01e:	460c      	mov	r4, r1
 800a020:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800a024:	f000 f86c 	bl	800a100 <_read_r>
 800a028:	2800      	cmp	r0, #0
 800a02a:	bfab      	itete	ge
 800a02c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800a02e:	89a3      	ldrhlt	r3, [r4, #12]
 800a030:	181b      	addge	r3, r3, r0
 800a032:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800a036:	bfac      	ite	ge
 800a038:	6563      	strge	r3, [r4, #84]	; 0x54
 800a03a:	81a3      	strhlt	r3, [r4, #12]
 800a03c:	bd10      	pop	{r4, pc}

0800a03e <__swrite>:
 800a03e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a042:	461f      	mov	r7, r3
 800a044:	898b      	ldrh	r3, [r1, #12]
 800a046:	4605      	mov	r5, r0
 800a048:	05db      	lsls	r3, r3, #23
 800a04a:	460c      	mov	r4, r1
 800a04c:	4616      	mov	r6, r2
 800a04e:	d505      	bpl.n	800a05c <__swrite+0x1e>
 800a050:	2302      	movs	r3, #2
 800a052:	2200      	movs	r2, #0
 800a054:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800a058:	f000 f840 	bl	800a0dc <_lseek_r>
 800a05c:	89a3      	ldrh	r3, [r4, #12]
 800a05e:	4632      	mov	r2, r6
 800a060:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800a064:	81a3      	strh	r3, [r4, #12]
 800a066:	4628      	mov	r0, r5
 800a068:	463b      	mov	r3, r7
 800a06a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800a06e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800a072:	f000 b857 	b.w	800a124 <_write_r>

0800a076 <__sseek>:
 800a076:	b510      	push	{r4, lr}
 800a078:	460c      	mov	r4, r1
 800a07a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800a07e:	f000 f82d 	bl	800a0dc <_lseek_r>
 800a082:	1c43      	adds	r3, r0, #1
 800a084:	89a3      	ldrh	r3, [r4, #12]
 800a086:	bf15      	itete	ne
 800a088:	6560      	strne	r0, [r4, #84]	; 0x54
 800a08a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800a08e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800a092:	81a3      	strheq	r3, [r4, #12]
 800a094:	bf18      	it	ne
 800a096:	81a3      	strhne	r3, [r4, #12]
 800a098:	bd10      	pop	{r4, pc}

0800a09a <__sclose>:
 800a09a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800a09e:	f000 b80d 	b.w	800a0bc <_close_r>

0800a0a2 <memset>:
 800a0a2:	4603      	mov	r3, r0
 800a0a4:	4402      	add	r2, r0
 800a0a6:	4293      	cmp	r3, r2
 800a0a8:	d100      	bne.n	800a0ac <memset+0xa>
 800a0aa:	4770      	bx	lr
 800a0ac:	f803 1b01 	strb.w	r1, [r3], #1
 800a0b0:	e7f9      	b.n	800a0a6 <memset+0x4>
	...

0800a0b4 <_localeconv_r>:
 800a0b4:	4800      	ldr	r0, [pc, #0]	; (800a0b8 <_localeconv_r+0x4>)
 800a0b6:	4770      	bx	lr
 800a0b8:	20000170 	.word	0x20000170

0800a0bc <_close_r>:
 800a0bc:	b538      	push	{r3, r4, r5, lr}
 800a0be:	2300      	movs	r3, #0
 800a0c0:	4d05      	ldr	r5, [pc, #20]	; (800a0d8 <_close_r+0x1c>)
 800a0c2:	4604      	mov	r4, r0
 800a0c4:	4608      	mov	r0, r1
 800a0c6:	602b      	str	r3, [r5, #0]
 800a0c8:	f7f9 f864 	bl	8003194 <_close>
 800a0cc:	1c43      	adds	r3, r0, #1
 800a0ce:	d102      	bne.n	800a0d6 <_close_r+0x1a>
 800a0d0:	682b      	ldr	r3, [r5, #0]
 800a0d2:	b103      	cbz	r3, 800a0d6 <_close_r+0x1a>
 800a0d4:	6023      	str	r3, [r4, #0]
 800a0d6:	bd38      	pop	{r3, r4, r5, pc}
 800a0d8:	200024f8 	.word	0x200024f8

0800a0dc <_lseek_r>:
 800a0dc:	b538      	push	{r3, r4, r5, lr}
 800a0de:	4604      	mov	r4, r0
 800a0e0:	4608      	mov	r0, r1
 800a0e2:	4611      	mov	r1, r2
 800a0e4:	2200      	movs	r2, #0
 800a0e6:	4d05      	ldr	r5, [pc, #20]	; (800a0fc <_lseek_r+0x20>)
 800a0e8:	602a      	str	r2, [r5, #0]
 800a0ea:	461a      	mov	r2, r3
 800a0ec:	f7f9 f876 	bl	80031dc <_lseek>
 800a0f0:	1c43      	adds	r3, r0, #1
 800a0f2:	d102      	bne.n	800a0fa <_lseek_r+0x1e>
 800a0f4:	682b      	ldr	r3, [r5, #0]
 800a0f6:	b103      	cbz	r3, 800a0fa <_lseek_r+0x1e>
 800a0f8:	6023      	str	r3, [r4, #0]
 800a0fa:	bd38      	pop	{r3, r4, r5, pc}
 800a0fc:	200024f8 	.word	0x200024f8

0800a100 <_read_r>:
 800a100:	b538      	push	{r3, r4, r5, lr}
 800a102:	4604      	mov	r4, r0
 800a104:	4608      	mov	r0, r1
 800a106:	4611      	mov	r1, r2
 800a108:	2200      	movs	r2, #0
 800a10a:	4d05      	ldr	r5, [pc, #20]	; (800a120 <_read_r+0x20>)
 800a10c:	602a      	str	r2, [r5, #0]
 800a10e:	461a      	mov	r2, r3
 800a110:	f7f9 f807 	bl	8003122 <_read>
 800a114:	1c43      	adds	r3, r0, #1
 800a116:	d102      	bne.n	800a11e <_read_r+0x1e>
 800a118:	682b      	ldr	r3, [r5, #0]
 800a11a:	b103      	cbz	r3, 800a11e <_read_r+0x1e>
 800a11c:	6023      	str	r3, [r4, #0]
 800a11e:	bd38      	pop	{r3, r4, r5, pc}
 800a120:	200024f8 	.word	0x200024f8

0800a124 <_write_r>:
 800a124:	b538      	push	{r3, r4, r5, lr}
 800a126:	4604      	mov	r4, r0
 800a128:	4608      	mov	r0, r1
 800a12a:	4611      	mov	r1, r2
 800a12c:	2200      	movs	r2, #0
 800a12e:	4d05      	ldr	r5, [pc, #20]	; (800a144 <_write_r+0x20>)
 800a130:	602a      	str	r2, [r5, #0]
 800a132:	461a      	mov	r2, r3
 800a134:	f7f9 f812 	bl	800315c <_write>
 800a138:	1c43      	adds	r3, r0, #1
 800a13a:	d102      	bne.n	800a142 <_write_r+0x1e>
 800a13c:	682b      	ldr	r3, [r5, #0]
 800a13e:	b103      	cbz	r3, 800a142 <_write_r+0x1e>
 800a140:	6023      	str	r3, [r4, #0]
 800a142:	bd38      	pop	{r3, r4, r5, pc}
 800a144:	200024f8 	.word	0x200024f8

0800a148 <__errno>:
 800a148:	4b01      	ldr	r3, [pc, #4]	; (800a150 <__errno+0x8>)
 800a14a:	6818      	ldr	r0, [r3, #0]
 800a14c:	4770      	bx	lr
 800a14e:	bf00      	nop
 800a150:	20000238 	.word	0x20000238

0800a154 <__libc_init_array>:
 800a154:	b570      	push	{r4, r5, r6, lr}
 800a156:	2600      	movs	r6, #0
 800a158:	4d0c      	ldr	r5, [pc, #48]	; (800a18c <__libc_init_array+0x38>)
 800a15a:	4c0d      	ldr	r4, [pc, #52]	; (800a190 <__libc_init_array+0x3c>)
 800a15c:	1b64      	subs	r4, r4, r5
 800a15e:	10a4      	asrs	r4, r4, #2
 800a160:	42a6      	cmp	r6, r4
 800a162:	d109      	bne.n	800a178 <__libc_init_array+0x24>
 800a164:	f002 f88a 	bl	800c27c <_init>
 800a168:	2600      	movs	r6, #0
 800a16a:	4d0a      	ldr	r5, [pc, #40]	; (800a194 <__libc_init_array+0x40>)
 800a16c:	4c0a      	ldr	r4, [pc, #40]	; (800a198 <__libc_init_array+0x44>)
 800a16e:	1b64      	subs	r4, r4, r5
 800a170:	10a4      	asrs	r4, r4, #2
 800a172:	42a6      	cmp	r6, r4
 800a174:	d105      	bne.n	800a182 <__libc_init_array+0x2e>
 800a176:	bd70      	pop	{r4, r5, r6, pc}
 800a178:	f855 3b04 	ldr.w	r3, [r5], #4
 800a17c:	4798      	blx	r3
 800a17e:	3601      	adds	r6, #1
 800a180:	e7ee      	b.n	800a160 <__libc_init_array+0xc>
 800a182:	f855 3b04 	ldr.w	r3, [r5], #4
 800a186:	4798      	blx	r3
 800a188:	3601      	adds	r6, #1
 800a18a:	e7f2      	b.n	800a172 <__libc_init_array+0x1e>
 800a18c:	0800c68c 	.word	0x0800c68c
 800a190:	0800c68c 	.word	0x0800c68c
 800a194:	0800c68c 	.word	0x0800c68c
 800a198:	0800c690 	.word	0x0800c690

0800a19c <__retarget_lock_init_recursive>:
 800a19c:	4770      	bx	lr

0800a19e <__retarget_lock_acquire_recursive>:
 800a19e:	4770      	bx	lr

0800a1a0 <__retarget_lock_release_recursive>:
 800a1a0:	4770      	bx	lr

0800a1a2 <memchr>:
 800a1a2:	4603      	mov	r3, r0
 800a1a4:	b510      	push	{r4, lr}
 800a1a6:	b2c9      	uxtb	r1, r1
 800a1a8:	4402      	add	r2, r0
 800a1aa:	4293      	cmp	r3, r2
 800a1ac:	4618      	mov	r0, r3
 800a1ae:	d101      	bne.n	800a1b4 <memchr+0x12>
 800a1b0:	2000      	movs	r0, #0
 800a1b2:	e003      	b.n	800a1bc <memchr+0x1a>
 800a1b4:	7804      	ldrb	r4, [r0, #0]
 800a1b6:	3301      	adds	r3, #1
 800a1b8:	428c      	cmp	r4, r1
 800a1ba:	d1f6      	bne.n	800a1aa <memchr+0x8>
 800a1bc:	bd10      	pop	{r4, pc}

0800a1be <memcpy>:
 800a1be:	440a      	add	r2, r1
 800a1c0:	4291      	cmp	r1, r2
 800a1c2:	f100 33ff 	add.w	r3, r0, #4294967295
 800a1c6:	d100      	bne.n	800a1ca <memcpy+0xc>
 800a1c8:	4770      	bx	lr
 800a1ca:	b510      	push	{r4, lr}
 800a1cc:	f811 4b01 	ldrb.w	r4, [r1], #1
 800a1d0:	4291      	cmp	r1, r2
 800a1d2:	f803 4f01 	strb.w	r4, [r3, #1]!
 800a1d6:	d1f9      	bne.n	800a1cc <memcpy+0xe>
 800a1d8:	bd10      	pop	{r4, pc}

0800a1da <quorem>:
 800a1da:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a1de:	6903      	ldr	r3, [r0, #16]
 800a1e0:	690c      	ldr	r4, [r1, #16]
 800a1e2:	4607      	mov	r7, r0
 800a1e4:	42a3      	cmp	r3, r4
 800a1e6:	db7f      	blt.n	800a2e8 <quorem+0x10e>
 800a1e8:	3c01      	subs	r4, #1
 800a1ea:	f100 0514 	add.w	r5, r0, #20
 800a1ee:	f101 0814 	add.w	r8, r1, #20
 800a1f2:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800a1f6:	9301      	str	r3, [sp, #4]
 800a1f8:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 800a1fc:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800a200:	3301      	adds	r3, #1
 800a202:	429a      	cmp	r2, r3
 800a204:	fbb2 f6f3 	udiv	r6, r2, r3
 800a208:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 800a20c:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 800a210:	d331      	bcc.n	800a276 <quorem+0x9c>
 800a212:	f04f 0e00 	mov.w	lr, #0
 800a216:	4640      	mov	r0, r8
 800a218:	46ac      	mov	ip, r5
 800a21a:	46f2      	mov	sl, lr
 800a21c:	f850 2b04 	ldr.w	r2, [r0], #4
 800a220:	b293      	uxth	r3, r2
 800a222:	fb06 e303 	mla	r3, r6, r3, lr
 800a226:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 800a22a:	0c1a      	lsrs	r2, r3, #16
 800a22c:	b29b      	uxth	r3, r3
 800a22e:	fb06 220e 	mla	r2, r6, lr, r2
 800a232:	ebaa 0303 	sub.w	r3, sl, r3
 800a236:	f8dc a000 	ldr.w	sl, [ip]
 800a23a:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 800a23e:	fa1f fa8a 	uxth.w	sl, sl
 800a242:	4453      	add	r3, sl
 800a244:	f8dc a000 	ldr.w	sl, [ip]
 800a248:	b292      	uxth	r2, r2
 800a24a:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 800a24e:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800a252:	b29b      	uxth	r3, r3
 800a254:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800a258:	4581      	cmp	r9, r0
 800a25a:	ea4f 4a22 	mov.w	sl, r2, asr #16
 800a25e:	f84c 3b04 	str.w	r3, [ip], #4
 800a262:	d2db      	bcs.n	800a21c <quorem+0x42>
 800a264:	f855 300b 	ldr.w	r3, [r5, fp]
 800a268:	b92b      	cbnz	r3, 800a276 <quorem+0x9c>
 800a26a:	9b01      	ldr	r3, [sp, #4]
 800a26c:	3b04      	subs	r3, #4
 800a26e:	429d      	cmp	r5, r3
 800a270:	461a      	mov	r2, r3
 800a272:	d32d      	bcc.n	800a2d0 <quorem+0xf6>
 800a274:	613c      	str	r4, [r7, #16]
 800a276:	4638      	mov	r0, r7
 800a278:	f001 f9a6 	bl	800b5c8 <__mcmp>
 800a27c:	2800      	cmp	r0, #0
 800a27e:	db23      	blt.n	800a2c8 <quorem+0xee>
 800a280:	4629      	mov	r1, r5
 800a282:	2000      	movs	r0, #0
 800a284:	3601      	adds	r6, #1
 800a286:	f858 2b04 	ldr.w	r2, [r8], #4
 800a28a:	f8d1 c000 	ldr.w	ip, [r1]
 800a28e:	b293      	uxth	r3, r2
 800a290:	1ac3      	subs	r3, r0, r3
 800a292:	0c12      	lsrs	r2, r2, #16
 800a294:	fa1f f08c 	uxth.w	r0, ip
 800a298:	4403      	add	r3, r0
 800a29a:	ebc2 421c 	rsb	r2, r2, ip, lsr #16
 800a29e:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800a2a2:	b29b      	uxth	r3, r3
 800a2a4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800a2a8:	45c1      	cmp	r9, r8
 800a2aa:	ea4f 4022 	mov.w	r0, r2, asr #16
 800a2ae:	f841 3b04 	str.w	r3, [r1], #4
 800a2b2:	d2e8      	bcs.n	800a286 <quorem+0xac>
 800a2b4:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800a2b8:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800a2bc:	b922      	cbnz	r2, 800a2c8 <quorem+0xee>
 800a2be:	3b04      	subs	r3, #4
 800a2c0:	429d      	cmp	r5, r3
 800a2c2:	461a      	mov	r2, r3
 800a2c4:	d30a      	bcc.n	800a2dc <quorem+0x102>
 800a2c6:	613c      	str	r4, [r7, #16]
 800a2c8:	4630      	mov	r0, r6
 800a2ca:	b003      	add	sp, #12
 800a2cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a2d0:	6812      	ldr	r2, [r2, #0]
 800a2d2:	3b04      	subs	r3, #4
 800a2d4:	2a00      	cmp	r2, #0
 800a2d6:	d1cd      	bne.n	800a274 <quorem+0x9a>
 800a2d8:	3c01      	subs	r4, #1
 800a2da:	e7c8      	b.n	800a26e <quorem+0x94>
 800a2dc:	6812      	ldr	r2, [r2, #0]
 800a2de:	3b04      	subs	r3, #4
 800a2e0:	2a00      	cmp	r2, #0
 800a2e2:	d1f0      	bne.n	800a2c6 <quorem+0xec>
 800a2e4:	3c01      	subs	r4, #1
 800a2e6:	e7eb      	b.n	800a2c0 <quorem+0xe6>
 800a2e8:	2000      	movs	r0, #0
 800a2ea:	e7ee      	b.n	800a2ca <quorem+0xf0>
 800a2ec:	0000      	movs	r0, r0
	...

0800a2f0 <_dtoa_r>:
 800a2f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a2f4:	4616      	mov	r6, r2
 800a2f6:	461f      	mov	r7, r3
 800a2f8:	69c4      	ldr	r4, [r0, #28]
 800a2fa:	b099      	sub	sp, #100	; 0x64
 800a2fc:	4605      	mov	r5, r0
 800a2fe:	e9cd 6704 	strd	r6, r7, [sp, #16]
 800a302:	f8dd 8094 	ldr.w	r8, [sp, #148]	; 0x94
 800a306:	b974      	cbnz	r4, 800a326 <_dtoa_r+0x36>
 800a308:	2010      	movs	r0, #16
 800a30a:	f000 fe1d 	bl	800af48 <malloc>
 800a30e:	4602      	mov	r2, r0
 800a310:	61e8      	str	r0, [r5, #28]
 800a312:	b920      	cbnz	r0, 800a31e <_dtoa_r+0x2e>
 800a314:	21ef      	movs	r1, #239	; 0xef
 800a316:	4bac      	ldr	r3, [pc, #688]	; (800a5c8 <_dtoa_r+0x2d8>)
 800a318:	48ac      	ldr	r0, [pc, #688]	; (800a5cc <_dtoa_r+0x2dc>)
 800a31a:	f001 fc8d 	bl	800bc38 <__assert_func>
 800a31e:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800a322:	6004      	str	r4, [r0, #0]
 800a324:	60c4      	str	r4, [r0, #12]
 800a326:	69eb      	ldr	r3, [r5, #28]
 800a328:	6819      	ldr	r1, [r3, #0]
 800a32a:	b151      	cbz	r1, 800a342 <_dtoa_r+0x52>
 800a32c:	685a      	ldr	r2, [r3, #4]
 800a32e:	2301      	movs	r3, #1
 800a330:	4093      	lsls	r3, r2
 800a332:	604a      	str	r2, [r1, #4]
 800a334:	608b      	str	r3, [r1, #8]
 800a336:	4628      	mov	r0, r5
 800a338:	f000 ff0c 	bl	800b154 <_Bfree>
 800a33c:	2200      	movs	r2, #0
 800a33e:	69eb      	ldr	r3, [r5, #28]
 800a340:	601a      	str	r2, [r3, #0]
 800a342:	1e3b      	subs	r3, r7, #0
 800a344:	bfaf      	iteee	ge
 800a346:	2300      	movge	r3, #0
 800a348:	2201      	movlt	r2, #1
 800a34a:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 800a34e:	9305      	strlt	r3, [sp, #20]
 800a350:	bfa8      	it	ge
 800a352:	f8c8 3000 	strge.w	r3, [r8]
 800a356:	f8dd 9014 	ldr.w	r9, [sp, #20]
 800a35a:	4b9d      	ldr	r3, [pc, #628]	; (800a5d0 <_dtoa_r+0x2e0>)
 800a35c:	bfb8      	it	lt
 800a35e:	f8c8 2000 	strlt.w	r2, [r8]
 800a362:	ea33 0309 	bics.w	r3, r3, r9
 800a366:	d119      	bne.n	800a39c <_dtoa_r+0xac>
 800a368:	f242 730f 	movw	r3, #9999	; 0x270f
 800a36c:	9a24      	ldr	r2, [sp, #144]	; 0x90
 800a36e:	6013      	str	r3, [r2, #0]
 800a370:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800a374:	4333      	orrs	r3, r6
 800a376:	f000 8589 	beq.w	800ae8c <_dtoa_r+0xb9c>
 800a37a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800a37c:	b953      	cbnz	r3, 800a394 <_dtoa_r+0xa4>
 800a37e:	4b95      	ldr	r3, [pc, #596]	; (800a5d4 <_dtoa_r+0x2e4>)
 800a380:	e023      	b.n	800a3ca <_dtoa_r+0xda>
 800a382:	4b95      	ldr	r3, [pc, #596]	; (800a5d8 <_dtoa_r+0x2e8>)
 800a384:	9303      	str	r3, [sp, #12]
 800a386:	3308      	adds	r3, #8
 800a388:	9a26      	ldr	r2, [sp, #152]	; 0x98
 800a38a:	6013      	str	r3, [r2, #0]
 800a38c:	9803      	ldr	r0, [sp, #12]
 800a38e:	b019      	add	sp, #100	; 0x64
 800a390:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a394:	4b8f      	ldr	r3, [pc, #572]	; (800a5d4 <_dtoa_r+0x2e4>)
 800a396:	9303      	str	r3, [sp, #12]
 800a398:	3303      	adds	r3, #3
 800a39a:	e7f5      	b.n	800a388 <_dtoa_r+0x98>
 800a39c:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 800a3a0:	e9cd 340c 	strd	r3, r4, [sp, #48]	; 0x30
 800a3a4:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800a3a8:	2200      	movs	r2, #0
 800a3aa:	2300      	movs	r3, #0
 800a3ac:	f7f6 fb6c 	bl	8000a88 <__aeabi_dcmpeq>
 800a3b0:	4680      	mov	r8, r0
 800a3b2:	b160      	cbz	r0, 800a3ce <_dtoa_r+0xde>
 800a3b4:	2301      	movs	r3, #1
 800a3b6:	9a24      	ldr	r2, [sp, #144]	; 0x90
 800a3b8:	6013      	str	r3, [r2, #0]
 800a3ba:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800a3bc:	2b00      	cmp	r3, #0
 800a3be:	f000 8562 	beq.w	800ae86 <_dtoa_r+0xb96>
 800a3c2:	4b86      	ldr	r3, [pc, #536]	; (800a5dc <_dtoa_r+0x2ec>)
 800a3c4:	9a26      	ldr	r2, [sp, #152]	; 0x98
 800a3c6:	6013      	str	r3, [r2, #0]
 800a3c8:	3b01      	subs	r3, #1
 800a3ca:	9303      	str	r3, [sp, #12]
 800a3cc:	e7de      	b.n	800a38c <_dtoa_r+0x9c>
 800a3ce:	ab16      	add	r3, sp, #88	; 0x58
 800a3d0:	9301      	str	r3, [sp, #4]
 800a3d2:	ab17      	add	r3, sp, #92	; 0x5c
 800a3d4:	9300      	str	r3, [sp, #0]
 800a3d6:	4628      	mov	r0, r5
 800a3d8:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 800a3dc:	f001 f99c 	bl	800b718 <__d2b>
 800a3e0:	f3c9 540a 	ubfx	r4, r9, #20, #11
 800a3e4:	4682      	mov	sl, r0
 800a3e6:	2c00      	cmp	r4, #0
 800a3e8:	d07e      	beq.n	800a4e8 <_dtoa_r+0x1f8>
 800a3ea:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800a3ee:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800a3f0:	f2a4 34ff 	subw	r4, r4, #1023	; 0x3ff
 800a3f4:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800a3f8:	f043 537f 	orr.w	r3, r3, #1069547520	; 0x3fc00000
 800a3fc:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 800a400:	f8cd 804c 	str.w	r8, [sp, #76]	; 0x4c
 800a404:	4619      	mov	r1, r3
 800a406:	2200      	movs	r2, #0
 800a408:	4b75      	ldr	r3, [pc, #468]	; (800a5e0 <_dtoa_r+0x2f0>)
 800a40a:	f7f5 ff1d 	bl	8000248 <__aeabi_dsub>
 800a40e:	a368      	add	r3, pc, #416	; (adr r3, 800a5b0 <_dtoa_r+0x2c0>)
 800a410:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a414:	f7f6 f8d0 	bl	80005b8 <__aeabi_dmul>
 800a418:	a367      	add	r3, pc, #412	; (adr r3, 800a5b8 <_dtoa_r+0x2c8>)
 800a41a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a41e:	f7f5 ff15 	bl	800024c <__adddf3>
 800a422:	4606      	mov	r6, r0
 800a424:	4620      	mov	r0, r4
 800a426:	460f      	mov	r7, r1
 800a428:	f7f6 f85c 	bl	80004e4 <__aeabi_i2d>
 800a42c:	a364      	add	r3, pc, #400	; (adr r3, 800a5c0 <_dtoa_r+0x2d0>)
 800a42e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a432:	f7f6 f8c1 	bl	80005b8 <__aeabi_dmul>
 800a436:	4602      	mov	r2, r0
 800a438:	460b      	mov	r3, r1
 800a43a:	4630      	mov	r0, r6
 800a43c:	4639      	mov	r1, r7
 800a43e:	f7f5 ff05 	bl	800024c <__adddf3>
 800a442:	4606      	mov	r6, r0
 800a444:	460f      	mov	r7, r1
 800a446:	f7f6 fb67 	bl	8000b18 <__aeabi_d2iz>
 800a44a:	2200      	movs	r2, #0
 800a44c:	4683      	mov	fp, r0
 800a44e:	2300      	movs	r3, #0
 800a450:	4630      	mov	r0, r6
 800a452:	4639      	mov	r1, r7
 800a454:	f7f6 fb22 	bl	8000a9c <__aeabi_dcmplt>
 800a458:	b148      	cbz	r0, 800a46e <_dtoa_r+0x17e>
 800a45a:	4658      	mov	r0, fp
 800a45c:	f7f6 f842 	bl	80004e4 <__aeabi_i2d>
 800a460:	4632      	mov	r2, r6
 800a462:	463b      	mov	r3, r7
 800a464:	f7f6 fb10 	bl	8000a88 <__aeabi_dcmpeq>
 800a468:	b908      	cbnz	r0, 800a46e <_dtoa_r+0x17e>
 800a46a:	f10b 3bff 	add.w	fp, fp, #4294967295
 800a46e:	f1bb 0f16 	cmp.w	fp, #22
 800a472:	d857      	bhi.n	800a524 <_dtoa_r+0x234>
 800a474:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800a478:	4b5a      	ldr	r3, [pc, #360]	; (800a5e4 <_dtoa_r+0x2f4>)
 800a47a:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800a47e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a482:	f7f6 fb0b 	bl	8000a9c <__aeabi_dcmplt>
 800a486:	2800      	cmp	r0, #0
 800a488:	d04e      	beq.n	800a528 <_dtoa_r+0x238>
 800a48a:	2300      	movs	r3, #0
 800a48c:	f10b 3bff 	add.w	fp, fp, #4294967295
 800a490:	930f      	str	r3, [sp, #60]	; 0x3c
 800a492:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800a494:	1b1b      	subs	r3, r3, r4
 800a496:	1e5a      	subs	r2, r3, #1
 800a498:	bf46      	itte	mi
 800a49a:	f1c3 0901 	rsbmi	r9, r3, #1
 800a49e:	2300      	movmi	r3, #0
 800a4a0:	f04f 0900 	movpl.w	r9, #0
 800a4a4:	9209      	str	r2, [sp, #36]	; 0x24
 800a4a6:	bf48      	it	mi
 800a4a8:	9309      	strmi	r3, [sp, #36]	; 0x24
 800a4aa:	f1bb 0f00 	cmp.w	fp, #0
 800a4ae:	db3d      	blt.n	800a52c <_dtoa_r+0x23c>
 800a4b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a4b2:	f8cd b038 	str.w	fp, [sp, #56]	; 0x38
 800a4b6:	445b      	add	r3, fp
 800a4b8:	9309      	str	r3, [sp, #36]	; 0x24
 800a4ba:	2300      	movs	r3, #0
 800a4bc:	930a      	str	r3, [sp, #40]	; 0x28
 800a4be:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800a4c0:	2b09      	cmp	r3, #9
 800a4c2:	d867      	bhi.n	800a594 <_dtoa_r+0x2a4>
 800a4c4:	2b05      	cmp	r3, #5
 800a4c6:	bfc4      	itt	gt
 800a4c8:	3b04      	subgt	r3, #4
 800a4ca:	9322      	strgt	r3, [sp, #136]	; 0x88
 800a4cc:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800a4ce:	bfc8      	it	gt
 800a4d0:	2400      	movgt	r4, #0
 800a4d2:	f1a3 0302 	sub.w	r3, r3, #2
 800a4d6:	bfd8      	it	le
 800a4d8:	2401      	movle	r4, #1
 800a4da:	2b03      	cmp	r3, #3
 800a4dc:	f200 8086 	bhi.w	800a5ec <_dtoa_r+0x2fc>
 800a4e0:	e8df f003 	tbb	[pc, r3]
 800a4e4:	5637392c 	.word	0x5637392c
 800a4e8:	e9dd 4316 	ldrd	r4, r3, [sp, #88]	; 0x58
 800a4ec:	441c      	add	r4, r3
 800a4ee:	f204 4332 	addw	r3, r4, #1074	; 0x432
 800a4f2:	2b20      	cmp	r3, #32
 800a4f4:	bfc1      	itttt	gt
 800a4f6:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 800a4fa:	fa09 f903 	lslgt.w	r9, r9, r3
 800a4fe:	f204 4312 	addwgt	r3, r4, #1042	; 0x412
 800a502:	fa26 f303 	lsrgt.w	r3, r6, r3
 800a506:	bfd6      	itet	le
 800a508:	f1c3 0320 	rsble	r3, r3, #32
 800a50c:	ea49 0003 	orrgt.w	r0, r9, r3
 800a510:	fa06 f003 	lslle.w	r0, r6, r3
 800a514:	f7f5 ffd6 	bl	80004c4 <__aeabi_ui2d>
 800a518:	2201      	movs	r2, #1
 800a51a:	f1a1 73f8 	sub.w	r3, r1, #32505856	; 0x1f00000
 800a51e:	3c01      	subs	r4, #1
 800a520:	9213      	str	r2, [sp, #76]	; 0x4c
 800a522:	e76f      	b.n	800a404 <_dtoa_r+0x114>
 800a524:	2301      	movs	r3, #1
 800a526:	e7b3      	b.n	800a490 <_dtoa_r+0x1a0>
 800a528:	900f      	str	r0, [sp, #60]	; 0x3c
 800a52a:	e7b2      	b.n	800a492 <_dtoa_r+0x1a2>
 800a52c:	f1cb 0300 	rsb	r3, fp, #0
 800a530:	930a      	str	r3, [sp, #40]	; 0x28
 800a532:	2300      	movs	r3, #0
 800a534:	eba9 090b 	sub.w	r9, r9, fp
 800a538:	930e      	str	r3, [sp, #56]	; 0x38
 800a53a:	e7c0      	b.n	800a4be <_dtoa_r+0x1ce>
 800a53c:	2300      	movs	r3, #0
 800a53e:	930b      	str	r3, [sp, #44]	; 0x2c
 800a540:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800a542:	2b00      	cmp	r3, #0
 800a544:	dc55      	bgt.n	800a5f2 <_dtoa_r+0x302>
 800a546:	2301      	movs	r3, #1
 800a548:	461a      	mov	r2, r3
 800a54a:	9306      	str	r3, [sp, #24]
 800a54c:	9308      	str	r3, [sp, #32]
 800a54e:	9223      	str	r2, [sp, #140]	; 0x8c
 800a550:	e00b      	b.n	800a56a <_dtoa_r+0x27a>
 800a552:	2301      	movs	r3, #1
 800a554:	e7f3      	b.n	800a53e <_dtoa_r+0x24e>
 800a556:	2300      	movs	r3, #0
 800a558:	930b      	str	r3, [sp, #44]	; 0x2c
 800a55a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800a55c:	445b      	add	r3, fp
 800a55e:	9306      	str	r3, [sp, #24]
 800a560:	3301      	adds	r3, #1
 800a562:	2b01      	cmp	r3, #1
 800a564:	9308      	str	r3, [sp, #32]
 800a566:	bfb8      	it	lt
 800a568:	2301      	movlt	r3, #1
 800a56a:	2100      	movs	r1, #0
 800a56c:	2204      	movs	r2, #4
 800a56e:	69e8      	ldr	r0, [r5, #28]
 800a570:	f102 0614 	add.w	r6, r2, #20
 800a574:	429e      	cmp	r6, r3
 800a576:	d940      	bls.n	800a5fa <_dtoa_r+0x30a>
 800a578:	6041      	str	r1, [r0, #4]
 800a57a:	4628      	mov	r0, r5
 800a57c:	f000 fdaa 	bl	800b0d4 <_Balloc>
 800a580:	9003      	str	r0, [sp, #12]
 800a582:	2800      	cmp	r0, #0
 800a584:	d13c      	bne.n	800a600 <_dtoa_r+0x310>
 800a586:	4602      	mov	r2, r0
 800a588:	f240 11af 	movw	r1, #431	; 0x1af
 800a58c:	4b16      	ldr	r3, [pc, #88]	; (800a5e8 <_dtoa_r+0x2f8>)
 800a58e:	e6c3      	b.n	800a318 <_dtoa_r+0x28>
 800a590:	2301      	movs	r3, #1
 800a592:	e7e1      	b.n	800a558 <_dtoa_r+0x268>
 800a594:	2401      	movs	r4, #1
 800a596:	2300      	movs	r3, #0
 800a598:	940b      	str	r4, [sp, #44]	; 0x2c
 800a59a:	9322      	str	r3, [sp, #136]	; 0x88
 800a59c:	f04f 33ff 	mov.w	r3, #4294967295
 800a5a0:	2200      	movs	r2, #0
 800a5a2:	9306      	str	r3, [sp, #24]
 800a5a4:	9308      	str	r3, [sp, #32]
 800a5a6:	2312      	movs	r3, #18
 800a5a8:	e7d1      	b.n	800a54e <_dtoa_r+0x25e>
 800a5aa:	bf00      	nop
 800a5ac:	f3af 8000 	nop.w
 800a5b0:	636f4361 	.word	0x636f4361
 800a5b4:	3fd287a7 	.word	0x3fd287a7
 800a5b8:	8b60c8b3 	.word	0x8b60c8b3
 800a5bc:	3fc68a28 	.word	0x3fc68a28
 800a5c0:	509f79fb 	.word	0x509f79fb
 800a5c4:	3fd34413 	.word	0x3fd34413
 800a5c8:	0800c35f 	.word	0x0800c35f
 800a5cc:	0800c376 	.word	0x0800c376
 800a5d0:	7ff00000 	.word	0x7ff00000
 800a5d4:	0800c35b 	.word	0x0800c35b
 800a5d8:	0800c352 	.word	0x0800c352
 800a5dc:	0800c325 	.word	0x0800c325
 800a5e0:	3ff80000 	.word	0x3ff80000
 800a5e4:	0800c460 	.word	0x0800c460
 800a5e8:	0800c3ce 	.word	0x0800c3ce
 800a5ec:	2301      	movs	r3, #1
 800a5ee:	930b      	str	r3, [sp, #44]	; 0x2c
 800a5f0:	e7d4      	b.n	800a59c <_dtoa_r+0x2ac>
 800a5f2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800a5f4:	9306      	str	r3, [sp, #24]
 800a5f6:	9308      	str	r3, [sp, #32]
 800a5f8:	e7b7      	b.n	800a56a <_dtoa_r+0x27a>
 800a5fa:	3101      	adds	r1, #1
 800a5fc:	0052      	lsls	r2, r2, #1
 800a5fe:	e7b7      	b.n	800a570 <_dtoa_r+0x280>
 800a600:	69eb      	ldr	r3, [r5, #28]
 800a602:	9a03      	ldr	r2, [sp, #12]
 800a604:	601a      	str	r2, [r3, #0]
 800a606:	9b08      	ldr	r3, [sp, #32]
 800a608:	2b0e      	cmp	r3, #14
 800a60a:	f200 80a8 	bhi.w	800a75e <_dtoa_r+0x46e>
 800a60e:	2c00      	cmp	r4, #0
 800a610:	f000 80a5 	beq.w	800a75e <_dtoa_r+0x46e>
 800a614:	f1bb 0f00 	cmp.w	fp, #0
 800a618:	dd34      	ble.n	800a684 <_dtoa_r+0x394>
 800a61a:	4b9a      	ldr	r3, [pc, #616]	; (800a884 <_dtoa_r+0x594>)
 800a61c:	f00b 020f 	and.w	r2, fp, #15
 800a620:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800a624:	f41b 7f80 	tst.w	fp, #256	; 0x100
 800a628:	e9d3 3400 	ldrd	r3, r4, [r3]
 800a62c:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 800a630:	ea4f 142b 	mov.w	r4, fp, asr #4
 800a634:	d016      	beq.n	800a664 <_dtoa_r+0x374>
 800a636:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800a63a:	4b93      	ldr	r3, [pc, #588]	; (800a888 <_dtoa_r+0x598>)
 800a63c:	2703      	movs	r7, #3
 800a63e:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800a642:	f7f6 f8e3 	bl	800080c <__aeabi_ddiv>
 800a646:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800a64a:	f004 040f 	and.w	r4, r4, #15
 800a64e:	4e8e      	ldr	r6, [pc, #568]	; (800a888 <_dtoa_r+0x598>)
 800a650:	b954      	cbnz	r4, 800a668 <_dtoa_r+0x378>
 800a652:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800a656:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800a65a:	f7f6 f8d7 	bl	800080c <__aeabi_ddiv>
 800a65e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800a662:	e029      	b.n	800a6b8 <_dtoa_r+0x3c8>
 800a664:	2702      	movs	r7, #2
 800a666:	e7f2      	b.n	800a64e <_dtoa_r+0x35e>
 800a668:	07e1      	lsls	r1, r4, #31
 800a66a:	d508      	bpl.n	800a67e <_dtoa_r+0x38e>
 800a66c:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800a670:	e9d6 2300 	ldrd	r2, r3, [r6]
 800a674:	f7f5 ffa0 	bl	80005b8 <__aeabi_dmul>
 800a678:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800a67c:	3701      	adds	r7, #1
 800a67e:	1064      	asrs	r4, r4, #1
 800a680:	3608      	adds	r6, #8
 800a682:	e7e5      	b.n	800a650 <_dtoa_r+0x360>
 800a684:	f000 80a5 	beq.w	800a7d2 <_dtoa_r+0x4e2>
 800a688:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800a68c:	f1cb 0400 	rsb	r4, fp, #0
 800a690:	4b7c      	ldr	r3, [pc, #496]	; (800a884 <_dtoa_r+0x594>)
 800a692:	f004 020f 	and.w	r2, r4, #15
 800a696:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800a69a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a69e:	f7f5 ff8b 	bl	80005b8 <__aeabi_dmul>
 800a6a2:	2702      	movs	r7, #2
 800a6a4:	2300      	movs	r3, #0
 800a6a6:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800a6aa:	4e77      	ldr	r6, [pc, #476]	; (800a888 <_dtoa_r+0x598>)
 800a6ac:	1124      	asrs	r4, r4, #4
 800a6ae:	2c00      	cmp	r4, #0
 800a6b0:	f040 8084 	bne.w	800a7bc <_dtoa_r+0x4cc>
 800a6b4:	2b00      	cmp	r3, #0
 800a6b6:	d1d2      	bne.n	800a65e <_dtoa_r+0x36e>
 800a6b8:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 800a6bc:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 800a6c0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800a6c2:	2b00      	cmp	r3, #0
 800a6c4:	f000 8087 	beq.w	800a7d6 <_dtoa_r+0x4e6>
 800a6c8:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800a6cc:	2200      	movs	r2, #0
 800a6ce:	4b6f      	ldr	r3, [pc, #444]	; (800a88c <_dtoa_r+0x59c>)
 800a6d0:	f7f6 f9e4 	bl	8000a9c <__aeabi_dcmplt>
 800a6d4:	2800      	cmp	r0, #0
 800a6d6:	d07e      	beq.n	800a7d6 <_dtoa_r+0x4e6>
 800a6d8:	9b08      	ldr	r3, [sp, #32]
 800a6da:	2b00      	cmp	r3, #0
 800a6dc:	d07b      	beq.n	800a7d6 <_dtoa_r+0x4e6>
 800a6de:	9b06      	ldr	r3, [sp, #24]
 800a6e0:	2b00      	cmp	r3, #0
 800a6e2:	dd38      	ble.n	800a756 <_dtoa_r+0x466>
 800a6e4:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800a6e8:	2200      	movs	r2, #0
 800a6ea:	4b69      	ldr	r3, [pc, #420]	; (800a890 <_dtoa_r+0x5a0>)
 800a6ec:	f7f5 ff64 	bl	80005b8 <__aeabi_dmul>
 800a6f0:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800a6f4:	9c06      	ldr	r4, [sp, #24]
 800a6f6:	f10b 38ff 	add.w	r8, fp, #4294967295
 800a6fa:	3701      	adds	r7, #1
 800a6fc:	4638      	mov	r0, r7
 800a6fe:	f7f5 fef1 	bl	80004e4 <__aeabi_i2d>
 800a702:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800a706:	f7f5 ff57 	bl	80005b8 <__aeabi_dmul>
 800a70a:	2200      	movs	r2, #0
 800a70c:	4b61      	ldr	r3, [pc, #388]	; (800a894 <_dtoa_r+0x5a4>)
 800a70e:	f7f5 fd9d 	bl	800024c <__adddf3>
 800a712:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
 800a716:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800a71a:	9611      	str	r6, [sp, #68]	; 0x44
 800a71c:	2c00      	cmp	r4, #0
 800a71e:	d15d      	bne.n	800a7dc <_dtoa_r+0x4ec>
 800a720:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800a724:	2200      	movs	r2, #0
 800a726:	4b5c      	ldr	r3, [pc, #368]	; (800a898 <_dtoa_r+0x5a8>)
 800a728:	f7f5 fd8e 	bl	8000248 <__aeabi_dsub>
 800a72c:	4602      	mov	r2, r0
 800a72e:	460b      	mov	r3, r1
 800a730:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800a734:	4633      	mov	r3, r6
 800a736:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800a738:	f7f6 f9ce 	bl	8000ad8 <__aeabi_dcmpgt>
 800a73c:	2800      	cmp	r0, #0
 800a73e:	f040 8295 	bne.w	800ac6c <_dtoa_r+0x97c>
 800a742:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800a746:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800a748:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
 800a74c:	f7f6 f9a6 	bl	8000a9c <__aeabi_dcmplt>
 800a750:	2800      	cmp	r0, #0
 800a752:	f040 8289 	bne.w	800ac68 <_dtoa_r+0x978>
 800a756:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	; 0x30
 800a75a:	e9cd 3404 	strd	r3, r4, [sp, #16]
 800a75e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800a760:	2b00      	cmp	r3, #0
 800a762:	f2c0 8151 	blt.w	800aa08 <_dtoa_r+0x718>
 800a766:	f1bb 0f0e 	cmp.w	fp, #14
 800a76a:	f300 814d 	bgt.w	800aa08 <_dtoa_r+0x718>
 800a76e:	4b45      	ldr	r3, [pc, #276]	; (800a884 <_dtoa_r+0x594>)
 800a770:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800a774:	e9d3 3400 	ldrd	r3, r4, [r3]
 800a778:	e9cd 3406 	strd	r3, r4, [sp, #24]
 800a77c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800a77e:	2b00      	cmp	r3, #0
 800a780:	f280 80da 	bge.w	800a938 <_dtoa_r+0x648>
 800a784:	9b08      	ldr	r3, [sp, #32]
 800a786:	2b00      	cmp	r3, #0
 800a788:	f300 80d6 	bgt.w	800a938 <_dtoa_r+0x648>
 800a78c:	f040 826b 	bne.w	800ac66 <_dtoa_r+0x976>
 800a790:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800a794:	2200      	movs	r2, #0
 800a796:	4b40      	ldr	r3, [pc, #256]	; (800a898 <_dtoa_r+0x5a8>)
 800a798:	f7f5 ff0e 	bl	80005b8 <__aeabi_dmul>
 800a79c:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800a7a0:	f7f6 f990 	bl	8000ac4 <__aeabi_dcmpge>
 800a7a4:	9c08      	ldr	r4, [sp, #32]
 800a7a6:	4626      	mov	r6, r4
 800a7a8:	2800      	cmp	r0, #0
 800a7aa:	f040 8241 	bne.w	800ac30 <_dtoa_r+0x940>
 800a7ae:	2331      	movs	r3, #49	; 0x31
 800a7b0:	9f03      	ldr	r7, [sp, #12]
 800a7b2:	f10b 0b01 	add.w	fp, fp, #1
 800a7b6:	f807 3b01 	strb.w	r3, [r7], #1
 800a7ba:	e23d      	b.n	800ac38 <_dtoa_r+0x948>
 800a7bc:	07e2      	lsls	r2, r4, #31
 800a7be:	d505      	bpl.n	800a7cc <_dtoa_r+0x4dc>
 800a7c0:	e9d6 2300 	ldrd	r2, r3, [r6]
 800a7c4:	f7f5 fef8 	bl	80005b8 <__aeabi_dmul>
 800a7c8:	2301      	movs	r3, #1
 800a7ca:	3701      	adds	r7, #1
 800a7cc:	1064      	asrs	r4, r4, #1
 800a7ce:	3608      	adds	r6, #8
 800a7d0:	e76d      	b.n	800a6ae <_dtoa_r+0x3be>
 800a7d2:	2702      	movs	r7, #2
 800a7d4:	e770      	b.n	800a6b8 <_dtoa_r+0x3c8>
 800a7d6:	46d8      	mov	r8, fp
 800a7d8:	9c08      	ldr	r4, [sp, #32]
 800a7da:	e78f      	b.n	800a6fc <_dtoa_r+0x40c>
 800a7dc:	9903      	ldr	r1, [sp, #12]
 800a7de:	4b29      	ldr	r3, [pc, #164]	; (800a884 <_dtoa_r+0x594>)
 800a7e0:	4421      	add	r1, r4
 800a7e2:	9112      	str	r1, [sp, #72]	; 0x48
 800a7e4:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800a7e6:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800a7ea:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
 800a7ee:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 800a7f2:	2900      	cmp	r1, #0
 800a7f4:	d054      	beq.n	800a8a0 <_dtoa_r+0x5b0>
 800a7f6:	2000      	movs	r0, #0
 800a7f8:	4928      	ldr	r1, [pc, #160]	; (800a89c <_dtoa_r+0x5ac>)
 800a7fa:	f7f6 f807 	bl	800080c <__aeabi_ddiv>
 800a7fe:	463b      	mov	r3, r7
 800a800:	4632      	mov	r2, r6
 800a802:	f7f5 fd21 	bl	8000248 <__aeabi_dsub>
 800a806:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800a80a:	9f03      	ldr	r7, [sp, #12]
 800a80c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800a810:	f7f6 f982 	bl	8000b18 <__aeabi_d2iz>
 800a814:	4604      	mov	r4, r0
 800a816:	f7f5 fe65 	bl	80004e4 <__aeabi_i2d>
 800a81a:	4602      	mov	r2, r0
 800a81c:	460b      	mov	r3, r1
 800a81e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800a822:	f7f5 fd11 	bl	8000248 <__aeabi_dsub>
 800a826:	4602      	mov	r2, r0
 800a828:	460b      	mov	r3, r1
 800a82a:	3430      	adds	r4, #48	; 0x30
 800a82c:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800a830:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800a834:	f807 4b01 	strb.w	r4, [r7], #1
 800a838:	f7f6 f930 	bl	8000a9c <__aeabi_dcmplt>
 800a83c:	2800      	cmp	r0, #0
 800a83e:	d173      	bne.n	800a928 <_dtoa_r+0x638>
 800a840:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800a844:	2000      	movs	r0, #0
 800a846:	4911      	ldr	r1, [pc, #68]	; (800a88c <_dtoa_r+0x59c>)
 800a848:	f7f5 fcfe 	bl	8000248 <__aeabi_dsub>
 800a84c:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800a850:	f7f6 f924 	bl	8000a9c <__aeabi_dcmplt>
 800a854:	2800      	cmp	r0, #0
 800a856:	f040 80b6 	bne.w	800a9c6 <_dtoa_r+0x6d6>
 800a85a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800a85c:	429f      	cmp	r7, r3
 800a85e:	f43f af7a 	beq.w	800a756 <_dtoa_r+0x466>
 800a862:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800a866:	2200      	movs	r2, #0
 800a868:	4b09      	ldr	r3, [pc, #36]	; (800a890 <_dtoa_r+0x5a0>)
 800a86a:	f7f5 fea5 	bl	80005b8 <__aeabi_dmul>
 800a86e:	2200      	movs	r2, #0
 800a870:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800a874:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800a878:	4b05      	ldr	r3, [pc, #20]	; (800a890 <_dtoa_r+0x5a0>)
 800a87a:	f7f5 fe9d 	bl	80005b8 <__aeabi_dmul>
 800a87e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800a882:	e7c3      	b.n	800a80c <_dtoa_r+0x51c>
 800a884:	0800c460 	.word	0x0800c460
 800a888:	0800c438 	.word	0x0800c438
 800a88c:	3ff00000 	.word	0x3ff00000
 800a890:	40240000 	.word	0x40240000
 800a894:	401c0000 	.word	0x401c0000
 800a898:	40140000 	.word	0x40140000
 800a89c:	3fe00000 	.word	0x3fe00000
 800a8a0:	4630      	mov	r0, r6
 800a8a2:	4639      	mov	r1, r7
 800a8a4:	f7f5 fe88 	bl	80005b8 <__aeabi_dmul>
 800a8a8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800a8aa:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800a8ae:	9c03      	ldr	r4, [sp, #12]
 800a8b0:	9314      	str	r3, [sp, #80]	; 0x50
 800a8b2:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800a8b6:	f7f6 f92f 	bl	8000b18 <__aeabi_d2iz>
 800a8ba:	9015      	str	r0, [sp, #84]	; 0x54
 800a8bc:	f7f5 fe12 	bl	80004e4 <__aeabi_i2d>
 800a8c0:	4602      	mov	r2, r0
 800a8c2:	460b      	mov	r3, r1
 800a8c4:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800a8c8:	f7f5 fcbe 	bl	8000248 <__aeabi_dsub>
 800a8cc:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800a8ce:	4606      	mov	r6, r0
 800a8d0:	3330      	adds	r3, #48	; 0x30
 800a8d2:	f804 3b01 	strb.w	r3, [r4], #1
 800a8d6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800a8d8:	460f      	mov	r7, r1
 800a8da:	429c      	cmp	r4, r3
 800a8dc:	f04f 0200 	mov.w	r2, #0
 800a8e0:	d124      	bne.n	800a92c <_dtoa_r+0x63c>
 800a8e2:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800a8e6:	4baf      	ldr	r3, [pc, #700]	; (800aba4 <_dtoa_r+0x8b4>)
 800a8e8:	f7f5 fcb0 	bl	800024c <__adddf3>
 800a8ec:	4602      	mov	r2, r0
 800a8ee:	460b      	mov	r3, r1
 800a8f0:	4630      	mov	r0, r6
 800a8f2:	4639      	mov	r1, r7
 800a8f4:	f7f6 f8f0 	bl	8000ad8 <__aeabi_dcmpgt>
 800a8f8:	2800      	cmp	r0, #0
 800a8fa:	d163      	bne.n	800a9c4 <_dtoa_r+0x6d4>
 800a8fc:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800a900:	2000      	movs	r0, #0
 800a902:	49a8      	ldr	r1, [pc, #672]	; (800aba4 <_dtoa_r+0x8b4>)
 800a904:	f7f5 fca0 	bl	8000248 <__aeabi_dsub>
 800a908:	4602      	mov	r2, r0
 800a90a:	460b      	mov	r3, r1
 800a90c:	4630      	mov	r0, r6
 800a90e:	4639      	mov	r1, r7
 800a910:	f7f6 f8c4 	bl	8000a9c <__aeabi_dcmplt>
 800a914:	2800      	cmp	r0, #0
 800a916:	f43f af1e 	beq.w	800a756 <_dtoa_r+0x466>
 800a91a:	9f14      	ldr	r7, [sp, #80]	; 0x50
 800a91c:	1e7b      	subs	r3, r7, #1
 800a91e:	9314      	str	r3, [sp, #80]	; 0x50
 800a920:	f817 3c01 	ldrb.w	r3, [r7, #-1]
 800a924:	2b30      	cmp	r3, #48	; 0x30
 800a926:	d0f8      	beq.n	800a91a <_dtoa_r+0x62a>
 800a928:	46c3      	mov	fp, r8
 800a92a:	e03b      	b.n	800a9a4 <_dtoa_r+0x6b4>
 800a92c:	4b9e      	ldr	r3, [pc, #632]	; (800aba8 <_dtoa_r+0x8b8>)
 800a92e:	f7f5 fe43 	bl	80005b8 <__aeabi_dmul>
 800a932:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800a936:	e7bc      	b.n	800a8b2 <_dtoa_r+0x5c2>
 800a938:	9f03      	ldr	r7, [sp, #12]
 800a93a:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
 800a93e:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800a942:	4640      	mov	r0, r8
 800a944:	4649      	mov	r1, r9
 800a946:	f7f5 ff61 	bl	800080c <__aeabi_ddiv>
 800a94a:	f7f6 f8e5 	bl	8000b18 <__aeabi_d2iz>
 800a94e:	4604      	mov	r4, r0
 800a950:	f7f5 fdc8 	bl	80004e4 <__aeabi_i2d>
 800a954:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800a958:	f7f5 fe2e 	bl	80005b8 <__aeabi_dmul>
 800a95c:	4602      	mov	r2, r0
 800a95e:	460b      	mov	r3, r1
 800a960:	4640      	mov	r0, r8
 800a962:	4649      	mov	r1, r9
 800a964:	f7f5 fc70 	bl	8000248 <__aeabi_dsub>
 800a968:	f104 0630 	add.w	r6, r4, #48	; 0x30
 800a96c:	f807 6b01 	strb.w	r6, [r7], #1
 800a970:	9e03      	ldr	r6, [sp, #12]
 800a972:	f8dd c020 	ldr.w	ip, [sp, #32]
 800a976:	1bbe      	subs	r6, r7, r6
 800a978:	45b4      	cmp	ip, r6
 800a97a:	4602      	mov	r2, r0
 800a97c:	460b      	mov	r3, r1
 800a97e:	d136      	bne.n	800a9ee <_dtoa_r+0x6fe>
 800a980:	f7f5 fc64 	bl	800024c <__adddf3>
 800a984:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800a988:	4680      	mov	r8, r0
 800a98a:	4689      	mov	r9, r1
 800a98c:	f7f6 f8a4 	bl	8000ad8 <__aeabi_dcmpgt>
 800a990:	bb58      	cbnz	r0, 800a9ea <_dtoa_r+0x6fa>
 800a992:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800a996:	4640      	mov	r0, r8
 800a998:	4649      	mov	r1, r9
 800a99a:	f7f6 f875 	bl	8000a88 <__aeabi_dcmpeq>
 800a99e:	b108      	cbz	r0, 800a9a4 <_dtoa_r+0x6b4>
 800a9a0:	07e3      	lsls	r3, r4, #31
 800a9a2:	d422      	bmi.n	800a9ea <_dtoa_r+0x6fa>
 800a9a4:	4651      	mov	r1, sl
 800a9a6:	4628      	mov	r0, r5
 800a9a8:	f000 fbd4 	bl	800b154 <_Bfree>
 800a9ac:	2300      	movs	r3, #0
 800a9ae:	9a24      	ldr	r2, [sp, #144]	; 0x90
 800a9b0:	703b      	strb	r3, [r7, #0]
 800a9b2:	f10b 0301 	add.w	r3, fp, #1
 800a9b6:	6013      	str	r3, [r2, #0]
 800a9b8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800a9ba:	2b00      	cmp	r3, #0
 800a9bc:	f43f ace6 	beq.w	800a38c <_dtoa_r+0x9c>
 800a9c0:	601f      	str	r7, [r3, #0]
 800a9c2:	e4e3      	b.n	800a38c <_dtoa_r+0x9c>
 800a9c4:	4627      	mov	r7, r4
 800a9c6:	463b      	mov	r3, r7
 800a9c8:	461f      	mov	r7, r3
 800a9ca:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800a9ce:	2a39      	cmp	r2, #57	; 0x39
 800a9d0:	d107      	bne.n	800a9e2 <_dtoa_r+0x6f2>
 800a9d2:	9a03      	ldr	r2, [sp, #12]
 800a9d4:	429a      	cmp	r2, r3
 800a9d6:	d1f7      	bne.n	800a9c8 <_dtoa_r+0x6d8>
 800a9d8:	2230      	movs	r2, #48	; 0x30
 800a9da:	9903      	ldr	r1, [sp, #12]
 800a9dc:	f108 0801 	add.w	r8, r8, #1
 800a9e0:	700a      	strb	r2, [r1, #0]
 800a9e2:	781a      	ldrb	r2, [r3, #0]
 800a9e4:	3201      	adds	r2, #1
 800a9e6:	701a      	strb	r2, [r3, #0]
 800a9e8:	e79e      	b.n	800a928 <_dtoa_r+0x638>
 800a9ea:	46d8      	mov	r8, fp
 800a9ec:	e7eb      	b.n	800a9c6 <_dtoa_r+0x6d6>
 800a9ee:	2200      	movs	r2, #0
 800a9f0:	4b6d      	ldr	r3, [pc, #436]	; (800aba8 <_dtoa_r+0x8b8>)
 800a9f2:	f7f5 fde1 	bl	80005b8 <__aeabi_dmul>
 800a9f6:	2200      	movs	r2, #0
 800a9f8:	2300      	movs	r3, #0
 800a9fa:	4680      	mov	r8, r0
 800a9fc:	4689      	mov	r9, r1
 800a9fe:	f7f6 f843 	bl	8000a88 <__aeabi_dcmpeq>
 800aa02:	2800      	cmp	r0, #0
 800aa04:	d09b      	beq.n	800a93e <_dtoa_r+0x64e>
 800aa06:	e7cd      	b.n	800a9a4 <_dtoa_r+0x6b4>
 800aa08:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800aa0a:	2a00      	cmp	r2, #0
 800aa0c:	f000 80c4 	beq.w	800ab98 <_dtoa_r+0x8a8>
 800aa10:	9a22      	ldr	r2, [sp, #136]	; 0x88
 800aa12:	2a01      	cmp	r2, #1
 800aa14:	f300 80a8 	bgt.w	800ab68 <_dtoa_r+0x878>
 800aa18:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800aa1a:	2a00      	cmp	r2, #0
 800aa1c:	f000 80a0 	beq.w	800ab60 <_dtoa_r+0x870>
 800aa20:	f203 4333 	addw	r3, r3, #1075	; 0x433
 800aa24:	464f      	mov	r7, r9
 800aa26:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800aa28:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800aa2a:	2101      	movs	r1, #1
 800aa2c:	441a      	add	r2, r3
 800aa2e:	4628      	mov	r0, r5
 800aa30:	4499      	add	r9, r3
 800aa32:	9209      	str	r2, [sp, #36]	; 0x24
 800aa34:	f000 fc44 	bl	800b2c0 <__i2b>
 800aa38:	4606      	mov	r6, r0
 800aa3a:	b15f      	cbz	r7, 800aa54 <_dtoa_r+0x764>
 800aa3c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800aa3e:	2b00      	cmp	r3, #0
 800aa40:	dd08      	ble.n	800aa54 <_dtoa_r+0x764>
 800aa42:	42bb      	cmp	r3, r7
 800aa44:	bfa8      	it	ge
 800aa46:	463b      	movge	r3, r7
 800aa48:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800aa4a:	eba9 0903 	sub.w	r9, r9, r3
 800aa4e:	1aff      	subs	r7, r7, r3
 800aa50:	1ad3      	subs	r3, r2, r3
 800aa52:	9309      	str	r3, [sp, #36]	; 0x24
 800aa54:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800aa56:	b1f3      	cbz	r3, 800aa96 <_dtoa_r+0x7a6>
 800aa58:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800aa5a:	2b00      	cmp	r3, #0
 800aa5c:	f000 80a0 	beq.w	800aba0 <_dtoa_r+0x8b0>
 800aa60:	2c00      	cmp	r4, #0
 800aa62:	dd10      	ble.n	800aa86 <_dtoa_r+0x796>
 800aa64:	4631      	mov	r1, r6
 800aa66:	4622      	mov	r2, r4
 800aa68:	4628      	mov	r0, r5
 800aa6a:	f000 fce7 	bl	800b43c <__pow5mult>
 800aa6e:	4652      	mov	r2, sl
 800aa70:	4601      	mov	r1, r0
 800aa72:	4606      	mov	r6, r0
 800aa74:	4628      	mov	r0, r5
 800aa76:	f000 fc39 	bl	800b2ec <__multiply>
 800aa7a:	4680      	mov	r8, r0
 800aa7c:	4651      	mov	r1, sl
 800aa7e:	4628      	mov	r0, r5
 800aa80:	f000 fb68 	bl	800b154 <_Bfree>
 800aa84:	46c2      	mov	sl, r8
 800aa86:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800aa88:	1b1a      	subs	r2, r3, r4
 800aa8a:	d004      	beq.n	800aa96 <_dtoa_r+0x7a6>
 800aa8c:	4651      	mov	r1, sl
 800aa8e:	4628      	mov	r0, r5
 800aa90:	f000 fcd4 	bl	800b43c <__pow5mult>
 800aa94:	4682      	mov	sl, r0
 800aa96:	2101      	movs	r1, #1
 800aa98:	4628      	mov	r0, r5
 800aa9a:	f000 fc11 	bl	800b2c0 <__i2b>
 800aa9e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800aaa0:	4604      	mov	r4, r0
 800aaa2:	2b00      	cmp	r3, #0
 800aaa4:	f340 8082 	ble.w	800abac <_dtoa_r+0x8bc>
 800aaa8:	461a      	mov	r2, r3
 800aaaa:	4601      	mov	r1, r0
 800aaac:	4628      	mov	r0, r5
 800aaae:	f000 fcc5 	bl	800b43c <__pow5mult>
 800aab2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800aab4:	4604      	mov	r4, r0
 800aab6:	2b01      	cmp	r3, #1
 800aab8:	dd7b      	ble.n	800abb2 <_dtoa_r+0x8c2>
 800aaba:	f04f 0800 	mov.w	r8, #0
 800aabe:	6923      	ldr	r3, [r4, #16]
 800aac0:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800aac4:	6918      	ldr	r0, [r3, #16]
 800aac6:	f000 fbad 	bl	800b224 <__hi0bits>
 800aaca:	f1c0 0020 	rsb	r0, r0, #32
 800aace:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800aad0:	4418      	add	r0, r3
 800aad2:	f010 001f 	ands.w	r0, r0, #31
 800aad6:	f000 8092 	beq.w	800abfe <_dtoa_r+0x90e>
 800aada:	f1c0 0320 	rsb	r3, r0, #32
 800aade:	2b04      	cmp	r3, #4
 800aae0:	f340 8085 	ble.w	800abee <_dtoa_r+0x8fe>
 800aae4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800aae6:	f1c0 001c 	rsb	r0, r0, #28
 800aaea:	4403      	add	r3, r0
 800aaec:	4481      	add	r9, r0
 800aaee:	4407      	add	r7, r0
 800aaf0:	9309      	str	r3, [sp, #36]	; 0x24
 800aaf2:	f1b9 0f00 	cmp.w	r9, #0
 800aaf6:	dd05      	ble.n	800ab04 <_dtoa_r+0x814>
 800aaf8:	4651      	mov	r1, sl
 800aafa:	464a      	mov	r2, r9
 800aafc:	4628      	mov	r0, r5
 800aafe:	f000 fcf7 	bl	800b4f0 <__lshift>
 800ab02:	4682      	mov	sl, r0
 800ab04:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ab06:	2b00      	cmp	r3, #0
 800ab08:	dd05      	ble.n	800ab16 <_dtoa_r+0x826>
 800ab0a:	4621      	mov	r1, r4
 800ab0c:	461a      	mov	r2, r3
 800ab0e:	4628      	mov	r0, r5
 800ab10:	f000 fcee 	bl	800b4f0 <__lshift>
 800ab14:	4604      	mov	r4, r0
 800ab16:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800ab18:	2b00      	cmp	r3, #0
 800ab1a:	d072      	beq.n	800ac02 <_dtoa_r+0x912>
 800ab1c:	4621      	mov	r1, r4
 800ab1e:	4650      	mov	r0, sl
 800ab20:	f000 fd52 	bl	800b5c8 <__mcmp>
 800ab24:	2800      	cmp	r0, #0
 800ab26:	da6c      	bge.n	800ac02 <_dtoa_r+0x912>
 800ab28:	2300      	movs	r3, #0
 800ab2a:	4651      	mov	r1, sl
 800ab2c:	220a      	movs	r2, #10
 800ab2e:	4628      	mov	r0, r5
 800ab30:	f000 fb32 	bl	800b198 <__multadd>
 800ab34:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800ab36:	4682      	mov	sl, r0
 800ab38:	f10b 3bff 	add.w	fp, fp, #4294967295
 800ab3c:	2b00      	cmp	r3, #0
 800ab3e:	f000 81ac 	beq.w	800ae9a <_dtoa_r+0xbaa>
 800ab42:	2300      	movs	r3, #0
 800ab44:	4631      	mov	r1, r6
 800ab46:	220a      	movs	r2, #10
 800ab48:	4628      	mov	r0, r5
 800ab4a:	f000 fb25 	bl	800b198 <__multadd>
 800ab4e:	9b06      	ldr	r3, [sp, #24]
 800ab50:	4606      	mov	r6, r0
 800ab52:	2b00      	cmp	r3, #0
 800ab54:	f300 8093 	bgt.w	800ac7e <_dtoa_r+0x98e>
 800ab58:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800ab5a:	2b02      	cmp	r3, #2
 800ab5c:	dc59      	bgt.n	800ac12 <_dtoa_r+0x922>
 800ab5e:	e08e      	b.n	800ac7e <_dtoa_r+0x98e>
 800ab60:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800ab62:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 800ab66:	e75d      	b.n	800aa24 <_dtoa_r+0x734>
 800ab68:	9b08      	ldr	r3, [sp, #32]
 800ab6a:	1e5c      	subs	r4, r3, #1
 800ab6c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800ab6e:	42a3      	cmp	r3, r4
 800ab70:	bfbf      	itttt	lt
 800ab72:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 800ab74:	9a0e      	ldrlt	r2, [sp, #56]	; 0x38
 800ab76:	1ae3      	sublt	r3, r4, r3
 800ab78:	18d2      	addlt	r2, r2, r3
 800ab7a:	bfa8      	it	ge
 800ab7c:	1b1c      	subge	r4, r3, r4
 800ab7e:	9b08      	ldr	r3, [sp, #32]
 800ab80:	bfbe      	ittt	lt
 800ab82:	940a      	strlt	r4, [sp, #40]	; 0x28
 800ab84:	920e      	strlt	r2, [sp, #56]	; 0x38
 800ab86:	2400      	movlt	r4, #0
 800ab88:	2b00      	cmp	r3, #0
 800ab8a:	bfb5      	itete	lt
 800ab8c:	eba9 0703 	sublt.w	r7, r9, r3
 800ab90:	464f      	movge	r7, r9
 800ab92:	2300      	movlt	r3, #0
 800ab94:	9b08      	ldrge	r3, [sp, #32]
 800ab96:	e747      	b.n	800aa28 <_dtoa_r+0x738>
 800ab98:	464f      	mov	r7, r9
 800ab9a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800ab9c:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 800ab9e:	e74c      	b.n	800aa3a <_dtoa_r+0x74a>
 800aba0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800aba2:	e773      	b.n	800aa8c <_dtoa_r+0x79c>
 800aba4:	3fe00000 	.word	0x3fe00000
 800aba8:	40240000 	.word	0x40240000
 800abac:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800abae:	2b01      	cmp	r3, #1
 800abb0:	dc18      	bgt.n	800abe4 <_dtoa_r+0x8f4>
 800abb2:	9b04      	ldr	r3, [sp, #16]
 800abb4:	b9b3      	cbnz	r3, 800abe4 <_dtoa_r+0x8f4>
 800abb6:	9b05      	ldr	r3, [sp, #20]
 800abb8:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800abbc:	b993      	cbnz	r3, 800abe4 <_dtoa_r+0x8f4>
 800abbe:	9b05      	ldr	r3, [sp, #20]
 800abc0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800abc4:	0d1b      	lsrs	r3, r3, #20
 800abc6:	051b      	lsls	r3, r3, #20
 800abc8:	b17b      	cbz	r3, 800abea <_dtoa_r+0x8fa>
 800abca:	f04f 0801 	mov.w	r8, #1
 800abce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800abd0:	f109 0901 	add.w	r9, r9, #1
 800abd4:	3301      	adds	r3, #1
 800abd6:	9309      	str	r3, [sp, #36]	; 0x24
 800abd8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800abda:	2b00      	cmp	r3, #0
 800abdc:	f47f af6f 	bne.w	800aabe <_dtoa_r+0x7ce>
 800abe0:	2001      	movs	r0, #1
 800abe2:	e774      	b.n	800aace <_dtoa_r+0x7de>
 800abe4:	f04f 0800 	mov.w	r8, #0
 800abe8:	e7f6      	b.n	800abd8 <_dtoa_r+0x8e8>
 800abea:	4698      	mov	r8, r3
 800abec:	e7f4      	b.n	800abd8 <_dtoa_r+0x8e8>
 800abee:	d080      	beq.n	800aaf2 <_dtoa_r+0x802>
 800abf0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800abf2:	331c      	adds	r3, #28
 800abf4:	441a      	add	r2, r3
 800abf6:	4499      	add	r9, r3
 800abf8:	441f      	add	r7, r3
 800abfa:	9209      	str	r2, [sp, #36]	; 0x24
 800abfc:	e779      	b.n	800aaf2 <_dtoa_r+0x802>
 800abfe:	4603      	mov	r3, r0
 800ac00:	e7f6      	b.n	800abf0 <_dtoa_r+0x900>
 800ac02:	9b08      	ldr	r3, [sp, #32]
 800ac04:	2b00      	cmp	r3, #0
 800ac06:	dc34      	bgt.n	800ac72 <_dtoa_r+0x982>
 800ac08:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800ac0a:	2b02      	cmp	r3, #2
 800ac0c:	dd31      	ble.n	800ac72 <_dtoa_r+0x982>
 800ac0e:	9b08      	ldr	r3, [sp, #32]
 800ac10:	9306      	str	r3, [sp, #24]
 800ac12:	9b06      	ldr	r3, [sp, #24]
 800ac14:	b963      	cbnz	r3, 800ac30 <_dtoa_r+0x940>
 800ac16:	4621      	mov	r1, r4
 800ac18:	2205      	movs	r2, #5
 800ac1a:	4628      	mov	r0, r5
 800ac1c:	f000 fabc 	bl	800b198 <__multadd>
 800ac20:	4601      	mov	r1, r0
 800ac22:	4604      	mov	r4, r0
 800ac24:	4650      	mov	r0, sl
 800ac26:	f000 fccf 	bl	800b5c8 <__mcmp>
 800ac2a:	2800      	cmp	r0, #0
 800ac2c:	f73f adbf 	bgt.w	800a7ae <_dtoa_r+0x4be>
 800ac30:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800ac32:	9f03      	ldr	r7, [sp, #12]
 800ac34:	ea6f 0b03 	mvn.w	fp, r3
 800ac38:	f04f 0800 	mov.w	r8, #0
 800ac3c:	4621      	mov	r1, r4
 800ac3e:	4628      	mov	r0, r5
 800ac40:	f000 fa88 	bl	800b154 <_Bfree>
 800ac44:	2e00      	cmp	r6, #0
 800ac46:	f43f aead 	beq.w	800a9a4 <_dtoa_r+0x6b4>
 800ac4a:	f1b8 0f00 	cmp.w	r8, #0
 800ac4e:	d005      	beq.n	800ac5c <_dtoa_r+0x96c>
 800ac50:	45b0      	cmp	r8, r6
 800ac52:	d003      	beq.n	800ac5c <_dtoa_r+0x96c>
 800ac54:	4641      	mov	r1, r8
 800ac56:	4628      	mov	r0, r5
 800ac58:	f000 fa7c 	bl	800b154 <_Bfree>
 800ac5c:	4631      	mov	r1, r6
 800ac5e:	4628      	mov	r0, r5
 800ac60:	f000 fa78 	bl	800b154 <_Bfree>
 800ac64:	e69e      	b.n	800a9a4 <_dtoa_r+0x6b4>
 800ac66:	2400      	movs	r4, #0
 800ac68:	4626      	mov	r6, r4
 800ac6a:	e7e1      	b.n	800ac30 <_dtoa_r+0x940>
 800ac6c:	46c3      	mov	fp, r8
 800ac6e:	4626      	mov	r6, r4
 800ac70:	e59d      	b.n	800a7ae <_dtoa_r+0x4be>
 800ac72:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800ac74:	2b00      	cmp	r3, #0
 800ac76:	f000 80c8 	beq.w	800ae0a <_dtoa_r+0xb1a>
 800ac7a:	9b08      	ldr	r3, [sp, #32]
 800ac7c:	9306      	str	r3, [sp, #24]
 800ac7e:	2f00      	cmp	r7, #0
 800ac80:	dd05      	ble.n	800ac8e <_dtoa_r+0x99e>
 800ac82:	4631      	mov	r1, r6
 800ac84:	463a      	mov	r2, r7
 800ac86:	4628      	mov	r0, r5
 800ac88:	f000 fc32 	bl	800b4f0 <__lshift>
 800ac8c:	4606      	mov	r6, r0
 800ac8e:	f1b8 0f00 	cmp.w	r8, #0
 800ac92:	d05b      	beq.n	800ad4c <_dtoa_r+0xa5c>
 800ac94:	4628      	mov	r0, r5
 800ac96:	6871      	ldr	r1, [r6, #4]
 800ac98:	f000 fa1c 	bl	800b0d4 <_Balloc>
 800ac9c:	4607      	mov	r7, r0
 800ac9e:	b928      	cbnz	r0, 800acac <_dtoa_r+0x9bc>
 800aca0:	4602      	mov	r2, r0
 800aca2:	f240 21ef 	movw	r1, #751	; 0x2ef
 800aca6:	4b81      	ldr	r3, [pc, #516]	; (800aeac <_dtoa_r+0xbbc>)
 800aca8:	f7ff bb36 	b.w	800a318 <_dtoa_r+0x28>
 800acac:	6932      	ldr	r2, [r6, #16]
 800acae:	f106 010c 	add.w	r1, r6, #12
 800acb2:	3202      	adds	r2, #2
 800acb4:	0092      	lsls	r2, r2, #2
 800acb6:	300c      	adds	r0, #12
 800acb8:	f7ff fa81 	bl	800a1be <memcpy>
 800acbc:	2201      	movs	r2, #1
 800acbe:	4639      	mov	r1, r7
 800acc0:	4628      	mov	r0, r5
 800acc2:	f000 fc15 	bl	800b4f0 <__lshift>
 800acc6:	46b0      	mov	r8, r6
 800acc8:	4606      	mov	r6, r0
 800acca:	9b03      	ldr	r3, [sp, #12]
 800accc:	9a03      	ldr	r2, [sp, #12]
 800acce:	3301      	adds	r3, #1
 800acd0:	9308      	str	r3, [sp, #32]
 800acd2:	9b06      	ldr	r3, [sp, #24]
 800acd4:	4413      	add	r3, r2
 800acd6:	930b      	str	r3, [sp, #44]	; 0x2c
 800acd8:	9b04      	ldr	r3, [sp, #16]
 800acda:	f003 0301 	and.w	r3, r3, #1
 800acde:	930a      	str	r3, [sp, #40]	; 0x28
 800ace0:	9b08      	ldr	r3, [sp, #32]
 800ace2:	4621      	mov	r1, r4
 800ace4:	3b01      	subs	r3, #1
 800ace6:	4650      	mov	r0, sl
 800ace8:	9304      	str	r3, [sp, #16]
 800acea:	f7ff fa76 	bl	800a1da <quorem>
 800acee:	4641      	mov	r1, r8
 800acf0:	9006      	str	r0, [sp, #24]
 800acf2:	f100 0930 	add.w	r9, r0, #48	; 0x30
 800acf6:	4650      	mov	r0, sl
 800acf8:	f000 fc66 	bl	800b5c8 <__mcmp>
 800acfc:	4632      	mov	r2, r6
 800acfe:	9009      	str	r0, [sp, #36]	; 0x24
 800ad00:	4621      	mov	r1, r4
 800ad02:	4628      	mov	r0, r5
 800ad04:	f000 fc7c 	bl	800b600 <__mdiff>
 800ad08:	68c2      	ldr	r2, [r0, #12]
 800ad0a:	4607      	mov	r7, r0
 800ad0c:	bb02      	cbnz	r2, 800ad50 <_dtoa_r+0xa60>
 800ad0e:	4601      	mov	r1, r0
 800ad10:	4650      	mov	r0, sl
 800ad12:	f000 fc59 	bl	800b5c8 <__mcmp>
 800ad16:	4602      	mov	r2, r0
 800ad18:	4639      	mov	r1, r7
 800ad1a:	4628      	mov	r0, r5
 800ad1c:	920c      	str	r2, [sp, #48]	; 0x30
 800ad1e:	f000 fa19 	bl	800b154 <_Bfree>
 800ad22:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800ad24:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800ad26:	9f08      	ldr	r7, [sp, #32]
 800ad28:	ea43 0102 	orr.w	r1, r3, r2
 800ad2c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800ad2e:	4319      	orrs	r1, r3
 800ad30:	d110      	bne.n	800ad54 <_dtoa_r+0xa64>
 800ad32:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 800ad36:	d029      	beq.n	800ad8c <_dtoa_r+0xa9c>
 800ad38:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ad3a:	2b00      	cmp	r3, #0
 800ad3c:	dd02      	ble.n	800ad44 <_dtoa_r+0xa54>
 800ad3e:	9b06      	ldr	r3, [sp, #24]
 800ad40:	f103 0931 	add.w	r9, r3, #49	; 0x31
 800ad44:	9b04      	ldr	r3, [sp, #16]
 800ad46:	f883 9000 	strb.w	r9, [r3]
 800ad4a:	e777      	b.n	800ac3c <_dtoa_r+0x94c>
 800ad4c:	4630      	mov	r0, r6
 800ad4e:	e7ba      	b.n	800acc6 <_dtoa_r+0x9d6>
 800ad50:	2201      	movs	r2, #1
 800ad52:	e7e1      	b.n	800ad18 <_dtoa_r+0xa28>
 800ad54:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ad56:	2b00      	cmp	r3, #0
 800ad58:	db04      	blt.n	800ad64 <_dtoa_r+0xa74>
 800ad5a:	9922      	ldr	r1, [sp, #136]	; 0x88
 800ad5c:	430b      	orrs	r3, r1
 800ad5e:	990a      	ldr	r1, [sp, #40]	; 0x28
 800ad60:	430b      	orrs	r3, r1
 800ad62:	d120      	bne.n	800ada6 <_dtoa_r+0xab6>
 800ad64:	2a00      	cmp	r2, #0
 800ad66:	dded      	ble.n	800ad44 <_dtoa_r+0xa54>
 800ad68:	4651      	mov	r1, sl
 800ad6a:	2201      	movs	r2, #1
 800ad6c:	4628      	mov	r0, r5
 800ad6e:	f000 fbbf 	bl	800b4f0 <__lshift>
 800ad72:	4621      	mov	r1, r4
 800ad74:	4682      	mov	sl, r0
 800ad76:	f000 fc27 	bl	800b5c8 <__mcmp>
 800ad7a:	2800      	cmp	r0, #0
 800ad7c:	dc03      	bgt.n	800ad86 <_dtoa_r+0xa96>
 800ad7e:	d1e1      	bne.n	800ad44 <_dtoa_r+0xa54>
 800ad80:	f019 0f01 	tst.w	r9, #1
 800ad84:	d0de      	beq.n	800ad44 <_dtoa_r+0xa54>
 800ad86:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 800ad8a:	d1d8      	bne.n	800ad3e <_dtoa_r+0xa4e>
 800ad8c:	2339      	movs	r3, #57	; 0x39
 800ad8e:	9a04      	ldr	r2, [sp, #16]
 800ad90:	7013      	strb	r3, [r2, #0]
 800ad92:	463b      	mov	r3, r7
 800ad94:	461f      	mov	r7, r3
 800ad96:	f817 2c01 	ldrb.w	r2, [r7, #-1]
 800ad9a:	3b01      	subs	r3, #1
 800ad9c:	2a39      	cmp	r2, #57	; 0x39
 800ad9e:	d06b      	beq.n	800ae78 <_dtoa_r+0xb88>
 800ada0:	3201      	adds	r2, #1
 800ada2:	701a      	strb	r2, [r3, #0]
 800ada4:	e74a      	b.n	800ac3c <_dtoa_r+0x94c>
 800ada6:	2a00      	cmp	r2, #0
 800ada8:	dd07      	ble.n	800adba <_dtoa_r+0xaca>
 800adaa:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 800adae:	d0ed      	beq.n	800ad8c <_dtoa_r+0xa9c>
 800adb0:	9a04      	ldr	r2, [sp, #16]
 800adb2:	f109 0301 	add.w	r3, r9, #1
 800adb6:	7013      	strb	r3, [r2, #0]
 800adb8:	e740      	b.n	800ac3c <_dtoa_r+0x94c>
 800adba:	9b08      	ldr	r3, [sp, #32]
 800adbc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800adbe:	f803 9c01 	strb.w	r9, [r3, #-1]
 800adc2:	4293      	cmp	r3, r2
 800adc4:	d042      	beq.n	800ae4c <_dtoa_r+0xb5c>
 800adc6:	4651      	mov	r1, sl
 800adc8:	2300      	movs	r3, #0
 800adca:	220a      	movs	r2, #10
 800adcc:	4628      	mov	r0, r5
 800adce:	f000 f9e3 	bl	800b198 <__multadd>
 800add2:	45b0      	cmp	r8, r6
 800add4:	4682      	mov	sl, r0
 800add6:	f04f 0300 	mov.w	r3, #0
 800adda:	f04f 020a 	mov.w	r2, #10
 800adde:	4641      	mov	r1, r8
 800ade0:	4628      	mov	r0, r5
 800ade2:	d107      	bne.n	800adf4 <_dtoa_r+0xb04>
 800ade4:	f000 f9d8 	bl	800b198 <__multadd>
 800ade8:	4680      	mov	r8, r0
 800adea:	4606      	mov	r6, r0
 800adec:	9b08      	ldr	r3, [sp, #32]
 800adee:	3301      	adds	r3, #1
 800adf0:	9308      	str	r3, [sp, #32]
 800adf2:	e775      	b.n	800ace0 <_dtoa_r+0x9f0>
 800adf4:	f000 f9d0 	bl	800b198 <__multadd>
 800adf8:	4631      	mov	r1, r6
 800adfa:	4680      	mov	r8, r0
 800adfc:	2300      	movs	r3, #0
 800adfe:	220a      	movs	r2, #10
 800ae00:	4628      	mov	r0, r5
 800ae02:	f000 f9c9 	bl	800b198 <__multadd>
 800ae06:	4606      	mov	r6, r0
 800ae08:	e7f0      	b.n	800adec <_dtoa_r+0xafc>
 800ae0a:	9b08      	ldr	r3, [sp, #32]
 800ae0c:	9306      	str	r3, [sp, #24]
 800ae0e:	9f03      	ldr	r7, [sp, #12]
 800ae10:	4621      	mov	r1, r4
 800ae12:	4650      	mov	r0, sl
 800ae14:	f7ff f9e1 	bl	800a1da <quorem>
 800ae18:	9b03      	ldr	r3, [sp, #12]
 800ae1a:	f100 0930 	add.w	r9, r0, #48	; 0x30
 800ae1e:	f807 9b01 	strb.w	r9, [r7], #1
 800ae22:	1afa      	subs	r2, r7, r3
 800ae24:	9b06      	ldr	r3, [sp, #24]
 800ae26:	4293      	cmp	r3, r2
 800ae28:	dd07      	ble.n	800ae3a <_dtoa_r+0xb4a>
 800ae2a:	4651      	mov	r1, sl
 800ae2c:	2300      	movs	r3, #0
 800ae2e:	220a      	movs	r2, #10
 800ae30:	4628      	mov	r0, r5
 800ae32:	f000 f9b1 	bl	800b198 <__multadd>
 800ae36:	4682      	mov	sl, r0
 800ae38:	e7ea      	b.n	800ae10 <_dtoa_r+0xb20>
 800ae3a:	9b06      	ldr	r3, [sp, #24]
 800ae3c:	f04f 0800 	mov.w	r8, #0
 800ae40:	2b00      	cmp	r3, #0
 800ae42:	bfcc      	ite	gt
 800ae44:	461f      	movgt	r7, r3
 800ae46:	2701      	movle	r7, #1
 800ae48:	9b03      	ldr	r3, [sp, #12]
 800ae4a:	441f      	add	r7, r3
 800ae4c:	4651      	mov	r1, sl
 800ae4e:	2201      	movs	r2, #1
 800ae50:	4628      	mov	r0, r5
 800ae52:	f000 fb4d 	bl	800b4f0 <__lshift>
 800ae56:	4621      	mov	r1, r4
 800ae58:	4682      	mov	sl, r0
 800ae5a:	f000 fbb5 	bl	800b5c8 <__mcmp>
 800ae5e:	2800      	cmp	r0, #0
 800ae60:	dc97      	bgt.n	800ad92 <_dtoa_r+0xaa2>
 800ae62:	d102      	bne.n	800ae6a <_dtoa_r+0xb7a>
 800ae64:	f019 0f01 	tst.w	r9, #1
 800ae68:	d193      	bne.n	800ad92 <_dtoa_r+0xaa2>
 800ae6a:	463b      	mov	r3, r7
 800ae6c:	461f      	mov	r7, r3
 800ae6e:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800ae72:	2a30      	cmp	r2, #48	; 0x30
 800ae74:	d0fa      	beq.n	800ae6c <_dtoa_r+0xb7c>
 800ae76:	e6e1      	b.n	800ac3c <_dtoa_r+0x94c>
 800ae78:	9a03      	ldr	r2, [sp, #12]
 800ae7a:	429a      	cmp	r2, r3
 800ae7c:	d18a      	bne.n	800ad94 <_dtoa_r+0xaa4>
 800ae7e:	2331      	movs	r3, #49	; 0x31
 800ae80:	f10b 0b01 	add.w	fp, fp, #1
 800ae84:	e797      	b.n	800adb6 <_dtoa_r+0xac6>
 800ae86:	4b0a      	ldr	r3, [pc, #40]	; (800aeb0 <_dtoa_r+0xbc0>)
 800ae88:	f7ff ba9f 	b.w	800a3ca <_dtoa_r+0xda>
 800ae8c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800ae8e:	2b00      	cmp	r3, #0
 800ae90:	f47f aa77 	bne.w	800a382 <_dtoa_r+0x92>
 800ae94:	4b07      	ldr	r3, [pc, #28]	; (800aeb4 <_dtoa_r+0xbc4>)
 800ae96:	f7ff ba98 	b.w	800a3ca <_dtoa_r+0xda>
 800ae9a:	9b06      	ldr	r3, [sp, #24]
 800ae9c:	2b00      	cmp	r3, #0
 800ae9e:	dcb6      	bgt.n	800ae0e <_dtoa_r+0xb1e>
 800aea0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800aea2:	2b02      	cmp	r3, #2
 800aea4:	f73f aeb5 	bgt.w	800ac12 <_dtoa_r+0x922>
 800aea8:	e7b1      	b.n	800ae0e <_dtoa_r+0xb1e>
 800aeaa:	bf00      	nop
 800aeac:	0800c3ce 	.word	0x0800c3ce
 800aeb0:	0800c324 	.word	0x0800c324
 800aeb4:	0800c352 	.word	0x0800c352

0800aeb8 <_free_r>:
 800aeb8:	b538      	push	{r3, r4, r5, lr}
 800aeba:	4605      	mov	r5, r0
 800aebc:	2900      	cmp	r1, #0
 800aebe:	d040      	beq.n	800af42 <_free_r+0x8a>
 800aec0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800aec4:	1f0c      	subs	r4, r1, #4
 800aec6:	2b00      	cmp	r3, #0
 800aec8:	bfb8      	it	lt
 800aeca:	18e4      	addlt	r4, r4, r3
 800aecc:	f000 f8f6 	bl	800b0bc <__malloc_lock>
 800aed0:	4a1c      	ldr	r2, [pc, #112]	; (800af44 <_free_r+0x8c>)
 800aed2:	6813      	ldr	r3, [r2, #0]
 800aed4:	b933      	cbnz	r3, 800aee4 <_free_r+0x2c>
 800aed6:	6063      	str	r3, [r4, #4]
 800aed8:	6014      	str	r4, [r2, #0]
 800aeda:	4628      	mov	r0, r5
 800aedc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800aee0:	f000 b8f2 	b.w	800b0c8 <__malloc_unlock>
 800aee4:	42a3      	cmp	r3, r4
 800aee6:	d908      	bls.n	800aefa <_free_r+0x42>
 800aee8:	6820      	ldr	r0, [r4, #0]
 800aeea:	1821      	adds	r1, r4, r0
 800aeec:	428b      	cmp	r3, r1
 800aeee:	bf01      	itttt	eq
 800aef0:	6819      	ldreq	r1, [r3, #0]
 800aef2:	685b      	ldreq	r3, [r3, #4]
 800aef4:	1809      	addeq	r1, r1, r0
 800aef6:	6021      	streq	r1, [r4, #0]
 800aef8:	e7ed      	b.n	800aed6 <_free_r+0x1e>
 800aefa:	461a      	mov	r2, r3
 800aefc:	685b      	ldr	r3, [r3, #4]
 800aefe:	b10b      	cbz	r3, 800af04 <_free_r+0x4c>
 800af00:	42a3      	cmp	r3, r4
 800af02:	d9fa      	bls.n	800aefa <_free_r+0x42>
 800af04:	6811      	ldr	r1, [r2, #0]
 800af06:	1850      	adds	r0, r2, r1
 800af08:	42a0      	cmp	r0, r4
 800af0a:	d10b      	bne.n	800af24 <_free_r+0x6c>
 800af0c:	6820      	ldr	r0, [r4, #0]
 800af0e:	4401      	add	r1, r0
 800af10:	1850      	adds	r0, r2, r1
 800af12:	4283      	cmp	r3, r0
 800af14:	6011      	str	r1, [r2, #0]
 800af16:	d1e0      	bne.n	800aeda <_free_r+0x22>
 800af18:	6818      	ldr	r0, [r3, #0]
 800af1a:	685b      	ldr	r3, [r3, #4]
 800af1c:	4408      	add	r0, r1
 800af1e:	6010      	str	r0, [r2, #0]
 800af20:	6053      	str	r3, [r2, #4]
 800af22:	e7da      	b.n	800aeda <_free_r+0x22>
 800af24:	d902      	bls.n	800af2c <_free_r+0x74>
 800af26:	230c      	movs	r3, #12
 800af28:	602b      	str	r3, [r5, #0]
 800af2a:	e7d6      	b.n	800aeda <_free_r+0x22>
 800af2c:	6820      	ldr	r0, [r4, #0]
 800af2e:	1821      	adds	r1, r4, r0
 800af30:	428b      	cmp	r3, r1
 800af32:	bf01      	itttt	eq
 800af34:	6819      	ldreq	r1, [r3, #0]
 800af36:	685b      	ldreq	r3, [r3, #4]
 800af38:	1809      	addeq	r1, r1, r0
 800af3a:	6021      	streq	r1, [r4, #0]
 800af3c:	6063      	str	r3, [r4, #4]
 800af3e:	6054      	str	r4, [r2, #4]
 800af40:	e7cb      	b.n	800aeda <_free_r+0x22>
 800af42:	bd38      	pop	{r3, r4, r5, pc}
 800af44:	20002500 	.word	0x20002500

0800af48 <malloc>:
 800af48:	4b02      	ldr	r3, [pc, #8]	; (800af54 <malloc+0xc>)
 800af4a:	4601      	mov	r1, r0
 800af4c:	6818      	ldr	r0, [r3, #0]
 800af4e:	f000 b823 	b.w	800af98 <_malloc_r>
 800af52:	bf00      	nop
 800af54:	20000238 	.word	0x20000238

0800af58 <sbrk_aligned>:
 800af58:	b570      	push	{r4, r5, r6, lr}
 800af5a:	4e0e      	ldr	r6, [pc, #56]	; (800af94 <sbrk_aligned+0x3c>)
 800af5c:	460c      	mov	r4, r1
 800af5e:	6831      	ldr	r1, [r6, #0]
 800af60:	4605      	mov	r5, r0
 800af62:	b911      	cbnz	r1, 800af6a <sbrk_aligned+0x12>
 800af64:	f000 fe58 	bl	800bc18 <_sbrk_r>
 800af68:	6030      	str	r0, [r6, #0]
 800af6a:	4621      	mov	r1, r4
 800af6c:	4628      	mov	r0, r5
 800af6e:	f000 fe53 	bl	800bc18 <_sbrk_r>
 800af72:	1c43      	adds	r3, r0, #1
 800af74:	d00a      	beq.n	800af8c <sbrk_aligned+0x34>
 800af76:	1cc4      	adds	r4, r0, #3
 800af78:	f024 0403 	bic.w	r4, r4, #3
 800af7c:	42a0      	cmp	r0, r4
 800af7e:	d007      	beq.n	800af90 <sbrk_aligned+0x38>
 800af80:	1a21      	subs	r1, r4, r0
 800af82:	4628      	mov	r0, r5
 800af84:	f000 fe48 	bl	800bc18 <_sbrk_r>
 800af88:	3001      	adds	r0, #1
 800af8a:	d101      	bne.n	800af90 <sbrk_aligned+0x38>
 800af8c:	f04f 34ff 	mov.w	r4, #4294967295
 800af90:	4620      	mov	r0, r4
 800af92:	bd70      	pop	{r4, r5, r6, pc}
 800af94:	20002504 	.word	0x20002504

0800af98 <_malloc_r>:
 800af98:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800af9c:	1ccd      	adds	r5, r1, #3
 800af9e:	f025 0503 	bic.w	r5, r5, #3
 800afa2:	3508      	adds	r5, #8
 800afa4:	2d0c      	cmp	r5, #12
 800afa6:	bf38      	it	cc
 800afa8:	250c      	movcc	r5, #12
 800afaa:	2d00      	cmp	r5, #0
 800afac:	4607      	mov	r7, r0
 800afae:	db01      	blt.n	800afb4 <_malloc_r+0x1c>
 800afb0:	42a9      	cmp	r1, r5
 800afb2:	d905      	bls.n	800afc0 <_malloc_r+0x28>
 800afb4:	230c      	movs	r3, #12
 800afb6:	2600      	movs	r6, #0
 800afb8:	603b      	str	r3, [r7, #0]
 800afba:	4630      	mov	r0, r6
 800afbc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800afc0:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 800b094 <_malloc_r+0xfc>
 800afc4:	f000 f87a 	bl	800b0bc <__malloc_lock>
 800afc8:	f8d8 3000 	ldr.w	r3, [r8]
 800afcc:	461c      	mov	r4, r3
 800afce:	bb5c      	cbnz	r4, 800b028 <_malloc_r+0x90>
 800afd0:	4629      	mov	r1, r5
 800afd2:	4638      	mov	r0, r7
 800afd4:	f7ff ffc0 	bl	800af58 <sbrk_aligned>
 800afd8:	1c43      	adds	r3, r0, #1
 800afda:	4604      	mov	r4, r0
 800afdc:	d155      	bne.n	800b08a <_malloc_r+0xf2>
 800afde:	f8d8 4000 	ldr.w	r4, [r8]
 800afe2:	4626      	mov	r6, r4
 800afe4:	2e00      	cmp	r6, #0
 800afe6:	d145      	bne.n	800b074 <_malloc_r+0xdc>
 800afe8:	2c00      	cmp	r4, #0
 800afea:	d048      	beq.n	800b07e <_malloc_r+0xe6>
 800afec:	6823      	ldr	r3, [r4, #0]
 800afee:	4631      	mov	r1, r6
 800aff0:	4638      	mov	r0, r7
 800aff2:	eb04 0903 	add.w	r9, r4, r3
 800aff6:	f000 fe0f 	bl	800bc18 <_sbrk_r>
 800affa:	4581      	cmp	r9, r0
 800affc:	d13f      	bne.n	800b07e <_malloc_r+0xe6>
 800affe:	6821      	ldr	r1, [r4, #0]
 800b000:	4638      	mov	r0, r7
 800b002:	1a6d      	subs	r5, r5, r1
 800b004:	4629      	mov	r1, r5
 800b006:	f7ff ffa7 	bl	800af58 <sbrk_aligned>
 800b00a:	3001      	adds	r0, #1
 800b00c:	d037      	beq.n	800b07e <_malloc_r+0xe6>
 800b00e:	6823      	ldr	r3, [r4, #0]
 800b010:	442b      	add	r3, r5
 800b012:	6023      	str	r3, [r4, #0]
 800b014:	f8d8 3000 	ldr.w	r3, [r8]
 800b018:	2b00      	cmp	r3, #0
 800b01a:	d038      	beq.n	800b08e <_malloc_r+0xf6>
 800b01c:	685a      	ldr	r2, [r3, #4]
 800b01e:	42a2      	cmp	r2, r4
 800b020:	d12b      	bne.n	800b07a <_malloc_r+0xe2>
 800b022:	2200      	movs	r2, #0
 800b024:	605a      	str	r2, [r3, #4]
 800b026:	e00f      	b.n	800b048 <_malloc_r+0xb0>
 800b028:	6822      	ldr	r2, [r4, #0]
 800b02a:	1b52      	subs	r2, r2, r5
 800b02c:	d41f      	bmi.n	800b06e <_malloc_r+0xd6>
 800b02e:	2a0b      	cmp	r2, #11
 800b030:	d917      	bls.n	800b062 <_malloc_r+0xca>
 800b032:	1961      	adds	r1, r4, r5
 800b034:	42a3      	cmp	r3, r4
 800b036:	6025      	str	r5, [r4, #0]
 800b038:	bf18      	it	ne
 800b03a:	6059      	strne	r1, [r3, #4]
 800b03c:	6863      	ldr	r3, [r4, #4]
 800b03e:	bf08      	it	eq
 800b040:	f8c8 1000 	streq.w	r1, [r8]
 800b044:	5162      	str	r2, [r4, r5]
 800b046:	604b      	str	r3, [r1, #4]
 800b048:	4638      	mov	r0, r7
 800b04a:	f104 060b 	add.w	r6, r4, #11
 800b04e:	f000 f83b 	bl	800b0c8 <__malloc_unlock>
 800b052:	f026 0607 	bic.w	r6, r6, #7
 800b056:	1d23      	adds	r3, r4, #4
 800b058:	1af2      	subs	r2, r6, r3
 800b05a:	d0ae      	beq.n	800afba <_malloc_r+0x22>
 800b05c:	1b9b      	subs	r3, r3, r6
 800b05e:	50a3      	str	r3, [r4, r2]
 800b060:	e7ab      	b.n	800afba <_malloc_r+0x22>
 800b062:	42a3      	cmp	r3, r4
 800b064:	6862      	ldr	r2, [r4, #4]
 800b066:	d1dd      	bne.n	800b024 <_malloc_r+0x8c>
 800b068:	f8c8 2000 	str.w	r2, [r8]
 800b06c:	e7ec      	b.n	800b048 <_malloc_r+0xb0>
 800b06e:	4623      	mov	r3, r4
 800b070:	6864      	ldr	r4, [r4, #4]
 800b072:	e7ac      	b.n	800afce <_malloc_r+0x36>
 800b074:	4634      	mov	r4, r6
 800b076:	6876      	ldr	r6, [r6, #4]
 800b078:	e7b4      	b.n	800afe4 <_malloc_r+0x4c>
 800b07a:	4613      	mov	r3, r2
 800b07c:	e7cc      	b.n	800b018 <_malloc_r+0x80>
 800b07e:	230c      	movs	r3, #12
 800b080:	4638      	mov	r0, r7
 800b082:	603b      	str	r3, [r7, #0]
 800b084:	f000 f820 	bl	800b0c8 <__malloc_unlock>
 800b088:	e797      	b.n	800afba <_malloc_r+0x22>
 800b08a:	6025      	str	r5, [r4, #0]
 800b08c:	e7dc      	b.n	800b048 <_malloc_r+0xb0>
 800b08e:	605b      	str	r3, [r3, #4]
 800b090:	deff      	udf	#255	; 0xff
 800b092:	bf00      	nop
 800b094:	20002500 	.word	0x20002500

0800b098 <__ascii_mbtowc>:
 800b098:	b082      	sub	sp, #8
 800b09a:	b901      	cbnz	r1, 800b09e <__ascii_mbtowc+0x6>
 800b09c:	a901      	add	r1, sp, #4
 800b09e:	b142      	cbz	r2, 800b0b2 <__ascii_mbtowc+0x1a>
 800b0a0:	b14b      	cbz	r3, 800b0b6 <__ascii_mbtowc+0x1e>
 800b0a2:	7813      	ldrb	r3, [r2, #0]
 800b0a4:	600b      	str	r3, [r1, #0]
 800b0a6:	7812      	ldrb	r2, [r2, #0]
 800b0a8:	1e10      	subs	r0, r2, #0
 800b0aa:	bf18      	it	ne
 800b0ac:	2001      	movne	r0, #1
 800b0ae:	b002      	add	sp, #8
 800b0b0:	4770      	bx	lr
 800b0b2:	4610      	mov	r0, r2
 800b0b4:	e7fb      	b.n	800b0ae <__ascii_mbtowc+0x16>
 800b0b6:	f06f 0001 	mvn.w	r0, #1
 800b0ba:	e7f8      	b.n	800b0ae <__ascii_mbtowc+0x16>

0800b0bc <__malloc_lock>:
 800b0bc:	4801      	ldr	r0, [pc, #4]	; (800b0c4 <__malloc_lock+0x8>)
 800b0be:	f7ff b86e 	b.w	800a19e <__retarget_lock_acquire_recursive>
 800b0c2:	bf00      	nop
 800b0c4:	200024fc 	.word	0x200024fc

0800b0c8 <__malloc_unlock>:
 800b0c8:	4801      	ldr	r0, [pc, #4]	; (800b0d0 <__malloc_unlock+0x8>)
 800b0ca:	f7ff b869 	b.w	800a1a0 <__retarget_lock_release_recursive>
 800b0ce:	bf00      	nop
 800b0d0:	200024fc 	.word	0x200024fc

0800b0d4 <_Balloc>:
 800b0d4:	b570      	push	{r4, r5, r6, lr}
 800b0d6:	69c6      	ldr	r6, [r0, #28]
 800b0d8:	4604      	mov	r4, r0
 800b0da:	460d      	mov	r5, r1
 800b0dc:	b976      	cbnz	r6, 800b0fc <_Balloc+0x28>
 800b0de:	2010      	movs	r0, #16
 800b0e0:	f7ff ff32 	bl	800af48 <malloc>
 800b0e4:	4602      	mov	r2, r0
 800b0e6:	61e0      	str	r0, [r4, #28]
 800b0e8:	b920      	cbnz	r0, 800b0f4 <_Balloc+0x20>
 800b0ea:	216b      	movs	r1, #107	; 0x6b
 800b0ec:	4b17      	ldr	r3, [pc, #92]	; (800b14c <_Balloc+0x78>)
 800b0ee:	4818      	ldr	r0, [pc, #96]	; (800b150 <_Balloc+0x7c>)
 800b0f0:	f000 fda2 	bl	800bc38 <__assert_func>
 800b0f4:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800b0f8:	6006      	str	r6, [r0, #0]
 800b0fa:	60c6      	str	r6, [r0, #12]
 800b0fc:	69e6      	ldr	r6, [r4, #28]
 800b0fe:	68f3      	ldr	r3, [r6, #12]
 800b100:	b183      	cbz	r3, 800b124 <_Balloc+0x50>
 800b102:	69e3      	ldr	r3, [r4, #28]
 800b104:	68db      	ldr	r3, [r3, #12]
 800b106:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800b10a:	b9b8      	cbnz	r0, 800b13c <_Balloc+0x68>
 800b10c:	2101      	movs	r1, #1
 800b10e:	fa01 f605 	lsl.w	r6, r1, r5
 800b112:	1d72      	adds	r2, r6, #5
 800b114:	4620      	mov	r0, r4
 800b116:	0092      	lsls	r2, r2, #2
 800b118:	f000 fdac 	bl	800bc74 <_calloc_r>
 800b11c:	b160      	cbz	r0, 800b138 <_Balloc+0x64>
 800b11e:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800b122:	e00e      	b.n	800b142 <_Balloc+0x6e>
 800b124:	2221      	movs	r2, #33	; 0x21
 800b126:	2104      	movs	r1, #4
 800b128:	4620      	mov	r0, r4
 800b12a:	f000 fda3 	bl	800bc74 <_calloc_r>
 800b12e:	69e3      	ldr	r3, [r4, #28]
 800b130:	60f0      	str	r0, [r6, #12]
 800b132:	68db      	ldr	r3, [r3, #12]
 800b134:	2b00      	cmp	r3, #0
 800b136:	d1e4      	bne.n	800b102 <_Balloc+0x2e>
 800b138:	2000      	movs	r0, #0
 800b13a:	bd70      	pop	{r4, r5, r6, pc}
 800b13c:	6802      	ldr	r2, [r0, #0]
 800b13e:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800b142:	2300      	movs	r3, #0
 800b144:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800b148:	e7f7      	b.n	800b13a <_Balloc+0x66>
 800b14a:	bf00      	nop
 800b14c:	0800c35f 	.word	0x0800c35f
 800b150:	0800c3df 	.word	0x0800c3df

0800b154 <_Bfree>:
 800b154:	b570      	push	{r4, r5, r6, lr}
 800b156:	69c6      	ldr	r6, [r0, #28]
 800b158:	4605      	mov	r5, r0
 800b15a:	460c      	mov	r4, r1
 800b15c:	b976      	cbnz	r6, 800b17c <_Bfree+0x28>
 800b15e:	2010      	movs	r0, #16
 800b160:	f7ff fef2 	bl	800af48 <malloc>
 800b164:	4602      	mov	r2, r0
 800b166:	61e8      	str	r0, [r5, #28]
 800b168:	b920      	cbnz	r0, 800b174 <_Bfree+0x20>
 800b16a:	218f      	movs	r1, #143	; 0x8f
 800b16c:	4b08      	ldr	r3, [pc, #32]	; (800b190 <_Bfree+0x3c>)
 800b16e:	4809      	ldr	r0, [pc, #36]	; (800b194 <_Bfree+0x40>)
 800b170:	f000 fd62 	bl	800bc38 <__assert_func>
 800b174:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800b178:	6006      	str	r6, [r0, #0]
 800b17a:	60c6      	str	r6, [r0, #12]
 800b17c:	b13c      	cbz	r4, 800b18e <_Bfree+0x3a>
 800b17e:	69eb      	ldr	r3, [r5, #28]
 800b180:	6862      	ldr	r2, [r4, #4]
 800b182:	68db      	ldr	r3, [r3, #12]
 800b184:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800b188:	6021      	str	r1, [r4, #0]
 800b18a:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800b18e:	bd70      	pop	{r4, r5, r6, pc}
 800b190:	0800c35f 	.word	0x0800c35f
 800b194:	0800c3df 	.word	0x0800c3df

0800b198 <__multadd>:
 800b198:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b19c:	4607      	mov	r7, r0
 800b19e:	460c      	mov	r4, r1
 800b1a0:	461e      	mov	r6, r3
 800b1a2:	2000      	movs	r0, #0
 800b1a4:	690d      	ldr	r5, [r1, #16]
 800b1a6:	f101 0c14 	add.w	ip, r1, #20
 800b1aa:	f8dc 3000 	ldr.w	r3, [ip]
 800b1ae:	3001      	adds	r0, #1
 800b1b0:	b299      	uxth	r1, r3
 800b1b2:	fb02 6101 	mla	r1, r2, r1, r6
 800b1b6:	0c1e      	lsrs	r6, r3, #16
 800b1b8:	0c0b      	lsrs	r3, r1, #16
 800b1ba:	fb02 3306 	mla	r3, r2, r6, r3
 800b1be:	b289      	uxth	r1, r1
 800b1c0:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 800b1c4:	4285      	cmp	r5, r0
 800b1c6:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800b1ca:	f84c 1b04 	str.w	r1, [ip], #4
 800b1ce:	dcec      	bgt.n	800b1aa <__multadd+0x12>
 800b1d0:	b30e      	cbz	r6, 800b216 <__multadd+0x7e>
 800b1d2:	68a3      	ldr	r3, [r4, #8]
 800b1d4:	42ab      	cmp	r3, r5
 800b1d6:	dc19      	bgt.n	800b20c <__multadd+0x74>
 800b1d8:	6861      	ldr	r1, [r4, #4]
 800b1da:	4638      	mov	r0, r7
 800b1dc:	3101      	adds	r1, #1
 800b1de:	f7ff ff79 	bl	800b0d4 <_Balloc>
 800b1e2:	4680      	mov	r8, r0
 800b1e4:	b928      	cbnz	r0, 800b1f2 <__multadd+0x5a>
 800b1e6:	4602      	mov	r2, r0
 800b1e8:	21ba      	movs	r1, #186	; 0xba
 800b1ea:	4b0c      	ldr	r3, [pc, #48]	; (800b21c <__multadd+0x84>)
 800b1ec:	480c      	ldr	r0, [pc, #48]	; (800b220 <__multadd+0x88>)
 800b1ee:	f000 fd23 	bl	800bc38 <__assert_func>
 800b1f2:	6922      	ldr	r2, [r4, #16]
 800b1f4:	f104 010c 	add.w	r1, r4, #12
 800b1f8:	3202      	adds	r2, #2
 800b1fa:	0092      	lsls	r2, r2, #2
 800b1fc:	300c      	adds	r0, #12
 800b1fe:	f7fe ffde 	bl	800a1be <memcpy>
 800b202:	4621      	mov	r1, r4
 800b204:	4638      	mov	r0, r7
 800b206:	f7ff ffa5 	bl	800b154 <_Bfree>
 800b20a:	4644      	mov	r4, r8
 800b20c:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 800b210:	3501      	adds	r5, #1
 800b212:	615e      	str	r6, [r3, #20]
 800b214:	6125      	str	r5, [r4, #16]
 800b216:	4620      	mov	r0, r4
 800b218:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b21c:	0800c3ce 	.word	0x0800c3ce
 800b220:	0800c3df 	.word	0x0800c3df

0800b224 <__hi0bits>:
 800b224:	0c02      	lsrs	r2, r0, #16
 800b226:	0412      	lsls	r2, r2, #16
 800b228:	4603      	mov	r3, r0
 800b22a:	b9ca      	cbnz	r2, 800b260 <__hi0bits+0x3c>
 800b22c:	0403      	lsls	r3, r0, #16
 800b22e:	2010      	movs	r0, #16
 800b230:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 800b234:	bf04      	itt	eq
 800b236:	021b      	lsleq	r3, r3, #8
 800b238:	3008      	addeq	r0, #8
 800b23a:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 800b23e:	bf04      	itt	eq
 800b240:	011b      	lsleq	r3, r3, #4
 800b242:	3004      	addeq	r0, #4
 800b244:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 800b248:	bf04      	itt	eq
 800b24a:	009b      	lsleq	r3, r3, #2
 800b24c:	3002      	addeq	r0, #2
 800b24e:	2b00      	cmp	r3, #0
 800b250:	db05      	blt.n	800b25e <__hi0bits+0x3a>
 800b252:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
 800b256:	f100 0001 	add.w	r0, r0, #1
 800b25a:	bf08      	it	eq
 800b25c:	2020      	moveq	r0, #32
 800b25e:	4770      	bx	lr
 800b260:	2000      	movs	r0, #0
 800b262:	e7e5      	b.n	800b230 <__hi0bits+0xc>

0800b264 <__lo0bits>:
 800b264:	6803      	ldr	r3, [r0, #0]
 800b266:	4602      	mov	r2, r0
 800b268:	f013 0007 	ands.w	r0, r3, #7
 800b26c:	d00b      	beq.n	800b286 <__lo0bits+0x22>
 800b26e:	07d9      	lsls	r1, r3, #31
 800b270:	d421      	bmi.n	800b2b6 <__lo0bits+0x52>
 800b272:	0798      	lsls	r0, r3, #30
 800b274:	bf49      	itett	mi
 800b276:	085b      	lsrmi	r3, r3, #1
 800b278:	089b      	lsrpl	r3, r3, #2
 800b27a:	2001      	movmi	r0, #1
 800b27c:	6013      	strmi	r3, [r2, #0]
 800b27e:	bf5c      	itt	pl
 800b280:	2002      	movpl	r0, #2
 800b282:	6013      	strpl	r3, [r2, #0]
 800b284:	4770      	bx	lr
 800b286:	b299      	uxth	r1, r3
 800b288:	b909      	cbnz	r1, 800b28e <__lo0bits+0x2a>
 800b28a:	2010      	movs	r0, #16
 800b28c:	0c1b      	lsrs	r3, r3, #16
 800b28e:	b2d9      	uxtb	r1, r3
 800b290:	b909      	cbnz	r1, 800b296 <__lo0bits+0x32>
 800b292:	3008      	adds	r0, #8
 800b294:	0a1b      	lsrs	r3, r3, #8
 800b296:	0719      	lsls	r1, r3, #28
 800b298:	bf04      	itt	eq
 800b29a:	091b      	lsreq	r3, r3, #4
 800b29c:	3004      	addeq	r0, #4
 800b29e:	0799      	lsls	r1, r3, #30
 800b2a0:	bf04      	itt	eq
 800b2a2:	089b      	lsreq	r3, r3, #2
 800b2a4:	3002      	addeq	r0, #2
 800b2a6:	07d9      	lsls	r1, r3, #31
 800b2a8:	d403      	bmi.n	800b2b2 <__lo0bits+0x4e>
 800b2aa:	085b      	lsrs	r3, r3, #1
 800b2ac:	f100 0001 	add.w	r0, r0, #1
 800b2b0:	d003      	beq.n	800b2ba <__lo0bits+0x56>
 800b2b2:	6013      	str	r3, [r2, #0]
 800b2b4:	4770      	bx	lr
 800b2b6:	2000      	movs	r0, #0
 800b2b8:	4770      	bx	lr
 800b2ba:	2020      	movs	r0, #32
 800b2bc:	4770      	bx	lr
	...

0800b2c0 <__i2b>:
 800b2c0:	b510      	push	{r4, lr}
 800b2c2:	460c      	mov	r4, r1
 800b2c4:	2101      	movs	r1, #1
 800b2c6:	f7ff ff05 	bl	800b0d4 <_Balloc>
 800b2ca:	4602      	mov	r2, r0
 800b2cc:	b928      	cbnz	r0, 800b2da <__i2b+0x1a>
 800b2ce:	f240 1145 	movw	r1, #325	; 0x145
 800b2d2:	4b04      	ldr	r3, [pc, #16]	; (800b2e4 <__i2b+0x24>)
 800b2d4:	4804      	ldr	r0, [pc, #16]	; (800b2e8 <__i2b+0x28>)
 800b2d6:	f000 fcaf 	bl	800bc38 <__assert_func>
 800b2da:	2301      	movs	r3, #1
 800b2dc:	6144      	str	r4, [r0, #20]
 800b2de:	6103      	str	r3, [r0, #16]
 800b2e0:	bd10      	pop	{r4, pc}
 800b2e2:	bf00      	nop
 800b2e4:	0800c3ce 	.word	0x0800c3ce
 800b2e8:	0800c3df 	.word	0x0800c3df

0800b2ec <__multiply>:
 800b2ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b2f0:	4691      	mov	r9, r2
 800b2f2:	690a      	ldr	r2, [r1, #16]
 800b2f4:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800b2f8:	460c      	mov	r4, r1
 800b2fa:	429a      	cmp	r2, r3
 800b2fc:	bfbe      	ittt	lt
 800b2fe:	460b      	movlt	r3, r1
 800b300:	464c      	movlt	r4, r9
 800b302:	4699      	movlt	r9, r3
 800b304:	6927      	ldr	r7, [r4, #16]
 800b306:	f8d9 a010 	ldr.w	sl, [r9, #16]
 800b30a:	68a3      	ldr	r3, [r4, #8]
 800b30c:	6861      	ldr	r1, [r4, #4]
 800b30e:	eb07 060a 	add.w	r6, r7, sl
 800b312:	42b3      	cmp	r3, r6
 800b314:	b085      	sub	sp, #20
 800b316:	bfb8      	it	lt
 800b318:	3101      	addlt	r1, #1
 800b31a:	f7ff fedb 	bl	800b0d4 <_Balloc>
 800b31e:	b930      	cbnz	r0, 800b32e <__multiply+0x42>
 800b320:	4602      	mov	r2, r0
 800b322:	f44f 71b1 	mov.w	r1, #354	; 0x162
 800b326:	4b43      	ldr	r3, [pc, #268]	; (800b434 <__multiply+0x148>)
 800b328:	4843      	ldr	r0, [pc, #268]	; (800b438 <__multiply+0x14c>)
 800b32a:	f000 fc85 	bl	800bc38 <__assert_func>
 800b32e:	f100 0514 	add.w	r5, r0, #20
 800b332:	462b      	mov	r3, r5
 800b334:	2200      	movs	r2, #0
 800b336:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 800b33a:	4543      	cmp	r3, r8
 800b33c:	d321      	bcc.n	800b382 <__multiply+0x96>
 800b33e:	f104 0314 	add.w	r3, r4, #20
 800b342:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 800b346:	f109 0314 	add.w	r3, r9, #20
 800b34a:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 800b34e:	9202      	str	r2, [sp, #8]
 800b350:	1b3a      	subs	r2, r7, r4
 800b352:	3a15      	subs	r2, #21
 800b354:	f022 0203 	bic.w	r2, r2, #3
 800b358:	3204      	adds	r2, #4
 800b35a:	f104 0115 	add.w	r1, r4, #21
 800b35e:	428f      	cmp	r7, r1
 800b360:	bf38      	it	cc
 800b362:	2204      	movcc	r2, #4
 800b364:	9201      	str	r2, [sp, #4]
 800b366:	9a02      	ldr	r2, [sp, #8]
 800b368:	9303      	str	r3, [sp, #12]
 800b36a:	429a      	cmp	r2, r3
 800b36c:	d80c      	bhi.n	800b388 <__multiply+0x9c>
 800b36e:	2e00      	cmp	r6, #0
 800b370:	dd03      	ble.n	800b37a <__multiply+0x8e>
 800b372:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 800b376:	2b00      	cmp	r3, #0
 800b378:	d05a      	beq.n	800b430 <__multiply+0x144>
 800b37a:	6106      	str	r6, [r0, #16]
 800b37c:	b005      	add	sp, #20
 800b37e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b382:	f843 2b04 	str.w	r2, [r3], #4
 800b386:	e7d8      	b.n	800b33a <__multiply+0x4e>
 800b388:	f8b3 a000 	ldrh.w	sl, [r3]
 800b38c:	f1ba 0f00 	cmp.w	sl, #0
 800b390:	d023      	beq.n	800b3da <__multiply+0xee>
 800b392:	46a9      	mov	r9, r5
 800b394:	f04f 0c00 	mov.w	ip, #0
 800b398:	f104 0e14 	add.w	lr, r4, #20
 800b39c:	f85e 2b04 	ldr.w	r2, [lr], #4
 800b3a0:	f8d9 1000 	ldr.w	r1, [r9]
 800b3a4:	fa1f fb82 	uxth.w	fp, r2
 800b3a8:	b289      	uxth	r1, r1
 800b3aa:	fb0a 110b 	mla	r1, sl, fp, r1
 800b3ae:	4461      	add	r1, ip
 800b3b0:	f8d9 c000 	ldr.w	ip, [r9]
 800b3b4:	0c12      	lsrs	r2, r2, #16
 800b3b6:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 800b3ba:	fb0a c202 	mla	r2, sl, r2, ip
 800b3be:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 800b3c2:	b289      	uxth	r1, r1
 800b3c4:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800b3c8:	4577      	cmp	r7, lr
 800b3ca:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800b3ce:	f849 1b04 	str.w	r1, [r9], #4
 800b3d2:	d8e3      	bhi.n	800b39c <__multiply+0xb0>
 800b3d4:	9a01      	ldr	r2, [sp, #4]
 800b3d6:	f845 c002 	str.w	ip, [r5, r2]
 800b3da:	9a03      	ldr	r2, [sp, #12]
 800b3dc:	3304      	adds	r3, #4
 800b3de:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 800b3e2:	f1b9 0f00 	cmp.w	r9, #0
 800b3e6:	d021      	beq.n	800b42c <__multiply+0x140>
 800b3e8:	46ae      	mov	lr, r5
 800b3ea:	f04f 0a00 	mov.w	sl, #0
 800b3ee:	6829      	ldr	r1, [r5, #0]
 800b3f0:	f104 0c14 	add.w	ip, r4, #20
 800b3f4:	f8bc b000 	ldrh.w	fp, [ip]
 800b3f8:	f8be 2002 	ldrh.w	r2, [lr, #2]
 800b3fc:	b289      	uxth	r1, r1
 800b3fe:	fb09 220b 	mla	r2, r9, fp, r2
 800b402:	4452      	add	r2, sl
 800b404:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800b408:	f84e 1b04 	str.w	r1, [lr], #4
 800b40c:	f85c 1b04 	ldr.w	r1, [ip], #4
 800b410:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800b414:	f8be 1000 	ldrh.w	r1, [lr]
 800b418:	4567      	cmp	r7, ip
 800b41a:	fb09 110a 	mla	r1, r9, sl, r1
 800b41e:	eb01 4112 	add.w	r1, r1, r2, lsr #16
 800b422:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800b426:	d8e5      	bhi.n	800b3f4 <__multiply+0x108>
 800b428:	9a01      	ldr	r2, [sp, #4]
 800b42a:	50a9      	str	r1, [r5, r2]
 800b42c:	3504      	adds	r5, #4
 800b42e:	e79a      	b.n	800b366 <__multiply+0x7a>
 800b430:	3e01      	subs	r6, #1
 800b432:	e79c      	b.n	800b36e <__multiply+0x82>
 800b434:	0800c3ce 	.word	0x0800c3ce
 800b438:	0800c3df 	.word	0x0800c3df

0800b43c <__pow5mult>:
 800b43c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800b440:	4615      	mov	r5, r2
 800b442:	f012 0203 	ands.w	r2, r2, #3
 800b446:	4606      	mov	r6, r0
 800b448:	460f      	mov	r7, r1
 800b44a:	d007      	beq.n	800b45c <__pow5mult+0x20>
 800b44c:	4c25      	ldr	r4, [pc, #148]	; (800b4e4 <__pow5mult+0xa8>)
 800b44e:	3a01      	subs	r2, #1
 800b450:	2300      	movs	r3, #0
 800b452:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800b456:	f7ff fe9f 	bl	800b198 <__multadd>
 800b45a:	4607      	mov	r7, r0
 800b45c:	10ad      	asrs	r5, r5, #2
 800b45e:	d03d      	beq.n	800b4dc <__pow5mult+0xa0>
 800b460:	69f4      	ldr	r4, [r6, #28]
 800b462:	b97c      	cbnz	r4, 800b484 <__pow5mult+0x48>
 800b464:	2010      	movs	r0, #16
 800b466:	f7ff fd6f 	bl	800af48 <malloc>
 800b46a:	4602      	mov	r2, r0
 800b46c:	61f0      	str	r0, [r6, #28]
 800b46e:	b928      	cbnz	r0, 800b47c <__pow5mult+0x40>
 800b470:	f240 11b3 	movw	r1, #435	; 0x1b3
 800b474:	4b1c      	ldr	r3, [pc, #112]	; (800b4e8 <__pow5mult+0xac>)
 800b476:	481d      	ldr	r0, [pc, #116]	; (800b4ec <__pow5mult+0xb0>)
 800b478:	f000 fbde 	bl	800bc38 <__assert_func>
 800b47c:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800b480:	6004      	str	r4, [r0, #0]
 800b482:	60c4      	str	r4, [r0, #12]
 800b484:	f8d6 801c 	ldr.w	r8, [r6, #28]
 800b488:	f8d8 4008 	ldr.w	r4, [r8, #8]
 800b48c:	b94c      	cbnz	r4, 800b4a2 <__pow5mult+0x66>
 800b48e:	f240 2171 	movw	r1, #625	; 0x271
 800b492:	4630      	mov	r0, r6
 800b494:	f7ff ff14 	bl	800b2c0 <__i2b>
 800b498:	2300      	movs	r3, #0
 800b49a:	4604      	mov	r4, r0
 800b49c:	f8c8 0008 	str.w	r0, [r8, #8]
 800b4a0:	6003      	str	r3, [r0, #0]
 800b4a2:	f04f 0900 	mov.w	r9, #0
 800b4a6:	07eb      	lsls	r3, r5, #31
 800b4a8:	d50a      	bpl.n	800b4c0 <__pow5mult+0x84>
 800b4aa:	4639      	mov	r1, r7
 800b4ac:	4622      	mov	r2, r4
 800b4ae:	4630      	mov	r0, r6
 800b4b0:	f7ff ff1c 	bl	800b2ec <__multiply>
 800b4b4:	4680      	mov	r8, r0
 800b4b6:	4639      	mov	r1, r7
 800b4b8:	4630      	mov	r0, r6
 800b4ba:	f7ff fe4b 	bl	800b154 <_Bfree>
 800b4be:	4647      	mov	r7, r8
 800b4c0:	106d      	asrs	r5, r5, #1
 800b4c2:	d00b      	beq.n	800b4dc <__pow5mult+0xa0>
 800b4c4:	6820      	ldr	r0, [r4, #0]
 800b4c6:	b938      	cbnz	r0, 800b4d8 <__pow5mult+0x9c>
 800b4c8:	4622      	mov	r2, r4
 800b4ca:	4621      	mov	r1, r4
 800b4cc:	4630      	mov	r0, r6
 800b4ce:	f7ff ff0d 	bl	800b2ec <__multiply>
 800b4d2:	6020      	str	r0, [r4, #0]
 800b4d4:	f8c0 9000 	str.w	r9, [r0]
 800b4d8:	4604      	mov	r4, r0
 800b4da:	e7e4      	b.n	800b4a6 <__pow5mult+0x6a>
 800b4dc:	4638      	mov	r0, r7
 800b4de:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800b4e2:	bf00      	nop
 800b4e4:	0800c528 	.word	0x0800c528
 800b4e8:	0800c35f 	.word	0x0800c35f
 800b4ec:	0800c3df 	.word	0x0800c3df

0800b4f0 <__lshift>:
 800b4f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b4f4:	460c      	mov	r4, r1
 800b4f6:	4607      	mov	r7, r0
 800b4f8:	4691      	mov	r9, r2
 800b4fa:	6923      	ldr	r3, [r4, #16]
 800b4fc:	6849      	ldr	r1, [r1, #4]
 800b4fe:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800b502:	68a3      	ldr	r3, [r4, #8]
 800b504:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800b508:	f108 0601 	add.w	r6, r8, #1
 800b50c:	42b3      	cmp	r3, r6
 800b50e:	db0b      	blt.n	800b528 <__lshift+0x38>
 800b510:	4638      	mov	r0, r7
 800b512:	f7ff fddf 	bl	800b0d4 <_Balloc>
 800b516:	4605      	mov	r5, r0
 800b518:	b948      	cbnz	r0, 800b52e <__lshift+0x3e>
 800b51a:	4602      	mov	r2, r0
 800b51c:	f44f 71ef 	mov.w	r1, #478	; 0x1de
 800b520:	4b27      	ldr	r3, [pc, #156]	; (800b5c0 <__lshift+0xd0>)
 800b522:	4828      	ldr	r0, [pc, #160]	; (800b5c4 <__lshift+0xd4>)
 800b524:	f000 fb88 	bl	800bc38 <__assert_func>
 800b528:	3101      	adds	r1, #1
 800b52a:	005b      	lsls	r3, r3, #1
 800b52c:	e7ee      	b.n	800b50c <__lshift+0x1c>
 800b52e:	2300      	movs	r3, #0
 800b530:	f100 0114 	add.w	r1, r0, #20
 800b534:	f100 0210 	add.w	r2, r0, #16
 800b538:	4618      	mov	r0, r3
 800b53a:	4553      	cmp	r3, sl
 800b53c:	db33      	blt.n	800b5a6 <__lshift+0xb6>
 800b53e:	6920      	ldr	r0, [r4, #16]
 800b540:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800b544:	f104 0314 	add.w	r3, r4, #20
 800b548:	f019 091f 	ands.w	r9, r9, #31
 800b54c:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800b550:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 800b554:	d02b      	beq.n	800b5ae <__lshift+0xbe>
 800b556:	468a      	mov	sl, r1
 800b558:	2200      	movs	r2, #0
 800b55a:	f1c9 0e20 	rsb	lr, r9, #32
 800b55e:	6818      	ldr	r0, [r3, #0]
 800b560:	fa00 f009 	lsl.w	r0, r0, r9
 800b564:	4310      	orrs	r0, r2
 800b566:	f84a 0b04 	str.w	r0, [sl], #4
 800b56a:	f853 2b04 	ldr.w	r2, [r3], #4
 800b56e:	459c      	cmp	ip, r3
 800b570:	fa22 f20e 	lsr.w	r2, r2, lr
 800b574:	d8f3      	bhi.n	800b55e <__lshift+0x6e>
 800b576:	ebac 0304 	sub.w	r3, ip, r4
 800b57a:	3b15      	subs	r3, #21
 800b57c:	f023 0303 	bic.w	r3, r3, #3
 800b580:	3304      	adds	r3, #4
 800b582:	f104 0015 	add.w	r0, r4, #21
 800b586:	4584      	cmp	ip, r0
 800b588:	bf38      	it	cc
 800b58a:	2304      	movcc	r3, #4
 800b58c:	50ca      	str	r2, [r1, r3]
 800b58e:	b10a      	cbz	r2, 800b594 <__lshift+0xa4>
 800b590:	f108 0602 	add.w	r6, r8, #2
 800b594:	3e01      	subs	r6, #1
 800b596:	4638      	mov	r0, r7
 800b598:	4621      	mov	r1, r4
 800b59a:	612e      	str	r6, [r5, #16]
 800b59c:	f7ff fdda 	bl	800b154 <_Bfree>
 800b5a0:	4628      	mov	r0, r5
 800b5a2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b5a6:	f842 0f04 	str.w	r0, [r2, #4]!
 800b5aa:	3301      	adds	r3, #1
 800b5ac:	e7c5      	b.n	800b53a <__lshift+0x4a>
 800b5ae:	3904      	subs	r1, #4
 800b5b0:	f853 2b04 	ldr.w	r2, [r3], #4
 800b5b4:	459c      	cmp	ip, r3
 800b5b6:	f841 2f04 	str.w	r2, [r1, #4]!
 800b5ba:	d8f9      	bhi.n	800b5b0 <__lshift+0xc0>
 800b5bc:	e7ea      	b.n	800b594 <__lshift+0xa4>
 800b5be:	bf00      	nop
 800b5c0:	0800c3ce 	.word	0x0800c3ce
 800b5c4:	0800c3df 	.word	0x0800c3df

0800b5c8 <__mcmp>:
 800b5c8:	4603      	mov	r3, r0
 800b5ca:	690a      	ldr	r2, [r1, #16]
 800b5cc:	6900      	ldr	r0, [r0, #16]
 800b5ce:	b530      	push	{r4, r5, lr}
 800b5d0:	1a80      	subs	r0, r0, r2
 800b5d2:	d10d      	bne.n	800b5f0 <__mcmp+0x28>
 800b5d4:	3314      	adds	r3, #20
 800b5d6:	3114      	adds	r1, #20
 800b5d8:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 800b5dc:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 800b5e0:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 800b5e4:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 800b5e8:	4295      	cmp	r5, r2
 800b5ea:	d002      	beq.n	800b5f2 <__mcmp+0x2a>
 800b5ec:	d304      	bcc.n	800b5f8 <__mcmp+0x30>
 800b5ee:	2001      	movs	r0, #1
 800b5f0:	bd30      	pop	{r4, r5, pc}
 800b5f2:	42a3      	cmp	r3, r4
 800b5f4:	d3f4      	bcc.n	800b5e0 <__mcmp+0x18>
 800b5f6:	e7fb      	b.n	800b5f0 <__mcmp+0x28>
 800b5f8:	f04f 30ff 	mov.w	r0, #4294967295
 800b5fc:	e7f8      	b.n	800b5f0 <__mcmp+0x28>
	...

0800b600 <__mdiff>:
 800b600:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b604:	460d      	mov	r5, r1
 800b606:	4607      	mov	r7, r0
 800b608:	4611      	mov	r1, r2
 800b60a:	4628      	mov	r0, r5
 800b60c:	4614      	mov	r4, r2
 800b60e:	f7ff ffdb 	bl	800b5c8 <__mcmp>
 800b612:	1e06      	subs	r6, r0, #0
 800b614:	d111      	bne.n	800b63a <__mdiff+0x3a>
 800b616:	4631      	mov	r1, r6
 800b618:	4638      	mov	r0, r7
 800b61a:	f7ff fd5b 	bl	800b0d4 <_Balloc>
 800b61e:	4602      	mov	r2, r0
 800b620:	b928      	cbnz	r0, 800b62e <__mdiff+0x2e>
 800b622:	f240 2137 	movw	r1, #567	; 0x237
 800b626:	4b3a      	ldr	r3, [pc, #232]	; (800b710 <__mdiff+0x110>)
 800b628:	483a      	ldr	r0, [pc, #232]	; (800b714 <__mdiff+0x114>)
 800b62a:	f000 fb05 	bl	800bc38 <__assert_func>
 800b62e:	2301      	movs	r3, #1
 800b630:	e9c0 3604 	strd	r3, r6, [r0, #16]
 800b634:	4610      	mov	r0, r2
 800b636:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b63a:	bfa4      	itt	ge
 800b63c:	4623      	movge	r3, r4
 800b63e:	462c      	movge	r4, r5
 800b640:	4638      	mov	r0, r7
 800b642:	6861      	ldr	r1, [r4, #4]
 800b644:	bfa6      	itte	ge
 800b646:	461d      	movge	r5, r3
 800b648:	2600      	movge	r6, #0
 800b64a:	2601      	movlt	r6, #1
 800b64c:	f7ff fd42 	bl	800b0d4 <_Balloc>
 800b650:	4602      	mov	r2, r0
 800b652:	b918      	cbnz	r0, 800b65c <__mdiff+0x5c>
 800b654:	f240 2145 	movw	r1, #581	; 0x245
 800b658:	4b2d      	ldr	r3, [pc, #180]	; (800b710 <__mdiff+0x110>)
 800b65a:	e7e5      	b.n	800b628 <__mdiff+0x28>
 800b65c:	f102 0814 	add.w	r8, r2, #20
 800b660:	46c2      	mov	sl, r8
 800b662:	f04f 0c00 	mov.w	ip, #0
 800b666:	6927      	ldr	r7, [r4, #16]
 800b668:	60c6      	str	r6, [r0, #12]
 800b66a:	692e      	ldr	r6, [r5, #16]
 800b66c:	f104 0014 	add.w	r0, r4, #20
 800b670:	f105 0914 	add.w	r9, r5, #20
 800b674:	eb00 0e87 	add.w	lr, r0, r7, lsl #2
 800b678:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 800b67c:	3410      	adds	r4, #16
 800b67e:	f854 bf04 	ldr.w	fp, [r4, #4]!
 800b682:	f859 3b04 	ldr.w	r3, [r9], #4
 800b686:	fa1f f18b 	uxth.w	r1, fp
 800b68a:	4461      	add	r1, ip
 800b68c:	fa1f fc83 	uxth.w	ip, r3
 800b690:	0c1b      	lsrs	r3, r3, #16
 800b692:	eba1 010c 	sub.w	r1, r1, ip
 800b696:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 800b69a:	eb03 4321 	add.w	r3, r3, r1, asr #16
 800b69e:	b289      	uxth	r1, r1
 800b6a0:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800b6a4:	454e      	cmp	r6, r9
 800b6a6:	ea4f 4c23 	mov.w	ip, r3, asr #16
 800b6aa:	f84a 1b04 	str.w	r1, [sl], #4
 800b6ae:	d8e6      	bhi.n	800b67e <__mdiff+0x7e>
 800b6b0:	1b73      	subs	r3, r6, r5
 800b6b2:	3b15      	subs	r3, #21
 800b6b4:	f023 0303 	bic.w	r3, r3, #3
 800b6b8:	3515      	adds	r5, #21
 800b6ba:	3304      	adds	r3, #4
 800b6bc:	42ae      	cmp	r6, r5
 800b6be:	bf38      	it	cc
 800b6c0:	2304      	movcc	r3, #4
 800b6c2:	4418      	add	r0, r3
 800b6c4:	4443      	add	r3, r8
 800b6c6:	461e      	mov	r6, r3
 800b6c8:	4605      	mov	r5, r0
 800b6ca:	4575      	cmp	r5, lr
 800b6cc:	d30e      	bcc.n	800b6ec <__mdiff+0xec>
 800b6ce:	f10e 0103 	add.w	r1, lr, #3
 800b6d2:	1a09      	subs	r1, r1, r0
 800b6d4:	f021 0103 	bic.w	r1, r1, #3
 800b6d8:	3803      	subs	r0, #3
 800b6da:	4586      	cmp	lr, r0
 800b6dc:	bf38      	it	cc
 800b6de:	2100      	movcc	r1, #0
 800b6e0:	440b      	add	r3, r1
 800b6e2:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 800b6e6:	b189      	cbz	r1, 800b70c <__mdiff+0x10c>
 800b6e8:	6117      	str	r7, [r2, #16]
 800b6ea:	e7a3      	b.n	800b634 <__mdiff+0x34>
 800b6ec:	f855 8b04 	ldr.w	r8, [r5], #4
 800b6f0:	fa1f f188 	uxth.w	r1, r8
 800b6f4:	4461      	add	r1, ip
 800b6f6:	140c      	asrs	r4, r1, #16
 800b6f8:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 800b6fc:	b289      	uxth	r1, r1
 800b6fe:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 800b702:	ea4f 4c24 	mov.w	ip, r4, asr #16
 800b706:	f846 1b04 	str.w	r1, [r6], #4
 800b70a:	e7de      	b.n	800b6ca <__mdiff+0xca>
 800b70c:	3f01      	subs	r7, #1
 800b70e:	e7e8      	b.n	800b6e2 <__mdiff+0xe2>
 800b710:	0800c3ce 	.word	0x0800c3ce
 800b714:	0800c3df 	.word	0x0800c3df

0800b718 <__d2b>:
 800b718:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800b71a:	2101      	movs	r1, #1
 800b71c:	4617      	mov	r7, r2
 800b71e:	461c      	mov	r4, r3
 800b720:	9e08      	ldr	r6, [sp, #32]
 800b722:	f7ff fcd7 	bl	800b0d4 <_Balloc>
 800b726:	4605      	mov	r5, r0
 800b728:	b930      	cbnz	r0, 800b738 <__d2b+0x20>
 800b72a:	4602      	mov	r2, r0
 800b72c:	f240 310f 	movw	r1, #783	; 0x30f
 800b730:	4b22      	ldr	r3, [pc, #136]	; (800b7bc <__d2b+0xa4>)
 800b732:	4823      	ldr	r0, [pc, #140]	; (800b7c0 <__d2b+0xa8>)
 800b734:	f000 fa80 	bl	800bc38 <__assert_func>
 800b738:	f3c4 0313 	ubfx	r3, r4, #0, #20
 800b73c:	f3c4 540a 	ubfx	r4, r4, #20, #11
 800b740:	bb24      	cbnz	r4, 800b78c <__d2b+0x74>
 800b742:	2f00      	cmp	r7, #0
 800b744:	9301      	str	r3, [sp, #4]
 800b746:	d026      	beq.n	800b796 <__d2b+0x7e>
 800b748:	4668      	mov	r0, sp
 800b74a:	9700      	str	r7, [sp, #0]
 800b74c:	f7ff fd8a 	bl	800b264 <__lo0bits>
 800b750:	e9dd 1200 	ldrd	r1, r2, [sp]
 800b754:	b1e8      	cbz	r0, 800b792 <__d2b+0x7a>
 800b756:	f1c0 0320 	rsb	r3, r0, #32
 800b75a:	fa02 f303 	lsl.w	r3, r2, r3
 800b75e:	430b      	orrs	r3, r1
 800b760:	40c2      	lsrs	r2, r0
 800b762:	616b      	str	r3, [r5, #20]
 800b764:	9201      	str	r2, [sp, #4]
 800b766:	9b01      	ldr	r3, [sp, #4]
 800b768:	2b00      	cmp	r3, #0
 800b76a:	bf14      	ite	ne
 800b76c:	2102      	movne	r1, #2
 800b76e:	2101      	moveq	r1, #1
 800b770:	61ab      	str	r3, [r5, #24]
 800b772:	6129      	str	r1, [r5, #16]
 800b774:	b1bc      	cbz	r4, 800b7a6 <__d2b+0x8e>
 800b776:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
 800b77a:	4404      	add	r4, r0
 800b77c:	6034      	str	r4, [r6, #0]
 800b77e:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 800b782:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b784:	6018      	str	r0, [r3, #0]
 800b786:	4628      	mov	r0, r5
 800b788:	b003      	add	sp, #12
 800b78a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b78c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800b790:	e7d7      	b.n	800b742 <__d2b+0x2a>
 800b792:	6169      	str	r1, [r5, #20]
 800b794:	e7e7      	b.n	800b766 <__d2b+0x4e>
 800b796:	a801      	add	r0, sp, #4
 800b798:	f7ff fd64 	bl	800b264 <__lo0bits>
 800b79c:	9b01      	ldr	r3, [sp, #4]
 800b79e:	2101      	movs	r1, #1
 800b7a0:	616b      	str	r3, [r5, #20]
 800b7a2:	3020      	adds	r0, #32
 800b7a4:	e7e5      	b.n	800b772 <__d2b+0x5a>
 800b7a6:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 800b7aa:	eb05 0381 	add.w	r3, r5, r1, lsl #2
 800b7ae:	6030      	str	r0, [r6, #0]
 800b7b0:	6918      	ldr	r0, [r3, #16]
 800b7b2:	f7ff fd37 	bl	800b224 <__hi0bits>
 800b7b6:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
 800b7ba:	e7e2      	b.n	800b782 <__d2b+0x6a>
 800b7bc:	0800c3ce 	.word	0x0800c3ce
 800b7c0:	0800c3df 	.word	0x0800c3df

0800b7c4 <__ascii_wctomb>:
 800b7c4:	4603      	mov	r3, r0
 800b7c6:	4608      	mov	r0, r1
 800b7c8:	b141      	cbz	r1, 800b7dc <__ascii_wctomb+0x18>
 800b7ca:	2aff      	cmp	r2, #255	; 0xff
 800b7cc:	d904      	bls.n	800b7d8 <__ascii_wctomb+0x14>
 800b7ce:	228a      	movs	r2, #138	; 0x8a
 800b7d0:	f04f 30ff 	mov.w	r0, #4294967295
 800b7d4:	601a      	str	r2, [r3, #0]
 800b7d6:	4770      	bx	lr
 800b7d8:	2001      	movs	r0, #1
 800b7da:	700a      	strb	r2, [r1, #0]
 800b7dc:	4770      	bx	lr

0800b7de <__ssputs_r>:
 800b7de:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b7e2:	461f      	mov	r7, r3
 800b7e4:	688e      	ldr	r6, [r1, #8]
 800b7e6:	4682      	mov	sl, r0
 800b7e8:	42be      	cmp	r6, r7
 800b7ea:	460c      	mov	r4, r1
 800b7ec:	4690      	mov	r8, r2
 800b7ee:	680b      	ldr	r3, [r1, #0]
 800b7f0:	d82c      	bhi.n	800b84c <__ssputs_r+0x6e>
 800b7f2:	898a      	ldrh	r2, [r1, #12]
 800b7f4:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800b7f8:	d026      	beq.n	800b848 <__ssputs_r+0x6a>
 800b7fa:	6965      	ldr	r5, [r4, #20]
 800b7fc:	6909      	ldr	r1, [r1, #16]
 800b7fe:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800b802:	eba3 0901 	sub.w	r9, r3, r1
 800b806:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800b80a:	1c7b      	adds	r3, r7, #1
 800b80c:	444b      	add	r3, r9
 800b80e:	106d      	asrs	r5, r5, #1
 800b810:	429d      	cmp	r5, r3
 800b812:	bf38      	it	cc
 800b814:	461d      	movcc	r5, r3
 800b816:	0553      	lsls	r3, r2, #21
 800b818:	d527      	bpl.n	800b86a <__ssputs_r+0x8c>
 800b81a:	4629      	mov	r1, r5
 800b81c:	f7ff fbbc 	bl	800af98 <_malloc_r>
 800b820:	4606      	mov	r6, r0
 800b822:	b360      	cbz	r0, 800b87e <__ssputs_r+0xa0>
 800b824:	464a      	mov	r2, r9
 800b826:	6921      	ldr	r1, [r4, #16]
 800b828:	f7fe fcc9 	bl	800a1be <memcpy>
 800b82c:	89a3      	ldrh	r3, [r4, #12]
 800b82e:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800b832:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800b836:	81a3      	strh	r3, [r4, #12]
 800b838:	6126      	str	r6, [r4, #16]
 800b83a:	444e      	add	r6, r9
 800b83c:	6026      	str	r6, [r4, #0]
 800b83e:	463e      	mov	r6, r7
 800b840:	6165      	str	r5, [r4, #20]
 800b842:	eba5 0509 	sub.w	r5, r5, r9
 800b846:	60a5      	str	r5, [r4, #8]
 800b848:	42be      	cmp	r6, r7
 800b84a:	d900      	bls.n	800b84e <__ssputs_r+0x70>
 800b84c:	463e      	mov	r6, r7
 800b84e:	4632      	mov	r2, r6
 800b850:	4641      	mov	r1, r8
 800b852:	6820      	ldr	r0, [r4, #0]
 800b854:	f000 f9c6 	bl	800bbe4 <memmove>
 800b858:	2000      	movs	r0, #0
 800b85a:	68a3      	ldr	r3, [r4, #8]
 800b85c:	1b9b      	subs	r3, r3, r6
 800b85e:	60a3      	str	r3, [r4, #8]
 800b860:	6823      	ldr	r3, [r4, #0]
 800b862:	4433      	add	r3, r6
 800b864:	6023      	str	r3, [r4, #0]
 800b866:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b86a:	462a      	mov	r2, r5
 800b86c:	f000 fa16 	bl	800bc9c <_realloc_r>
 800b870:	4606      	mov	r6, r0
 800b872:	2800      	cmp	r0, #0
 800b874:	d1e0      	bne.n	800b838 <__ssputs_r+0x5a>
 800b876:	4650      	mov	r0, sl
 800b878:	6921      	ldr	r1, [r4, #16]
 800b87a:	f7ff fb1d 	bl	800aeb8 <_free_r>
 800b87e:	230c      	movs	r3, #12
 800b880:	f8ca 3000 	str.w	r3, [sl]
 800b884:	89a3      	ldrh	r3, [r4, #12]
 800b886:	f04f 30ff 	mov.w	r0, #4294967295
 800b88a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800b88e:	81a3      	strh	r3, [r4, #12]
 800b890:	e7e9      	b.n	800b866 <__ssputs_r+0x88>
	...

0800b894 <_svfiprintf_r>:
 800b894:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b898:	4698      	mov	r8, r3
 800b89a:	898b      	ldrh	r3, [r1, #12]
 800b89c:	4607      	mov	r7, r0
 800b89e:	061b      	lsls	r3, r3, #24
 800b8a0:	460d      	mov	r5, r1
 800b8a2:	4614      	mov	r4, r2
 800b8a4:	b09d      	sub	sp, #116	; 0x74
 800b8a6:	d50e      	bpl.n	800b8c6 <_svfiprintf_r+0x32>
 800b8a8:	690b      	ldr	r3, [r1, #16]
 800b8aa:	b963      	cbnz	r3, 800b8c6 <_svfiprintf_r+0x32>
 800b8ac:	2140      	movs	r1, #64	; 0x40
 800b8ae:	f7ff fb73 	bl	800af98 <_malloc_r>
 800b8b2:	6028      	str	r0, [r5, #0]
 800b8b4:	6128      	str	r0, [r5, #16]
 800b8b6:	b920      	cbnz	r0, 800b8c2 <_svfiprintf_r+0x2e>
 800b8b8:	230c      	movs	r3, #12
 800b8ba:	603b      	str	r3, [r7, #0]
 800b8bc:	f04f 30ff 	mov.w	r0, #4294967295
 800b8c0:	e0d0      	b.n	800ba64 <_svfiprintf_r+0x1d0>
 800b8c2:	2340      	movs	r3, #64	; 0x40
 800b8c4:	616b      	str	r3, [r5, #20]
 800b8c6:	2300      	movs	r3, #0
 800b8c8:	9309      	str	r3, [sp, #36]	; 0x24
 800b8ca:	2320      	movs	r3, #32
 800b8cc:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800b8d0:	2330      	movs	r3, #48	; 0x30
 800b8d2:	f04f 0901 	mov.w	r9, #1
 800b8d6:	f8cd 800c 	str.w	r8, [sp, #12]
 800b8da:	f8df 81a0 	ldr.w	r8, [pc, #416]	; 800ba7c <_svfiprintf_r+0x1e8>
 800b8de:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800b8e2:	4623      	mov	r3, r4
 800b8e4:	469a      	mov	sl, r3
 800b8e6:	f813 2b01 	ldrb.w	r2, [r3], #1
 800b8ea:	b10a      	cbz	r2, 800b8f0 <_svfiprintf_r+0x5c>
 800b8ec:	2a25      	cmp	r2, #37	; 0x25
 800b8ee:	d1f9      	bne.n	800b8e4 <_svfiprintf_r+0x50>
 800b8f0:	ebba 0b04 	subs.w	fp, sl, r4
 800b8f4:	d00b      	beq.n	800b90e <_svfiprintf_r+0x7a>
 800b8f6:	465b      	mov	r3, fp
 800b8f8:	4622      	mov	r2, r4
 800b8fa:	4629      	mov	r1, r5
 800b8fc:	4638      	mov	r0, r7
 800b8fe:	f7ff ff6e 	bl	800b7de <__ssputs_r>
 800b902:	3001      	adds	r0, #1
 800b904:	f000 80a9 	beq.w	800ba5a <_svfiprintf_r+0x1c6>
 800b908:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800b90a:	445a      	add	r2, fp
 800b90c:	9209      	str	r2, [sp, #36]	; 0x24
 800b90e:	f89a 3000 	ldrb.w	r3, [sl]
 800b912:	2b00      	cmp	r3, #0
 800b914:	f000 80a1 	beq.w	800ba5a <_svfiprintf_r+0x1c6>
 800b918:	2300      	movs	r3, #0
 800b91a:	f04f 32ff 	mov.w	r2, #4294967295
 800b91e:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800b922:	f10a 0a01 	add.w	sl, sl, #1
 800b926:	9304      	str	r3, [sp, #16]
 800b928:	9307      	str	r3, [sp, #28]
 800b92a:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800b92e:	931a      	str	r3, [sp, #104]	; 0x68
 800b930:	4654      	mov	r4, sl
 800b932:	2205      	movs	r2, #5
 800b934:	f814 1b01 	ldrb.w	r1, [r4], #1
 800b938:	4850      	ldr	r0, [pc, #320]	; (800ba7c <_svfiprintf_r+0x1e8>)
 800b93a:	f7fe fc32 	bl	800a1a2 <memchr>
 800b93e:	9a04      	ldr	r2, [sp, #16]
 800b940:	b9d8      	cbnz	r0, 800b97a <_svfiprintf_r+0xe6>
 800b942:	06d0      	lsls	r0, r2, #27
 800b944:	bf44      	itt	mi
 800b946:	2320      	movmi	r3, #32
 800b948:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800b94c:	0711      	lsls	r1, r2, #28
 800b94e:	bf44      	itt	mi
 800b950:	232b      	movmi	r3, #43	; 0x2b
 800b952:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800b956:	f89a 3000 	ldrb.w	r3, [sl]
 800b95a:	2b2a      	cmp	r3, #42	; 0x2a
 800b95c:	d015      	beq.n	800b98a <_svfiprintf_r+0xf6>
 800b95e:	4654      	mov	r4, sl
 800b960:	2000      	movs	r0, #0
 800b962:	f04f 0c0a 	mov.w	ip, #10
 800b966:	9a07      	ldr	r2, [sp, #28]
 800b968:	4621      	mov	r1, r4
 800b96a:	f811 3b01 	ldrb.w	r3, [r1], #1
 800b96e:	3b30      	subs	r3, #48	; 0x30
 800b970:	2b09      	cmp	r3, #9
 800b972:	d94d      	bls.n	800ba10 <_svfiprintf_r+0x17c>
 800b974:	b1b0      	cbz	r0, 800b9a4 <_svfiprintf_r+0x110>
 800b976:	9207      	str	r2, [sp, #28]
 800b978:	e014      	b.n	800b9a4 <_svfiprintf_r+0x110>
 800b97a:	eba0 0308 	sub.w	r3, r0, r8
 800b97e:	fa09 f303 	lsl.w	r3, r9, r3
 800b982:	4313      	orrs	r3, r2
 800b984:	46a2      	mov	sl, r4
 800b986:	9304      	str	r3, [sp, #16]
 800b988:	e7d2      	b.n	800b930 <_svfiprintf_r+0x9c>
 800b98a:	9b03      	ldr	r3, [sp, #12]
 800b98c:	1d19      	adds	r1, r3, #4
 800b98e:	681b      	ldr	r3, [r3, #0]
 800b990:	9103      	str	r1, [sp, #12]
 800b992:	2b00      	cmp	r3, #0
 800b994:	bfbb      	ittet	lt
 800b996:	425b      	neglt	r3, r3
 800b998:	f042 0202 	orrlt.w	r2, r2, #2
 800b99c:	9307      	strge	r3, [sp, #28]
 800b99e:	9307      	strlt	r3, [sp, #28]
 800b9a0:	bfb8      	it	lt
 800b9a2:	9204      	strlt	r2, [sp, #16]
 800b9a4:	7823      	ldrb	r3, [r4, #0]
 800b9a6:	2b2e      	cmp	r3, #46	; 0x2e
 800b9a8:	d10c      	bne.n	800b9c4 <_svfiprintf_r+0x130>
 800b9aa:	7863      	ldrb	r3, [r4, #1]
 800b9ac:	2b2a      	cmp	r3, #42	; 0x2a
 800b9ae:	d134      	bne.n	800ba1a <_svfiprintf_r+0x186>
 800b9b0:	9b03      	ldr	r3, [sp, #12]
 800b9b2:	3402      	adds	r4, #2
 800b9b4:	1d1a      	adds	r2, r3, #4
 800b9b6:	681b      	ldr	r3, [r3, #0]
 800b9b8:	9203      	str	r2, [sp, #12]
 800b9ba:	2b00      	cmp	r3, #0
 800b9bc:	bfb8      	it	lt
 800b9be:	f04f 33ff 	movlt.w	r3, #4294967295
 800b9c2:	9305      	str	r3, [sp, #20]
 800b9c4:	f8df a0b8 	ldr.w	sl, [pc, #184]	; 800ba80 <_svfiprintf_r+0x1ec>
 800b9c8:	2203      	movs	r2, #3
 800b9ca:	4650      	mov	r0, sl
 800b9cc:	7821      	ldrb	r1, [r4, #0]
 800b9ce:	f7fe fbe8 	bl	800a1a2 <memchr>
 800b9d2:	b138      	cbz	r0, 800b9e4 <_svfiprintf_r+0x150>
 800b9d4:	2240      	movs	r2, #64	; 0x40
 800b9d6:	9b04      	ldr	r3, [sp, #16]
 800b9d8:	eba0 000a 	sub.w	r0, r0, sl
 800b9dc:	4082      	lsls	r2, r0
 800b9de:	4313      	orrs	r3, r2
 800b9e0:	3401      	adds	r4, #1
 800b9e2:	9304      	str	r3, [sp, #16]
 800b9e4:	f814 1b01 	ldrb.w	r1, [r4], #1
 800b9e8:	2206      	movs	r2, #6
 800b9ea:	4826      	ldr	r0, [pc, #152]	; (800ba84 <_svfiprintf_r+0x1f0>)
 800b9ec:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800b9f0:	f7fe fbd7 	bl	800a1a2 <memchr>
 800b9f4:	2800      	cmp	r0, #0
 800b9f6:	d038      	beq.n	800ba6a <_svfiprintf_r+0x1d6>
 800b9f8:	4b23      	ldr	r3, [pc, #140]	; (800ba88 <_svfiprintf_r+0x1f4>)
 800b9fa:	bb1b      	cbnz	r3, 800ba44 <_svfiprintf_r+0x1b0>
 800b9fc:	9b03      	ldr	r3, [sp, #12]
 800b9fe:	3307      	adds	r3, #7
 800ba00:	f023 0307 	bic.w	r3, r3, #7
 800ba04:	3308      	adds	r3, #8
 800ba06:	9303      	str	r3, [sp, #12]
 800ba08:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ba0a:	4433      	add	r3, r6
 800ba0c:	9309      	str	r3, [sp, #36]	; 0x24
 800ba0e:	e768      	b.n	800b8e2 <_svfiprintf_r+0x4e>
 800ba10:	460c      	mov	r4, r1
 800ba12:	2001      	movs	r0, #1
 800ba14:	fb0c 3202 	mla	r2, ip, r2, r3
 800ba18:	e7a6      	b.n	800b968 <_svfiprintf_r+0xd4>
 800ba1a:	2300      	movs	r3, #0
 800ba1c:	f04f 0c0a 	mov.w	ip, #10
 800ba20:	4619      	mov	r1, r3
 800ba22:	3401      	adds	r4, #1
 800ba24:	9305      	str	r3, [sp, #20]
 800ba26:	4620      	mov	r0, r4
 800ba28:	f810 2b01 	ldrb.w	r2, [r0], #1
 800ba2c:	3a30      	subs	r2, #48	; 0x30
 800ba2e:	2a09      	cmp	r2, #9
 800ba30:	d903      	bls.n	800ba3a <_svfiprintf_r+0x1a6>
 800ba32:	2b00      	cmp	r3, #0
 800ba34:	d0c6      	beq.n	800b9c4 <_svfiprintf_r+0x130>
 800ba36:	9105      	str	r1, [sp, #20]
 800ba38:	e7c4      	b.n	800b9c4 <_svfiprintf_r+0x130>
 800ba3a:	4604      	mov	r4, r0
 800ba3c:	2301      	movs	r3, #1
 800ba3e:	fb0c 2101 	mla	r1, ip, r1, r2
 800ba42:	e7f0      	b.n	800ba26 <_svfiprintf_r+0x192>
 800ba44:	ab03      	add	r3, sp, #12
 800ba46:	9300      	str	r3, [sp, #0]
 800ba48:	462a      	mov	r2, r5
 800ba4a:	4638      	mov	r0, r7
 800ba4c:	4b0f      	ldr	r3, [pc, #60]	; (800ba8c <_svfiprintf_r+0x1f8>)
 800ba4e:	a904      	add	r1, sp, #16
 800ba50:	f7fd fe40 	bl	80096d4 <_printf_float>
 800ba54:	1c42      	adds	r2, r0, #1
 800ba56:	4606      	mov	r6, r0
 800ba58:	d1d6      	bne.n	800ba08 <_svfiprintf_r+0x174>
 800ba5a:	89ab      	ldrh	r3, [r5, #12]
 800ba5c:	065b      	lsls	r3, r3, #25
 800ba5e:	f53f af2d 	bmi.w	800b8bc <_svfiprintf_r+0x28>
 800ba62:	9809      	ldr	r0, [sp, #36]	; 0x24
 800ba64:	b01d      	add	sp, #116	; 0x74
 800ba66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ba6a:	ab03      	add	r3, sp, #12
 800ba6c:	9300      	str	r3, [sp, #0]
 800ba6e:	462a      	mov	r2, r5
 800ba70:	4638      	mov	r0, r7
 800ba72:	4b06      	ldr	r3, [pc, #24]	; (800ba8c <_svfiprintf_r+0x1f8>)
 800ba74:	a904      	add	r1, sp, #16
 800ba76:	f7fe f8cd 	bl	8009c14 <_printf_i>
 800ba7a:	e7eb      	b.n	800ba54 <_svfiprintf_r+0x1c0>
 800ba7c:	0800c635 	.word	0x0800c635
 800ba80:	0800c63b 	.word	0x0800c63b
 800ba84:	0800c63f 	.word	0x0800c63f
 800ba88:	080096d5 	.word	0x080096d5
 800ba8c:	0800b7df 	.word	0x0800b7df

0800ba90 <__sflush_r>:
 800ba90:	898a      	ldrh	r2, [r1, #12]
 800ba92:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ba94:	4605      	mov	r5, r0
 800ba96:	0710      	lsls	r0, r2, #28
 800ba98:	460c      	mov	r4, r1
 800ba9a:	d457      	bmi.n	800bb4c <__sflush_r+0xbc>
 800ba9c:	684b      	ldr	r3, [r1, #4]
 800ba9e:	2b00      	cmp	r3, #0
 800baa0:	dc04      	bgt.n	800baac <__sflush_r+0x1c>
 800baa2:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800baa4:	2b00      	cmp	r3, #0
 800baa6:	dc01      	bgt.n	800baac <__sflush_r+0x1c>
 800baa8:	2000      	movs	r0, #0
 800baaa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800baac:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800baae:	2e00      	cmp	r6, #0
 800bab0:	d0fa      	beq.n	800baa8 <__sflush_r+0x18>
 800bab2:	2300      	movs	r3, #0
 800bab4:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800bab8:	682f      	ldr	r7, [r5, #0]
 800baba:	6a21      	ldr	r1, [r4, #32]
 800babc:	602b      	str	r3, [r5, #0]
 800babe:	d032      	beq.n	800bb26 <__sflush_r+0x96>
 800bac0:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800bac2:	89a3      	ldrh	r3, [r4, #12]
 800bac4:	075a      	lsls	r2, r3, #29
 800bac6:	d505      	bpl.n	800bad4 <__sflush_r+0x44>
 800bac8:	6863      	ldr	r3, [r4, #4]
 800baca:	1ac0      	subs	r0, r0, r3
 800bacc:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800bace:	b10b      	cbz	r3, 800bad4 <__sflush_r+0x44>
 800bad0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800bad2:	1ac0      	subs	r0, r0, r3
 800bad4:	2300      	movs	r3, #0
 800bad6:	4602      	mov	r2, r0
 800bad8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800bada:	4628      	mov	r0, r5
 800badc:	6a21      	ldr	r1, [r4, #32]
 800bade:	47b0      	blx	r6
 800bae0:	1c43      	adds	r3, r0, #1
 800bae2:	89a3      	ldrh	r3, [r4, #12]
 800bae4:	d106      	bne.n	800baf4 <__sflush_r+0x64>
 800bae6:	6829      	ldr	r1, [r5, #0]
 800bae8:	291d      	cmp	r1, #29
 800baea:	d82b      	bhi.n	800bb44 <__sflush_r+0xb4>
 800baec:	4a28      	ldr	r2, [pc, #160]	; (800bb90 <__sflush_r+0x100>)
 800baee:	410a      	asrs	r2, r1
 800baf0:	07d6      	lsls	r6, r2, #31
 800baf2:	d427      	bmi.n	800bb44 <__sflush_r+0xb4>
 800baf4:	2200      	movs	r2, #0
 800baf6:	6062      	str	r2, [r4, #4]
 800baf8:	6922      	ldr	r2, [r4, #16]
 800bafa:	04d9      	lsls	r1, r3, #19
 800bafc:	6022      	str	r2, [r4, #0]
 800bafe:	d504      	bpl.n	800bb0a <__sflush_r+0x7a>
 800bb00:	1c42      	adds	r2, r0, #1
 800bb02:	d101      	bne.n	800bb08 <__sflush_r+0x78>
 800bb04:	682b      	ldr	r3, [r5, #0]
 800bb06:	b903      	cbnz	r3, 800bb0a <__sflush_r+0x7a>
 800bb08:	6560      	str	r0, [r4, #84]	; 0x54
 800bb0a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800bb0c:	602f      	str	r7, [r5, #0]
 800bb0e:	2900      	cmp	r1, #0
 800bb10:	d0ca      	beq.n	800baa8 <__sflush_r+0x18>
 800bb12:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800bb16:	4299      	cmp	r1, r3
 800bb18:	d002      	beq.n	800bb20 <__sflush_r+0x90>
 800bb1a:	4628      	mov	r0, r5
 800bb1c:	f7ff f9cc 	bl	800aeb8 <_free_r>
 800bb20:	2000      	movs	r0, #0
 800bb22:	6360      	str	r0, [r4, #52]	; 0x34
 800bb24:	e7c1      	b.n	800baaa <__sflush_r+0x1a>
 800bb26:	2301      	movs	r3, #1
 800bb28:	4628      	mov	r0, r5
 800bb2a:	47b0      	blx	r6
 800bb2c:	1c41      	adds	r1, r0, #1
 800bb2e:	d1c8      	bne.n	800bac2 <__sflush_r+0x32>
 800bb30:	682b      	ldr	r3, [r5, #0]
 800bb32:	2b00      	cmp	r3, #0
 800bb34:	d0c5      	beq.n	800bac2 <__sflush_r+0x32>
 800bb36:	2b1d      	cmp	r3, #29
 800bb38:	d001      	beq.n	800bb3e <__sflush_r+0xae>
 800bb3a:	2b16      	cmp	r3, #22
 800bb3c:	d101      	bne.n	800bb42 <__sflush_r+0xb2>
 800bb3e:	602f      	str	r7, [r5, #0]
 800bb40:	e7b2      	b.n	800baa8 <__sflush_r+0x18>
 800bb42:	89a3      	ldrh	r3, [r4, #12]
 800bb44:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800bb48:	81a3      	strh	r3, [r4, #12]
 800bb4a:	e7ae      	b.n	800baaa <__sflush_r+0x1a>
 800bb4c:	690f      	ldr	r7, [r1, #16]
 800bb4e:	2f00      	cmp	r7, #0
 800bb50:	d0aa      	beq.n	800baa8 <__sflush_r+0x18>
 800bb52:	0793      	lsls	r3, r2, #30
 800bb54:	bf18      	it	ne
 800bb56:	2300      	movne	r3, #0
 800bb58:	680e      	ldr	r6, [r1, #0]
 800bb5a:	bf08      	it	eq
 800bb5c:	694b      	ldreq	r3, [r1, #20]
 800bb5e:	1bf6      	subs	r6, r6, r7
 800bb60:	600f      	str	r7, [r1, #0]
 800bb62:	608b      	str	r3, [r1, #8]
 800bb64:	2e00      	cmp	r6, #0
 800bb66:	dd9f      	ble.n	800baa8 <__sflush_r+0x18>
 800bb68:	4633      	mov	r3, r6
 800bb6a:	463a      	mov	r2, r7
 800bb6c:	4628      	mov	r0, r5
 800bb6e:	6a21      	ldr	r1, [r4, #32]
 800bb70:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 800bb74:	47e0      	blx	ip
 800bb76:	2800      	cmp	r0, #0
 800bb78:	dc06      	bgt.n	800bb88 <__sflush_r+0xf8>
 800bb7a:	89a3      	ldrh	r3, [r4, #12]
 800bb7c:	f04f 30ff 	mov.w	r0, #4294967295
 800bb80:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800bb84:	81a3      	strh	r3, [r4, #12]
 800bb86:	e790      	b.n	800baaa <__sflush_r+0x1a>
 800bb88:	4407      	add	r7, r0
 800bb8a:	1a36      	subs	r6, r6, r0
 800bb8c:	e7ea      	b.n	800bb64 <__sflush_r+0xd4>
 800bb8e:	bf00      	nop
 800bb90:	dfbffffe 	.word	0xdfbffffe

0800bb94 <_fflush_r>:
 800bb94:	b538      	push	{r3, r4, r5, lr}
 800bb96:	690b      	ldr	r3, [r1, #16]
 800bb98:	4605      	mov	r5, r0
 800bb9a:	460c      	mov	r4, r1
 800bb9c:	b913      	cbnz	r3, 800bba4 <_fflush_r+0x10>
 800bb9e:	2500      	movs	r5, #0
 800bba0:	4628      	mov	r0, r5
 800bba2:	bd38      	pop	{r3, r4, r5, pc}
 800bba4:	b118      	cbz	r0, 800bbae <_fflush_r+0x1a>
 800bba6:	6a03      	ldr	r3, [r0, #32]
 800bba8:	b90b      	cbnz	r3, 800bbae <_fflush_r+0x1a>
 800bbaa:	f7fe f9e1 	bl	8009f70 <__sinit>
 800bbae:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800bbb2:	2b00      	cmp	r3, #0
 800bbb4:	d0f3      	beq.n	800bb9e <_fflush_r+0xa>
 800bbb6:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800bbb8:	07d0      	lsls	r0, r2, #31
 800bbba:	d404      	bmi.n	800bbc6 <_fflush_r+0x32>
 800bbbc:	0599      	lsls	r1, r3, #22
 800bbbe:	d402      	bmi.n	800bbc6 <_fflush_r+0x32>
 800bbc0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800bbc2:	f7fe faec 	bl	800a19e <__retarget_lock_acquire_recursive>
 800bbc6:	4628      	mov	r0, r5
 800bbc8:	4621      	mov	r1, r4
 800bbca:	f7ff ff61 	bl	800ba90 <__sflush_r>
 800bbce:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800bbd0:	4605      	mov	r5, r0
 800bbd2:	07da      	lsls	r2, r3, #31
 800bbd4:	d4e4      	bmi.n	800bba0 <_fflush_r+0xc>
 800bbd6:	89a3      	ldrh	r3, [r4, #12]
 800bbd8:	059b      	lsls	r3, r3, #22
 800bbda:	d4e1      	bmi.n	800bba0 <_fflush_r+0xc>
 800bbdc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800bbde:	f7fe fadf 	bl	800a1a0 <__retarget_lock_release_recursive>
 800bbe2:	e7dd      	b.n	800bba0 <_fflush_r+0xc>

0800bbe4 <memmove>:
 800bbe4:	4288      	cmp	r0, r1
 800bbe6:	b510      	push	{r4, lr}
 800bbe8:	eb01 0402 	add.w	r4, r1, r2
 800bbec:	d902      	bls.n	800bbf4 <memmove+0x10>
 800bbee:	4284      	cmp	r4, r0
 800bbf0:	4623      	mov	r3, r4
 800bbf2:	d807      	bhi.n	800bc04 <memmove+0x20>
 800bbf4:	1e43      	subs	r3, r0, #1
 800bbf6:	42a1      	cmp	r1, r4
 800bbf8:	d008      	beq.n	800bc0c <memmove+0x28>
 800bbfa:	f811 2b01 	ldrb.w	r2, [r1], #1
 800bbfe:	f803 2f01 	strb.w	r2, [r3, #1]!
 800bc02:	e7f8      	b.n	800bbf6 <memmove+0x12>
 800bc04:	4601      	mov	r1, r0
 800bc06:	4402      	add	r2, r0
 800bc08:	428a      	cmp	r2, r1
 800bc0a:	d100      	bne.n	800bc0e <memmove+0x2a>
 800bc0c:	bd10      	pop	{r4, pc}
 800bc0e:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800bc12:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800bc16:	e7f7      	b.n	800bc08 <memmove+0x24>

0800bc18 <_sbrk_r>:
 800bc18:	b538      	push	{r3, r4, r5, lr}
 800bc1a:	2300      	movs	r3, #0
 800bc1c:	4d05      	ldr	r5, [pc, #20]	; (800bc34 <_sbrk_r+0x1c>)
 800bc1e:	4604      	mov	r4, r0
 800bc20:	4608      	mov	r0, r1
 800bc22:	602b      	str	r3, [r5, #0]
 800bc24:	f7f7 fae6 	bl	80031f4 <_sbrk>
 800bc28:	1c43      	adds	r3, r0, #1
 800bc2a:	d102      	bne.n	800bc32 <_sbrk_r+0x1a>
 800bc2c:	682b      	ldr	r3, [r5, #0]
 800bc2e:	b103      	cbz	r3, 800bc32 <_sbrk_r+0x1a>
 800bc30:	6023      	str	r3, [r4, #0]
 800bc32:	bd38      	pop	{r3, r4, r5, pc}
 800bc34:	200024f8 	.word	0x200024f8

0800bc38 <__assert_func>:
 800bc38:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800bc3a:	4614      	mov	r4, r2
 800bc3c:	461a      	mov	r2, r3
 800bc3e:	4b09      	ldr	r3, [pc, #36]	; (800bc64 <__assert_func+0x2c>)
 800bc40:	4605      	mov	r5, r0
 800bc42:	681b      	ldr	r3, [r3, #0]
 800bc44:	68d8      	ldr	r0, [r3, #12]
 800bc46:	b14c      	cbz	r4, 800bc5c <__assert_func+0x24>
 800bc48:	4b07      	ldr	r3, [pc, #28]	; (800bc68 <__assert_func+0x30>)
 800bc4a:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800bc4e:	9100      	str	r1, [sp, #0]
 800bc50:	462b      	mov	r3, r5
 800bc52:	4906      	ldr	r1, [pc, #24]	; (800bc6c <__assert_func+0x34>)
 800bc54:	f000 f852 	bl	800bcfc <fiprintf>
 800bc58:	f000 f862 	bl	800bd20 <abort>
 800bc5c:	4b04      	ldr	r3, [pc, #16]	; (800bc70 <__assert_func+0x38>)
 800bc5e:	461c      	mov	r4, r3
 800bc60:	e7f3      	b.n	800bc4a <__assert_func+0x12>
 800bc62:	bf00      	nop
 800bc64:	20000238 	.word	0x20000238
 800bc68:	0800c646 	.word	0x0800c646
 800bc6c:	0800c653 	.word	0x0800c653
 800bc70:	0800c681 	.word	0x0800c681

0800bc74 <_calloc_r>:
 800bc74:	b570      	push	{r4, r5, r6, lr}
 800bc76:	fba1 5402 	umull	r5, r4, r1, r2
 800bc7a:	b934      	cbnz	r4, 800bc8a <_calloc_r+0x16>
 800bc7c:	4629      	mov	r1, r5
 800bc7e:	f7ff f98b 	bl	800af98 <_malloc_r>
 800bc82:	4606      	mov	r6, r0
 800bc84:	b928      	cbnz	r0, 800bc92 <_calloc_r+0x1e>
 800bc86:	4630      	mov	r0, r6
 800bc88:	bd70      	pop	{r4, r5, r6, pc}
 800bc8a:	220c      	movs	r2, #12
 800bc8c:	2600      	movs	r6, #0
 800bc8e:	6002      	str	r2, [r0, #0]
 800bc90:	e7f9      	b.n	800bc86 <_calloc_r+0x12>
 800bc92:	462a      	mov	r2, r5
 800bc94:	4621      	mov	r1, r4
 800bc96:	f7fe fa04 	bl	800a0a2 <memset>
 800bc9a:	e7f4      	b.n	800bc86 <_calloc_r+0x12>

0800bc9c <_realloc_r>:
 800bc9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bca0:	4680      	mov	r8, r0
 800bca2:	4614      	mov	r4, r2
 800bca4:	460e      	mov	r6, r1
 800bca6:	b921      	cbnz	r1, 800bcb2 <_realloc_r+0x16>
 800bca8:	4611      	mov	r1, r2
 800bcaa:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800bcae:	f7ff b973 	b.w	800af98 <_malloc_r>
 800bcb2:	b92a      	cbnz	r2, 800bcc0 <_realloc_r+0x24>
 800bcb4:	f7ff f900 	bl	800aeb8 <_free_r>
 800bcb8:	4625      	mov	r5, r4
 800bcba:	4628      	mov	r0, r5
 800bcbc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bcc0:	f000 f835 	bl	800bd2e <_malloc_usable_size_r>
 800bcc4:	4284      	cmp	r4, r0
 800bcc6:	4607      	mov	r7, r0
 800bcc8:	d802      	bhi.n	800bcd0 <_realloc_r+0x34>
 800bcca:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 800bcce:	d812      	bhi.n	800bcf6 <_realloc_r+0x5a>
 800bcd0:	4621      	mov	r1, r4
 800bcd2:	4640      	mov	r0, r8
 800bcd4:	f7ff f960 	bl	800af98 <_malloc_r>
 800bcd8:	4605      	mov	r5, r0
 800bcda:	2800      	cmp	r0, #0
 800bcdc:	d0ed      	beq.n	800bcba <_realloc_r+0x1e>
 800bcde:	42bc      	cmp	r4, r7
 800bce0:	4622      	mov	r2, r4
 800bce2:	4631      	mov	r1, r6
 800bce4:	bf28      	it	cs
 800bce6:	463a      	movcs	r2, r7
 800bce8:	f7fe fa69 	bl	800a1be <memcpy>
 800bcec:	4631      	mov	r1, r6
 800bcee:	4640      	mov	r0, r8
 800bcf0:	f7ff f8e2 	bl	800aeb8 <_free_r>
 800bcf4:	e7e1      	b.n	800bcba <_realloc_r+0x1e>
 800bcf6:	4635      	mov	r5, r6
 800bcf8:	e7df      	b.n	800bcba <_realloc_r+0x1e>
	...

0800bcfc <fiprintf>:
 800bcfc:	b40e      	push	{r1, r2, r3}
 800bcfe:	b503      	push	{r0, r1, lr}
 800bd00:	4601      	mov	r1, r0
 800bd02:	ab03      	add	r3, sp, #12
 800bd04:	4805      	ldr	r0, [pc, #20]	; (800bd1c <fiprintf+0x20>)
 800bd06:	f853 2b04 	ldr.w	r2, [r3], #4
 800bd0a:	6800      	ldr	r0, [r0, #0]
 800bd0c:	9301      	str	r3, [sp, #4]
 800bd0e:	f000 f83d 	bl	800bd8c <_vfiprintf_r>
 800bd12:	b002      	add	sp, #8
 800bd14:	f85d eb04 	ldr.w	lr, [sp], #4
 800bd18:	b003      	add	sp, #12
 800bd1a:	4770      	bx	lr
 800bd1c:	20000238 	.word	0x20000238

0800bd20 <abort>:
 800bd20:	2006      	movs	r0, #6
 800bd22:	b508      	push	{r3, lr}
 800bd24:	f000 fa0a 	bl	800c13c <raise>
 800bd28:	2001      	movs	r0, #1
 800bd2a:	f7f7 f9f0 	bl	800310e <_exit>

0800bd2e <_malloc_usable_size_r>:
 800bd2e:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800bd32:	1f18      	subs	r0, r3, #4
 800bd34:	2b00      	cmp	r3, #0
 800bd36:	bfbc      	itt	lt
 800bd38:	580b      	ldrlt	r3, [r1, r0]
 800bd3a:	18c0      	addlt	r0, r0, r3
 800bd3c:	4770      	bx	lr

0800bd3e <__sfputc_r>:
 800bd3e:	6893      	ldr	r3, [r2, #8]
 800bd40:	b410      	push	{r4}
 800bd42:	3b01      	subs	r3, #1
 800bd44:	2b00      	cmp	r3, #0
 800bd46:	6093      	str	r3, [r2, #8]
 800bd48:	da07      	bge.n	800bd5a <__sfputc_r+0x1c>
 800bd4a:	6994      	ldr	r4, [r2, #24]
 800bd4c:	42a3      	cmp	r3, r4
 800bd4e:	db01      	blt.n	800bd54 <__sfputc_r+0x16>
 800bd50:	290a      	cmp	r1, #10
 800bd52:	d102      	bne.n	800bd5a <__sfputc_r+0x1c>
 800bd54:	bc10      	pop	{r4}
 800bd56:	f000 b933 	b.w	800bfc0 <__swbuf_r>
 800bd5a:	6813      	ldr	r3, [r2, #0]
 800bd5c:	1c58      	adds	r0, r3, #1
 800bd5e:	6010      	str	r0, [r2, #0]
 800bd60:	7019      	strb	r1, [r3, #0]
 800bd62:	4608      	mov	r0, r1
 800bd64:	bc10      	pop	{r4}
 800bd66:	4770      	bx	lr

0800bd68 <__sfputs_r>:
 800bd68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bd6a:	4606      	mov	r6, r0
 800bd6c:	460f      	mov	r7, r1
 800bd6e:	4614      	mov	r4, r2
 800bd70:	18d5      	adds	r5, r2, r3
 800bd72:	42ac      	cmp	r4, r5
 800bd74:	d101      	bne.n	800bd7a <__sfputs_r+0x12>
 800bd76:	2000      	movs	r0, #0
 800bd78:	e007      	b.n	800bd8a <__sfputs_r+0x22>
 800bd7a:	463a      	mov	r2, r7
 800bd7c:	4630      	mov	r0, r6
 800bd7e:	f814 1b01 	ldrb.w	r1, [r4], #1
 800bd82:	f7ff ffdc 	bl	800bd3e <__sfputc_r>
 800bd86:	1c43      	adds	r3, r0, #1
 800bd88:	d1f3      	bne.n	800bd72 <__sfputs_r+0xa>
 800bd8a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800bd8c <_vfiprintf_r>:
 800bd8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bd90:	460d      	mov	r5, r1
 800bd92:	4614      	mov	r4, r2
 800bd94:	4698      	mov	r8, r3
 800bd96:	4606      	mov	r6, r0
 800bd98:	b09d      	sub	sp, #116	; 0x74
 800bd9a:	b118      	cbz	r0, 800bda4 <_vfiprintf_r+0x18>
 800bd9c:	6a03      	ldr	r3, [r0, #32]
 800bd9e:	b90b      	cbnz	r3, 800bda4 <_vfiprintf_r+0x18>
 800bda0:	f7fe f8e6 	bl	8009f70 <__sinit>
 800bda4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800bda6:	07d9      	lsls	r1, r3, #31
 800bda8:	d405      	bmi.n	800bdb6 <_vfiprintf_r+0x2a>
 800bdaa:	89ab      	ldrh	r3, [r5, #12]
 800bdac:	059a      	lsls	r2, r3, #22
 800bdae:	d402      	bmi.n	800bdb6 <_vfiprintf_r+0x2a>
 800bdb0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800bdb2:	f7fe f9f4 	bl	800a19e <__retarget_lock_acquire_recursive>
 800bdb6:	89ab      	ldrh	r3, [r5, #12]
 800bdb8:	071b      	lsls	r3, r3, #28
 800bdba:	d501      	bpl.n	800bdc0 <_vfiprintf_r+0x34>
 800bdbc:	692b      	ldr	r3, [r5, #16]
 800bdbe:	b99b      	cbnz	r3, 800bde8 <_vfiprintf_r+0x5c>
 800bdc0:	4629      	mov	r1, r5
 800bdc2:	4630      	mov	r0, r6
 800bdc4:	f000 f93a 	bl	800c03c <__swsetup_r>
 800bdc8:	b170      	cbz	r0, 800bde8 <_vfiprintf_r+0x5c>
 800bdca:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800bdcc:	07dc      	lsls	r4, r3, #31
 800bdce:	d504      	bpl.n	800bdda <_vfiprintf_r+0x4e>
 800bdd0:	f04f 30ff 	mov.w	r0, #4294967295
 800bdd4:	b01d      	add	sp, #116	; 0x74
 800bdd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bdda:	89ab      	ldrh	r3, [r5, #12]
 800bddc:	0598      	lsls	r0, r3, #22
 800bdde:	d4f7      	bmi.n	800bdd0 <_vfiprintf_r+0x44>
 800bde0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800bde2:	f7fe f9dd 	bl	800a1a0 <__retarget_lock_release_recursive>
 800bde6:	e7f3      	b.n	800bdd0 <_vfiprintf_r+0x44>
 800bde8:	2300      	movs	r3, #0
 800bdea:	9309      	str	r3, [sp, #36]	; 0x24
 800bdec:	2320      	movs	r3, #32
 800bdee:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800bdf2:	2330      	movs	r3, #48	; 0x30
 800bdf4:	f04f 0901 	mov.w	r9, #1
 800bdf8:	f8cd 800c 	str.w	r8, [sp, #12]
 800bdfc:	f8df 81ac 	ldr.w	r8, [pc, #428]	; 800bfac <_vfiprintf_r+0x220>
 800be00:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800be04:	4623      	mov	r3, r4
 800be06:	469a      	mov	sl, r3
 800be08:	f813 2b01 	ldrb.w	r2, [r3], #1
 800be0c:	b10a      	cbz	r2, 800be12 <_vfiprintf_r+0x86>
 800be0e:	2a25      	cmp	r2, #37	; 0x25
 800be10:	d1f9      	bne.n	800be06 <_vfiprintf_r+0x7a>
 800be12:	ebba 0b04 	subs.w	fp, sl, r4
 800be16:	d00b      	beq.n	800be30 <_vfiprintf_r+0xa4>
 800be18:	465b      	mov	r3, fp
 800be1a:	4622      	mov	r2, r4
 800be1c:	4629      	mov	r1, r5
 800be1e:	4630      	mov	r0, r6
 800be20:	f7ff ffa2 	bl	800bd68 <__sfputs_r>
 800be24:	3001      	adds	r0, #1
 800be26:	f000 80a9 	beq.w	800bf7c <_vfiprintf_r+0x1f0>
 800be2a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800be2c:	445a      	add	r2, fp
 800be2e:	9209      	str	r2, [sp, #36]	; 0x24
 800be30:	f89a 3000 	ldrb.w	r3, [sl]
 800be34:	2b00      	cmp	r3, #0
 800be36:	f000 80a1 	beq.w	800bf7c <_vfiprintf_r+0x1f0>
 800be3a:	2300      	movs	r3, #0
 800be3c:	f04f 32ff 	mov.w	r2, #4294967295
 800be40:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800be44:	f10a 0a01 	add.w	sl, sl, #1
 800be48:	9304      	str	r3, [sp, #16]
 800be4a:	9307      	str	r3, [sp, #28]
 800be4c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800be50:	931a      	str	r3, [sp, #104]	; 0x68
 800be52:	4654      	mov	r4, sl
 800be54:	2205      	movs	r2, #5
 800be56:	f814 1b01 	ldrb.w	r1, [r4], #1
 800be5a:	4854      	ldr	r0, [pc, #336]	; (800bfac <_vfiprintf_r+0x220>)
 800be5c:	f7fe f9a1 	bl	800a1a2 <memchr>
 800be60:	9a04      	ldr	r2, [sp, #16]
 800be62:	b9d8      	cbnz	r0, 800be9c <_vfiprintf_r+0x110>
 800be64:	06d1      	lsls	r1, r2, #27
 800be66:	bf44      	itt	mi
 800be68:	2320      	movmi	r3, #32
 800be6a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800be6e:	0713      	lsls	r3, r2, #28
 800be70:	bf44      	itt	mi
 800be72:	232b      	movmi	r3, #43	; 0x2b
 800be74:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800be78:	f89a 3000 	ldrb.w	r3, [sl]
 800be7c:	2b2a      	cmp	r3, #42	; 0x2a
 800be7e:	d015      	beq.n	800beac <_vfiprintf_r+0x120>
 800be80:	4654      	mov	r4, sl
 800be82:	2000      	movs	r0, #0
 800be84:	f04f 0c0a 	mov.w	ip, #10
 800be88:	9a07      	ldr	r2, [sp, #28]
 800be8a:	4621      	mov	r1, r4
 800be8c:	f811 3b01 	ldrb.w	r3, [r1], #1
 800be90:	3b30      	subs	r3, #48	; 0x30
 800be92:	2b09      	cmp	r3, #9
 800be94:	d94d      	bls.n	800bf32 <_vfiprintf_r+0x1a6>
 800be96:	b1b0      	cbz	r0, 800bec6 <_vfiprintf_r+0x13a>
 800be98:	9207      	str	r2, [sp, #28]
 800be9a:	e014      	b.n	800bec6 <_vfiprintf_r+0x13a>
 800be9c:	eba0 0308 	sub.w	r3, r0, r8
 800bea0:	fa09 f303 	lsl.w	r3, r9, r3
 800bea4:	4313      	orrs	r3, r2
 800bea6:	46a2      	mov	sl, r4
 800bea8:	9304      	str	r3, [sp, #16]
 800beaa:	e7d2      	b.n	800be52 <_vfiprintf_r+0xc6>
 800beac:	9b03      	ldr	r3, [sp, #12]
 800beae:	1d19      	adds	r1, r3, #4
 800beb0:	681b      	ldr	r3, [r3, #0]
 800beb2:	9103      	str	r1, [sp, #12]
 800beb4:	2b00      	cmp	r3, #0
 800beb6:	bfbb      	ittet	lt
 800beb8:	425b      	neglt	r3, r3
 800beba:	f042 0202 	orrlt.w	r2, r2, #2
 800bebe:	9307      	strge	r3, [sp, #28]
 800bec0:	9307      	strlt	r3, [sp, #28]
 800bec2:	bfb8      	it	lt
 800bec4:	9204      	strlt	r2, [sp, #16]
 800bec6:	7823      	ldrb	r3, [r4, #0]
 800bec8:	2b2e      	cmp	r3, #46	; 0x2e
 800beca:	d10c      	bne.n	800bee6 <_vfiprintf_r+0x15a>
 800becc:	7863      	ldrb	r3, [r4, #1]
 800bece:	2b2a      	cmp	r3, #42	; 0x2a
 800bed0:	d134      	bne.n	800bf3c <_vfiprintf_r+0x1b0>
 800bed2:	9b03      	ldr	r3, [sp, #12]
 800bed4:	3402      	adds	r4, #2
 800bed6:	1d1a      	adds	r2, r3, #4
 800bed8:	681b      	ldr	r3, [r3, #0]
 800beda:	9203      	str	r2, [sp, #12]
 800bedc:	2b00      	cmp	r3, #0
 800bede:	bfb8      	it	lt
 800bee0:	f04f 33ff 	movlt.w	r3, #4294967295
 800bee4:	9305      	str	r3, [sp, #20]
 800bee6:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 800bfb0 <_vfiprintf_r+0x224>
 800beea:	2203      	movs	r2, #3
 800beec:	4650      	mov	r0, sl
 800beee:	7821      	ldrb	r1, [r4, #0]
 800bef0:	f7fe f957 	bl	800a1a2 <memchr>
 800bef4:	b138      	cbz	r0, 800bf06 <_vfiprintf_r+0x17a>
 800bef6:	2240      	movs	r2, #64	; 0x40
 800bef8:	9b04      	ldr	r3, [sp, #16]
 800befa:	eba0 000a 	sub.w	r0, r0, sl
 800befe:	4082      	lsls	r2, r0
 800bf00:	4313      	orrs	r3, r2
 800bf02:	3401      	adds	r4, #1
 800bf04:	9304      	str	r3, [sp, #16]
 800bf06:	f814 1b01 	ldrb.w	r1, [r4], #1
 800bf0a:	2206      	movs	r2, #6
 800bf0c:	4829      	ldr	r0, [pc, #164]	; (800bfb4 <_vfiprintf_r+0x228>)
 800bf0e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800bf12:	f7fe f946 	bl	800a1a2 <memchr>
 800bf16:	2800      	cmp	r0, #0
 800bf18:	d03f      	beq.n	800bf9a <_vfiprintf_r+0x20e>
 800bf1a:	4b27      	ldr	r3, [pc, #156]	; (800bfb8 <_vfiprintf_r+0x22c>)
 800bf1c:	bb1b      	cbnz	r3, 800bf66 <_vfiprintf_r+0x1da>
 800bf1e:	9b03      	ldr	r3, [sp, #12]
 800bf20:	3307      	adds	r3, #7
 800bf22:	f023 0307 	bic.w	r3, r3, #7
 800bf26:	3308      	adds	r3, #8
 800bf28:	9303      	str	r3, [sp, #12]
 800bf2a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800bf2c:	443b      	add	r3, r7
 800bf2e:	9309      	str	r3, [sp, #36]	; 0x24
 800bf30:	e768      	b.n	800be04 <_vfiprintf_r+0x78>
 800bf32:	460c      	mov	r4, r1
 800bf34:	2001      	movs	r0, #1
 800bf36:	fb0c 3202 	mla	r2, ip, r2, r3
 800bf3a:	e7a6      	b.n	800be8a <_vfiprintf_r+0xfe>
 800bf3c:	2300      	movs	r3, #0
 800bf3e:	f04f 0c0a 	mov.w	ip, #10
 800bf42:	4619      	mov	r1, r3
 800bf44:	3401      	adds	r4, #1
 800bf46:	9305      	str	r3, [sp, #20]
 800bf48:	4620      	mov	r0, r4
 800bf4a:	f810 2b01 	ldrb.w	r2, [r0], #1
 800bf4e:	3a30      	subs	r2, #48	; 0x30
 800bf50:	2a09      	cmp	r2, #9
 800bf52:	d903      	bls.n	800bf5c <_vfiprintf_r+0x1d0>
 800bf54:	2b00      	cmp	r3, #0
 800bf56:	d0c6      	beq.n	800bee6 <_vfiprintf_r+0x15a>
 800bf58:	9105      	str	r1, [sp, #20]
 800bf5a:	e7c4      	b.n	800bee6 <_vfiprintf_r+0x15a>
 800bf5c:	4604      	mov	r4, r0
 800bf5e:	2301      	movs	r3, #1
 800bf60:	fb0c 2101 	mla	r1, ip, r1, r2
 800bf64:	e7f0      	b.n	800bf48 <_vfiprintf_r+0x1bc>
 800bf66:	ab03      	add	r3, sp, #12
 800bf68:	9300      	str	r3, [sp, #0]
 800bf6a:	462a      	mov	r2, r5
 800bf6c:	4630      	mov	r0, r6
 800bf6e:	4b13      	ldr	r3, [pc, #76]	; (800bfbc <_vfiprintf_r+0x230>)
 800bf70:	a904      	add	r1, sp, #16
 800bf72:	f7fd fbaf 	bl	80096d4 <_printf_float>
 800bf76:	4607      	mov	r7, r0
 800bf78:	1c78      	adds	r0, r7, #1
 800bf7a:	d1d6      	bne.n	800bf2a <_vfiprintf_r+0x19e>
 800bf7c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800bf7e:	07d9      	lsls	r1, r3, #31
 800bf80:	d405      	bmi.n	800bf8e <_vfiprintf_r+0x202>
 800bf82:	89ab      	ldrh	r3, [r5, #12]
 800bf84:	059a      	lsls	r2, r3, #22
 800bf86:	d402      	bmi.n	800bf8e <_vfiprintf_r+0x202>
 800bf88:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800bf8a:	f7fe f909 	bl	800a1a0 <__retarget_lock_release_recursive>
 800bf8e:	89ab      	ldrh	r3, [r5, #12]
 800bf90:	065b      	lsls	r3, r3, #25
 800bf92:	f53f af1d 	bmi.w	800bdd0 <_vfiprintf_r+0x44>
 800bf96:	9809      	ldr	r0, [sp, #36]	; 0x24
 800bf98:	e71c      	b.n	800bdd4 <_vfiprintf_r+0x48>
 800bf9a:	ab03      	add	r3, sp, #12
 800bf9c:	9300      	str	r3, [sp, #0]
 800bf9e:	462a      	mov	r2, r5
 800bfa0:	4630      	mov	r0, r6
 800bfa2:	4b06      	ldr	r3, [pc, #24]	; (800bfbc <_vfiprintf_r+0x230>)
 800bfa4:	a904      	add	r1, sp, #16
 800bfa6:	f7fd fe35 	bl	8009c14 <_printf_i>
 800bfaa:	e7e4      	b.n	800bf76 <_vfiprintf_r+0x1ea>
 800bfac:	0800c635 	.word	0x0800c635
 800bfb0:	0800c63b 	.word	0x0800c63b
 800bfb4:	0800c63f 	.word	0x0800c63f
 800bfb8:	080096d5 	.word	0x080096d5
 800bfbc:	0800bd69 	.word	0x0800bd69

0800bfc0 <__swbuf_r>:
 800bfc0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bfc2:	460e      	mov	r6, r1
 800bfc4:	4614      	mov	r4, r2
 800bfc6:	4605      	mov	r5, r0
 800bfc8:	b118      	cbz	r0, 800bfd2 <__swbuf_r+0x12>
 800bfca:	6a03      	ldr	r3, [r0, #32]
 800bfcc:	b90b      	cbnz	r3, 800bfd2 <__swbuf_r+0x12>
 800bfce:	f7fd ffcf 	bl	8009f70 <__sinit>
 800bfd2:	69a3      	ldr	r3, [r4, #24]
 800bfd4:	60a3      	str	r3, [r4, #8]
 800bfd6:	89a3      	ldrh	r3, [r4, #12]
 800bfd8:	071a      	lsls	r2, r3, #28
 800bfda:	d525      	bpl.n	800c028 <__swbuf_r+0x68>
 800bfdc:	6923      	ldr	r3, [r4, #16]
 800bfde:	b31b      	cbz	r3, 800c028 <__swbuf_r+0x68>
 800bfe0:	6823      	ldr	r3, [r4, #0]
 800bfe2:	6922      	ldr	r2, [r4, #16]
 800bfe4:	b2f6      	uxtb	r6, r6
 800bfe6:	1a98      	subs	r0, r3, r2
 800bfe8:	6963      	ldr	r3, [r4, #20]
 800bfea:	4637      	mov	r7, r6
 800bfec:	4283      	cmp	r3, r0
 800bfee:	dc04      	bgt.n	800bffa <__swbuf_r+0x3a>
 800bff0:	4621      	mov	r1, r4
 800bff2:	4628      	mov	r0, r5
 800bff4:	f7ff fdce 	bl	800bb94 <_fflush_r>
 800bff8:	b9e0      	cbnz	r0, 800c034 <__swbuf_r+0x74>
 800bffa:	68a3      	ldr	r3, [r4, #8]
 800bffc:	3b01      	subs	r3, #1
 800bffe:	60a3      	str	r3, [r4, #8]
 800c000:	6823      	ldr	r3, [r4, #0]
 800c002:	1c5a      	adds	r2, r3, #1
 800c004:	6022      	str	r2, [r4, #0]
 800c006:	701e      	strb	r6, [r3, #0]
 800c008:	6962      	ldr	r2, [r4, #20]
 800c00a:	1c43      	adds	r3, r0, #1
 800c00c:	429a      	cmp	r2, r3
 800c00e:	d004      	beq.n	800c01a <__swbuf_r+0x5a>
 800c010:	89a3      	ldrh	r3, [r4, #12]
 800c012:	07db      	lsls	r3, r3, #31
 800c014:	d506      	bpl.n	800c024 <__swbuf_r+0x64>
 800c016:	2e0a      	cmp	r6, #10
 800c018:	d104      	bne.n	800c024 <__swbuf_r+0x64>
 800c01a:	4621      	mov	r1, r4
 800c01c:	4628      	mov	r0, r5
 800c01e:	f7ff fdb9 	bl	800bb94 <_fflush_r>
 800c022:	b938      	cbnz	r0, 800c034 <__swbuf_r+0x74>
 800c024:	4638      	mov	r0, r7
 800c026:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c028:	4621      	mov	r1, r4
 800c02a:	4628      	mov	r0, r5
 800c02c:	f000 f806 	bl	800c03c <__swsetup_r>
 800c030:	2800      	cmp	r0, #0
 800c032:	d0d5      	beq.n	800bfe0 <__swbuf_r+0x20>
 800c034:	f04f 37ff 	mov.w	r7, #4294967295
 800c038:	e7f4      	b.n	800c024 <__swbuf_r+0x64>
	...

0800c03c <__swsetup_r>:
 800c03c:	b538      	push	{r3, r4, r5, lr}
 800c03e:	4b2a      	ldr	r3, [pc, #168]	; (800c0e8 <__swsetup_r+0xac>)
 800c040:	4605      	mov	r5, r0
 800c042:	6818      	ldr	r0, [r3, #0]
 800c044:	460c      	mov	r4, r1
 800c046:	b118      	cbz	r0, 800c050 <__swsetup_r+0x14>
 800c048:	6a03      	ldr	r3, [r0, #32]
 800c04a:	b90b      	cbnz	r3, 800c050 <__swsetup_r+0x14>
 800c04c:	f7fd ff90 	bl	8009f70 <__sinit>
 800c050:	89a3      	ldrh	r3, [r4, #12]
 800c052:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800c056:	0718      	lsls	r0, r3, #28
 800c058:	d422      	bmi.n	800c0a0 <__swsetup_r+0x64>
 800c05a:	06d9      	lsls	r1, r3, #27
 800c05c:	d407      	bmi.n	800c06e <__swsetup_r+0x32>
 800c05e:	2309      	movs	r3, #9
 800c060:	602b      	str	r3, [r5, #0]
 800c062:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800c066:	f04f 30ff 	mov.w	r0, #4294967295
 800c06a:	81a3      	strh	r3, [r4, #12]
 800c06c:	e034      	b.n	800c0d8 <__swsetup_r+0x9c>
 800c06e:	0758      	lsls	r0, r3, #29
 800c070:	d512      	bpl.n	800c098 <__swsetup_r+0x5c>
 800c072:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800c074:	b141      	cbz	r1, 800c088 <__swsetup_r+0x4c>
 800c076:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800c07a:	4299      	cmp	r1, r3
 800c07c:	d002      	beq.n	800c084 <__swsetup_r+0x48>
 800c07e:	4628      	mov	r0, r5
 800c080:	f7fe ff1a 	bl	800aeb8 <_free_r>
 800c084:	2300      	movs	r3, #0
 800c086:	6363      	str	r3, [r4, #52]	; 0x34
 800c088:	89a3      	ldrh	r3, [r4, #12]
 800c08a:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800c08e:	81a3      	strh	r3, [r4, #12]
 800c090:	2300      	movs	r3, #0
 800c092:	6063      	str	r3, [r4, #4]
 800c094:	6923      	ldr	r3, [r4, #16]
 800c096:	6023      	str	r3, [r4, #0]
 800c098:	89a3      	ldrh	r3, [r4, #12]
 800c09a:	f043 0308 	orr.w	r3, r3, #8
 800c09e:	81a3      	strh	r3, [r4, #12]
 800c0a0:	6923      	ldr	r3, [r4, #16]
 800c0a2:	b94b      	cbnz	r3, 800c0b8 <__swsetup_r+0x7c>
 800c0a4:	89a3      	ldrh	r3, [r4, #12]
 800c0a6:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800c0aa:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800c0ae:	d003      	beq.n	800c0b8 <__swsetup_r+0x7c>
 800c0b0:	4621      	mov	r1, r4
 800c0b2:	4628      	mov	r0, r5
 800c0b4:	f000 f883 	bl	800c1be <__smakebuf_r>
 800c0b8:	89a0      	ldrh	r0, [r4, #12]
 800c0ba:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800c0be:	f010 0301 	ands.w	r3, r0, #1
 800c0c2:	d00a      	beq.n	800c0da <__swsetup_r+0x9e>
 800c0c4:	2300      	movs	r3, #0
 800c0c6:	60a3      	str	r3, [r4, #8]
 800c0c8:	6963      	ldr	r3, [r4, #20]
 800c0ca:	425b      	negs	r3, r3
 800c0cc:	61a3      	str	r3, [r4, #24]
 800c0ce:	6923      	ldr	r3, [r4, #16]
 800c0d0:	b943      	cbnz	r3, 800c0e4 <__swsetup_r+0xa8>
 800c0d2:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800c0d6:	d1c4      	bne.n	800c062 <__swsetup_r+0x26>
 800c0d8:	bd38      	pop	{r3, r4, r5, pc}
 800c0da:	0781      	lsls	r1, r0, #30
 800c0dc:	bf58      	it	pl
 800c0de:	6963      	ldrpl	r3, [r4, #20]
 800c0e0:	60a3      	str	r3, [r4, #8]
 800c0e2:	e7f4      	b.n	800c0ce <__swsetup_r+0x92>
 800c0e4:	2000      	movs	r0, #0
 800c0e6:	e7f7      	b.n	800c0d8 <__swsetup_r+0x9c>
 800c0e8:	20000238 	.word	0x20000238

0800c0ec <_raise_r>:
 800c0ec:	291f      	cmp	r1, #31
 800c0ee:	b538      	push	{r3, r4, r5, lr}
 800c0f0:	4604      	mov	r4, r0
 800c0f2:	460d      	mov	r5, r1
 800c0f4:	d904      	bls.n	800c100 <_raise_r+0x14>
 800c0f6:	2316      	movs	r3, #22
 800c0f8:	6003      	str	r3, [r0, #0]
 800c0fa:	f04f 30ff 	mov.w	r0, #4294967295
 800c0fe:	bd38      	pop	{r3, r4, r5, pc}
 800c100:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 800c102:	b112      	cbz	r2, 800c10a <_raise_r+0x1e>
 800c104:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800c108:	b94b      	cbnz	r3, 800c11e <_raise_r+0x32>
 800c10a:	4620      	mov	r0, r4
 800c10c:	f000 f830 	bl	800c170 <_getpid_r>
 800c110:	462a      	mov	r2, r5
 800c112:	4601      	mov	r1, r0
 800c114:	4620      	mov	r0, r4
 800c116:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c11a:	f000 b817 	b.w	800c14c <_kill_r>
 800c11e:	2b01      	cmp	r3, #1
 800c120:	d00a      	beq.n	800c138 <_raise_r+0x4c>
 800c122:	1c59      	adds	r1, r3, #1
 800c124:	d103      	bne.n	800c12e <_raise_r+0x42>
 800c126:	2316      	movs	r3, #22
 800c128:	6003      	str	r3, [r0, #0]
 800c12a:	2001      	movs	r0, #1
 800c12c:	e7e7      	b.n	800c0fe <_raise_r+0x12>
 800c12e:	2400      	movs	r4, #0
 800c130:	4628      	mov	r0, r5
 800c132:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 800c136:	4798      	blx	r3
 800c138:	2000      	movs	r0, #0
 800c13a:	e7e0      	b.n	800c0fe <_raise_r+0x12>

0800c13c <raise>:
 800c13c:	4b02      	ldr	r3, [pc, #8]	; (800c148 <raise+0xc>)
 800c13e:	4601      	mov	r1, r0
 800c140:	6818      	ldr	r0, [r3, #0]
 800c142:	f7ff bfd3 	b.w	800c0ec <_raise_r>
 800c146:	bf00      	nop
 800c148:	20000238 	.word	0x20000238

0800c14c <_kill_r>:
 800c14c:	b538      	push	{r3, r4, r5, lr}
 800c14e:	2300      	movs	r3, #0
 800c150:	4d06      	ldr	r5, [pc, #24]	; (800c16c <_kill_r+0x20>)
 800c152:	4604      	mov	r4, r0
 800c154:	4608      	mov	r0, r1
 800c156:	4611      	mov	r1, r2
 800c158:	602b      	str	r3, [r5, #0]
 800c15a:	f7f6 ffc8 	bl	80030ee <_kill>
 800c15e:	1c43      	adds	r3, r0, #1
 800c160:	d102      	bne.n	800c168 <_kill_r+0x1c>
 800c162:	682b      	ldr	r3, [r5, #0]
 800c164:	b103      	cbz	r3, 800c168 <_kill_r+0x1c>
 800c166:	6023      	str	r3, [r4, #0]
 800c168:	bd38      	pop	{r3, r4, r5, pc}
 800c16a:	bf00      	nop
 800c16c:	200024f8 	.word	0x200024f8

0800c170 <_getpid_r>:
 800c170:	f7f6 bfb6 	b.w	80030e0 <_getpid>

0800c174 <__swhatbuf_r>:
 800c174:	b570      	push	{r4, r5, r6, lr}
 800c176:	460c      	mov	r4, r1
 800c178:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800c17c:	4615      	mov	r5, r2
 800c17e:	2900      	cmp	r1, #0
 800c180:	461e      	mov	r6, r3
 800c182:	b096      	sub	sp, #88	; 0x58
 800c184:	da0c      	bge.n	800c1a0 <__swhatbuf_r+0x2c>
 800c186:	89a3      	ldrh	r3, [r4, #12]
 800c188:	2100      	movs	r1, #0
 800c18a:	f013 0f80 	tst.w	r3, #128	; 0x80
 800c18e:	bf0c      	ite	eq
 800c190:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 800c194:	2340      	movne	r3, #64	; 0x40
 800c196:	2000      	movs	r0, #0
 800c198:	6031      	str	r1, [r6, #0]
 800c19a:	602b      	str	r3, [r5, #0]
 800c19c:	b016      	add	sp, #88	; 0x58
 800c19e:	bd70      	pop	{r4, r5, r6, pc}
 800c1a0:	466a      	mov	r2, sp
 800c1a2:	f000 f849 	bl	800c238 <_fstat_r>
 800c1a6:	2800      	cmp	r0, #0
 800c1a8:	dbed      	blt.n	800c186 <__swhatbuf_r+0x12>
 800c1aa:	9901      	ldr	r1, [sp, #4]
 800c1ac:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 800c1b0:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 800c1b4:	4259      	negs	r1, r3
 800c1b6:	4159      	adcs	r1, r3
 800c1b8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800c1bc:	e7eb      	b.n	800c196 <__swhatbuf_r+0x22>

0800c1be <__smakebuf_r>:
 800c1be:	898b      	ldrh	r3, [r1, #12]
 800c1c0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c1c2:	079d      	lsls	r5, r3, #30
 800c1c4:	4606      	mov	r6, r0
 800c1c6:	460c      	mov	r4, r1
 800c1c8:	d507      	bpl.n	800c1da <__smakebuf_r+0x1c>
 800c1ca:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800c1ce:	6023      	str	r3, [r4, #0]
 800c1d0:	6123      	str	r3, [r4, #16]
 800c1d2:	2301      	movs	r3, #1
 800c1d4:	6163      	str	r3, [r4, #20]
 800c1d6:	b002      	add	sp, #8
 800c1d8:	bd70      	pop	{r4, r5, r6, pc}
 800c1da:	466a      	mov	r2, sp
 800c1dc:	ab01      	add	r3, sp, #4
 800c1de:	f7ff ffc9 	bl	800c174 <__swhatbuf_r>
 800c1e2:	9900      	ldr	r1, [sp, #0]
 800c1e4:	4605      	mov	r5, r0
 800c1e6:	4630      	mov	r0, r6
 800c1e8:	f7fe fed6 	bl	800af98 <_malloc_r>
 800c1ec:	b948      	cbnz	r0, 800c202 <__smakebuf_r+0x44>
 800c1ee:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800c1f2:	059a      	lsls	r2, r3, #22
 800c1f4:	d4ef      	bmi.n	800c1d6 <__smakebuf_r+0x18>
 800c1f6:	f023 0303 	bic.w	r3, r3, #3
 800c1fa:	f043 0302 	orr.w	r3, r3, #2
 800c1fe:	81a3      	strh	r3, [r4, #12]
 800c200:	e7e3      	b.n	800c1ca <__smakebuf_r+0xc>
 800c202:	89a3      	ldrh	r3, [r4, #12]
 800c204:	6020      	str	r0, [r4, #0]
 800c206:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800c20a:	81a3      	strh	r3, [r4, #12]
 800c20c:	9b00      	ldr	r3, [sp, #0]
 800c20e:	6120      	str	r0, [r4, #16]
 800c210:	6163      	str	r3, [r4, #20]
 800c212:	9b01      	ldr	r3, [sp, #4]
 800c214:	b15b      	cbz	r3, 800c22e <__smakebuf_r+0x70>
 800c216:	4630      	mov	r0, r6
 800c218:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800c21c:	f000 f81e 	bl	800c25c <_isatty_r>
 800c220:	b128      	cbz	r0, 800c22e <__smakebuf_r+0x70>
 800c222:	89a3      	ldrh	r3, [r4, #12]
 800c224:	f023 0303 	bic.w	r3, r3, #3
 800c228:	f043 0301 	orr.w	r3, r3, #1
 800c22c:	81a3      	strh	r3, [r4, #12]
 800c22e:	89a3      	ldrh	r3, [r4, #12]
 800c230:	431d      	orrs	r5, r3
 800c232:	81a5      	strh	r5, [r4, #12]
 800c234:	e7cf      	b.n	800c1d6 <__smakebuf_r+0x18>
	...

0800c238 <_fstat_r>:
 800c238:	b538      	push	{r3, r4, r5, lr}
 800c23a:	2300      	movs	r3, #0
 800c23c:	4d06      	ldr	r5, [pc, #24]	; (800c258 <_fstat_r+0x20>)
 800c23e:	4604      	mov	r4, r0
 800c240:	4608      	mov	r0, r1
 800c242:	4611      	mov	r1, r2
 800c244:	602b      	str	r3, [r5, #0]
 800c246:	f7f6 ffb0 	bl	80031aa <_fstat>
 800c24a:	1c43      	adds	r3, r0, #1
 800c24c:	d102      	bne.n	800c254 <_fstat_r+0x1c>
 800c24e:	682b      	ldr	r3, [r5, #0]
 800c250:	b103      	cbz	r3, 800c254 <_fstat_r+0x1c>
 800c252:	6023      	str	r3, [r4, #0]
 800c254:	bd38      	pop	{r3, r4, r5, pc}
 800c256:	bf00      	nop
 800c258:	200024f8 	.word	0x200024f8

0800c25c <_isatty_r>:
 800c25c:	b538      	push	{r3, r4, r5, lr}
 800c25e:	2300      	movs	r3, #0
 800c260:	4d05      	ldr	r5, [pc, #20]	; (800c278 <_isatty_r+0x1c>)
 800c262:	4604      	mov	r4, r0
 800c264:	4608      	mov	r0, r1
 800c266:	602b      	str	r3, [r5, #0]
 800c268:	f7f6 ffae 	bl	80031c8 <_isatty>
 800c26c:	1c43      	adds	r3, r0, #1
 800c26e:	d102      	bne.n	800c276 <_isatty_r+0x1a>
 800c270:	682b      	ldr	r3, [r5, #0]
 800c272:	b103      	cbz	r3, 800c276 <_isatty_r+0x1a>
 800c274:	6023      	str	r3, [r4, #0]
 800c276:	bd38      	pop	{r3, r4, r5, pc}
 800c278:	200024f8 	.word	0x200024f8

0800c27c <_init>:
 800c27c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c27e:	bf00      	nop
 800c280:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800c282:	bc08      	pop	{r3}
 800c284:	469e      	mov	lr, r3
 800c286:	4770      	bx	lr

0800c288 <_fini>:
 800c288:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c28a:	bf00      	nop
 800c28c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800c28e:	bc08      	pop	{r3}
 800c290:	469e      	mov	lr, r3
 800c292:	4770      	bx	lr
