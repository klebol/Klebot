/*
 * controller_programs.h
 *
 *  Created on: Nov 16, 2023
 *      Author: Michal Klebokowski
 */

#ifndef INC_CONTROLLER_PROGRAMS_H_
#define INC_CONTROLLER_PROGRAMS_H_

#include "stdint.h"

#define PROGRAM_START_TIMEOUT_MS 1000
#define PROGRAM_EXIT_TIMEOUT_MS 1000

#define RUN 0
#define EXIT 1

typedef struct
{
	uint8_t (*ProgramInitFunction)(void);			//Init function for each program
	uint8_t (*ProgramRoutine)(void);				//Program funcion itself
	uint8_t (*ProgramExitFunction)(void);			//Deinit function, exit funcion
	uint8_t ProgramID;
}Programs_Program_t;

typedef enum
{
	NO_PROGRAM_SET,
	PROGRAM_LAUNCHING,
	PROGRAM_IN_PROGRESS,
	PROGRAM_EXITING,
	PROGRAM_EXITING_ACK_WAIT,
	PROGRAM_COMPLETED,
	PROGRAM_LAUNCH_ERROR,
	PROGRAM_EXIT_ERROR
}Programs_status_t;



typedef enum
{
	PROGRAMS_OK,
	PROGRAMS_ERROR,
	PROGRAMS_BUSY
}Programs_error_t;


//
// -- Public functions --
//

/* Set program to launch */
Programs_error_t Programs_SetProgram(Programs_Program_t *ProgramToSet);

/* Exit current running program */
void Programs_ExitProgram(void);

/* Get pointer to curent running program */
Programs_Program_t* Programs_GetProgram(void);

/* Clear pointer to current running program */
void Programs_ClearProgram(void);

/* Infinite loop program routine */
Programs_status_t Programs_PerformProgram(void);




#endif /* INC_CONTROLLER_PROGRAMS_H_ */
