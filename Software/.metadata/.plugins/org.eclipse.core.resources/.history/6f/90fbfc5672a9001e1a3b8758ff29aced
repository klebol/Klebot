/*
 * controller_programs.h
 *
 *  Created on: Nov 16, 2023
 *      Author: Michal Klebokowski
 */

#ifndef INC_CONTROLLER_PROGRAMS_H_
#define INC_CONTROLLER_PROGRAMS_H_

#include "stdint.h"

#define PROGRAM_START_TIMEOUT_MS 1000
#define PROGRAM_EXIT_TIMEOUT_MS 1000

#define RUN 0
#define EXIT 1

typedef struct
{
	uint8_t (*ProgramInitPointer)(void);			//Init function for each program
	uint8_t (*ProgramPointer)(uint8_t exit_flag);	//Program funcion itself
	uint8_t (*ProgramExitPointer)(void);			//Deinit function, exit funcion
	uint8_t ProgramID;
}Programs_Program_t;

typedef enum
{
	NO_PROGRAM_SET,
	PROGRAM_LAUNCHING,
	PROGRAM_IN_PROGRESS,
	PROGRAM_EXITING,
	PROGRAM_EXITING_ACK_WAIT,
	PROGRAM_COMPLETED,
	PROGRAM_LAUNCH_ERROR,
	PROGRAM_EXIT_ERROR
}Programs_status_t;



typedef enum
{
	PROGRAMS_OK,
	PROGRAMS_ERROR,
	PROGRAMS_BUSY
}Programs_error_t;


//
// -- Program to perform --
//
Programs_error_t Programs_SetProgram(Programs_Program_t *ProgramToSet);
Programs_status_t (*Programs_GetProgram(void))(void);
void Programs_ClearProgram(void);
Programs_status_t Programs_PerformProgram(void);

//
//	-- Sending programs start/exit commands --
//
Programs_error_t Programs_SendProgramStartCommand(uint8_t ProgramID);
Programs_error_t Programs_SendProgramExitCommand(void);

//
//	-- Program which is currently running on robot identifier --
//
void Programs_SetCurrentRobotProgramID(uint8_t ID);
uint8_t Programs_GetCurrentRobotProgramID(void);
void Programs_ClearCurrentRobotProgramID(void);


#endif /* INC_CONTROLLER_PROGRAMS_H_ */
